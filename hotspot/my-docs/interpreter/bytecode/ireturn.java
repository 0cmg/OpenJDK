ireturn  172 ireturn  [0x07f13b30, 0x07f13e30]  768 bytes

  0x07f13b30: pop    %eax
  0x07f13b31: mov    %fs:0x0(,%eiz,1),%ecx
  0x07f13b39: mov    -0xc(%ecx),%ecx

  0x07f13b3c: mov    0x1a1(%ecx),%bl
  0x07f13b42: mov    %ebx,%edi
  0x07f13b44: movb   $0x0,0x1a1(%ecx)

  0x07f13b4b: mov    -0xc(%ebp),%ebx
  0x07f13b4e: mov    0x14(%ebx),%ecx
  0x07f13b51: test   $0x20,%ecx
  0x07f13b57: je     0x07f13cfe

  0x07f13b5d: mov    %edi,%ecx
  0x07f13b5f: test   $0xff,%cl
  0x07f13b62: jne    0x07f13dcd

  0x07f13b68: push   %eax
  0x07f13b69: lea    -0x28(%ebp),%edx
  0x07f13b6c: mov    0x4(%edx),%eax
  0x07f13b6f: test   %eax,%eax
  0x07f13b71: jne    0x07f13c28
  0x07f13b77: pop    %eax

  0x07f13b78: emms   

  0x07f13b7a: call   0x07f13b84
  0x07f13b7f: jmp    0x07f13c17
  0x07f13b84: lea    0x4(%esp),%eax
  0x07f13b88: cmpl   $0x0,-0x8(%ebp)
  0x07f13b8f: je     0x07f13ba6
  0x07f13b95: push   $0x54d101bc
  0x07f13b9a: call   0x07f13b9f
  0x07f13b9f: pusha  
  0x07f13ba0: call   0x547edbf0
  0x07f13ba5: hlt    
  0x07f13ba6: mov    %esi,-0x1c(%ebp)
  0x07f13ba9: mov    %fs:0x0(,%eiz,1),%edi
  0x07f13bb1: mov    -0xc(%edi),%edi
  0x07f13bb4: push   %edi
  0x07f13bb5: mov    %ebp,0x144(%edi)
  0x07f13bbb: mov    %eax,0x13c(%edi)
  0x07f13bc1: call   0x54a5ad80
  0x07f13bc6: add    $0x4,%esp
  0x07f13bc9: push   %eax
  0x07f13bca: mov    %fs:0x0(,%eiz,1),%eax
  0x07f13bd2: mov    -0xc(%eax),%eax
  0x07f13bd5: cmp    %eax,%edi
  0x07f13bd7: je     0x07f13bee
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x07f13bdd: push   $0x54d12b08
  0x07f13be2: call   0x07f13be7
  0x07f13be7: pusha  
  0x07f13be8: call   0x547edbf0
  0x07f13bed: hlt    
  0x07f13bee: pop    %eax
  0x07f13bef: movl   $0x0,0x13c(%edi)
  0x07f13bf9: movl   $0x0,0x144(%edi)
  0x07f13c03: cmpl   $0x0,0x4(%edi)
  0x07f13c0a: jne    0x07f00340
  0x07f13c10: mov    -0x1c(%ebp),%esi
  0x07f13c13: mov    -0x18(%ebp),%edi
  0x07f13c16: ret    

  0x07f13c17: push   $0x54cfd974
  0x07f13c1c: call   0x07f13c21
  0x07f13c21: pusha  
  0x07f13c22: call   0x547edbf0
  0x07f13c27: hlt    

  0x07f13c28: mov    %esi,-0x1c(%ebp)
  0x07f13c2b: lea    (%edx),%eax
  0x07f13c2d: mov    0x4(%edx),%ecx
  0x07f13c30: movl   $0x0,0x4(%edx)
  0x07f13c37: mov    (%ecx),%ebx
  0x07f13c39: and    $0x7,%ebx
  0x07f13c3c: cmp    $0x5,%ebx
  0x07f13c3f: je     0x07f13cfa
  0x07f13c45: mov    (%eax),%ebx
  0x07f13c47: test   %ebx,%ebx
  0x07f13c49: je     0x07f13cfa
  0x07f13c4f: lock cmpxchg %ebx,(%ecx)
  0x07f13c53: je     0x07f13cfa
  0x07f13c59: mov    %ecx,0x4(%edx)

  0x07f13c5c: call   0x07f13c66
  0x07f13c61: jmp    0x07f13cfa
  0x07f13c66: push   %edx
  0x07f13c67: lea    0x8(%esp),%eax
  0x07f13c6b: cmpl   $0x0,-0x8(%ebp)
  0x07f13c72: je     0x07f13c89
  0x07f13c78: push   $0x54d101bc
  0x07f13c7d: call   0x07f13c82
  0x07f13c82: pusha  
  0x07f13c83: call   0x547edbf0
  0x07f13c88: hlt    
  0x07f13c89: mov    %esi,-0x1c(%ebp)
  0x07f13c8c: mov    %fs:0x0(,%eiz,1),%edi
  0x07f13c94: mov    -0xc(%edi),%edi
  0x07f13c97: push   %edi
  0x07f13c98: mov    %ebp,0x144(%edi)
  0x07f13c9e: mov    %eax,0x13c(%edi)
  0x07f13ca4: call   0x54a5ab90
  0x07f13ca9: add    $0x8,%esp
  0x07f13cac: push   %eax
  0x07f13cad: mov    %fs:0x0(,%eiz,1),%eax
  0x07f13cb5: mov    -0xc(%eax),%eax
  0x07f13cb8: cmp    %eax,%edi
  0x07f13cba: je     0x07f13cd1
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x07f13cc0: push   $0x54d12b08
  0x07f13cc5: call   0x07f13cca
  0x07f13cca: pusha  
  0x07f13ccb: call   0x547edbf0
  0x07f13cd0: hlt    
  0x07f13cd1: pop    %eax
  0x07f13cd2: movl   $0x0,0x13c(%edi)
  0x07f13cdc: movl   $0x0,0x144(%edi)
  0x07f13ce6: cmpl   $0x0,0x4(%edi)
  0x07f13ced: jne    0x07f00340
  0x07f13cf3: mov    -0x1c(%ebp),%esi
  0x07f13cf6: mov    -0x18(%ebp),%edi
  0x07f13cf9: ret    

  0x07f13cfa: mov    -0x1c(%ebp),%esi

  0x07f13cfd: pop    %eax
  0x07f13cfe: mov    -0x20(%ebp),%ecx
  0x07f13d01: lea    -0x20(%ebp),%ebx
  0x07f13d04: jmp    0x07f13dc9

  0x07f13d09: emms   

  0x07f13d0b: call   0x07f13d15
  0x07f13d10: jmp    0x07f13da8
  0x07f13d15: lea    0x4(%esp),%eax
  0x07f13d19: cmpl   $0x0,-0x8(%ebp)
  0x07f13d20: je     0x07f13d37
  0x07f13d26: push   $0x54d101bc
  0x07f13d2b: call   0x07f13d30
  0x07f13d30: pusha  
  0x07f13d31: call   0x547edbf0
  0x07f13d36: hlt    
  0x07f13d37: mov    %esi,-0x1c(%ebp)
  0x07f13d3a: mov    %fs:0x0(,%eiz,1),%edi
  0x07f13d42: mov    -0xc(%edi),%edi
  0x07f13d45: push   %edi
  0x07f13d46: mov    %ebp,0x144(%edi)
  0x07f13d4c: mov    %eax,0x13c(%edi)
  0x07f13d52: call   0x54a5ad80
  0x07f13d57: add    $0x4,%esp
  0x07f13d5a: push   %eax
  0x07f13d5b: mov    %fs:0x0(,%eiz,1),%eax
  0x07f13d63: mov    -0xc(%eax),%eax
  0x07f13d66: cmp    %eax,%edi
  0x07f13d68: je     0x07f13d7f
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x07f13d6e: push   $0x54d12b08
  0x07f13d73: call   0x07f13d78
  0x07f13d78: pusha  
  0x07f13d79: call   0x547edbf0
  0x07f13d7e: hlt    
  0x07f13d7f: pop    %eax
  0x07f13d80: movl   $0x0,0x13c(%edi)
  0x07f13d8a: movl   $0x0,0x144(%edi)
  0x07f13d94: cmpl   $0x0,0x4(%edi)
  0x07f13d9b: jne    0x07f00340
  0x07f13da1: mov    -0x1c(%ebp),%esi
  0x07f13da4: mov    -0x18(%ebp),%edi
  0x07f13da7: ret    

  0x07f13da8: push   $0x54cfd974
  0x07f13dad: call   0x07f13db2
  0x07f13db2: pusha  
  0x07f13db3: call   0x547edbf0
  0x07f13db8: hlt    

  0x07f13db9: cmpl   $0x0,0x4(%ecx)
  0x07f13dc0: jne    0x07f13d09

  0x07f13dc6: add    $0x8,%ecx
  0x07f13dc9: cmp    %ebx,%ecx
  0x07f13dcb: jne    0x07f13db9

  0x07f13dcd: cmpb   $0x0,0x55033e6f
  0x07f13dd4: je     0x07f13e12
  0x07f13dda: push   %eax
  0x07f13ddb: mov    %fs:0x0(,%eiz,1),%ebx
  0x07f13de3: mov    -0xc(%ebx),%ebx
  0x07f13de6: mov    -0xc(%ebp),%ecx
  0x07f13de9: push   %ecx
  0x07f13dea: push   %ebx
  0x07f13deb: cmpl   $0x0,-0x8(%ebp)
  0x07f13df2: je     0x07f13e09
  0x07f13df8: push   $0x54d1017c
  0x07f13dfd: call   0x07f13e02
  0x07f13e02: pusha  
  0x07f13e03: call   0x547edbf0
  0x07f13e08: hlt    
  0x07f13e09: call   0x54c158a0
  0x07f13e0e: add    $0x8,%esp

  0x07f13e11: pop    %eax //返回值
  0x07f13e12: mov    -0x4(%ebp),%ebx
  0x07f13e15: mov    %ebp,%esp
  0x07f13e17: pop    %ebp
  0x07f13e18: pop    %esi
  0x07f13e19: mov    %ebx,%esp

  0x07f13e1b: jmp    *%esi

  0x07f13e1d: push   $0x54cfd974
  0x07f13e22: call   0x07f13e27
  0x07f13e27: pusha  
  0x07f13e28: call   0x547edbf0
  0x07f13e2d: hlt    
  0x07f13e2e: nop    
  0x07f13e2f: nop    
