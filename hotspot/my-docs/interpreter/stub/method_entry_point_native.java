----------------------------------------------------------------------
method entry point (kind = native)  [0x07f0f0c0, 0x07f0f910]  2128 bytes

  0x07f0f0c0: mov    0x8(%ebx),%ecx
  0x07f0f0c3: movzwl 0x22(%ecx),%ecx
  0x07f0f0c7: pop    %eax
  0x07f0f0c8: lea    -0x4(%esp,%ecx,4),%edi
  0x07f0f0cc: push   $0x0
  0x07f0f0d1: push   $0x0
  0x07f0f0d6: push   %eax
  0x07f0f0d7: push   %ebp
  0x07f0f0d8: mov    %esp,%ebp
  0x07f0f0da: push   %esi
  0x07f0f0db: push   $0x0
  0x07f0f0e0: mov    0x8(%ebx),%esi
  0x07f0f0e3: lea    0x28(%esi),%esi
  0x07f0f0e6: push   %ebx
  0x07f0f0e7: push   $0x0
  0x07f0f0ec: mov    0x8(%ebx),%edx
  0x07f0f0ef: mov    0x8(%edx),%edx
  0x07f0f0f2: mov    0xc(%edx),%edx
  0x07f0f0f5: push   %edx
  0x07f0f0f6: push   %edi
  0x07f0f0f7: push   $0x0
  0x07f0f0fc: push   $0x0
  0x07f0f101: mov    %esp,(%esp)
  0x07f0f104: mov    0x14(%ebx),%eax
  0x07f0f107: test   $0x100,%eax
  0x07f0f10c: jne    0x07f0f123
  0x07f0f112: push   $0x59273318
  0x07f0f117: call   0x07f0f11c
  0x07f0f11c: pusha  
  0x07f0f11d: call   0x58d2df50
  0x07f0f122: hlt    
  0x07f0f123: test   $0x400,%eax
  0x07f0f128: je     0x07f0f13f
  0x07f0f12e: push   $0x59273348
  0x07f0f133: call   0x07f0f138
  0x07f0f138: pusha  
  0x07f0f139: call   0x58d2df50
  0x07f0f13e: hlt    
  0x07f0f13f: mov    %fs:0x0(,%eiz,1),%eax
  0x07f0f147: mov    -0xc(%eax),%eax
  0x07f0f14a: movb   $0x1,0x1a1(%eax)
  0x07f0f151: mov    0x10(%ebx),%eax
  0x07f0f154: test   %eax,%eax
  0x07f0f156: jne    0x07f0f205
  0x07f0f15c: call   0x07f0f166
  0x07f0f161: jmp    0x07f0f1fa
  0x07f0f166: push   %ebx
  0x07f0f167: lea    0x8(%esp),%eax
  0x07f0f16b: cmpl   $0x0,-0x8(%ebp)
  0x07f0f172: je     0x07f0f189
  0x07f0f178: push   $0x5926a9d4
  0x07f0f17d: call   0x07f0f182
  0x07f0f182: pusha  
  0x07f0f183: call   0x58d2df50
  0x07f0f188: hlt    
  0x07f0f189: mov    %esi,-0x1c(%ebp)
  0x07f0f18c: mov    %fs:0x0(,%eiz,1),%edi
  0x07f0f194: mov    -0xc(%edi),%edi
  0x07f0f197: push   %edi
  0x07f0f198: mov    %ebp,0x144(%edi)
  0x07f0f19e: mov    %eax,0x13c(%edi)
  0x07f0f1a4: call   0x58fb0070
  0x07f0f1a9: add    $0x8,%esp
  0x07f0f1ac: push   %eax
  0x07f0f1ad: mov    %fs:0x0(,%eiz,1),%eax
  0x07f0f1b5: mov    -0xc(%eax),%eax
  0x07f0f1b8: cmp    %eax,%edi
  0x07f0f1ba: je     0x07f0f1d1
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x07f0f1c0: push   $0x5926d0e8
  0x07f0f1c5: call   0x07f0f1ca
  0x07f0f1ca: pusha  
  0x07f0f1cb: call   0x58d2df50
  0x07f0f1d0: hlt    
  0x07f0f1d1: pop    %eax
  0x07f0f1d2: movl   $0x0,0x13c(%edi)
  0x07f0f1dc: movl   $0x0,0x144(%edi)
  0x07f0f1e6: cmpl   $0x0,0x4(%edi)
  0x07f0f1ed: jne    0x07f00380
  0x07f0f1f3: mov    -0x1c(%ebp),%esi
  0x07f0f1f6: mov    -0x18(%ebp),%edi
  0x07f0f1f9: ret    
  0x07f0f1fa: mov    0x10(%ebx),%eax
  0x07f0f1fd: test   %eax,%eax
  0x07f0f1ff: je     0x07f0f222
  0x07f0f205: mov    0x8(%eax),%ecx
  0x07f0f208: add    $0x8,%ecx
  0x07f0f20b: mov    %ecx,0x8(%eax)
  0x07f0f20e: mov    0xc(%eax),%eax
  0x07f0f211: and    $0xfffffff8,%eax
  0x07f0f214: add    %eax,%ecx
  0x07f0f216: cmp    0x595953f4,%ecx
  0x07f0f21c: jae    0x07f0f857
  0x07f0f222: mov    %eax,-0x9000(%esp)
  0x07f0f229: mov    %fs:0x0(,%eiz,1),%eax
  0x07f0f231: mov    -0xc(%eax),%eax
  0x07f0f234: movb   $0x0,0x1a1(%eax)
  0x07f0f23b: mov    0x14(%ebx),%eax
  0x07f0f23e: test   $0x20,%eax
  0x07f0f243: je     0x07f0f25a
  0x07f0f249: push   $0x59273378
  0x07f0f24e: call   0x07f0f253
  0x07f0f253: pusha  
  0x07f0f254: call   0x58d2df50
  0x07f0f259: hlt    
  0x07f0f25a: mov    -0x20(%ebp),%eax
  0x07f0f25d: cmp    %esp,%eax
  0x07f0f25f: je     0x07f0f276
  0x07f0f265: push   $0x59273398
  0x07f0f26a: call   0x07f0f26f
  0x07f0f26f: pusha  
  0x07f0f270: call   0x58d2df50
  0x07f0f275: hlt    
  0x07f0f276: cmpb   $0x0,0x595a1c0c
  0x07f0f27d: je     0x07f0f2b9
  0x07f0f283: mov    %fs:0x0(,%eiz,1),%ecx
  0x07f0f28b: mov    -0xc(%ecx),%ecx
  0x07f0f28e: mov    -0xc(%ebp),%ebx
  0x07f0f291: push   %ebx
  0x07f0f292: push   %ecx
  0x07f0f293: cmpl   $0x0,-0x8(%ebp)
  0x07f0f29a: je     0x07f0f2b1
  0x07f0f2a0: push   $0x5926a994
  0x07f0f2a5: call   0x07f0f2aa
  0x07f0f2aa: pusha  
  0x07f0f2ab: call   0x58d2df50
  0x07f0f2b0: hlt    
  0x07f0f2b1: call   0x59171a40
  0x07f0f2b6: add    $0x8,%esp
  0x07f0f2b9: mov    -0xc(%ebp),%ebx
  0x07f0f2bc: mov    0x8(%ebx),%ecx
  0x07f0f2bf: movzwl 0x22(%ecx),%ecx
  0x07f0f2c3: shl    $0x2,%ecx
  0x07f0f2c6: add    $0x8,%ecx
  0x07f0f2c9: sub    %ecx,%esp
  0x07f0f2cb: and    $0xfffffff0,%esp
  0x07f0f2ce: mov    0x3c(%ebx),%ecx
  0x07f0f2d1: test   %ecx,%ecx
  0x07f0f2d3: jne    0x07f0f37d
  0x07f0f2d9: call   0x07f0f2e3
  0x07f0f2de: jmp    0x07f0f377
  0x07f0f2e3: push   %ebx
  0x07f0f2e4: lea    0x8(%esp),%eax
  0x07f0f2e8: cmpl   $0x0,-0x8(%ebp)
  0x07f0f2ef: je     0x07f0f306
  0x07f0f2f5: push   $0x5926a9d4
  0x07f0f2fa: call   0x07f0f2ff
  0x07f0f2ff: pusha  
  0x07f0f300: call   0x58d2df50
  0x07f0f305: hlt    
  0x07f0f306: mov    %esi,-0x1c(%ebp)
  0x07f0f309: mov    %fs:0x0(,%eiz,1),%edi
  0x07f0f311: mov    -0xc(%edi),%edi
  0x07f0f314: push   %edi
  0x07f0f315: mov    %ebp,0x144(%edi)
  0x07f0f31b: mov    %eax,0x13c(%edi)
  0x07f0f321: call   0x58faf3e0
  0x07f0f326: add    $0x8,%esp
  0x07f0f329: push   %eax
  0x07f0f32a: mov    %fs:0x0(,%eiz,1),%eax
  0x07f0f332: mov    -0xc(%eax),%eax
  0x07f0f335: cmp    %eax,%edi
  0x07f0f337: je     0x07f0f34e
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x07f0f33d: push   $0x5926d0e8
  0x07f0f342: call   0x07f0f347
  0x07f0f347: pusha  
  0x07f0f348: call   0x58d2df50
  0x07f0f34d: hlt    
  0x07f0f34e: pop    %eax
  0x07f0f34f: movl   $0x0,0x13c(%edi)
  0x07f0f359: movl   $0x0,0x144(%edi)
  0x07f0f363: cmpl   $0x0,0x4(%edi)
  0x07f0f36a: jne    0x07f00380
  0x07f0f370: mov    -0x1c(%ebp),%esi
  0x07f0f373: mov    -0x18(%ebp),%edi
  0x07f0f376: ret    
  0x07f0f377: mov    -0xc(%ebp),%ebx
  0x07f0f37a: mov    0x3c(%ebx),%ecx
  0x07f0f37d: call   *%ecx
  0x07f0f37f: mov    -0xc(%ebp),%ebx
  0x07f0f382: mov    %eax,0xc(%ebp)
  0x07f0f385: mov    0x14(%ebx),%ecx
  0x07f0f388: test   $0x8,%ecx
  0x07f0f38e: je     0x07f0f3aa
  0x07f0f394: mov    0x8(%ebx),%ecx
  0x07f0f397: mov    0x8(%ecx),%ecx
  0x07f0f39a: mov    0x10(%ecx),%ecx
  0x07f0f39d: mov    0x3c(%ecx),%ecx
  0x07f0f3a0: mov    %ecx,0x8(%ebp)
  0x07f0f3a3: lea    0x8(%ebp),%ecx
  0x07f0f3a6: mov    %ecx,0x4(%esp)
  0x07f0f3aa: mov    0x38(%ebx),%eax
  0x07f0f3ad: cmp    $0x59176c40,%eax
  0x07f0f3b3: jne    0x07f0f45d
  0x07f0f3b9: call   0x07f0f3c3
  0x07f0f3be: jmp    0x07f0f457
  0x07f0f3c3: push   %ebx
  0x07f0f3c4: lea    0x8(%esp),%eax
  0x07f0f3c8: cmpl   $0x0,-0x8(%ebp)
  0x07f0f3cf: je     0x07f0f3e6
  0x07f0f3d5: push   $0x5926a9d4
  0x07f0f3da: call   0x07f0f3df
  0x07f0f3df: pusha  
  0x07f0f3e0: call   0x58d2df50
  0x07f0f3e5: hlt    
  0x07f0f3e6: mov    %esi,-0x1c(%ebp)
  0x07f0f3e9: mov    %fs:0x0(,%eiz,1),%edi
  0x07f0f3f1: mov    -0xc(%edi),%edi
  0x07f0f3f4: push   %edi
  0x07f0f3f5: mov    %ebp,0x144(%edi)
  0x07f0f3fb: mov    %eax,0x13c(%edi)
  0x07f0f401: call   0x58faf3e0
  0x07f0f406: add    $0x8,%esp
  0x07f0f409: push   %eax
  0x07f0f40a: mov    %fs:0x0(,%eiz,1),%eax
  0x07f0f412: mov    -0xc(%eax),%eax
  0x07f0f415: cmp    %eax,%edi
  0x07f0f417: je     0x07f0f42e
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x07f0f41d: push   $0x5926d0e8
  0x07f0f422: call   0x07f0f427
  0x07f0f427: pusha  
  0x07f0f428: call   0x58d2df50
  0x07f0f42d: hlt    
  0x07f0f42e: pop    %eax
  0x07f0f42f: movl   $0x0,0x13c(%edi)
  0x07f0f439: movl   $0x0,0x144(%edi)
  0x07f0f443: cmpl   $0x0,0x4(%edi)
  0x07f0f44a: jne    0x07f00380
  0x07f0f450: mov    -0x1c(%ebp),%esi
  0x07f0f453: mov    -0x18(%ebp),%edi
  0x07f0f456: ret    
  0x07f0f457: mov    -0xc(%ebp),%ebx
  0x07f0f45a: mov    0x38(%ebx),%eax
  0x07f0f45d: mov    %fs:0x0(,%eiz,1),%edi
  0x07f0f465: mov    -0xc(%edi),%edi
  0x07f0f468: lea    0x14c(%edi),%ecx
  0x07f0f46e: mov    %ecx,(%esp)
  0x07f0f471: mov    %ebp,0x144(%edi)
  0x07f0f477: movl   $0x7f0f471,0x140(%edi)
  0x07f0f481: mov    %esp,0x13c(%edi)
  0x07f0f487: mov    0x188(%edi),%ecx
  0x07f0f48d: cmp    $0x8,%ecx
  0x07f0f490: je     0x07f0f4a7
  0x07f0f496: push   $0x59273588
  0x07f0f49b: call   0x07f0f4a0
  0x07f0f4a0: pusha  
  0x07f0f4a1: call   0x58d2df50
  0x07f0f4a6: hlt    
  0x07f0f4a7: movl   $0x4,0x188(%edi)
  0x07f0f4b1: call   *%eax
  0x07f0f4b3: cmpl   $0x7f0a42a,0xc(%ebp)
  0x07f0f4ba: je     0x07f0f4cd
  0x07f0f4c0: cmpl   $0x7f0a43b,0xc(%ebp)
  0x07f0f4c7: jne    0x07f0f4d3
  0x07f0f4cd: sub    $0x8,%esp
  0x07f0f4d0: fstpl  (%esp)
  0x07f0f4d3: push   %edx
  0x07f0f4d4: push   %eax
  0x07f0f4d5: mov    %fs:0x0(,%eiz,1),%edi
  0x07f0f4dd: mov    -0xc(%edi),%edi
  0x07f0f4e0: movl   $0x5,0x188(%edi)
  0x07f0f4ea: mov    %edi,%ecx
  0x07f0f4ec: shr    $0x3,%ecx
  0x07f0f4ef: and    $0xffc,%ecx
  0x07f0f4f5: mov    %ecx,0x240000(,%ecx,1)
  0x07f0f4fc: cmpl   $0x0,0x595a24f8
  0x07f0f506: jne    0x07f0f519
  0x07f0f50c: cmpl   $0x0,0x18(%edi)
  0x07f0f513: je     0x07f0f52d
  0x07f0f519: push   %edi
  0x07f0f51a: call   0x5918bf20
  0x07f0f51f: add    $0x4,%esp
  0x07f0f522: mov    %fs:0x0(,%eiz,1),%edi
  0x07f0f52a: mov    -0xc(%edi),%edi
  0x07f0f52d: movl   $0x8,0x188(%edi)
  0x07f0f537: movl   $0x0,0x13c(%edi)
  0x07f0f541: movl   $0x0,0x144(%edi)
  0x07f0f54b: movl   $0x0,0x140(%edi)
  0x07f0f555: mov    0x20(%edi),%ecx
  0x07f0f558: movl   $0x0,0x84(%ecx)
  0x07f0f562: cmpl   $0x7f0a446,0xc(%ebp)
  0x07f0f569: jne    0x07f0f587
  0x07f0f56f: cmpl   $0x0,(%esp)
  0x07f0f576: pop    %eax
  0x07f0f577: pop    %edx
  0x07f0f578: test   %eax,%eax
  0x07f0f57a: je     0x07f0f582
  0x07f0f580: mov    (%eax),%eax
  0x07f0f582: mov    %eax,0x8(%ebp)
  0x07f0f585: push   %edx
  0x07f0f586: push   %eax
  0x07f0f587: cmpl   $0x1,0x1a8(%edi)
  0x07f0f591: jne    0x07f0f59e
  0x07f0f597: pusha  
  0x07f0f598: call   0x59171d00
  0x07f0f59d: popa   
  0x07f0f59e: mov    -0xc(%ebp),%ebx
  0x07f0f5a1: mov    0x8(%ebx),%esi
  0x07f0f5a4: lea    0x28(%esi),%esi
  0x07f0f5a7: cmpl   $0x0,0x4(%edi)
  0x07f0f5ae: je     0x07f0f662
  0x07f0f5b4: call   0x07f0f5be
  0x07f0f5b9: jmp    0x07f0f651
  0x07f0f5be: lea    0x4(%esp),%eax
  0x07f0f5c2: cmpl   $0x0,-0x8(%ebp)
  0x07f0f5c9: je     0x07f0f5e0
  0x07f0f5cf: push   $0x5926a9d4
  0x07f0f5d4: call   0x07f0f5d9
  0x07f0f5d9: pusha  
  0x07f0f5da: call   0x58d2df50
  0x07f0f5df: hlt    
  0x07f0f5e0: mov    %esi,-0x1c(%ebp)
  0x07f0f5e3: mov    %fs:0x0(,%eiz,1),%edi
  0x07f0f5eb: mov    -0xc(%edi),%edi
  0x07f0f5ee: push   %edi
  0x07f0f5ef: mov    %ebp,0x144(%edi)
  0x07f0f5f5: mov    %eax,0x13c(%edi)
  0x07f0f5fb: call   0x58facde0
  0x07f0f600: add    $0x4,%esp
  0x07f0f603: push   %eax
  0x07f0f604: mov    %fs:0x0(,%eiz,1),%eax
  0x07f0f60c: mov    -0xc(%eax),%eax
  0x07f0f60f: cmp    %eax,%edi
  0x07f0f611: je     0x07f0f628
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x07f0f617: push   $0x5926d0e8
  0x07f0f61c: call   0x07f0f621
  0x07f0f621: pusha  
  0x07f0f622: call   0x58d2df50
  0x07f0f627: hlt    
  0x07f0f628: pop    %eax
  0x07f0f629: movl   $0x0,0x13c(%edi)
  0x07f0f633: movl   $0x0,0x144(%edi)
  0x07f0f63d: cmpl   $0x0,0x4(%edi)
  0x07f0f644: jne    0x07f00380
  0x07f0f64a: mov    -0x1c(%ebp),%esi
  0x07f0f64d: mov    -0x18(%ebp),%edi
  0x07f0f650: ret    
  0x07f0f651: push   $0x59257db8
  0x07f0f656: call   0x07f0f65b
  0x07f0f65b: pusha  
  0x07f0f65c: call   0x58d2df50
  0x07f0f661: hlt    
  0x07f0f662: mov    0x14(%ebx),%ecx
  0x07f0f665: test   $0x20,%ecx
  0x07f0f66b: je     0x07f0f802
  0x07f0f671: lea    -0x28(%ebp),%edx
  0x07f0f674: mov    0x4(%edx),%ecx
  0x07f0f677: test   %ecx,%ecx
  0x07f0f679: jne    0x07f0f72d
  0x07f0f67f: call   0x07f0f689
  0x07f0f684: jmp    0x07f0f71c
  0x07f0f689: lea    0x4(%esp),%eax
  0x07f0f68d: cmpl   $0x0,-0x8(%ebp)
  0x07f0f694: je     0x07f0f6ab
  0x07f0f69a: push   $0x5926a9d4
  0x07f0f69f: call   0x07f0f6a4
  0x07f0f6a4: pusha  
  0x07f0f6a5: call   0x58d2df50
  0x07f0f6aa: hlt    
  0x07f0f6ab: mov    %esi,-0x1c(%ebp)
  0x07f0f6ae: mov    %fs:0x0(,%eiz,1),%edi
  0x07f0f6b6: mov    -0xc(%edi),%edi
  0x07f0f6b9: push   %edi
  0x07f0f6ba: mov    %ebp,0x144(%edi)
  0x07f0f6c0: mov    %eax,0x13c(%edi)
  0x07f0f6c6: call   0x58fad6f0
  0x07f0f6cb: add    $0x4,%esp
  0x07f0f6ce: push   %eax
  0x07f0f6cf: mov    %fs:0x0(,%eiz,1),%eax
  0x07f0f6d7: mov    -0xc(%eax),%eax
  0x07f0f6da: cmp    %eax,%edi
  0x07f0f6dc: je     0x07f0f6f3
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x07f0f6e2: push   $0x5926d0e8
  0x07f0f6e7: call   0x07f0f6ec
  0x07f0f6ec: pusha  
  0x07f0f6ed: call   0x58d2df50
  0x07f0f6f2: hlt    
  0x07f0f6f3: pop    %eax
  0x07f0f6f4: movl   $0x0,0x13c(%edi)
  0x07f0f6fe: movl   $0x0,0x144(%edi)
  0x07f0f708: cmpl   $0x0,0x4(%edi)
  0x07f0f70f: jne    0x07f00380
  0x07f0f715: mov    -0x1c(%ebp),%esi
  0x07f0f718: mov    -0x18(%ebp),%edi
  0x07f0f71b: ret    
  0x07f0f71c: push   $0x59257db8
  0x07f0f721: call   0x07f0f726
  0x07f0f726: pusha  
  0x07f0f727: call   0x58d2df50
  0x07f0f72c: hlt    
  0x07f0f72d: mov    %esi,-0x1c(%ebp)
  0x07f0f730: lea    (%edx),%eax
  0x07f0f732: mov    0x4(%edx),%ecx
  0x07f0f735: movl   $0x0,0x4(%edx)
  0x07f0f73c: mov    (%ecx),%ebx
  0x07f0f73e: and    $0x7,%ebx
  0x07f0f741: cmp    $0x5,%ebx
  0x07f0f744: je     0x07f0f7ff
  0x07f0f74a: mov    (%eax),%ebx
  0x07f0f74c: test   %ebx,%ebx
  0x07f0f74e: je     0x07f0f7ff
  0x07f0f754: lock cmpxchg %ebx,(%ecx)
  0x07f0f758: je     0x07f0f7ff
  0x07f0f75e: mov    %ecx,0x4(%edx)
  0x07f0f761: call   0x07f0f76b
  0x07f0f766: jmp    0x07f0f7ff
  0x07f0f76b: push   %edx
  0x07f0f76c: lea    0x8(%esp),%eax
  0x07f0f770: cmpl   $0x0,-0x8(%ebp)
  0x07f0f777: je     0x07f0f78e
  0x07f0f77d: push   $0x5926a9d4
  0x07f0f782: call   0x07f0f787
  0x07f0f787: pusha  
  0x07f0f788: call   0x58d2df50
  0x07f0f78d: hlt    
  0x07f0f78e: mov    %esi,-0x1c(%ebp)
  0x07f0f791: mov    %fs:0x0(,%eiz,1),%edi
  0x07f0f799: mov    -0xc(%edi),%edi
  0x07f0f79c: push   %edi
  0x07f0f79d: mov    %ebp,0x144(%edi)
  0x07f0f7a3: mov    %eax,0x13c(%edi)
  0x07f0f7a9: call   0x58fad500
  0x07f0f7ae: add    $0x8,%esp
  0x07f0f7b1: push   %eax
  0x07f0f7b2: mov    %fs:0x0(,%eiz,1),%eax
  0x07f0f7ba: mov    -0xc(%eax),%eax
  0x07f0f7bd: cmp    %eax,%edi
  0x07f0f7bf: je     0x07f0f7d6
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x07f0f7c5: push   $0x5926d0e8
  0x07f0f7ca: call   0x07f0f7cf
  0x07f0f7cf: pusha  
  0x07f0f7d0: call   0x58d2df50
  0x07f0f7d5: hlt    
  0x07f0f7d6: pop    %eax
  0x07f0f7d7: movl   $0x0,0x13c(%edi)
  0x07f0f7e1: movl   $0x0,0x144(%edi)
  0x07f0f7eb: cmpl   $0x0,0x4(%edi)
  0x07f0f7f2: jne    0x07f00380
  0x07f0f7f8: mov    -0x1c(%ebp),%esi
  0x07f0f7fb: mov    -0x18(%ebp),%edi
  0x07f0f7fe: ret    
  0x07f0f7ff: mov    -0x1c(%ebp),%esi
  0x07f0f802: cmpb   $0x0,0x595a1c0c
  0x07f0f809: je     0x07f0f845
  0x07f0f80f: mov    %fs:0x0(,%eiz,1),%ebx
  0x07f0f817: mov    -0xc(%ebx),%ebx
  0x07f0f81a: mov    -0xc(%ebp),%ecx
  0x07f0f81d: push   %ecx
  0x07f0f81e: push   %ebx
  0x07f0f81f: cmpl   $0x0,-0x8(%ebp)
  0x07f0f826: je     0x07f0f83d
  0x07f0f82c: push   $0x5926a994
  0x07f0f831: call   0x07f0f836
  0x07f0f836: pusha  
  0x07f0f837: call   0x58d2df50
  0x07f0f83c: hlt    
  0x07f0f83d: call   0x59171b70
  0x07f0f842: add    $0x8,%esp
  0x07f0f845: pop    %eax
  0x07f0f846: pop    %edx
  0x07f0f847: mov    0xc(%ebp),%ecx
  0x07f0f84a: call   *%ecx
  0x07f0f84c: mov    -0x4(%ebp),%ecx
  0x07f0f84f: mov    %ebp,%esp
  0x07f0f851: pop    %ebp
  0x07f0f852: pop    %edi
  0x07f0f853: mov    %ecx,%esp
  0x07f0f855: jmp    *%edi
  0x07f0f857: mov    $0x0,%eax
  0x07f0f85c: call   0x07f0f866
  0x07f0f861: jmp    0x07f0f8fa
  0x07f0f866: push   %eax
  0x07f0f867: lea    0x8(%esp),%eax
  0x07f0f86b: cmpl   $0x0,-0x8(%ebp)
  0x07f0f872: je     0x07f0f889
  0x07f0f878: push   $0x5926a9d4
  0x07f0f87d: call   0x07f0f882
  0x07f0f882: pusha  
  0x07f0f883: call   0x58d2df50
  0x07f0f888: hlt    
  0x07f0f889: mov    %esi,-0x1c(%ebp)
  0x07f0f88c: mov    %fs:0x0(,%eiz,1),%edi
  0x07f0f894: mov    -0xc(%edi),%edi
  0x07f0f897: push   %edi
  0x07f0f898: mov    %ebp,0x144(%edi)
  0x07f0f89e: mov    %eax,0x13c(%edi)
  0x07f0f8a4: call   0x58faf7c0
  0x07f0f8a9: add    $0x8,%esp
  0x07f0f8ac: push   %eax
  0x07f0f8ad: mov    %fs:0x0(,%eiz,1),%eax
  0x07f0f8b5: mov    -0xc(%eax),%eax
  0x07f0f8b8: cmp    %eax,%edi
  0x07f0f8ba: je     0x07f0f8d1
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x07f0f8c0: push   $0x5926d0e8
  0x07f0f8c5: call   0x07f0f8ca
  0x07f0f8ca: pusha  
  0x07f0f8cb: call   0x58d2df50
  0x07f0f8d0: hlt    
  0x07f0f8d1: pop    %eax
  0x07f0f8d2: movl   $0x0,0x13c(%edi)
  0x07f0f8dc: movl   $0x0,0x144(%edi)
  0x07f0f8e6: cmpl   $0x0,0x4(%edi)
  0x07f0f8ed: jne    0x07f00380
  0x07f0f8f3: mov    -0x1c(%ebp),%esi
  0x07f0f8f6: mov    -0x18(%ebp),%edi
  0x07f0f8f9: ret    
  0x07f0f8fa: mov    -0xc(%ebp),%ebx
  0x07f0f8fd: jmp    0x07f0f222
  0x07f0f902: nop    
  0x07f0f903: nop    
  0x07f0f904: int3   
  0x07f0f905: int3   
  0x07f0f906: int3   
  0x07f0f907: int3   
  0x07f0f908: int3   
  0x07f0f909: int3   
  0x07f0f90a: int3   
  0x07f0f90b: int3   
  0x07f0f90c: int3   
  0x07f0f90d: int3   
  0x07f0f90e: int3   
  0x07f0f90f: int3   
