
----------------------------------------------------------------------
Interpreter

code size        =     87K bytes
total space      =    895K bytes
wasted space     =    808K bytes

# of codelets    =    262
avg codelet size =    340 bytes


----------------------------------------------------------------------
slow signature handler  [0x01cb2950, 0x01cb2a00]  176 bytes

Loaded disassembler from D:\JavaSE1.8\jre\bin\hotspot\hsdis-i386.dll
[Disassembling for mach='i386']
  0x01cb2950: mov    %esp,%ecx
  0x01cb2952: call   0x01cb295c
  0x01cb2957: jmp    0x01cb29f2
  0x01cb295c: push   %ecx
  0x01cb295d: push   %edi
  0x01cb295e: push   %ebx
  0x01cb295f: lea    0x10(%esp),%eax
  0x01cb2963: cmpl   $0x0,-0x8(%ebp)
  0x01cb296a: je     0x01cb2981
  0x01cb2970: push   $0x55310188
  0x01cb2975: call   0x01cb297a
  0x01cb297a: pusha  
  0x01cb297b: call   0x54dedbf0
  0x01cb2980: hlt    
  0x01cb2981: mov    %esi,-0x1c(%ebp)
  0x01cb2984: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb298c: mov    -0xc(%edi),%edi
  0x01cb298f: push   %edi
  0x01cb2990: mov    %ebp,0x144(%edi)
  0x01cb2996: mov    %eax,0x13c(%edi)
  0x01cb299c: call   0x54ddf6f0
  0x01cb29a1: add    $0x10,%esp
  0x01cb29a4: push   %eax
  0x01cb29a5: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb29ad: mov    -0xc(%eax),%eax
  0x01cb29b0: cmp    %eax,%edi
  0x01cb29b2: je     0x01cb29c9
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb29b8: push   $0x55312af0
  0x01cb29bd: call   0x01cb29c2
  0x01cb29c2: pusha  
  0x01cb29c3: call   0x54dedbf0
  0x01cb29c8: hlt    
  0x01cb29c9: pop    %eax
  0x01cb29ca: movl   $0x0,0x13c(%edi)
  0x01cb29d4: movl   $0x0,0x144(%edi)
  0x01cb29de: cmpl   $0x0,0x4(%edi)
  0x01cb29e5: jne    0x01cb0340
  0x01cb29eb: mov    -0x1c(%ebp),%esi
  0x01cb29ee: mov    -0x18(%ebp),%edi
  0x01cb29f1: ret    
  0x01cb29f2: ret    
  0x01cb29f3: nop    
  0x01cb29f4: int3   
  0x01cb29f5: int3   
  0x01cb29f6: int3   
  0x01cb29f7: int3   
  0x01cb29f8: int3   
  0x01cb29f9: int3   
  0x01cb29fa: int3   
  0x01cb29fb: int3   
  0x01cb29fc: int3   
  0x01cb29fd: int3   
  0x01cb29fe: int3   
  0x01cb29ff: int3   

----------------------------------------------------------------------
error exits  [0x01cb2a10, 0x01cb2a40]  48 bytes

  0x01cb2a10: push   $0x5543e454
  0x01cb2a15: call   0x01cb2a1a
  0x01cb2a1a: pusha  
  0x01cb2a1b: call   0x54dedbf0
  0x01cb2a20: hlt    
  0x01cb2a21: push   $0x5543e46c
  0x01cb2a26: call   0x01cb2a2b
  0x01cb2a2b: pusha  
  0x01cb2a2c: call   0x54dedbf0
  0x01cb2a31: hlt    
  0x01cb2a32: nop    
  0x01cb2a33: nop    
  0x01cb2a34: int3   
  0x01cb2a35: int3   
  0x01cb2a36: int3   
  0x01cb2a37: int3   
  0x01cb2a38: int3   
  0x01cb2a39: int3   
  0x01cb2a3a: int3   
  0x01cb2a3b: int3   
  0x01cb2a3c: int3   
  0x01cb2a3d: int3   
  0x01cb2a3e: int3   
  0x01cb2a3f: int3   

----------------------------------------------------------------------
return entry points  [0x01cb2a50, 0x01cb3be0]  4496 bytes

  0x01cb2a50: mov    -0x8(%ebp),%esp
  0x01cb2a53: movl   $0x0,-0x8(%ebp)
  0x01cb2a5a: mov    -0x1c(%ebp),%esi
  0x01cb2a5d: mov    -0x18(%ebp),%edi
  0x01cb2a60: movzwl 0x1(%esi),%ecx
  0x01cb2a64: mov    -0x14(%ebp),%ebx
  0x01cb2a67: shl    $0x2,%ecx
  0x01cb2a6a: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2a6e: and    $0xff,%ebx
  0x01cb2a74: lea    (%esp,%ebx,4),%esp
  0x01cb2a77: movzbl (%esi),%ebx
  0x01cb2a7a: jmp    *0x55629838(,%ebx,4)
  0x01cb2a81: sub    $0x8,%esp
  0x01cb2a84: movsd  %xmm0,(%esp)
  0x01cb2a89: fldl   (%esp)
  0x01cb2a8c: add    $0x8,%esp
  0x01cb2a8f: mov    -0x8(%ebp),%esp
  0x01cb2a92: movl   $0x0,-0x8(%ebp)
  0x01cb2a99: mov    -0x1c(%ebp),%esi
  0x01cb2a9c: mov    -0x18(%ebp),%edi
  0x01cb2a9f: movzwl 0x1(%esi),%ecx
  0x01cb2aa3: mov    -0x14(%ebp),%ebx
  0x01cb2aa6: shl    $0x2,%ecx
  0x01cb2aa9: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2aad: and    $0xff,%ebx
  0x01cb2ab3: lea    (%esp,%ebx,4),%esp
  0x01cb2ab6: movzbl (%esi),%ebx
  0x01cb2ab9: jmp    *0x55629038(,%ebx,4)
  0x01cb2ac0: sub    $0x4,%esp
  0x01cb2ac3: movss  %xmm0,(%esp)
  0x01cb2ac8: flds   (%esp)
  0x01cb2acb: add    $0x4,%esp
  0x01cb2ace: mov    -0x8(%ebp),%esp
  0x01cb2ad1: movl   $0x0,-0x8(%ebp)
  0x01cb2ad8: mov    -0x1c(%ebp),%esi
  0x01cb2adb: mov    -0x18(%ebp),%edi
  0x01cb2ade: movzwl 0x1(%esi),%ecx
  0x01cb2ae2: mov    -0x14(%ebp),%ebx
  0x01cb2ae5: shl    $0x2,%ecx
  0x01cb2ae8: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2aec: and    $0xff,%ebx
  0x01cb2af2: lea    (%esp,%ebx,4),%esp
  0x01cb2af5: movzbl (%esi),%ebx
  0x01cb2af8: jmp    *0x55628c38(,%ebx,4)
  0x01cb2aff: mov    -0x8(%ebp),%esp
  0x01cb2b02: movl   $0x0,-0x8(%ebp)
  0x01cb2b09: mov    -0x1c(%ebp),%esi
  0x01cb2b0c: mov    -0x18(%ebp),%edi
  0x01cb2b0f: movzwl 0x1(%esi),%ecx
  0x01cb2b13: mov    -0x14(%ebp),%ebx
  0x01cb2b16: shl    $0x2,%ecx
  0x01cb2b19: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2b1d: and    $0xff,%ebx
  0x01cb2b23: lea    (%esp,%ebx,4),%esp
  0x01cb2b26: movzbl (%esi),%ebx
  0x01cb2b29: jmp    *0x55628838(,%ebx,4)
  0x01cb2b30: mov    -0x8(%ebp),%esp
  0x01cb2b33: movl   $0x0,-0x8(%ebp)
  0x01cb2b3a: mov    -0x1c(%ebp),%esi
  0x01cb2b3d: mov    -0x18(%ebp),%edi
  0x01cb2b40: movzwl 0x1(%esi),%ecx
  0x01cb2b44: mov    -0x14(%ebp),%ebx
  0x01cb2b47: shl    $0x2,%ecx
  0x01cb2b4a: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2b4e: and    $0xff,%ebx
  0x01cb2b54: lea    (%esp,%ebx,4),%esp
  0x01cb2b57: movzbl (%esi),%ebx
  0x01cb2b5a: jmp    *0x55628438(,%ebx,4)
  0x01cb2b61: mov    -0x8(%ebp),%esp
  0x01cb2b64: movl   $0x0,-0x8(%ebp)
  0x01cb2b6b: mov    -0x1c(%ebp),%esi
  0x01cb2b6e: mov    -0x18(%ebp),%edi
  0x01cb2b71: movzwl 0x1(%esi),%ecx
  0x01cb2b75: mov    -0x14(%ebp),%ebx
  0x01cb2b78: shl    $0x2,%ecx
  0x01cb2b7b: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2b7f: and    $0xff,%ebx
  0x01cb2b85: lea    (%esp,%ebx,4),%esp
  0x01cb2b88: movzbl (%esi),%ebx
  0x01cb2b8b: jmp    *0x55629438(,%ebx,4)
  0x01cb2b92: mov    -0x8(%ebp),%esp
  0x01cb2b95: movl   $0x0,-0x8(%ebp)
  0x01cb2b9c: mov    -0x1c(%ebp),%esi
  0x01cb2b9f: mov    -0x18(%ebp),%edi
  0x01cb2ba2: movzwl 0x1(%esi),%ecx
  0x01cb2ba6: mov    -0x14(%ebp),%ebx
  0x01cb2ba9: shl    $0x2,%ecx
  0x01cb2bac: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2bb0: and    $0xff,%ebx
  0x01cb2bb6: lea    (%esp,%ebx,4),%esp
  0x01cb2bb9: movzbl (%esi),%ebx
  0x01cb2bbc: jmp    *0x55628438(,%ebx,4)
  0x01cb2bc3: mov    -0x8(%ebp),%esp
  0x01cb2bc6: movl   $0x0,-0x8(%ebp)
  0x01cb2bcd: mov    -0x1c(%ebp),%esi
  0x01cb2bd0: mov    -0x18(%ebp),%edi
  0x01cb2bd3: movzwl 0x1(%esi),%ecx
  0x01cb2bd7: mov    -0x14(%ebp),%ebx
  0x01cb2bda: shl    $0x2,%ecx
  0x01cb2bdd: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2be1: and    $0xff,%ebx
  0x01cb2be7: lea    (%esp,%ebx,4),%esp
  0x01cb2bea: movzbl (%esi),%ebx
  0x01cb2bed: jmp    *0x55628438(,%ebx,4)
  0x01cb2bf4: mov    -0x8(%ebp),%esp
  0x01cb2bf7: movl   $0x0,-0x8(%ebp)
  0x01cb2bfe: mov    -0x1c(%ebp),%esi
  0x01cb2c01: mov    -0x18(%ebp),%edi
  0x01cb2c04: movzwl 0x1(%esi),%ecx
  0x01cb2c08: mov    -0x14(%ebp),%ebx
  0x01cb2c0b: shl    $0x2,%ecx
  0x01cb2c0e: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2c12: and    $0xff,%ebx
  0x01cb2c18: lea    (%esp,%ebx,4),%esp
  0x01cb2c1b: movzbl (%esi),%ebx
  0x01cb2c1e: jmp    *0x55628438(,%ebx,4)
  0x01cb2c25: mov    -0x8(%ebp),%esp
  0x01cb2c28: movl   $0x0,-0x8(%ebp)
  0x01cb2c2f: mov    -0x1c(%ebp),%esi
  0x01cb2c32: mov    -0x18(%ebp),%edi
  0x01cb2c35: movzwl 0x1(%esi),%ecx
  0x01cb2c39: mov    -0x14(%ebp),%ebx
  0x01cb2c3c: shl    $0x2,%ecx
  0x01cb2c3f: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2c43: and    $0xff,%ebx
  0x01cb2c49: lea    (%esp,%ebx,4),%esp
  0x01cb2c4c: movzbl 0x1(%esi),%ebx
  0x01cb2c50: inc    %esi
  0x01cb2c51: jmp    *0x55629838(,%ebx,4)
  0x01cb2c58: sub    $0x8,%esp
  0x01cb2c5b: movsd  %xmm0,(%esp)
  0x01cb2c60: fldl   (%esp)
  0x01cb2c63: add    $0x8,%esp
  0x01cb2c66: mov    -0x8(%ebp),%esp
  0x01cb2c69: movl   $0x0,-0x8(%ebp)
  0x01cb2c70: mov    -0x1c(%ebp),%esi
  0x01cb2c73: mov    -0x18(%ebp),%edi
  0x01cb2c76: movzwl 0x1(%esi),%ecx
  0x01cb2c7a: mov    -0x14(%ebp),%ebx
  0x01cb2c7d: shl    $0x2,%ecx
  0x01cb2c80: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2c84: and    $0xff,%ebx
  0x01cb2c8a: lea    (%esp,%ebx,4),%esp
  0x01cb2c8d: movzbl 0x1(%esi),%ebx
  0x01cb2c91: inc    %esi
  0x01cb2c92: jmp    *0x55629038(,%ebx,4)
  0x01cb2c99: sub    $0x4,%esp
  0x01cb2c9c: movss  %xmm0,(%esp)
  0x01cb2ca1: flds   (%esp)
  0x01cb2ca4: add    $0x4,%esp
  0x01cb2ca7: mov    -0x8(%ebp),%esp
  0x01cb2caa: movl   $0x0,-0x8(%ebp)
  0x01cb2cb1: mov    -0x1c(%ebp),%esi
  0x01cb2cb4: mov    -0x18(%ebp),%edi
  0x01cb2cb7: movzwl 0x1(%esi),%ecx
  0x01cb2cbb: mov    -0x14(%ebp),%ebx
  0x01cb2cbe: shl    $0x2,%ecx
  0x01cb2cc1: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2cc5: and    $0xff,%ebx
  0x01cb2ccb: lea    (%esp,%ebx,4),%esp
  0x01cb2cce: movzbl 0x1(%esi),%ebx
  0x01cb2cd2: inc    %esi
  0x01cb2cd3: jmp    *0x55628c38(,%ebx,4)
  0x01cb2cda: mov    -0x8(%ebp),%esp
  0x01cb2cdd: movl   $0x0,-0x8(%ebp)
  0x01cb2ce4: mov    -0x1c(%ebp),%esi
  0x01cb2ce7: mov    -0x18(%ebp),%edi
  0x01cb2cea: movzwl 0x1(%esi),%ecx
  0x01cb2cee: mov    -0x14(%ebp),%ebx
  0x01cb2cf1: shl    $0x2,%ecx
  0x01cb2cf4: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2cf8: and    $0xff,%ebx
  0x01cb2cfe: lea    (%esp,%ebx,4),%esp
  0x01cb2d01: movzbl 0x1(%esi),%ebx
  0x01cb2d05: inc    %esi
  0x01cb2d06: jmp    *0x55628838(,%ebx,4)
  0x01cb2d0d: mov    -0x8(%ebp),%esp
  0x01cb2d10: movl   $0x0,-0x8(%ebp)
  0x01cb2d17: mov    -0x1c(%ebp),%esi
  0x01cb2d1a: mov    -0x18(%ebp),%edi
  0x01cb2d1d: movzwl 0x1(%esi),%ecx
  0x01cb2d21: mov    -0x14(%ebp),%ebx
  0x01cb2d24: shl    $0x2,%ecx
  0x01cb2d27: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2d2b: and    $0xff,%ebx
  0x01cb2d31: lea    (%esp,%ebx,4),%esp
  0x01cb2d34: movzbl 0x1(%esi),%ebx
  0x01cb2d38: inc    %esi
  0x01cb2d39: jmp    *0x55628438(,%ebx,4)
  0x01cb2d40: mov    -0x8(%ebp),%esp
  0x01cb2d43: movl   $0x0,-0x8(%ebp)
  0x01cb2d4a: mov    -0x1c(%ebp),%esi
  0x01cb2d4d: mov    -0x18(%ebp),%edi
  0x01cb2d50: movzwl 0x1(%esi),%ecx
  0x01cb2d54: mov    -0x14(%ebp),%ebx
  0x01cb2d57: shl    $0x2,%ecx
  0x01cb2d5a: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2d5e: and    $0xff,%ebx
  0x01cb2d64: lea    (%esp,%ebx,4),%esp
  0x01cb2d67: movzbl 0x1(%esi),%ebx
  0x01cb2d6b: inc    %esi
  0x01cb2d6c: jmp    *0x55629438(,%ebx,4)
  0x01cb2d73: mov    -0x8(%ebp),%esp
  0x01cb2d76: movl   $0x0,-0x8(%ebp)
  0x01cb2d7d: mov    -0x1c(%ebp),%esi
  0x01cb2d80: mov    -0x18(%ebp),%edi
  0x01cb2d83: movzwl 0x1(%esi),%ecx
  0x01cb2d87: mov    -0x14(%ebp),%ebx
  0x01cb2d8a: shl    $0x2,%ecx
  0x01cb2d8d: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2d91: and    $0xff,%ebx
  0x01cb2d97: lea    (%esp,%ebx,4),%esp
  0x01cb2d9a: movzbl 0x1(%esi),%ebx
  0x01cb2d9e: inc    %esi
  0x01cb2d9f: jmp    *0x55628438(,%ebx,4)
  0x01cb2da6: mov    -0x8(%ebp),%esp
  0x01cb2da9: movl   $0x0,-0x8(%ebp)
  0x01cb2db0: mov    -0x1c(%ebp),%esi
  0x01cb2db3: mov    -0x18(%ebp),%edi
  0x01cb2db6: movzwl 0x1(%esi),%ecx
  0x01cb2dba: mov    -0x14(%ebp),%ebx
  0x01cb2dbd: shl    $0x2,%ecx
  0x01cb2dc0: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2dc4: and    $0xff,%ebx
  0x01cb2dca: lea    (%esp,%ebx,4),%esp
  0x01cb2dcd: movzbl 0x1(%esi),%ebx
  0x01cb2dd1: inc    %esi
  0x01cb2dd2: jmp    *0x55628438(,%ebx,4)
  0x01cb2dd9: mov    -0x8(%ebp),%esp
  0x01cb2ddc: movl   $0x0,-0x8(%ebp)
  0x01cb2de3: mov    -0x1c(%ebp),%esi
  0x01cb2de6: mov    -0x18(%ebp),%edi
  0x01cb2de9: movzwl 0x1(%esi),%ecx
  0x01cb2ded: mov    -0x14(%ebp),%ebx
  0x01cb2df0: shl    $0x2,%ecx
  0x01cb2df3: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2df7: and    $0xff,%ebx
  0x01cb2dfd: lea    (%esp,%ebx,4),%esp
  0x01cb2e00: movzbl 0x1(%esi),%ebx
  0x01cb2e04: inc    %esi
  0x01cb2e05: jmp    *0x55628438(,%ebx,4)
  0x01cb2e0c: mov    -0x8(%ebp),%esp
  0x01cb2e0f: movl   $0x0,-0x8(%ebp)
  0x01cb2e16: mov    -0x1c(%ebp),%esi
  0x01cb2e19: mov    -0x18(%ebp),%edi
  0x01cb2e1c: movzwl 0x1(%esi),%ecx
  0x01cb2e20: mov    -0x14(%ebp),%ebx
  0x01cb2e23: shl    $0x2,%ecx
  0x01cb2e26: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2e2a: and    $0xff,%ebx
  0x01cb2e30: lea    (%esp,%ebx,4),%esp
  0x01cb2e33: movzbl 0x2(%esi),%ebx
  0x01cb2e37: add    $0x2,%esi
  0x01cb2e3a: jmp    *0x55629838(,%ebx,4)
  0x01cb2e41: sub    $0x8,%esp
  0x01cb2e44: movsd  %xmm0,(%esp)
  0x01cb2e49: fldl   (%esp)
  0x01cb2e4c: add    $0x8,%esp
  0x01cb2e4f: mov    -0x8(%ebp),%esp
  0x01cb2e52: movl   $0x0,-0x8(%ebp)
  0x01cb2e59: mov    -0x1c(%ebp),%esi
  0x01cb2e5c: mov    -0x18(%ebp),%edi
  0x01cb2e5f: movzwl 0x1(%esi),%ecx
  0x01cb2e63: mov    -0x14(%ebp),%ebx
  0x01cb2e66: shl    $0x2,%ecx
  0x01cb2e69: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2e6d: and    $0xff,%ebx
  0x01cb2e73: lea    (%esp,%ebx,4),%esp
  0x01cb2e76: movzbl 0x2(%esi),%ebx
  0x01cb2e7a: add    $0x2,%esi
  0x01cb2e7d: jmp    *0x55629038(,%ebx,4)
  0x01cb2e84: sub    $0x4,%esp
  0x01cb2e87: movss  %xmm0,(%esp)
  0x01cb2e8c: flds   (%esp)
  0x01cb2e8f: add    $0x4,%esp
  0x01cb2e92: mov    -0x8(%ebp),%esp
  0x01cb2e95: movl   $0x0,-0x8(%ebp)
  0x01cb2e9c: mov    -0x1c(%ebp),%esi
  0x01cb2e9f: mov    -0x18(%ebp),%edi
  0x01cb2ea2: movzwl 0x1(%esi),%ecx
  0x01cb2ea6: mov    -0x14(%ebp),%ebx
  0x01cb2ea9: shl    $0x2,%ecx
  0x01cb2eac: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2eb0: and    $0xff,%ebx
  0x01cb2eb6: lea    (%esp,%ebx,4),%esp
  0x01cb2eb9: movzbl 0x2(%esi),%ebx
  0x01cb2ebd: add    $0x2,%esi
  0x01cb2ec0: jmp    *0x55628c38(,%ebx,4)
  0x01cb2ec7: mov    -0x8(%ebp),%esp
  0x01cb2eca: movl   $0x0,-0x8(%ebp)
  0x01cb2ed1: mov    -0x1c(%ebp),%esi
  0x01cb2ed4: mov    -0x18(%ebp),%edi
  0x01cb2ed7: movzwl 0x1(%esi),%ecx
  0x01cb2edb: mov    -0x14(%ebp),%ebx
  0x01cb2ede: shl    $0x2,%ecx
  0x01cb2ee1: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2ee5: and    $0xff,%ebx
  0x01cb2eeb: lea    (%esp,%ebx,4),%esp
  0x01cb2eee: movzbl 0x2(%esi),%ebx
  0x01cb2ef2: add    $0x2,%esi
  0x01cb2ef5: jmp    *0x55628838(,%ebx,4)
  0x01cb2efc: mov    -0x8(%ebp),%esp
  0x01cb2eff: movl   $0x0,-0x8(%ebp)
  0x01cb2f06: mov    -0x1c(%ebp),%esi
  0x01cb2f09: mov    -0x18(%ebp),%edi
  0x01cb2f0c: movzwl 0x1(%esi),%ecx
  0x01cb2f10: mov    -0x14(%ebp),%ebx
  0x01cb2f13: shl    $0x2,%ecx
  0x01cb2f16: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2f1a: and    $0xff,%ebx
  0x01cb2f20: lea    (%esp,%ebx,4),%esp
  0x01cb2f23: movzbl 0x2(%esi),%ebx
  0x01cb2f27: add    $0x2,%esi
  0x01cb2f2a: jmp    *0x55628438(,%ebx,4)
  0x01cb2f31: mov    -0x8(%ebp),%esp
  0x01cb2f34: movl   $0x0,-0x8(%ebp)
  0x01cb2f3b: mov    -0x1c(%ebp),%esi
  0x01cb2f3e: mov    -0x18(%ebp),%edi
  0x01cb2f41: movzwl 0x1(%esi),%ecx
  0x01cb2f45: mov    -0x14(%ebp),%ebx
  0x01cb2f48: shl    $0x2,%ecx
  0x01cb2f4b: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2f4f: and    $0xff,%ebx
  0x01cb2f55: lea    (%esp,%ebx,4),%esp
  0x01cb2f58: movzbl 0x2(%esi),%ebx
  0x01cb2f5c: add    $0x2,%esi
  0x01cb2f5f: jmp    *0x55629438(,%ebx,4)
  0x01cb2f66: mov    -0x8(%ebp),%esp
  0x01cb2f69: movl   $0x0,-0x8(%ebp)
  0x01cb2f70: mov    -0x1c(%ebp),%esi
  0x01cb2f73: mov    -0x18(%ebp),%edi
  0x01cb2f76: movzwl 0x1(%esi),%ecx
  0x01cb2f7a: mov    -0x14(%ebp),%ebx
  0x01cb2f7d: shl    $0x2,%ecx
  0x01cb2f80: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2f84: and    $0xff,%ebx
  0x01cb2f8a: lea    (%esp,%ebx,4),%esp
  0x01cb2f8d: movzbl 0x2(%esi),%ebx
  0x01cb2f91: add    $0x2,%esi
  0x01cb2f94: jmp    *0x55628438(,%ebx,4)
  0x01cb2f9b: mov    -0x8(%ebp),%esp
  0x01cb2f9e: movl   $0x0,-0x8(%ebp)
  0x01cb2fa5: mov    -0x1c(%ebp),%esi
  0x01cb2fa8: mov    -0x18(%ebp),%edi
  0x01cb2fab: movzwl 0x1(%esi),%ecx
  0x01cb2faf: mov    -0x14(%ebp),%ebx
  0x01cb2fb2: shl    $0x2,%ecx
  0x01cb2fb5: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2fb9: and    $0xff,%ebx
  0x01cb2fbf: lea    (%esp,%ebx,4),%esp
  0x01cb2fc2: movzbl 0x2(%esi),%ebx
  0x01cb2fc6: add    $0x2,%esi
  0x01cb2fc9: jmp    *0x55628438(,%ebx,4)
  0x01cb2fd0: mov    -0x8(%ebp),%esp
  0x01cb2fd3: movl   $0x0,-0x8(%ebp)
  0x01cb2fda: mov    -0x1c(%ebp),%esi
  0x01cb2fdd: mov    -0x18(%ebp),%edi
  0x01cb2fe0: movzwl 0x1(%esi),%ecx
  0x01cb2fe4: mov    -0x14(%ebp),%ebx
  0x01cb2fe7: shl    $0x2,%ecx
  0x01cb2fea: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb2fee: and    $0xff,%ebx
  0x01cb2ff4: lea    (%esp,%ebx,4),%esp
  0x01cb2ff7: movzbl 0x2(%esi),%ebx
  0x01cb2ffb: add    $0x2,%esi
  0x01cb2ffe: jmp    *0x55628438(,%ebx,4)
  0x01cb3005: mov    -0x8(%ebp),%esp
  0x01cb3008: movl   $0x0,-0x8(%ebp)
  0x01cb300f: mov    -0x1c(%ebp),%esi
  0x01cb3012: mov    -0x18(%ebp),%edi
  0x01cb3015: movzwl 0x1(%esi),%ecx
  0x01cb3019: mov    -0x14(%ebp),%ebx
  0x01cb301c: shl    $0x2,%ecx
  0x01cb301f: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3023: and    $0xff,%ebx
  0x01cb3029: lea    (%esp,%ebx,4),%esp
  0x01cb302c: movzbl 0x3(%esi),%ebx
  0x01cb3030: add    $0x3,%esi
  0x01cb3033: jmp    *0x55629838(,%ebx,4)
  0x01cb303a: sub    $0x8,%esp
  0x01cb303d: movsd  %xmm0,(%esp)
  0x01cb3042: fldl   (%esp)
  0x01cb3045: add    $0x8,%esp
  0x01cb3048: mov    -0x8(%ebp),%esp
  0x01cb304b: movl   $0x0,-0x8(%ebp)
  0x01cb3052: mov    -0x1c(%ebp),%esi
  0x01cb3055: mov    -0x18(%ebp),%edi
  0x01cb3058: movzwl 0x1(%esi),%ecx
  0x01cb305c: mov    -0x14(%ebp),%ebx
  0x01cb305f: shl    $0x2,%ecx
  0x01cb3062: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3066: and    $0xff,%ebx
  0x01cb306c: lea    (%esp,%ebx,4),%esp
  0x01cb306f: movzbl 0x3(%esi),%ebx
  0x01cb3073: add    $0x3,%esi
  0x01cb3076: jmp    *0x55629038(,%ebx,4)
  0x01cb307d: sub    $0x4,%esp
  0x01cb3080: movss  %xmm0,(%esp)
  0x01cb3085: flds   (%esp)
  0x01cb3088: add    $0x4,%esp
  0x01cb308b: mov    -0x8(%ebp),%esp
  0x01cb308e: movl   $0x0,-0x8(%ebp)
  0x01cb3095: mov    -0x1c(%ebp),%esi
  0x01cb3098: mov    -0x18(%ebp),%edi
  0x01cb309b: movzwl 0x1(%esi),%ecx
  0x01cb309f: mov    -0x14(%ebp),%ebx
  0x01cb30a2: shl    $0x2,%ecx
  0x01cb30a5: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb30a9: and    $0xff,%ebx
  0x01cb30af: lea    (%esp,%ebx,4),%esp
  0x01cb30b2: movzbl 0x3(%esi),%ebx
  0x01cb30b6: add    $0x3,%esi
  0x01cb30b9: jmp    *0x55628c38(,%ebx,4)
  0x01cb30c0: mov    -0x8(%ebp),%esp
  0x01cb30c3: movl   $0x0,-0x8(%ebp)
  0x01cb30ca: mov    -0x1c(%ebp),%esi
  0x01cb30cd: mov    -0x18(%ebp),%edi
  0x01cb30d0: movzwl 0x1(%esi),%ecx
  0x01cb30d4: mov    -0x14(%ebp),%ebx
  0x01cb30d7: shl    $0x2,%ecx
  0x01cb30da: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb30de: and    $0xff,%ebx
  0x01cb30e4: lea    (%esp,%ebx,4),%esp
  0x01cb30e7: movzbl 0x3(%esi),%ebx
  0x01cb30eb: add    $0x3,%esi
  0x01cb30ee: jmp    *0x55628838(,%ebx,4)
  0x01cb30f5: mov    -0x8(%ebp),%esp
  0x01cb30f8: movl   $0x0,-0x8(%ebp)
  0x01cb30ff: mov    -0x1c(%ebp),%esi
  0x01cb3102: mov    -0x18(%ebp),%edi
  0x01cb3105: movzwl 0x1(%esi),%ecx
  0x01cb3109: mov    -0x14(%ebp),%ebx
  0x01cb310c: shl    $0x2,%ecx
  0x01cb310f: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3113: and    $0xff,%ebx
  0x01cb3119: lea    (%esp,%ebx,4),%esp
  0x01cb311c: movzbl 0x3(%esi),%ebx
  0x01cb3120: add    $0x3,%esi
  0x01cb3123: jmp    *0x55628438(,%ebx,4)
  0x01cb312a: mov    -0x8(%ebp),%esp
  0x01cb312d: movl   $0x0,-0x8(%ebp)
  0x01cb3134: mov    -0x1c(%ebp),%esi
  0x01cb3137: mov    -0x18(%ebp),%edi
  0x01cb313a: movzwl 0x1(%esi),%ecx
  0x01cb313e: mov    -0x14(%ebp),%ebx
  0x01cb3141: shl    $0x2,%ecx
  0x01cb3144: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3148: and    $0xff,%ebx
  0x01cb314e: lea    (%esp,%ebx,4),%esp
  0x01cb3151: movzbl 0x3(%esi),%ebx
  0x01cb3155: add    $0x3,%esi
  0x01cb3158: jmp    *0x55629438(,%ebx,4)
  0x01cb315f: mov    -0x8(%ebp),%esp
  0x01cb3162: movl   $0x0,-0x8(%ebp)
  0x01cb3169: mov    -0x1c(%ebp),%esi
  0x01cb316c: mov    -0x18(%ebp),%edi
  0x01cb316f: movzwl 0x1(%esi),%ecx
  0x01cb3173: mov    -0x14(%ebp),%ebx
  0x01cb3176: shl    $0x2,%ecx
  0x01cb3179: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb317d: and    $0xff,%ebx
  0x01cb3183: lea    (%esp,%ebx,4),%esp
  0x01cb3186: movzbl 0x3(%esi),%ebx
  0x01cb318a: add    $0x3,%esi
  0x01cb318d: jmp    *0x55628438(,%ebx,4)
  0x01cb3194: mov    -0x8(%ebp),%esp
  0x01cb3197: movl   $0x0,-0x8(%ebp)
  0x01cb319e: mov    -0x1c(%ebp),%esi
  0x01cb31a1: mov    -0x18(%ebp),%edi
  0x01cb31a4: movzwl 0x1(%esi),%ecx
  0x01cb31a8: mov    -0x14(%ebp),%ebx
  0x01cb31ab: shl    $0x2,%ecx
  0x01cb31ae: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb31b2: and    $0xff,%ebx
  0x01cb31b8: lea    (%esp,%ebx,4),%esp
  0x01cb31bb: movzbl 0x3(%esi),%ebx
  0x01cb31bf: add    $0x3,%esi
  0x01cb31c2: jmp    *0x55628438(,%ebx,4)
  0x01cb31c9: mov    -0x8(%ebp),%esp
  0x01cb31cc: movl   $0x0,-0x8(%ebp)
  0x01cb31d3: mov    -0x1c(%ebp),%esi
  0x01cb31d6: mov    -0x18(%ebp),%edi
  0x01cb31d9: movzwl 0x1(%esi),%ecx
  0x01cb31dd: mov    -0x14(%ebp),%ebx
  0x01cb31e0: shl    $0x2,%ecx
  0x01cb31e3: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb31e7: and    $0xff,%ebx
  0x01cb31ed: lea    (%esp,%ebx,4),%esp
  0x01cb31f0: movzbl 0x3(%esi),%ebx
  0x01cb31f4: add    $0x3,%esi
  0x01cb31f7: jmp    *0x55628438(,%ebx,4)
  0x01cb31fe: mov    -0x8(%ebp),%esp
  0x01cb3201: movl   $0x0,-0x8(%ebp)
  0x01cb3208: mov    -0x1c(%ebp),%esi
  0x01cb320b: mov    -0x18(%ebp),%edi
  0x01cb320e: movzwl 0x1(%esi),%ecx
  0x01cb3212: mov    -0x14(%ebp),%ebx
  0x01cb3215: shl    $0x2,%ecx
  0x01cb3218: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb321c: and    $0xff,%ebx
  0x01cb3222: lea    (%esp,%ebx,4),%esp
  0x01cb3225: movzbl 0x4(%esi),%ebx
  0x01cb3229: add    $0x4,%esi
  0x01cb322c: jmp    *0x55629838(,%ebx,4)
  0x01cb3233: sub    $0x8,%esp
  0x01cb3236: movsd  %xmm0,(%esp)
  0x01cb323b: fldl   (%esp)
  0x01cb323e: add    $0x8,%esp
  0x01cb3241: mov    -0x8(%ebp),%esp
  0x01cb3244: movl   $0x0,-0x8(%ebp)
  0x01cb324b: mov    -0x1c(%ebp),%esi
  0x01cb324e: mov    -0x18(%ebp),%edi
  0x01cb3251: movzwl 0x1(%esi),%ecx
  0x01cb3255: mov    -0x14(%ebp),%ebx
  0x01cb3258: shl    $0x2,%ecx
  0x01cb325b: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb325f: and    $0xff,%ebx
  0x01cb3265: lea    (%esp,%ebx,4),%esp
  0x01cb3268: movzbl 0x4(%esi),%ebx
  0x01cb326c: add    $0x4,%esi
  0x01cb326f: jmp    *0x55629038(,%ebx,4)
  0x01cb3276: sub    $0x4,%esp
  0x01cb3279: movss  %xmm0,(%esp)
  0x01cb327e: flds   (%esp)
  0x01cb3281: add    $0x4,%esp
  0x01cb3284: mov    -0x8(%ebp),%esp
  0x01cb3287: movl   $0x0,-0x8(%ebp)
  0x01cb328e: mov    -0x1c(%ebp),%esi
  0x01cb3291: mov    -0x18(%ebp),%edi
  0x01cb3294: movzwl 0x1(%esi),%ecx
  0x01cb3298: mov    -0x14(%ebp),%ebx
  0x01cb329b: shl    $0x2,%ecx
  0x01cb329e: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb32a2: and    $0xff,%ebx
  0x01cb32a8: lea    (%esp,%ebx,4),%esp
  0x01cb32ab: movzbl 0x4(%esi),%ebx
  0x01cb32af: add    $0x4,%esi
  0x01cb32b2: jmp    *0x55628c38(,%ebx,4)
  0x01cb32b9: mov    -0x8(%ebp),%esp
  0x01cb32bc: movl   $0x0,-0x8(%ebp)
  0x01cb32c3: mov    -0x1c(%ebp),%esi
  0x01cb32c6: mov    -0x18(%ebp),%edi
  0x01cb32c9: movzwl 0x1(%esi),%ecx
  0x01cb32cd: mov    -0x14(%ebp),%ebx
  0x01cb32d0: shl    $0x2,%ecx
  0x01cb32d3: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb32d7: and    $0xff,%ebx
  0x01cb32dd: lea    (%esp,%ebx,4),%esp
  0x01cb32e0: movzbl 0x4(%esi),%ebx
  0x01cb32e4: add    $0x4,%esi
  0x01cb32e7: jmp    *0x55628838(,%ebx,4)
  0x01cb32ee: mov    -0x8(%ebp),%esp
  0x01cb32f1: movl   $0x0,-0x8(%ebp)
  0x01cb32f8: mov    -0x1c(%ebp),%esi
  0x01cb32fb: mov    -0x18(%ebp),%edi
  0x01cb32fe: movzwl 0x1(%esi),%ecx
  0x01cb3302: mov    -0x14(%ebp),%ebx
  0x01cb3305: shl    $0x2,%ecx
  0x01cb3308: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb330c: and    $0xff,%ebx
  0x01cb3312: lea    (%esp,%ebx,4),%esp
  0x01cb3315: movzbl 0x4(%esi),%ebx
  0x01cb3319: add    $0x4,%esi
  0x01cb331c: jmp    *0x55628438(,%ebx,4)
  0x01cb3323: mov    -0x8(%ebp),%esp
  0x01cb3326: movl   $0x0,-0x8(%ebp)
  0x01cb332d: mov    -0x1c(%ebp),%esi
  0x01cb3330: mov    -0x18(%ebp),%edi
  0x01cb3333: movzwl 0x1(%esi),%ecx
  0x01cb3337: mov    -0x14(%ebp),%ebx
  0x01cb333a: shl    $0x2,%ecx
  0x01cb333d: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3341: and    $0xff,%ebx
  0x01cb3347: lea    (%esp,%ebx,4),%esp
  0x01cb334a: movzbl 0x4(%esi),%ebx
  0x01cb334e: add    $0x4,%esi
  0x01cb3351: jmp    *0x55629438(,%ebx,4)
  0x01cb3358: mov    -0x8(%ebp),%esp
  0x01cb335b: movl   $0x0,-0x8(%ebp)
  0x01cb3362: mov    -0x1c(%ebp),%esi
  0x01cb3365: mov    -0x18(%ebp),%edi
  0x01cb3368: movzwl 0x1(%esi),%ecx
  0x01cb336c: mov    -0x14(%ebp),%ebx
  0x01cb336f: shl    $0x2,%ecx
  0x01cb3372: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3376: and    $0xff,%ebx
  0x01cb337c: lea    (%esp,%ebx,4),%esp
  0x01cb337f: movzbl 0x4(%esi),%ebx
  0x01cb3383: add    $0x4,%esi
  0x01cb3386: jmp    *0x55628438(,%ebx,4)
  0x01cb338d: mov    -0x8(%ebp),%esp
  0x01cb3390: movl   $0x0,-0x8(%ebp)
  0x01cb3397: mov    -0x1c(%ebp),%esi
  0x01cb339a: mov    -0x18(%ebp),%edi
  0x01cb339d: movzwl 0x1(%esi),%ecx
  0x01cb33a1: mov    -0x14(%ebp),%ebx
  0x01cb33a4: shl    $0x2,%ecx
  0x01cb33a7: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb33ab: and    $0xff,%ebx
  0x01cb33b1: lea    (%esp,%ebx,4),%esp
  0x01cb33b4: movzbl 0x4(%esi),%ebx
  0x01cb33b8: add    $0x4,%esi
  0x01cb33bb: jmp    *0x55628438(,%ebx,4)
  0x01cb33c2: mov    -0x8(%ebp),%esp
  0x01cb33c5: movl   $0x0,-0x8(%ebp)
  0x01cb33cc: mov    -0x1c(%ebp),%esi
  0x01cb33cf: mov    -0x18(%ebp),%edi
  0x01cb33d2: movzwl 0x1(%esi),%ecx
  0x01cb33d6: mov    -0x14(%ebp),%ebx
  0x01cb33d9: shl    $0x2,%ecx
  0x01cb33dc: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb33e0: and    $0xff,%ebx
  0x01cb33e6: lea    (%esp,%ebx,4),%esp
  0x01cb33e9: movzbl 0x4(%esi),%ebx
  0x01cb33ed: add    $0x4,%esi
  0x01cb33f0: jmp    *0x55628438(,%ebx,4)
  0x01cb33f7: mov    -0x8(%ebp),%esp
  0x01cb33fa: movl   $0x0,-0x8(%ebp)
  0x01cb3401: mov    -0x1c(%ebp),%esi
  0x01cb3404: mov    -0x18(%ebp),%edi
  0x01cb3407: movzwl 0x1(%esi),%ecx
  0x01cb340b: mov    -0x14(%ebp),%ebx
  0x01cb340e: shl    $0x2,%ecx
  0x01cb3411: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3415: and    $0xff,%ebx
  0x01cb341b: lea    (%esp,%ebx,4),%esp
  0x01cb341e: movzbl 0x5(%esi),%ebx
  0x01cb3422: add    $0x5,%esi
  0x01cb3425: jmp    *0x55629838(,%ebx,4)
  0x01cb342c: sub    $0x8,%esp
  0x01cb342f: movsd  %xmm0,(%esp)
  0x01cb3434: fldl   (%esp)
  0x01cb3437: add    $0x8,%esp
  0x01cb343a: mov    -0x8(%ebp),%esp
  0x01cb343d: movl   $0x0,-0x8(%ebp)
  0x01cb3444: mov    -0x1c(%ebp),%esi
  0x01cb3447: mov    -0x18(%ebp),%edi
  0x01cb344a: movzwl 0x1(%esi),%ecx
  0x01cb344e: mov    -0x14(%ebp),%ebx
  0x01cb3451: shl    $0x2,%ecx
  0x01cb3454: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3458: and    $0xff,%ebx
  0x01cb345e: lea    (%esp,%ebx,4),%esp
  0x01cb3461: movzbl 0x5(%esi),%ebx
  0x01cb3465: add    $0x5,%esi
  0x01cb3468: jmp    *0x55629038(,%ebx,4)
  0x01cb346f: sub    $0x4,%esp
  0x01cb3472: movss  %xmm0,(%esp)
  0x01cb3477: flds   (%esp)
  0x01cb347a: add    $0x4,%esp
  0x01cb347d: mov    -0x8(%ebp),%esp
  0x01cb3480: movl   $0x0,-0x8(%ebp)
  0x01cb3487: mov    -0x1c(%ebp),%esi
  0x01cb348a: mov    -0x18(%ebp),%edi
  0x01cb348d: movzwl 0x1(%esi),%ecx
  0x01cb3491: mov    -0x14(%ebp),%ebx
  0x01cb3494: shl    $0x2,%ecx
  0x01cb3497: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb349b: and    $0xff,%ebx
  0x01cb34a1: lea    (%esp,%ebx,4),%esp
  0x01cb34a4: movzbl 0x5(%esi),%ebx
  0x01cb34a8: add    $0x5,%esi
  0x01cb34ab: jmp    *0x55628c38(,%ebx,4)
  0x01cb34b2: mov    -0x8(%ebp),%esp
  0x01cb34b5: movl   $0x0,-0x8(%ebp)
  0x01cb34bc: mov    -0x1c(%ebp),%esi
  0x01cb34bf: mov    -0x18(%ebp),%edi
  0x01cb34c2: movzwl 0x1(%esi),%ecx
  0x01cb34c6: mov    -0x14(%ebp),%ebx
  0x01cb34c9: shl    $0x2,%ecx
  0x01cb34cc: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb34d0: and    $0xff,%ebx
  0x01cb34d6: lea    (%esp,%ebx,4),%esp
  0x01cb34d9: movzbl 0x5(%esi),%ebx
  0x01cb34dd: add    $0x5,%esi
  0x01cb34e0: jmp    *0x55628838(,%ebx,4)
  0x01cb34e7: mov    -0x8(%ebp),%esp
  0x01cb34ea: movl   $0x0,-0x8(%ebp)
  0x01cb34f1: mov    -0x1c(%ebp),%esi
  0x01cb34f4: mov    -0x18(%ebp),%edi
  0x01cb34f7: movzwl 0x1(%esi),%ecx
  0x01cb34fb: mov    -0x14(%ebp),%ebx
  0x01cb34fe: shl    $0x2,%ecx
  0x01cb3501: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3505: and    $0xff,%ebx
  0x01cb350b: lea    (%esp,%ebx,4),%esp
  0x01cb350e: movzbl 0x5(%esi),%ebx
  0x01cb3512: add    $0x5,%esi
  0x01cb3515: jmp    *0x55628438(,%ebx,4)
  0x01cb351c: mov    -0x8(%ebp),%esp
  0x01cb351f: movl   $0x0,-0x8(%ebp)
  0x01cb3526: mov    -0x1c(%ebp),%esi
  0x01cb3529: mov    -0x18(%ebp),%edi
  0x01cb352c: movzwl 0x1(%esi),%ecx
  0x01cb3530: mov    -0x14(%ebp),%ebx
  0x01cb3533: shl    $0x2,%ecx
  0x01cb3536: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb353a: and    $0xff,%ebx
  0x01cb3540: lea    (%esp,%ebx,4),%esp
  0x01cb3543: movzbl 0x5(%esi),%ebx
  0x01cb3547: add    $0x5,%esi
  0x01cb354a: jmp    *0x55629438(,%ebx,4)
  0x01cb3551: mov    -0x8(%ebp),%esp
  0x01cb3554: movl   $0x0,-0x8(%ebp)
  0x01cb355b: mov    -0x1c(%ebp),%esi
  0x01cb355e: mov    -0x18(%ebp),%edi
  0x01cb3561: movzwl 0x1(%esi),%ecx
  0x01cb3565: mov    -0x14(%ebp),%ebx
  0x01cb3568: shl    $0x2,%ecx
  0x01cb356b: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb356f: and    $0xff,%ebx
  0x01cb3575: lea    (%esp,%ebx,4),%esp
  0x01cb3578: movzbl 0x5(%esi),%ebx
  0x01cb357c: add    $0x5,%esi
  0x01cb357f: jmp    *0x55628438(,%ebx,4)
  0x01cb3586: mov    -0x8(%ebp),%esp
  0x01cb3589: movl   $0x0,-0x8(%ebp)
  0x01cb3590: mov    -0x1c(%ebp),%esi
  0x01cb3593: mov    -0x18(%ebp),%edi
  0x01cb3596: movzwl 0x1(%esi),%ecx
  0x01cb359a: mov    -0x14(%ebp),%ebx
  0x01cb359d: shl    $0x2,%ecx
  0x01cb35a0: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb35a4: and    $0xff,%ebx
  0x01cb35aa: lea    (%esp,%ebx,4),%esp
  0x01cb35ad: movzbl 0x5(%esi),%ebx
  0x01cb35b1: add    $0x5,%esi
  0x01cb35b4: jmp    *0x55628438(,%ebx,4)
  0x01cb35bb: mov    -0x8(%ebp),%esp
  0x01cb35be: movl   $0x0,-0x8(%ebp)
  0x01cb35c5: mov    -0x1c(%ebp),%esi
  0x01cb35c8: mov    -0x18(%ebp),%edi
  0x01cb35cb: movzwl 0x1(%esi),%ecx
  0x01cb35cf: mov    -0x14(%ebp),%ebx
  0x01cb35d2: shl    $0x2,%ecx
  0x01cb35d5: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb35d9: and    $0xff,%ebx
  0x01cb35df: lea    (%esp,%ebx,4),%esp
  0x01cb35e2: movzbl 0x5(%esi),%ebx
  0x01cb35e6: add    $0x5,%esi
  0x01cb35e9: jmp    *0x55628438(,%ebx,4)
  0x01cb35f0: mov    -0x8(%ebp),%esp
  0x01cb35f3: movl   $0x0,-0x8(%ebp)
  0x01cb35fa: mov    -0x1c(%ebp),%esi
  0x01cb35fd: mov    -0x18(%ebp),%edi
  0x01cb3600: movzwl 0x1(%esi),%ecx
  0x01cb3604: mov    -0x14(%ebp),%ebx
  0x01cb3607: shl    $0x2,%ecx
  0x01cb360a: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb360e: and    $0xff,%ebx
  0x01cb3614: lea    (%esp,%ebx,4),%esp
  0x01cb3617: movzbl 0x6(%esi),%ebx
  0x01cb361b: add    $0x6,%esi
  0x01cb361e: jmp    *0x55629838(,%ebx,4)
  0x01cb3625: sub    $0x8,%esp
  0x01cb3628: movsd  %xmm0,(%esp)
  0x01cb362d: fldl   (%esp)
  0x01cb3630: add    $0x8,%esp
  0x01cb3633: mov    -0x8(%ebp),%esp
  0x01cb3636: movl   $0x0,-0x8(%ebp)
  0x01cb363d: mov    -0x1c(%ebp),%esi
  0x01cb3640: mov    -0x18(%ebp),%edi
  0x01cb3643: movzwl 0x1(%esi),%ecx
  0x01cb3647: mov    -0x14(%ebp),%ebx
  0x01cb364a: shl    $0x2,%ecx
  0x01cb364d: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3651: and    $0xff,%ebx
  0x01cb3657: lea    (%esp,%ebx,4),%esp
  0x01cb365a: movzbl 0x6(%esi),%ebx
  0x01cb365e: add    $0x6,%esi
  0x01cb3661: jmp    *0x55629038(,%ebx,4)
  0x01cb3668: sub    $0x4,%esp
  0x01cb366b: movss  %xmm0,(%esp)
  0x01cb3670: flds   (%esp)
  0x01cb3673: add    $0x4,%esp
  0x01cb3676: mov    -0x8(%ebp),%esp
  0x01cb3679: movl   $0x0,-0x8(%ebp)
  0x01cb3680: mov    -0x1c(%ebp),%esi
  0x01cb3683: mov    -0x18(%ebp),%edi
  0x01cb3686: movzwl 0x1(%esi),%ecx
  0x01cb368a: mov    -0x14(%ebp),%ebx
  0x01cb368d: shl    $0x2,%ecx
  0x01cb3690: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3694: and    $0xff,%ebx
  0x01cb369a: lea    (%esp,%ebx,4),%esp
  0x01cb369d: movzbl 0x6(%esi),%ebx
  0x01cb36a1: add    $0x6,%esi
  0x01cb36a4: jmp    *0x55628c38(,%ebx,4)
  0x01cb36ab: mov    -0x8(%ebp),%esp
  0x01cb36ae: movl   $0x0,-0x8(%ebp)
  0x01cb36b5: mov    -0x1c(%ebp),%esi
  0x01cb36b8: mov    -0x18(%ebp),%edi
  0x01cb36bb: movzwl 0x1(%esi),%ecx
  0x01cb36bf: mov    -0x14(%ebp),%ebx
  0x01cb36c2: shl    $0x2,%ecx
  0x01cb36c5: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb36c9: and    $0xff,%ebx
  0x01cb36cf: lea    (%esp,%ebx,4),%esp
  0x01cb36d2: movzbl 0x6(%esi),%ebx
  0x01cb36d6: add    $0x6,%esi
  0x01cb36d9: jmp    *0x55628838(,%ebx,4)
  0x01cb36e0: mov    -0x8(%ebp),%esp
  0x01cb36e3: movl   $0x0,-0x8(%ebp)
  0x01cb36ea: mov    -0x1c(%ebp),%esi
  0x01cb36ed: mov    -0x18(%ebp),%edi
  0x01cb36f0: movzwl 0x1(%esi),%ecx
  0x01cb36f4: mov    -0x14(%ebp),%ebx
  0x01cb36f7: shl    $0x2,%ecx
  0x01cb36fa: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb36fe: and    $0xff,%ebx
  0x01cb3704: lea    (%esp,%ebx,4),%esp
  0x01cb3707: movzbl 0x6(%esi),%ebx
  0x01cb370b: add    $0x6,%esi
  0x01cb370e: jmp    *0x55628438(,%ebx,4)
  0x01cb3715: mov    -0x8(%ebp),%esp
  0x01cb3718: movl   $0x0,-0x8(%ebp)
  0x01cb371f: mov    -0x1c(%ebp),%esi
  0x01cb3722: mov    -0x18(%ebp),%edi
  0x01cb3725: movzwl 0x1(%esi),%ecx
  0x01cb3729: mov    -0x14(%ebp),%ebx
  0x01cb372c: shl    $0x2,%ecx
  0x01cb372f: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3733: and    $0xff,%ebx
  0x01cb3739: lea    (%esp,%ebx,4),%esp
  0x01cb373c: movzbl 0x6(%esi),%ebx
  0x01cb3740: add    $0x6,%esi
  0x01cb3743: jmp    *0x55629438(,%ebx,4)
  0x01cb374a: mov    -0x8(%ebp),%esp
  0x01cb374d: movl   $0x0,-0x8(%ebp)
  0x01cb3754: mov    -0x1c(%ebp),%esi
  0x01cb3757: mov    -0x18(%ebp),%edi
  0x01cb375a: movzwl 0x1(%esi),%ecx
  0x01cb375e: mov    -0x14(%ebp),%ebx
  0x01cb3761: shl    $0x2,%ecx
  0x01cb3764: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3768: and    $0xff,%ebx
  0x01cb376e: lea    (%esp,%ebx,4),%esp
  0x01cb3771: movzbl 0x6(%esi),%ebx
  0x01cb3775: add    $0x6,%esi
  0x01cb3778: jmp    *0x55628438(,%ebx,4)
  0x01cb377f: mov    -0x8(%ebp),%esp
  0x01cb3782: movl   $0x0,-0x8(%ebp)
  0x01cb3789: mov    -0x1c(%ebp),%esi
  0x01cb378c: mov    -0x18(%ebp),%edi
  0x01cb378f: movzwl 0x1(%esi),%ecx
  0x01cb3793: mov    -0x14(%ebp),%ebx
  0x01cb3796: shl    $0x2,%ecx
  0x01cb3799: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb379d: and    $0xff,%ebx
  0x01cb37a3: lea    (%esp,%ebx,4),%esp
  0x01cb37a6: movzbl 0x6(%esi),%ebx
  0x01cb37aa: add    $0x6,%esi
  0x01cb37ad: jmp    *0x55628438(,%ebx,4)
  0x01cb37b4: mov    -0x8(%ebp),%esp
  0x01cb37b7: movl   $0x0,-0x8(%ebp)
  0x01cb37be: mov    -0x1c(%ebp),%esi
  0x01cb37c1: mov    -0x18(%ebp),%edi
  0x01cb37c4: movzwl 0x1(%esi),%ecx
  0x01cb37c8: mov    -0x14(%ebp),%ebx
  0x01cb37cb: shl    $0x2,%ecx
  0x01cb37ce: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb37d2: and    $0xff,%ebx
  0x01cb37d8: lea    (%esp,%ebx,4),%esp
  0x01cb37db: movzbl 0x6(%esi),%ebx
  0x01cb37df: add    $0x6,%esi
  0x01cb37e2: jmp    *0x55628438(,%ebx,4)
  0x01cb37e9: mov    -0x8(%ebp),%esp
  0x01cb37ec: movl   $0x0,-0x8(%ebp)
  0x01cb37f3: mov    -0x1c(%ebp),%esi
  0x01cb37f6: mov    -0x18(%ebp),%edi
  0x01cb37f9: movzwl 0x1(%esi),%ecx
  0x01cb37fd: mov    -0x14(%ebp),%ebx
  0x01cb3800: shl    $0x2,%ecx
  0x01cb3803: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3807: and    $0xff,%ebx
  0x01cb380d: lea    (%esp,%ebx,4),%esp
  0x01cb3810: movzbl 0x7(%esi),%ebx
  0x01cb3814: add    $0x7,%esi
  0x01cb3817: jmp    *0x55629838(,%ebx,4)
  0x01cb381e: sub    $0x8,%esp
  0x01cb3821: movsd  %xmm0,(%esp)
  0x01cb3826: fldl   (%esp)
  0x01cb3829: add    $0x8,%esp
  0x01cb382c: mov    -0x8(%ebp),%esp
  0x01cb382f: movl   $0x0,-0x8(%ebp)
  0x01cb3836: mov    -0x1c(%ebp),%esi
  0x01cb3839: mov    -0x18(%ebp),%edi
  0x01cb383c: movzwl 0x1(%esi),%ecx
  0x01cb3840: mov    -0x14(%ebp),%ebx
  0x01cb3843: shl    $0x2,%ecx
  0x01cb3846: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb384a: and    $0xff,%ebx
  0x01cb3850: lea    (%esp,%ebx,4),%esp
  0x01cb3853: movzbl 0x7(%esi),%ebx
  0x01cb3857: add    $0x7,%esi
  0x01cb385a: jmp    *0x55629038(,%ebx,4)
  0x01cb3861: sub    $0x4,%esp
  0x01cb3864: movss  %xmm0,(%esp)
  0x01cb3869: flds   (%esp)
  0x01cb386c: add    $0x4,%esp
  0x01cb386f: mov    -0x8(%ebp),%esp
  0x01cb3872: movl   $0x0,-0x8(%ebp)
  0x01cb3879: mov    -0x1c(%ebp),%esi
  0x01cb387c: mov    -0x18(%ebp),%edi
  0x01cb387f: movzwl 0x1(%esi),%ecx
  0x01cb3883: mov    -0x14(%ebp),%ebx
  0x01cb3886: shl    $0x2,%ecx
  0x01cb3889: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb388d: and    $0xff,%ebx
  0x01cb3893: lea    (%esp,%ebx,4),%esp
  0x01cb3896: movzbl 0x7(%esi),%ebx
  0x01cb389a: add    $0x7,%esi
  0x01cb389d: jmp    *0x55628c38(,%ebx,4)
  0x01cb38a4: mov    -0x8(%ebp),%esp
  0x01cb38a7: movl   $0x0,-0x8(%ebp)
  0x01cb38ae: mov    -0x1c(%ebp),%esi
  0x01cb38b1: mov    -0x18(%ebp),%edi
  0x01cb38b4: movzwl 0x1(%esi),%ecx
  0x01cb38b8: mov    -0x14(%ebp),%ebx
  0x01cb38bb: shl    $0x2,%ecx
  0x01cb38be: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb38c2: and    $0xff,%ebx
  0x01cb38c8: lea    (%esp,%ebx,4),%esp
  0x01cb38cb: movzbl 0x7(%esi),%ebx
  0x01cb38cf: add    $0x7,%esi
  0x01cb38d2: jmp    *0x55628838(,%ebx,4)
  0x01cb38d9: mov    -0x8(%ebp),%esp
  0x01cb38dc: movl   $0x0,-0x8(%ebp)
  0x01cb38e3: mov    -0x1c(%ebp),%esi
  0x01cb38e6: mov    -0x18(%ebp),%edi
  0x01cb38e9: movzwl 0x1(%esi),%ecx
  0x01cb38ed: mov    -0x14(%ebp),%ebx
  0x01cb38f0: shl    $0x2,%ecx
  0x01cb38f3: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb38f7: and    $0xff,%ebx
  0x01cb38fd: lea    (%esp,%ebx,4),%esp
  0x01cb3900: movzbl 0x7(%esi),%ebx
  0x01cb3904: add    $0x7,%esi
  0x01cb3907: jmp    *0x55628438(,%ebx,4)
  0x01cb390e: mov    -0x8(%ebp),%esp
  0x01cb3911: movl   $0x0,-0x8(%ebp)
  0x01cb3918: mov    -0x1c(%ebp),%esi
  0x01cb391b: mov    -0x18(%ebp),%edi
  0x01cb391e: movzwl 0x1(%esi),%ecx
  0x01cb3922: mov    -0x14(%ebp),%ebx
  0x01cb3925: shl    $0x2,%ecx
  0x01cb3928: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb392c: and    $0xff,%ebx
  0x01cb3932: lea    (%esp,%ebx,4),%esp
  0x01cb3935: movzbl 0x7(%esi),%ebx
  0x01cb3939: add    $0x7,%esi
  0x01cb393c: jmp    *0x55629438(,%ebx,4)
  0x01cb3943: mov    -0x8(%ebp),%esp
  0x01cb3946: movl   $0x0,-0x8(%ebp)
  0x01cb394d: mov    -0x1c(%ebp),%esi
  0x01cb3950: mov    -0x18(%ebp),%edi
  0x01cb3953: movzwl 0x1(%esi),%ecx
  0x01cb3957: mov    -0x14(%ebp),%ebx
  0x01cb395a: shl    $0x2,%ecx
  0x01cb395d: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3961: and    $0xff,%ebx
  0x01cb3967: lea    (%esp,%ebx,4),%esp
  0x01cb396a: movzbl 0x7(%esi),%ebx
  0x01cb396e: add    $0x7,%esi
  0x01cb3971: jmp    *0x55628438(,%ebx,4)
  0x01cb3978: mov    -0x8(%ebp),%esp
  0x01cb397b: movl   $0x0,-0x8(%ebp)
  0x01cb3982: mov    -0x1c(%ebp),%esi
  0x01cb3985: mov    -0x18(%ebp),%edi
  0x01cb3988: movzwl 0x1(%esi),%ecx
  0x01cb398c: mov    -0x14(%ebp),%ebx
  0x01cb398f: shl    $0x2,%ecx
  0x01cb3992: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3996: and    $0xff,%ebx
  0x01cb399c: lea    (%esp,%ebx,4),%esp
  0x01cb399f: movzbl 0x7(%esi),%ebx
  0x01cb39a3: add    $0x7,%esi
  0x01cb39a6: jmp    *0x55628438(,%ebx,4)
  0x01cb39ad: mov    -0x8(%ebp),%esp
  0x01cb39b0: movl   $0x0,-0x8(%ebp)
  0x01cb39b7: mov    -0x1c(%ebp),%esi
  0x01cb39ba: mov    -0x18(%ebp),%edi
  0x01cb39bd: movzwl 0x1(%esi),%ecx
  0x01cb39c1: mov    -0x14(%ebp),%ebx
  0x01cb39c4: shl    $0x2,%ecx
  0x01cb39c7: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb39cb: and    $0xff,%ebx
  0x01cb39d1: lea    (%esp,%ebx,4),%esp
  0x01cb39d4: movzbl 0x7(%esi),%ebx
  0x01cb39d8: add    $0x7,%esi
  0x01cb39db: jmp    *0x55628438(,%ebx,4)
  0x01cb39e2: mov    -0x8(%ebp),%esp
  0x01cb39e5: movl   $0x0,-0x8(%ebp)
  0x01cb39ec: mov    -0x1c(%ebp),%esi
  0x01cb39ef: mov    -0x18(%ebp),%edi
  0x01cb39f2: movzwl 0x1(%esi),%ecx
  0x01cb39f6: mov    -0x14(%ebp),%ebx
  0x01cb39f9: shl    $0x2,%ecx
  0x01cb39fc: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3a00: and    $0xff,%ebx
  0x01cb3a06: lea    (%esp,%ebx,4),%esp
  0x01cb3a09: movzbl 0x8(%esi),%ebx
  0x01cb3a0d: add    $0x8,%esi
  0x01cb3a10: jmp    *0x55629838(,%ebx,4)
  0x01cb3a17: sub    $0x8,%esp
  0x01cb3a1a: movsd  %xmm0,(%esp)
  0x01cb3a1f: fldl   (%esp)
  0x01cb3a22: add    $0x8,%esp
  0x01cb3a25: mov    -0x8(%ebp),%esp
  0x01cb3a28: movl   $0x0,-0x8(%ebp)
  0x01cb3a2f: mov    -0x1c(%ebp),%esi
  0x01cb3a32: mov    -0x18(%ebp),%edi
  0x01cb3a35: movzwl 0x1(%esi),%ecx
  0x01cb3a39: mov    -0x14(%ebp),%ebx
  0x01cb3a3c: shl    $0x2,%ecx
  0x01cb3a3f: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3a43: and    $0xff,%ebx
  0x01cb3a49: lea    (%esp,%ebx,4),%esp
  0x01cb3a4c: movzbl 0x8(%esi),%ebx
  0x01cb3a50: add    $0x8,%esi
  0x01cb3a53: jmp    *0x55629038(,%ebx,4)
  0x01cb3a5a: sub    $0x4,%esp
  0x01cb3a5d: movss  %xmm0,(%esp)
  0x01cb3a62: flds   (%esp)
  0x01cb3a65: add    $0x4,%esp
  0x01cb3a68: mov    -0x8(%ebp),%esp
  0x01cb3a6b: movl   $0x0,-0x8(%ebp)
  0x01cb3a72: mov    -0x1c(%ebp),%esi
  0x01cb3a75: mov    -0x18(%ebp),%edi
  0x01cb3a78: movzwl 0x1(%esi),%ecx
  0x01cb3a7c: mov    -0x14(%ebp),%ebx
  0x01cb3a7f: shl    $0x2,%ecx
  0x01cb3a82: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3a86: and    $0xff,%ebx
  0x01cb3a8c: lea    (%esp,%ebx,4),%esp
  0x01cb3a8f: movzbl 0x8(%esi),%ebx
  0x01cb3a93: add    $0x8,%esi
  0x01cb3a96: jmp    *0x55628c38(,%ebx,4)
  0x01cb3a9d: mov    -0x8(%ebp),%esp
  0x01cb3aa0: movl   $0x0,-0x8(%ebp)
  0x01cb3aa7: mov    -0x1c(%ebp),%esi
  0x01cb3aaa: mov    -0x18(%ebp),%edi
  0x01cb3aad: movzwl 0x1(%esi),%ecx
  0x01cb3ab1: mov    -0x14(%ebp),%ebx
  0x01cb3ab4: shl    $0x2,%ecx
  0x01cb3ab7: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3abb: and    $0xff,%ebx
  0x01cb3ac1: lea    (%esp,%ebx,4),%esp
  0x01cb3ac4: movzbl 0x8(%esi),%ebx
  0x01cb3ac8: add    $0x8,%esi
  0x01cb3acb: jmp    *0x55628838(,%ebx,4)
  0x01cb3ad2: mov    -0x8(%ebp),%esp
  0x01cb3ad5: movl   $0x0,-0x8(%ebp)
  0x01cb3adc: mov    -0x1c(%ebp),%esi
  0x01cb3adf: mov    -0x18(%ebp),%edi
  0x01cb3ae2: movzwl 0x1(%esi),%ecx
  0x01cb3ae6: mov    -0x14(%ebp),%ebx
  0x01cb3ae9: shl    $0x2,%ecx
  0x01cb3aec: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3af0: and    $0xff,%ebx
  0x01cb3af6: lea    (%esp,%ebx,4),%esp
  0x01cb3af9: movzbl 0x8(%esi),%ebx
  0x01cb3afd: add    $0x8,%esi
  0x01cb3b00: jmp    *0x55628438(,%ebx,4)
  0x01cb3b07: mov    -0x8(%ebp),%esp
  0x01cb3b0a: movl   $0x0,-0x8(%ebp)
  0x01cb3b11: mov    -0x1c(%ebp),%esi
  0x01cb3b14: mov    -0x18(%ebp),%edi
  0x01cb3b17: movzwl 0x1(%esi),%ecx
  0x01cb3b1b: mov    -0x14(%ebp),%ebx
  0x01cb3b1e: shl    $0x2,%ecx
  0x01cb3b21: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3b25: and    $0xff,%ebx
  0x01cb3b2b: lea    (%esp,%ebx,4),%esp
  0x01cb3b2e: movzbl 0x8(%esi),%ebx
  0x01cb3b32: add    $0x8,%esi
  0x01cb3b35: jmp    *0x55629438(,%ebx,4)
  0x01cb3b3c: mov    -0x8(%ebp),%esp
  0x01cb3b3f: movl   $0x0,-0x8(%ebp)
  0x01cb3b46: mov    -0x1c(%ebp),%esi
  0x01cb3b49: mov    -0x18(%ebp),%edi
  0x01cb3b4c: movzwl 0x1(%esi),%ecx
  0x01cb3b50: mov    -0x14(%ebp),%ebx
  0x01cb3b53: shl    $0x2,%ecx
  0x01cb3b56: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3b5a: and    $0xff,%ebx
  0x01cb3b60: lea    (%esp,%ebx,4),%esp
  0x01cb3b63: movzbl 0x8(%esi),%ebx
  0x01cb3b67: add    $0x8,%esi
  0x01cb3b6a: jmp    *0x55628438(,%ebx,4)
  0x01cb3b71: mov    -0x8(%ebp),%esp
  0x01cb3b74: movl   $0x0,-0x8(%ebp)
  0x01cb3b7b: mov    -0x1c(%ebp),%esi
  0x01cb3b7e: mov    -0x18(%ebp),%edi
  0x01cb3b81: movzwl 0x1(%esi),%ecx
  0x01cb3b85: mov    -0x14(%ebp),%ebx
  0x01cb3b88: shl    $0x2,%ecx
  0x01cb3b8b: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3b8f: and    $0xff,%ebx
  0x01cb3b95: lea    (%esp,%ebx,4),%esp
  0x01cb3b98: movzbl 0x8(%esi),%ebx
  0x01cb3b9c: add    $0x8,%esi
  0x01cb3b9f: jmp    *0x55628438(,%ebx,4)
  0x01cb3ba6: mov    -0x8(%ebp),%esp
  0x01cb3ba9: movl   $0x0,-0x8(%ebp)
  0x01cb3bb0: mov    -0x1c(%ebp),%esi
  0x01cb3bb3: mov    -0x18(%ebp),%edi
  0x01cb3bb6: movzwl 0x1(%esi),%ecx
  0x01cb3bba: mov    -0x14(%ebp),%ebx
  0x01cb3bbd: shl    $0x2,%ecx
  0x01cb3bc0: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3bc4: and    $0xff,%ebx
  0x01cb3bca: lea    (%esp,%ebx,4),%esp
  0x01cb3bcd: movzbl 0x8(%esi),%ebx
  0x01cb3bd1: add    $0x8,%esi
  0x01cb3bd4: jmp    *0x55628438(,%ebx,4)
  0x01cb3bdb: nop    
  0x01cb3bdc: int3   
  0x01cb3bdd: int3   
  0x01cb3bde: int3   
  0x01cb3bdf: int3   

----------------------------------------------------------------------
invoke return entry points  [0x01cb3bf0, 0x01cb41f0]  1536 bytes

  0x01cb3bf0: mov    -0x8(%ebp),%esp
  0x01cb3bf3: movl   $0x0,-0x8(%ebp)
  0x01cb3bfa: mov    -0x1c(%ebp),%esi
  0x01cb3bfd: mov    -0x18(%ebp),%edi
  0x01cb3c00: movzwl 0x1(%esi),%ecx
  0x01cb3c04: mov    -0x14(%ebp),%ebx
  0x01cb3c07: shl    $0x2,%ecx
  0x01cb3c0a: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3c0e: and    $0xff,%ebx
  0x01cb3c14: lea    (%esp,%ebx,4),%esp
  0x01cb3c17: movzbl 0x3(%esi),%ebx
  0x01cb3c1b: add    $0x3,%esi
  0x01cb3c1e: jmp    *0x55628438(,%ebx,4)
  0x01cb3c25: mov    -0x8(%ebp),%esp
  0x01cb3c28: movl   $0x0,-0x8(%ebp)
  0x01cb3c2f: mov    -0x1c(%ebp),%esi
  0x01cb3c32: mov    -0x18(%ebp),%edi
  0x01cb3c35: movzwl 0x1(%esi),%ecx
  0x01cb3c39: mov    -0x14(%ebp),%ebx
  0x01cb3c3c: shl    $0x2,%ecx
  0x01cb3c3f: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3c43: and    $0xff,%ebx
  0x01cb3c49: lea    (%esp,%ebx,4),%esp
  0x01cb3c4c: movzbl 0x5(%esi),%ebx
  0x01cb3c50: add    $0x5,%esi
  0x01cb3c53: jmp    *0x55628438(,%ebx,4)
  0x01cb3c5a: mov    -0x8(%ebp),%esp
  0x01cb3c5d: movl   $0x0,-0x8(%ebp)
  0x01cb3c64: mov    -0x1c(%ebp),%esi
  0x01cb3c67: mov    -0x18(%ebp),%edi
  0x01cb3c6a: mov    0x1(%esi),%ecx
  0x01cb3c6d: not    %ecx
  0x01cb3c6f: mov    -0x14(%ebp),%ebx
  0x01cb3c72: shl    $0x2,%ecx
  0x01cb3c75: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3c79: and    $0xff,%ebx
  0x01cb3c7f: lea    (%esp,%ebx,4),%esp
  0x01cb3c82: movzbl 0x5(%esi),%ebx
  0x01cb3c86: add    $0x5,%esi
  0x01cb3c89: jmp    *0x55628438(,%ebx,4)
  0x01cb3c90: mov    -0x8(%ebp),%esp
  0x01cb3c93: movl   $0x0,-0x8(%ebp)
  0x01cb3c9a: mov    -0x1c(%ebp),%esi
  0x01cb3c9d: mov    -0x18(%ebp),%edi
  0x01cb3ca0: movzwl 0x1(%esi),%ecx
  0x01cb3ca4: mov    -0x14(%ebp),%ebx
  0x01cb3ca7: shl    $0x2,%ecx
  0x01cb3caa: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3cae: and    $0xff,%ebx
  0x01cb3cb4: lea    (%esp,%ebx,4),%esp
  0x01cb3cb7: movzbl 0x3(%esi),%ebx
  0x01cb3cbb: add    $0x3,%esi
  0x01cb3cbe: jmp    *0x55628438(,%ebx,4)
  0x01cb3cc5: mov    -0x8(%ebp),%esp
  0x01cb3cc8: movl   $0x0,-0x8(%ebp)
  0x01cb3ccf: mov    -0x1c(%ebp),%esi
  0x01cb3cd2: mov    -0x18(%ebp),%edi
  0x01cb3cd5: movzwl 0x1(%esi),%ecx
  0x01cb3cd9: mov    -0x14(%ebp),%ebx
  0x01cb3cdc: shl    $0x2,%ecx
  0x01cb3cdf: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3ce3: and    $0xff,%ebx
  0x01cb3ce9: lea    (%esp,%ebx,4),%esp
  0x01cb3cec: movzbl 0x5(%esi),%ebx
  0x01cb3cf0: add    $0x5,%esi
  0x01cb3cf3: jmp    *0x55628438(,%ebx,4)
  0x01cb3cfa: mov    -0x8(%ebp),%esp
  0x01cb3cfd: movl   $0x0,-0x8(%ebp)
  0x01cb3d04: mov    -0x1c(%ebp),%esi
  0x01cb3d07: mov    -0x18(%ebp),%edi
  0x01cb3d0a: mov    0x1(%esi),%ecx
  0x01cb3d0d: not    %ecx
  0x01cb3d0f: mov    -0x14(%ebp),%ebx
  0x01cb3d12: shl    $0x2,%ecx
  0x01cb3d15: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3d19: and    $0xff,%ebx
  0x01cb3d1f: lea    (%esp,%ebx,4),%esp
  0x01cb3d22: movzbl 0x5(%esi),%ebx
  0x01cb3d26: add    $0x5,%esi
  0x01cb3d29: jmp    *0x55628438(,%ebx,4)
  0x01cb3d30: mov    -0x8(%ebp),%esp
  0x01cb3d33: movl   $0x0,-0x8(%ebp)
  0x01cb3d3a: mov    -0x1c(%ebp),%esi
  0x01cb3d3d: mov    -0x18(%ebp),%edi
  0x01cb3d40: movzwl 0x1(%esi),%ecx
  0x01cb3d44: mov    -0x14(%ebp),%ebx
  0x01cb3d47: shl    $0x2,%ecx
  0x01cb3d4a: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3d4e: and    $0xff,%ebx
  0x01cb3d54: lea    (%esp,%ebx,4),%esp
  0x01cb3d57: movzbl 0x3(%esi),%ebx
  0x01cb3d5b: add    $0x3,%esi
  0x01cb3d5e: jmp    *0x55628438(,%ebx,4)
  0x01cb3d65: mov    -0x8(%ebp),%esp
  0x01cb3d68: movl   $0x0,-0x8(%ebp)
  0x01cb3d6f: mov    -0x1c(%ebp),%esi
  0x01cb3d72: mov    -0x18(%ebp),%edi
  0x01cb3d75: movzwl 0x1(%esi),%ecx
  0x01cb3d79: mov    -0x14(%ebp),%ebx
  0x01cb3d7c: shl    $0x2,%ecx
  0x01cb3d7f: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3d83: and    $0xff,%ebx
  0x01cb3d89: lea    (%esp,%ebx,4),%esp
  0x01cb3d8c: movzbl 0x5(%esi),%ebx
  0x01cb3d90: add    $0x5,%esi
  0x01cb3d93: jmp    *0x55628438(,%ebx,4)
  0x01cb3d9a: mov    -0x8(%ebp),%esp
  0x01cb3d9d: movl   $0x0,-0x8(%ebp)
  0x01cb3da4: mov    -0x1c(%ebp),%esi
  0x01cb3da7: mov    -0x18(%ebp),%edi
  0x01cb3daa: mov    0x1(%esi),%ecx
  0x01cb3dad: not    %ecx
  0x01cb3daf: mov    -0x14(%ebp),%ebx
  0x01cb3db2: shl    $0x2,%ecx
  0x01cb3db5: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3db9: and    $0xff,%ebx
  0x01cb3dbf: lea    (%esp,%ebx,4),%esp
  0x01cb3dc2: movzbl 0x5(%esi),%ebx
  0x01cb3dc6: add    $0x5,%esi
  0x01cb3dc9: jmp    *0x55628438(,%ebx,4)
  0x01cb3dd0: mov    -0x8(%ebp),%esp
  0x01cb3dd3: movl   $0x0,-0x8(%ebp)
  0x01cb3dda: mov    -0x1c(%ebp),%esi
  0x01cb3ddd: mov    -0x18(%ebp),%edi
  0x01cb3de0: movzwl 0x1(%esi),%ecx
  0x01cb3de4: mov    -0x14(%ebp),%ebx
  0x01cb3de7: shl    $0x2,%ecx
  0x01cb3dea: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3dee: and    $0xff,%ebx
  0x01cb3df4: lea    (%esp,%ebx,4),%esp
  0x01cb3df7: movzbl 0x3(%esi),%ebx
  0x01cb3dfb: add    $0x3,%esi
  0x01cb3dfe: jmp    *0x55628438(,%ebx,4)
  0x01cb3e05: mov    -0x8(%ebp),%esp
  0x01cb3e08: movl   $0x0,-0x8(%ebp)
  0x01cb3e0f: mov    -0x1c(%ebp),%esi
  0x01cb3e12: mov    -0x18(%ebp),%edi
  0x01cb3e15: movzwl 0x1(%esi),%ecx
  0x01cb3e19: mov    -0x14(%ebp),%ebx
  0x01cb3e1c: shl    $0x2,%ecx
  0x01cb3e1f: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3e23: and    $0xff,%ebx
  0x01cb3e29: lea    (%esp,%ebx,4),%esp
  0x01cb3e2c: movzbl 0x5(%esi),%ebx
  0x01cb3e30: add    $0x5,%esi
  0x01cb3e33: jmp    *0x55628438(,%ebx,4)
  0x01cb3e3a: mov    -0x8(%ebp),%esp
  0x01cb3e3d: movl   $0x0,-0x8(%ebp)
  0x01cb3e44: mov    -0x1c(%ebp),%esi
  0x01cb3e47: mov    -0x18(%ebp),%edi
  0x01cb3e4a: mov    0x1(%esi),%ecx
  0x01cb3e4d: not    %ecx
  0x01cb3e4f: mov    -0x14(%ebp),%ebx
  0x01cb3e52: shl    $0x2,%ecx
  0x01cb3e55: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3e59: and    $0xff,%ebx
  0x01cb3e5f: lea    (%esp,%ebx,4),%esp
  0x01cb3e62: movzbl 0x5(%esi),%ebx
  0x01cb3e66: add    $0x5,%esi
  0x01cb3e69: jmp    *0x55628438(,%ebx,4)
  0x01cb3e70: mov    -0x8(%ebp),%esp
  0x01cb3e73: movl   $0x0,-0x8(%ebp)
  0x01cb3e7a: mov    -0x1c(%ebp),%esi
  0x01cb3e7d: mov    -0x18(%ebp),%edi
  0x01cb3e80: movzwl 0x1(%esi),%ecx
  0x01cb3e84: mov    -0x14(%ebp),%ebx
  0x01cb3e87: shl    $0x2,%ecx
  0x01cb3e8a: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3e8e: and    $0xff,%ebx
  0x01cb3e94: lea    (%esp,%ebx,4),%esp
  0x01cb3e97: movzbl 0x3(%esi),%ebx
  0x01cb3e9b: add    $0x3,%esi
  0x01cb3e9e: jmp    *0x55628838(,%ebx,4)
  0x01cb3ea5: mov    -0x8(%ebp),%esp
  0x01cb3ea8: movl   $0x0,-0x8(%ebp)
  0x01cb3eaf: mov    -0x1c(%ebp),%esi
  0x01cb3eb2: mov    -0x18(%ebp),%edi
  0x01cb3eb5: movzwl 0x1(%esi),%ecx
  0x01cb3eb9: mov    -0x14(%ebp),%ebx
  0x01cb3ebc: shl    $0x2,%ecx
  0x01cb3ebf: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3ec3: and    $0xff,%ebx
  0x01cb3ec9: lea    (%esp,%ebx,4),%esp
  0x01cb3ecc: movzbl 0x5(%esi),%ebx
  0x01cb3ed0: add    $0x5,%esi
  0x01cb3ed3: jmp    *0x55628838(,%ebx,4)
  0x01cb3eda: mov    -0x8(%ebp),%esp
  0x01cb3edd: movl   $0x0,-0x8(%ebp)
  0x01cb3ee4: mov    -0x1c(%ebp),%esi
  0x01cb3ee7: mov    -0x18(%ebp),%edi
  0x01cb3eea: mov    0x1(%esi),%ecx
  0x01cb3eed: not    %ecx
  0x01cb3eef: mov    -0x14(%ebp),%ebx
  0x01cb3ef2: shl    $0x2,%ecx
  0x01cb3ef5: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3ef9: and    $0xff,%ebx
  0x01cb3eff: lea    (%esp,%ebx,4),%esp
  0x01cb3f02: movzbl 0x5(%esi),%ebx
  0x01cb3f06: add    $0x5,%esi
  0x01cb3f09: jmp    *0x55628838(,%ebx,4)
  0x01cb3f10: sub    $0x4,%esp
  0x01cb3f13: movss  %xmm0,(%esp)
  0x01cb3f18: flds   (%esp)
  0x01cb3f1b: add    $0x4,%esp
  0x01cb3f1e: mov    -0x8(%ebp),%esp
  0x01cb3f21: movl   $0x0,-0x8(%ebp)
  0x01cb3f28: mov    -0x1c(%ebp),%esi
  0x01cb3f2b: mov    -0x18(%ebp),%edi
  0x01cb3f2e: movzwl 0x1(%esi),%ecx
  0x01cb3f32: mov    -0x14(%ebp),%ebx
  0x01cb3f35: shl    $0x2,%ecx
  0x01cb3f38: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3f3c: and    $0xff,%ebx
  0x01cb3f42: lea    (%esp,%ebx,4),%esp
  0x01cb3f45: movzbl 0x3(%esi),%ebx
  0x01cb3f49: add    $0x3,%esi
  0x01cb3f4c: jmp    *0x55628c38(,%ebx,4)
  0x01cb3f53: sub    $0x4,%esp
  0x01cb3f56: movss  %xmm0,(%esp)
  0x01cb3f5b: flds   (%esp)
  0x01cb3f5e: add    $0x4,%esp
  0x01cb3f61: mov    -0x8(%ebp),%esp
  0x01cb3f64: movl   $0x0,-0x8(%ebp)
  0x01cb3f6b: mov    -0x1c(%ebp),%esi
  0x01cb3f6e: mov    -0x18(%ebp),%edi
  0x01cb3f71: movzwl 0x1(%esi),%ecx
  0x01cb3f75: mov    -0x14(%ebp),%ebx
  0x01cb3f78: shl    $0x2,%ecx
  0x01cb3f7b: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3f7f: and    $0xff,%ebx
  0x01cb3f85: lea    (%esp,%ebx,4),%esp
  0x01cb3f88: movzbl 0x5(%esi),%ebx
  0x01cb3f8c: add    $0x5,%esi
  0x01cb3f8f: jmp    *0x55628c38(,%ebx,4)
  0x01cb3f96: sub    $0x4,%esp
  0x01cb3f99: movss  %xmm0,(%esp)
  0x01cb3f9e: flds   (%esp)
  0x01cb3fa1: add    $0x4,%esp
  0x01cb3fa4: mov    -0x8(%ebp),%esp
  0x01cb3fa7: movl   $0x0,-0x8(%ebp)
  0x01cb3fae: mov    -0x1c(%ebp),%esi
  0x01cb3fb1: mov    -0x18(%ebp),%edi
  0x01cb3fb4: mov    0x1(%esi),%ecx
  0x01cb3fb7: not    %ecx
  0x01cb3fb9: mov    -0x14(%ebp),%ebx
  0x01cb3fbc: shl    $0x2,%ecx
  0x01cb3fbf: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb3fc3: and    $0xff,%ebx
  0x01cb3fc9: lea    (%esp,%ebx,4),%esp
  0x01cb3fcc: movzbl 0x5(%esi),%ebx
  0x01cb3fd0: add    $0x5,%esi
  0x01cb3fd3: jmp    *0x55628c38(,%ebx,4)
  0x01cb3fda: sub    $0x8,%esp
  0x01cb3fdd: movsd  %xmm0,(%esp)
  0x01cb3fe2: fldl   (%esp)
  0x01cb3fe5: add    $0x8,%esp
  0x01cb3fe8: mov    -0x8(%ebp),%esp
  0x01cb3feb: movl   $0x0,-0x8(%ebp)
  0x01cb3ff2: mov    -0x1c(%ebp),%esi
  0x01cb3ff5: mov    -0x18(%ebp),%edi
  0x01cb3ff8: movzwl 0x1(%esi),%ecx
  0x01cb3ffc: mov    -0x14(%ebp),%ebx
  0x01cb3fff: shl    $0x2,%ecx
  0x01cb4002: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb4006: and    $0xff,%ebx
  0x01cb400c: lea    (%esp,%ebx,4),%esp
  0x01cb400f: movzbl 0x3(%esi),%ebx
  0x01cb4013: add    $0x3,%esi
  0x01cb4016: jmp    *0x55629038(,%ebx,4)
  0x01cb401d: sub    $0x8,%esp
  0x01cb4020: movsd  %xmm0,(%esp)
  0x01cb4025: fldl   (%esp)
  0x01cb4028: add    $0x8,%esp
  0x01cb402b: mov    -0x8(%ebp),%esp
  0x01cb402e: movl   $0x0,-0x8(%ebp)
  0x01cb4035: mov    -0x1c(%ebp),%esi
  0x01cb4038: mov    -0x18(%ebp),%edi
  0x01cb403b: movzwl 0x1(%esi),%ecx
  0x01cb403f: mov    -0x14(%ebp),%ebx
  0x01cb4042: shl    $0x2,%ecx
  0x01cb4045: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb4049: and    $0xff,%ebx
  0x01cb404f: lea    (%esp,%ebx,4),%esp
  0x01cb4052: movzbl 0x5(%esi),%ebx
  0x01cb4056: add    $0x5,%esi
  0x01cb4059: jmp    *0x55629038(,%ebx,4)
  0x01cb4060: sub    $0x8,%esp
  0x01cb4063: movsd  %xmm0,(%esp)
  0x01cb4068: fldl   (%esp)
  0x01cb406b: add    $0x8,%esp
  0x01cb406e: mov    -0x8(%ebp),%esp
  0x01cb4071: movl   $0x0,-0x8(%ebp)
  0x01cb4078: mov    -0x1c(%ebp),%esi
  0x01cb407b: mov    -0x18(%ebp),%edi
  0x01cb407e: mov    0x1(%esi),%ecx
  0x01cb4081: not    %ecx
  0x01cb4083: mov    -0x14(%ebp),%ebx
  0x01cb4086: shl    $0x2,%ecx
  0x01cb4089: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb408d: and    $0xff,%ebx
  0x01cb4093: lea    (%esp,%ebx,4),%esp
  0x01cb4096: movzbl 0x5(%esi),%ebx
  0x01cb409a: add    $0x5,%esi
  0x01cb409d: jmp    *0x55629038(,%ebx,4)
  0x01cb40a4: mov    -0x8(%ebp),%esp
  0x01cb40a7: movl   $0x0,-0x8(%ebp)
  0x01cb40ae: mov    -0x1c(%ebp),%esi
  0x01cb40b1: mov    -0x18(%ebp),%edi
  0x01cb40b4: movzwl 0x1(%esi),%ecx
  0x01cb40b8: mov    -0x14(%ebp),%ebx
  0x01cb40bb: shl    $0x2,%ecx
  0x01cb40be: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb40c2: and    $0xff,%ebx
  0x01cb40c8: lea    (%esp,%ebx,4),%esp
  0x01cb40cb: movzbl 0x3(%esi),%ebx
  0x01cb40cf: add    $0x3,%esi
  0x01cb40d2: jmp    *0x55629438(,%ebx,4)
  0x01cb40d9: mov    -0x8(%ebp),%esp
  0x01cb40dc: movl   $0x0,-0x8(%ebp)
  0x01cb40e3: mov    -0x1c(%ebp),%esi
  0x01cb40e6: mov    -0x18(%ebp),%edi
  0x01cb40e9: movzwl 0x1(%esi),%ecx
  0x01cb40ed: mov    -0x14(%ebp),%ebx
  0x01cb40f0: shl    $0x2,%ecx
  0x01cb40f3: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb40f7: and    $0xff,%ebx
  0x01cb40fd: lea    (%esp,%ebx,4),%esp
  0x01cb4100: movzbl 0x5(%esi),%ebx
  0x01cb4104: add    $0x5,%esi
  0x01cb4107: jmp    *0x55629438(,%ebx,4)
  0x01cb410e: mov    -0x8(%ebp),%esp
  0x01cb4111: movl   $0x0,-0x8(%ebp)
  0x01cb4118: mov    -0x1c(%ebp),%esi
  0x01cb411b: mov    -0x18(%ebp),%edi
  0x01cb411e: mov    0x1(%esi),%ecx
  0x01cb4121: not    %ecx
  0x01cb4123: mov    -0x14(%ebp),%ebx
  0x01cb4126: shl    $0x2,%ecx
  0x01cb4129: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb412d: and    $0xff,%ebx
  0x01cb4133: lea    (%esp,%ebx,4),%esp
  0x01cb4136: movzbl 0x5(%esi),%ebx
  0x01cb413a: add    $0x5,%esi
  0x01cb413d: jmp    *0x55629438(,%ebx,4)
  0x01cb4144: mov    -0x8(%ebp),%esp
  0x01cb4147: movl   $0x0,-0x8(%ebp)
  0x01cb414e: mov    -0x1c(%ebp),%esi
  0x01cb4151: mov    -0x18(%ebp),%edi
  0x01cb4154: movzwl 0x1(%esi),%ecx
  0x01cb4158: mov    -0x14(%ebp),%ebx
  0x01cb415b: shl    $0x2,%ecx
  0x01cb415e: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb4162: and    $0xff,%ebx
  0x01cb4168: lea    (%esp,%ebx,4),%esp
  0x01cb416b: movzbl 0x3(%esi),%ebx
  0x01cb416f: add    $0x3,%esi
  0x01cb4172: jmp    *0x55629838(,%ebx,4)
  0x01cb4179: mov    -0x8(%ebp),%esp
  0x01cb417c: movl   $0x0,-0x8(%ebp)
  0x01cb4183: mov    -0x1c(%ebp),%esi
  0x01cb4186: mov    -0x18(%ebp),%edi
  0x01cb4189: movzwl 0x1(%esi),%ecx
  0x01cb418d: mov    -0x14(%ebp),%ebx
  0x01cb4190: shl    $0x2,%ecx
  0x01cb4193: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb4197: and    $0xff,%ebx
  0x01cb419d: lea    (%esp,%ebx,4),%esp
  0x01cb41a0: movzbl 0x5(%esi),%ebx
  0x01cb41a4: add    $0x5,%esi
  0x01cb41a7: jmp    *0x55629838(,%ebx,4)
  0x01cb41ae: mov    -0x8(%ebp),%esp
  0x01cb41b1: movl   $0x0,-0x8(%ebp)
  0x01cb41b8: mov    -0x1c(%ebp),%esi
  0x01cb41bb: mov    -0x18(%ebp),%edi
  0x01cb41be: mov    0x1(%esi),%ecx
  0x01cb41c1: not    %ecx
  0x01cb41c3: mov    -0x14(%ebp),%ebx
  0x01cb41c6: shl    $0x2,%ecx
  0x01cb41c9: mov    0x14(%ebx,%ecx,4),%ebx
  0x01cb41cd: and    $0xff,%ebx
  0x01cb41d3: lea    (%esp,%ebx,4),%esp
  0x01cb41d6: movzbl 0x5(%esi),%ebx
  0x01cb41da: add    $0x5,%esi
  0x01cb41dd: jmp    *0x55629838(,%ebx,4)
  0x01cb41e4: int3   
  0x01cb41e5: int3   
  0x01cb41e6: int3   
  0x01cb41e7: int3   
  0x01cb41e8: int3   
  0x01cb41e9: int3   
  0x01cb41ea: int3   
  0x01cb41eb: int3   
  0x01cb41ec: int3   
  0x01cb41ed: int3   
  0x01cb41ee: int3   
  0x01cb41ef: int3   

----------------------------------------------------------------------
earlyret entry points  [0x01cb4200, 0x01cb5b40]  6464 bytes

  0x01cb4200: mov    -0x1c(%ebp),%esi
  0x01cb4203: mov    -0x18(%ebp),%edi
  0x01cb4206: mov    -0x20(%ebp),%esp
  0x01cb4209: movl   $0x0,-0x8(%ebp)
  0x01cb4210: emms   
  0x01cb4212: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb421a: mov    -0xc(%ecx),%ecx
  0x01cb421d: mov    0x328(%ecx),%ecx
  0x01cb4223: movl   $0xa,0x54(%ecx)
  0x01cb422a: movl   $0x0,0x58(%ecx)
  0x01cb4231: movl   $0x0,0x5c(%ecx)
  0x01cb4238: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb4240: mov    -0xc(%ecx),%ecx
  0x01cb4243: mov    0x328(%ecx),%ecx
  0x01cb4249: movl   $0x0,0x50(%ecx)
  0x01cb4250: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb4258: mov    -0xc(%ecx),%ecx
  0x01cb425b: mov    0x1a1(%ecx),%bl
  0x01cb4261: mov    %ebx,%edi
  0x01cb4263: movb   $0x0,0x1a1(%ecx)
  0x01cb426a: mov    -0xc(%ebp),%ebx
  0x01cb426d: mov    0x14(%ebx),%ecx
  0x01cb4270: test   $0x20,%ecx
  0x01cb4276: je     0x01cb436f
  0x01cb427c: mov    %edi,%ecx
  0x01cb427e: test   $0xff,%cl
  0x01cb4281: jne    0x01cb446a
  0x01cb4287: lea    -0x28(%ebp),%edx
  0x01cb428a: mov    0x4(%edx),%eax
  0x01cb428d: test   %eax,%eax
  0x01cb428f: jne    0x01cb429a
  0x01cb4295: jmp    0x01cb436f
  0x01cb429a: mov    %esi,-0x1c(%ebp)
  0x01cb429d: lea    (%edx),%eax
  0x01cb429f: mov    0x4(%edx),%ecx
  0x01cb42a2: movl   $0x0,0x4(%edx)
  0x01cb42a9: mov    (%ecx),%ebx
  0x01cb42ab: and    $0x7,%ebx
  0x01cb42ae: cmp    $0x5,%ebx
  0x01cb42b1: je     0x01cb436c
  0x01cb42b7: mov    (%eax),%ebx
  0x01cb42b9: test   %ebx,%ebx
  0x01cb42bb: je     0x01cb436c
  0x01cb42c1: lock cmpxchg %ebx,(%ecx)
  0x01cb42c5: je     0x01cb436c
  0x01cb42cb: mov    %ecx,0x4(%edx)
  0x01cb42ce: call   0x01cb42d8
  0x01cb42d3: jmp    0x01cb436c
  0x01cb42d8: push   %edx
  0x01cb42d9: lea    0x8(%esp),%eax
  0x01cb42dd: cmpl   $0x0,-0x8(%ebp)
  0x01cb42e4: je     0x01cb42fb
  0x01cb42ea: push   $0x55310188
  0x01cb42ef: call   0x01cb42f4
  0x01cb42f4: pusha  
  0x01cb42f5: call   0x54dedbf0
  0x01cb42fa: hlt    
  0x01cb42fb: mov    %esi,-0x1c(%ebp)
  0x01cb42fe: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb4306: mov    -0xc(%edi),%edi
  0x01cb4309: push   %edi
  0x01cb430a: mov    %ebp,0x144(%edi)
  0x01cb4310: mov    %eax,0x13c(%edi)
  0x01cb4316: call   0x5505ab90
  0x01cb431b: add    $0x8,%esp
  0x01cb431e: push   %eax
  0x01cb431f: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb4327: mov    -0xc(%eax),%eax
  0x01cb432a: cmp    %eax,%edi
  0x01cb432c: je     0x01cb4343
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb4332: push   $0x55312af0
  0x01cb4337: call   0x01cb433c
  0x01cb433c: pusha  
  0x01cb433d: call   0x54dedbf0
  0x01cb4342: hlt    
  0x01cb4343: pop    %eax
  0x01cb4344: movl   $0x0,0x13c(%edi)
  0x01cb434e: movl   $0x0,0x144(%edi)
  0x01cb4358: cmpl   $0x0,0x4(%edi)
  0x01cb435f: jne    0x01cb0340
  0x01cb4365: mov    -0x1c(%ebp),%esi
  0x01cb4368: mov    -0x18(%ebp),%edi
  0x01cb436b: ret    
  0x01cb436c: mov    -0x1c(%ebp),%esi
  0x01cb436f: mov    -0x20(%ebp),%ecx
  0x01cb4372: lea    -0x20(%ebp),%ebx
  0x01cb4375: jmp    0x01cb4466
  0x01cb437a: mov    %ecx,%edx
  0x01cb437c: mov    %esi,-0x1c(%ebp)
  0x01cb437f: lea    (%edx),%eax
  0x01cb4381: mov    0x4(%edx),%ecx
  0x01cb4384: movl   $0x0,0x4(%edx)
  0x01cb438b: mov    (%ecx),%ebx
  0x01cb438d: and    $0x7,%ebx
  0x01cb4390: cmp    $0x5,%ebx
  0x01cb4393: je     0x01cb444e
  0x01cb4399: mov    (%eax),%ebx
  0x01cb439b: test   %ebx,%ebx
  0x01cb439d: je     0x01cb444e
  0x01cb43a3: lock cmpxchg %ebx,(%ecx)
  0x01cb43a7: je     0x01cb444e
  0x01cb43ad: mov    %ecx,0x4(%edx)
  0x01cb43b0: call   0x01cb43ba
  0x01cb43b5: jmp    0x01cb444e
  0x01cb43ba: push   %edx
  0x01cb43bb: lea    0x8(%esp),%eax
  0x01cb43bf: cmpl   $0x0,-0x8(%ebp)
  0x01cb43c6: je     0x01cb43dd
  0x01cb43cc: push   $0x55310188
  0x01cb43d1: call   0x01cb43d6
  0x01cb43d6: pusha  
  0x01cb43d7: call   0x54dedbf0
  0x01cb43dc: hlt    
  0x01cb43dd: mov    %esi,-0x1c(%ebp)
  0x01cb43e0: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb43e8: mov    -0xc(%edi),%edi
  0x01cb43eb: push   %edi
  0x01cb43ec: mov    %ebp,0x144(%edi)
  0x01cb43f2: mov    %eax,0x13c(%edi)
  0x01cb43f8: call   0x5505ab90
  0x01cb43fd: add    $0x8,%esp
  0x01cb4400: push   %eax
  0x01cb4401: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb4409: mov    -0xc(%eax),%eax
  0x01cb440c: cmp    %eax,%edi
  0x01cb440e: je     0x01cb4425
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb4414: push   $0x55312af0
  0x01cb4419: call   0x01cb441e
  0x01cb441e: pusha  
  0x01cb441f: call   0x54dedbf0
  0x01cb4424: hlt    
  0x01cb4425: pop    %eax
  0x01cb4426: movl   $0x0,0x13c(%edi)
  0x01cb4430: movl   $0x0,0x144(%edi)
  0x01cb443a: cmpl   $0x0,0x4(%edi)
  0x01cb4441: jne    0x01cb0340
  0x01cb4447: mov    -0x1c(%ebp),%esi
  0x01cb444a: mov    -0x18(%ebp),%edi
  0x01cb444d: ret    
  0x01cb444e: mov    -0x1c(%ebp),%esi
  0x01cb4451: jmp    0x01cb436f
  0x01cb4456: cmpl   $0x0,0x4(%ecx)
  0x01cb445d: jne    0x01cb437a
  0x01cb4463: add    $0x8,%ecx
  0x01cb4466: cmp    %ebx,%ecx
  0x01cb4468: jne    0x01cb4456
  0x01cb446a: cmpb   $0x0,0x55633e5f
  0x01cb4471: je     0x01cb44ad
  0x01cb4477: mov    %fs:0x0(,%eiz,1),%ebx
  0x01cb447f: mov    -0xc(%ebx),%ebx
  0x01cb4482: mov    -0xc(%ebp),%ecx
  0x01cb4485: push   %ecx
  0x01cb4486: push   %ebx
  0x01cb4487: cmpl   $0x0,-0x8(%ebp)
  0x01cb448e: je     0x01cb44a5
  0x01cb4494: push   $0x55310148
  0x01cb4499: call   0x01cb449e
  0x01cb449e: pusha  
  0x01cb449f: call   0x54dedbf0
  0x01cb44a4: hlt    
  0x01cb44a5: call   0x55215710
  0x01cb44aa: add    $0x8,%esp
  0x01cb44ad: mov    -0x4(%ebp),%ebx
  0x01cb44b0: mov    %ebp,%esp
  0x01cb44b2: pop    %ebp
  0x01cb44b3: pop    %esi
  0x01cb44b4: mov    %ebx,%esp
  0x01cb44b6: jmp    *%esi
  0x01cb44b8: mov    -0x1c(%ebp),%esi
  0x01cb44bb: mov    -0x18(%ebp),%edi
  0x01cb44be: mov    -0x20(%ebp),%esp
  0x01cb44c1: movl   $0x0,-0x8(%ebp)
  0x01cb44c8: emms   
  0x01cb44ca: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb44d2: mov    -0xc(%ecx),%ecx
  0x01cb44d5: mov    0x328(%ecx),%ecx
  0x01cb44db: fldl   0x58(%ecx)
  0x01cb44de: movl   $0xa,0x54(%ecx)
  0x01cb44e5: movl   $0x0,0x58(%ecx)
  0x01cb44ec: movl   $0x0,0x5c(%ecx)
  0x01cb44f3: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb44fb: mov    -0xc(%ecx),%ecx
  0x01cb44fe: mov    0x328(%ecx),%ecx
  0x01cb4504: movl   $0x0,0x50(%ecx)
  0x01cb450b: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb4513: mov    -0xc(%ecx),%ecx
  0x01cb4516: mov    0x1a1(%ecx),%bl
  0x01cb451c: mov    %ebx,%edi
  0x01cb451e: movb   $0x0,0x1a1(%ecx)
  0x01cb4525: mov    -0xc(%ebp),%ebx
  0x01cb4528: mov    0x14(%ebx),%ecx
  0x01cb452b: test   $0x20,%ecx
  0x01cb4531: je     0x01cb463c
  0x01cb4537: mov    %edi,%ecx
  0x01cb4539: test   $0xff,%cl
  0x01cb453c: jne    0x01cb4743
  0x01cb4542: sub    $0x8,%esp
  0x01cb4545: fstpl  (%esp)
  0x01cb4548: lea    -0x28(%ebp),%edx
  0x01cb454b: mov    0x4(%edx),%eax
  0x01cb454e: test   %eax,%eax
  0x01cb4550: jne    0x01cb4561
  0x01cb4556: fldl   (%esp)
  0x01cb4559: add    $0x8,%esp
  0x01cb455c: jmp    0x01cb463c
  0x01cb4561: mov    %esi,-0x1c(%ebp)
  0x01cb4564: lea    (%edx),%eax
  0x01cb4566: mov    0x4(%edx),%ecx
  0x01cb4569: movl   $0x0,0x4(%edx)
  0x01cb4570: mov    (%ecx),%ebx
  0x01cb4572: and    $0x7,%ebx
  0x01cb4575: cmp    $0x5,%ebx
  0x01cb4578: je     0x01cb4633
  0x01cb457e: mov    (%eax),%ebx
  0x01cb4580: test   %ebx,%ebx
  0x01cb4582: je     0x01cb4633
  0x01cb4588: lock cmpxchg %ebx,(%ecx)
  0x01cb458c: je     0x01cb4633
  0x01cb4592: mov    %ecx,0x4(%edx)
  0x01cb4595: call   0x01cb459f
  0x01cb459a: jmp    0x01cb4633
  0x01cb459f: push   %edx
  0x01cb45a0: lea    0x8(%esp),%eax
  0x01cb45a4: cmpl   $0x0,-0x8(%ebp)
  0x01cb45ab: je     0x01cb45c2
  0x01cb45b1: push   $0x55310188
  0x01cb45b6: call   0x01cb45bb
  0x01cb45bb: pusha  
  0x01cb45bc: call   0x54dedbf0
  0x01cb45c1: hlt    
  0x01cb45c2: mov    %esi,-0x1c(%ebp)
  0x01cb45c5: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb45cd: mov    -0xc(%edi),%edi
  0x01cb45d0: push   %edi
  0x01cb45d1: mov    %ebp,0x144(%edi)
  0x01cb45d7: mov    %eax,0x13c(%edi)
  0x01cb45dd: call   0x5505ab90
  0x01cb45e2: add    $0x8,%esp
  0x01cb45e5: push   %eax
  0x01cb45e6: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb45ee: mov    -0xc(%eax),%eax
  0x01cb45f1: cmp    %eax,%edi
  0x01cb45f3: je     0x01cb460a
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb45f9: push   $0x55312af0
  0x01cb45fe: call   0x01cb4603
  0x01cb4603: pusha  
  0x01cb4604: call   0x54dedbf0
  0x01cb4609: hlt    
  0x01cb460a: pop    %eax
  0x01cb460b: movl   $0x0,0x13c(%edi)
  0x01cb4615: movl   $0x0,0x144(%edi)
  0x01cb461f: cmpl   $0x0,0x4(%edi)
  0x01cb4626: jne    0x01cb0340
  0x01cb462c: mov    -0x1c(%ebp),%esi
  0x01cb462f: mov    -0x18(%ebp),%edi
  0x01cb4632: ret    
  0x01cb4633: mov    -0x1c(%ebp),%esi
  0x01cb4636: fldl   (%esp)
  0x01cb4639: add    $0x8,%esp
  0x01cb463c: mov    -0x20(%ebp),%ecx
  0x01cb463f: lea    -0x20(%ebp),%ebx
  0x01cb4642: jmp    0x01cb473f
  0x01cb4647: sub    $0x8,%esp
  0x01cb464a: fstpl  (%esp)
  0x01cb464d: mov    %ecx,%edx
  0x01cb464f: mov    %esi,-0x1c(%ebp)
  0x01cb4652: lea    (%edx),%eax
  0x01cb4654: mov    0x4(%edx),%ecx
  0x01cb4657: movl   $0x0,0x4(%edx)
  0x01cb465e: mov    (%ecx),%ebx
  0x01cb4660: and    $0x7,%ebx
  0x01cb4663: cmp    $0x5,%ebx
  0x01cb4666: je     0x01cb4721
  0x01cb466c: mov    (%eax),%ebx
  0x01cb466e: test   %ebx,%ebx
  0x01cb4670: je     0x01cb4721
  0x01cb4676: lock cmpxchg %ebx,(%ecx)
  0x01cb467a: je     0x01cb4721
  0x01cb4680: mov    %ecx,0x4(%edx)
  0x01cb4683: call   0x01cb468d
  0x01cb4688: jmp    0x01cb4721
  0x01cb468d: push   %edx
  0x01cb468e: lea    0x8(%esp),%eax
  0x01cb4692: cmpl   $0x0,-0x8(%ebp)
  0x01cb4699: je     0x01cb46b0
  0x01cb469f: push   $0x55310188
  0x01cb46a4: call   0x01cb46a9
  0x01cb46a9: pusha  
  0x01cb46aa: call   0x54dedbf0
  0x01cb46af: hlt    
  0x01cb46b0: mov    %esi,-0x1c(%ebp)
  0x01cb46b3: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb46bb: mov    -0xc(%edi),%edi
  0x01cb46be: push   %edi
  0x01cb46bf: mov    %ebp,0x144(%edi)
  0x01cb46c5: mov    %eax,0x13c(%edi)
  0x01cb46cb: call   0x5505ab90
  0x01cb46d0: add    $0x8,%esp
  0x01cb46d3: push   %eax
  0x01cb46d4: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb46dc: mov    -0xc(%eax),%eax
  0x01cb46df: cmp    %eax,%edi
  0x01cb46e1: je     0x01cb46f8
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb46e7: push   $0x55312af0
  0x01cb46ec: call   0x01cb46f1
  0x01cb46f1: pusha  
  0x01cb46f2: call   0x54dedbf0
  0x01cb46f7: hlt    
  0x01cb46f8: pop    %eax
  0x01cb46f9: movl   $0x0,0x13c(%edi)
  0x01cb4703: movl   $0x0,0x144(%edi)
  0x01cb470d: cmpl   $0x0,0x4(%edi)
  0x01cb4714: jne    0x01cb0340
  0x01cb471a: mov    -0x1c(%ebp),%esi
  0x01cb471d: mov    -0x18(%ebp),%edi
  0x01cb4720: ret    
  0x01cb4721: mov    -0x1c(%ebp),%esi
  0x01cb4724: fldl   (%esp)
  0x01cb4727: add    $0x8,%esp
  0x01cb472a: jmp    0x01cb463c
  0x01cb472f: cmpl   $0x0,0x4(%ecx)
  0x01cb4736: jne    0x01cb4647
  0x01cb473c: add    $0x8,%ecx
  0x01cb473f: cmp    %ebx,%ecx
  0x01cb4741: jne    0x01cb472f
  0x01cb4743: cmpb   $0x0,0x55633e5f
  0x01cb474a: je     0x01cb4792
  0x01cb4750: sub    $0x8,%esp
  0x01cb4753: fstpl  (%esp)
  0x01cb4756: mov    %fs:0x0(,%eiz,1),%ebx
  0x01cb475e: mov    -0xc(%ebx),%ebx
  0x01cb4761: mov    -0xc(%ebp),%ecx
  0x01cb4764: push   %ecx
  0x01cb4765: push   %ebx
  0x01cb4766: cmpl   $0x0,-0x8(%ebp)
  0x01cb476d: je     0x01cb4784
  0x01cb4773: push   $0x55310148
  0x01cb4778: call   0x01cb477d
  0x01cb477d: pusha  
  0x01cb477e: call   0x54dedbf0
  0x01cb4783: hlt    
  0x01cb4784: call   0x55215710
  0x01cb4789: add    $0x8,%esp
  0x01cb478c: fldl   (%esp)
  0x01cb478f: add    $0x8,%esp
  0x01cb4792: mov    -0x4(%ebp),%ebx
  0x01cb4795: mov    %ebp,%esp
  0x01cb4797: pop    %ebp
  0x01cb4798: pop    %esi
  0x01cb4799: mov    %ebx,%esp
  0x01cb479b: sub    $0x8,%esp
  0x01cb479e: fstpl  (%esp)
  0x01cb47a1: movsd  (%esp),%xmm0
  0x01cb47a6: add    $0x8,%esp
  0x01cb47a9: jmp    *%esi
  0x01cb47ab: mov    -0x1c(%ebp),%esi
  0x01cb47ae: mov    -0x18(%ebp),%edi
  0x01cb47b1: mov    -0x20(%ebp),%esp
  0x01cb47b4: movl   $0x0,-0x8(%ebp)
  0x01cb47bb: emms   
  0x01cb47bd: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb47c5: mov    -0xc(%ecx),%ecx
  0x01cb47c8: mov    0x328(%ecx),%ecx
  0x01cb47ce: flds   0x58(%ecx)
  0x01cb47d1: movl   $0xa,0x54(%ecx)
  0x01cb47d8: movl   $0x0,0x58(%ecx)
  0x01cb47df: movl   $0x0,0x5c(%ecx)
  0x01cb47e6: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb47ee: mov    -0xc(%ecx),%ecx
  0x01cb47f1: mov    0x328(%ecx),%ecx
  0x01cb47f7: movl   $0x0,0x50(%ecx)
  0x01cb47fe: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb4806: mov    -0xc(%ecx),%ecx
  0x01cb4809: mov    0x1a1(%ecx),%bl
  0x01cb480f: mov    %ebx,%edi
  0x01cb4811: movb   $0x0,0x1a1(%ecx)
  0x01cb4818: mov    -0xc(%ebp),%ebx
  0x01cb481b: mov    0x14(%ebx),%ecx
  0x01cb481e: test   $0x20,%ecx
  0x01cb4824: je     0x01cb492f
  0x01cb482a: mov    %edi,%ecx
  0x01cb482c: test   $0xff,%cl
  0x01cb482f: jne    0x01cb4a36
  0x01cb4835: sub    $0x4,%esp
  0x01cb4838: fstps  (%esp)
  0x01cb483b: lea    -0x28(%ebp),%edx
  0x01cb483e: mov    0x4(%edx),%eax
  0x01cb4841: test   %eax,%eax
  0x01cb4843: jne    0x01cb4854
  0x01cb4849: flds   (%esp)
  0x01cb484c: add    $0x4,%esp
  0x01cb484f: jmp    0x01cb492f
  0x01cb4854: mov    %esi,-0x1c(%ebp)
  0x01cb4857: lea    (%edx),%eax
  0x01cb4859: mov    0x4(%edx),%ecx
  0x01cb485c: movl   $0x0,0x4(%edx)
  0x01cb4863: mov    (%ecx),%ebx
  0x01cb4865: and    $0x7,%ebx
  0x01cb4868: cmp    $0x5,%ebx
  0x01cb486b: je     0x01cb4926
  0x01cb4871: mov    (%eax),%ebx
  0x01cb4873: test   %ebx,%ebx
  0x01cb4875: je     0x01cb4926
  0x01cb487b: lock cmpxchg %ebx,(%ecx)
  0x01cb487f: je     0x01cb4926
  0x01cb4885: mov    %ecx,0x4(%edx)
  0x01cb4888: call   0x01cb4892
  0x01cb488d: jmp    0x01cb4926
  0x01cb4892: push   %edx
  0x01cb4893: lea    0x8(%esp),%eax
  0x01cb4897: cmpl   $0x0,-0x8(%ebp)
  0x01cb489e: je     0x01cb48b5
  0x01cb48a4: push   $0x55310188
  0x01cb48a9: call   0x01cb48ae
  0x01cb48ae: pusha  
  0x01cb48af: call   0x54dedbf0
  0x01cb48b4: hlt    
  0x01cb48b5: mov    %esi,-0x1c(%ebp)
  0x01cb48b8: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb48c0: mov    -0xc(%edi),%edi
  0x01cb48c3: push   %edi
  0x01cb48c4: mov    %ebp,0x144(%edi)
  0x01cb48ca: mov    %eax,0x13c(%edi)
  0x01cb48d0: call   0x5505ab90
  0x01cb48d5: add    $0x8,%esp
  0x01cb48d8: push   %eax
  0x01cb48d9: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb48e1: mov    -0xc(%eax),%eax
  0x01cb48e4: cmp    %eax,%edi
  0x01cb48e6: je     0x01cb48fd
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb48ec: push   $0x55312af0
  0x01cb48f1: call   0x01cb48f6
  0x01cb48f6: pusha  
  0x01cb48f7: call   0x54dedbf0
  0x01cb48fc: hlt    
  0x01cb48fd: pop    %eax
  0x01cb48fe: movl   $0x0,0x13c(%edi)
  0x01cb4908: movl   $0x0,0x144(%edi)
  0x01cb4912: cmpl   $0x0,0x4(%edi)
  0x01cb4919: jne    0x01cb0340
  0x01cb491f: mov    -0x1c(%ebp),%esi
  0x01cb4922: mov    -0x18(%ebp),%edi
  0x01cb4925: ret    
  0x01cb4926: mov    -0x1c(%ebp),%esi
  0x01cb4929: flds   (%esp)
  0x01cb492c: add    $0x4,%esp
  0x01cb492f: mov    -0x20(%ebp),%ecx
  0x01cb4932: lea    -0x20(%ebp),%ebx
  0x01cb4935: jmp    0x01cb4a32
  0x01cb493a: sub    $0x4,%esp
  0x01cb493d: fstps  (%esp)
  0x01cb4940: mov    %ecx,%edx
  0x01cb4942: mov    %esi,-0x1c(%ebp)
  0x01cb4945: lea    (%edx),%eax
  0x01cb4947: mov    0x4(%edx),%ecx
  0x01cb494a: movl   $0x0,0x4(%edx)
  0x01cb4951: mov    (%ecx),%ebx
  0x01cb4953: and    $0x7,%ebx
  0x01cb4956: cmp    $0x5,%ebx
  0x01cb4959: je     0x01cb4a14
  0x01cb495f: mov    (%eax),%ebx
  0x01cb4961: test   %ebx,%ebx
  0x01cb4963: je     0x01cb4a14
  0x01cb4969: lock cmpxchg %ebx,(%ecx)
  0x01cb496d: je     0x01cb4a14
  0x01cb4973: mov    %ecx,0x4(%edx)
  0x01cb4976: call   0x01cb4980
  0x01cb497b: jmp    0x01cb4a14
  0x01cb4980: push   %edx
  0x01cb4981: lea    0x8(%esp),%eax
  0x01cb4985: cmpl   $0x0,-0x8(%ebp)
  0x01cb498c: je     0x01cb49a3
  0x01cb4992: push   $0x55310188
  0x01cb4997: call   0x01cb499c
  0x01cb499c: pusha  
  0x01cb499d: call   0x54dedbf0
  0x01cb49a2: hlt    
  0x01cb49a3: mov    %esi,-0x1c(%ebp)
  0x01cb49a6: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb49ae: mov    -0xc(%edi),%edi
  0x01cb49b1: push   %edi
  0x01cb49b2: mov    %ebp,0x144(%edi)
  0x01cb49b8: mov    %eax,0x13c(%edi)
  0x01cb49be: call   0x5505ab90
  0x01cb49c3: add    $0x8,%esp
  0x01cb49c6: push   %eax
  0x01cb49c7: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb49cf: mov    -0xc(%eax),%eax
  0x01cb49d2: cmp    %eax,%edi
  0x01cb49d4: je     0x01cb49eb
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb49da: push   $0x55312af0
  0x01cb49df: call   0x01cb49e4
  0x01cb49e4: pusha  
  0x01cb49e5: call   0x54dedbf0
  0x01cb49ea: hlt    
  0x01cb49eb: pop    %eax
  0x01cb49ec: movl   $0x0,0x13c(%edi)
  0x01cb49f6: movl   $0x0,0x144(%edi)
  0x01cb4a00: cmpl   $0x0,0x4(%edi)
  0x01cb4a07: jne    0x01cb0340
  0x01cb4a0d: mov    -0x1c(%ebp),%esi
  0x01cb4a10: mov    -0x18(%ebp),%edi
  0x01cb4a13: ret    
  0x01cb4a14: mov    -0x1c(%ebp),%esi
  0x01cb4a17: flds   (%esp)
  0x01cb4a1a: add    $0x4,%esp
  0x01cb4a1d: jmp    0x01cb492f
  0x01cb4a22: cmpl   $0x0,0x4(%ecx)
  0x01cb4a29: jne    0x01cb493a
  0x01cb4a2f: add    $0x8,%ecx
  0x01cb4a32: cmp    %ebx,%ecx
  0x01cb4a34: jne    0x01cb4a22
  0x01cb4a36: cmpb   $0x0,0x55633e5f
  0x01cb4a3d: je     0x01cb4a85
  0x01cb4a43: sub    $0x4,%esp
  0x01cb4a46: fstps  (%esp)
  0x01cb4a49: mov    %fs:0x0(,%eiz,1),%ebx
  0x01cb4a51: mov    -0xc(%ebx),%ebx
  0x01cb4a54: mov    -0xc(%ebp),%ecx
  0x01cb4a57: push   %ecx
  0x01cb4a58: push   %ebx
  0x01cb4a59: cmpl   $0x0,-0x8(%ebp)
  0x01cb4a60: je     0x01cb4a77
  0x01cb4a66: push   $0x55310148
  0x01cb4a6b: call   0x01cb4a70
  0x01cb4a70: pusha  
  0x01cb4a71: call   0x54dedbf0
  0x01cb4a76: hlt    
  0x01cb4a77: call   0x55215710
  0x01cb4a7c: add    $0x8,%esp
  0x01cb4a7f: flds   (%esp)
  0x01cb4a82: add    $0x4,%esp
  0x01cb4a85: mov    -0x4(%ebp),%ebx
  0x01cb4a88: mov    %ebp,%esp
  0x01cb4a8a: pop    %ebp
  0x01cb4a8b: pop    %esi
  0x01cb4a8c: mov    %ebx,%esp
  0x01cb4a8e: sub    $0x4,%esp
  0x01cb4a91: fstps  (%esp)
  0x01cb4a94: movss  (%esp),%xmm0
  0x01cb4a99: add    $0x4,%esp
  0x01cb4a9c: jmp    *%esi
  0x01cb4a9e: mov    -0x1c(%ebp),%esi
  0x01cb4aa1: mov    -0x18(%ebp),%edi
  0x01cb4aa4: mov    -0x20(%ebp),%esp
  0x01cb4aa7: movl   $0x0,-0x8(%ebp)
  0x01cb4aae: emms   
  0x01cb4ab0: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb4ab8: mov    -0xc(%ecx),%ecx
  0x01cb4abb: mov    0x328(%ecx),%ecx
  0x01cb4ac1: mov    0x5c(%ecx),%edx
  0x01cb4ac4: mov    0x58(%ecx),%eax
  0x01cb4ac7: movl   $0xa,0x54(%ecx)
  0x01cb4ace: movl   $0x0,0x58(%ecx)
  0x01cb4ad5: movl   $0x0,0x5c(%ecx)
  0x01cb4adc: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb4ae4: mov    -0xc(%ecx),%ecx
  0x01cb4ae7: mov    0x328(%ecx),%ecx
  0x01cb4aed: movl   $0x0,0x50(%ecx)
  0x01cb4af4: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb4afc: mov    -0xc(%ecx),%ecx
  0x01cb4aff: mov    0x1a1(%ecx),%bl
  0x01cb4b05: mov    %ebx,%edi
  0x01cb4b07: movb   $0x0,0x1a1(%ecx)
  0x01cb4b0e: mov    -0xc(%ebp),%ebx
  0x01cb4b11: mov    0x14(%ebx),%ecx
  0x01cb4b14: test   $0x20,%ecx
  0x01cb4b1a: je     0x01cb4c19
  0x01cb4b20: mov    %edi,%ecx
  0x01cb4b22: test   $0xff,%cl
  0x01cb4b25: jne    0x01cb4d18
  0x01cb4b2b: push   %edx
  0x01cb4b2c: push   %eax
  0x01cb4b2d: lea    -0x28(%ebp),%edx
  0x01cb4b30: mov    0x4(%edx),%eax
  0x01cb4b33: test   %eax,%eax
  0x01cb4b35: jne    0x01cb4b42
  0x01cb4b3b: pop    %eax
  0x01cb4b3c: pop    %edx
  0x01cb4b3d: jmp    0x01cb4c19
  0x01cb4b42: mov    %esi,-0x1c(%ebp)
  0x01cb4b45: lea    (%edx),%eax
  0x01cb4b47: mov    0x4(%edx),%ecx
  0x01cb4b4a: movl   $0x0,0x4(%edx)
  0x01cb4b51: mov    (%ecx),%ebx
  0x01cb4b53: and    $0x7,%ebx
  0x01cb4b56: cmp    $0x5,%ebx
  0x01cb4b59: je     0x01cb4c14
  0x01cb4b5f: mov    (%eax),%ebx
  0x01cb4b61: test   %ebx,%ebx
  0x01cb4b63: je     0x01cb4c14
  0x01cb4b69: lock cmpxchg %ebx,(%ecx)
  0x01cb4b6d: je     0x01cb4c14
  0x01cb4b73: mov    %ecx,0x4(%edx)
  0x01cb4b76: call   0x01cb4b80
  0x01cb4b7b: jmp    0x01cb4c14
  0x01cb4b80: push   %edx
  0x01cb4b81: lea    0x8(%esp),%eax
  0x01cb4b85: cmpl   $0x0,-0x8(%ebp)
  0x01cb4b8c: je     0x01cb4ba3
  0x01cb4b92: push   $0x55310188
  0x01cb4b97: call   0x01cb4b9c
  0x01cb4b9c: pusha  
  0x01cb4b9d: call   0x54dedbf0
  0x01cb4ba2: hlt    
  0x01cb4ba3: mov    %esi,-0x1c(%ebp)
  0x01cb4ba6: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb4bae: mov    -0xc(%edi),%edi
  0x01cb4bb1: push   %edi
  0x01cb4bb2: mov    %ebp,0x144(%edi)
  0x01cb4bb8: mov    %eax,0x13c(%edi)
  0x01cb4bbe: call   0x5505ab90
  0x01cb4bc3: add    $0x8,%esp
  0x01cb4bc6: push   %eax
  0x01cb4bc7: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb4bcf: mov    -0xc(%eax),%eax
  0x01cb4bd2: cmp    %eax,%edi
  0x01cb4bd4: je     0x01cb4beb
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb4bda: push   $0x55312af0
  0x01cb4bdf: call   0x01cb4be4
  0x01cb4be4: pusha  
  0x01cb4be5: call   0x54dedbf0
  0x01cb4bea: hlt    
  0x01cb4beb: pop    %eax
  0x01cb4bec: movl   $0x0,0x13c(%edi)
  0x01cb4bf6: movl   $0x0,0x144(%edi)
  0x01cb4c00: cmpl   $0x0,0x4(%edi)
  0x01cb4c07: jne    0x01cb0340
  0x01cb4c0d: mov    -0x1c(%ebp),%esi
  0x01cb4c10: mov    -0x18(%ebp),%edi
  0x01cb4c13: ret    
  0x01cb4c14: mov    -0x1c(%ebp),%esi
  0x01cb4c17: pop    %eax
  0x01cb4c18: pop    %edx
  0x01cb4c19: mov    -0x20(%ebp),%ecx
  0x01cb4c1c: lea    -0x20(%ebp),%ebx
  0x01cb4c1f: jmp    0x01cb4d14
  0x01cb4c24: push   %edx
  0x01cb4c25: push   %eax
  0x01cb4c26: mov    %ecx,%edx
  0x01cb4c28: mov    %esi,-0x1c(%ebp)
  0x01cb4c2b: lea    (%edx),%eax
  0x01cb4c2d: mov    0x4(%edx),%ecx
  0x01cb4c30: movl   $0x0,0x4(%edx)
  0x01cb4c37: mov    (%ecx),%ebx
  0x01cb4c39: and    $0x7,%ebx
  0x01cb4c3c: cmp    $0x5,%ebx
  0x01cb4c3f: je     0x01cb4cfa
  0x01cb4c45: mov    (%eax),%ebx
  0x01cb4c47: test   %ebx,%ebx
  0x01cb4c49: je     0x01cb4cfa
  0x01cb4c4f: lock cmpxchg %ebx,(%ecx)
  0x01cb4c53: je     0x01cb4cfa
  0x01cb4c59: mov    %ecx,0x4(%edx)
  0x01cb4c5c: call   0x01cb4c66
  0x01cb4c61: jmp    0x01cb4cfa
  0x01cb4c66: push   %edx
  0x01cb4c67: lea    0x8(%esp),%eax
  0x01cb4c6b: cmpl   $0x0,-0x8(%ebp)
  0x01cb4c72: je     0x01cb4c89
  0x01cb4c78: push   $0x55310188
  0x01cb4c7d: call   0x01cb4c82
  0x01cb4c82: pusha  
  0x01cb4c83: call   0x54dedbf0
  0x01cb4c88: hlt    
  0x01cb4c89: mov    %esi,-0x1c(%ebp)
  0x01cb4c8c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb4c94: mov    -0xc(%edi),%edi
  0x01cb4c97: push   %edi
  0x01cb4c98: mov    %ebp,0x144(%edi)
  0x01cb4c9e: mov    %eax,0x13c(%edi)
  0x01cb4ca4: call   0x5505ab90
  0x01cb4ca9: add    $0x8,%esp
  0x01cb4cac: push   %eax
  0x01cb4cad: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb4cb5: mov    -0xc(%eax),%eax
  0x01cb4cb8: cmp    %eax,%edi
  0x01cb4cba: je     0x01cb4cd1
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb4cc0: push   $0x55312af0
  0x01cb4cc5: call   0x01cb4cca
  0x01cb4cca: pusha  
  0x01cb4ccb: call   0x54dedbf0
  0x01cb4cd0: hlt    
  0x01cb4cd1: pop    %eax
  0x01cb4cd2: movl   $0x0,0x13c(%edi)
  0x01cb4cdc: movl   $0x0,0x144(%edi)
  0x01cb4ce6: cmpl   $0x0,0x4(%edi)
  0x01cb4ced: jne    0x01cb0340
  0x01cb4cf3: mov    -0x1c(%ebp),%esi
  0x01cb4cf6: mov    -0x18(%ebp),%edi
  0x01cb4cf9: ret    
  0x01cb4cfa: mov    -0x1c(%ebp),%esi
  0x01cb4cfd: pop    %eax
  0x01cb4cfe: pop    %edx
  0x01cb4cff: jmp    0x01cb4c19
  0x01cb4d04: cmpl   $0x0,0x4(%ecx)
  0x01cb4d0b: jne    0x01cb4c24
  0x01cb4d11: add    $0x8,%ecx
  0x01cb4d14: cmp    %ebx,%ecx
  0x01cb4d16: jne    0x01cb4d04
  0x01cb4d18: cmpb   $0x0,0x55633e5f
  0x01cb4d1f: je     0x01cb4d5f
  0x01cb4d25: push   %edx
  0x01cb4d26: push   %eax
  0x01cb4d27: mov    %fs:0x0(,%eiz,1),%ebx
  0x01cb4d2f: mov    -0xc(%ebx),%ebx
  0x01cb4d32: mov    -0xc(%ebp),%ecx
  0x01cb4d35: push   %ecx
  0x01cb4d36: push   %ebx
  0x01cb4d37: cmpl   $0x0,-0x8(%ebp)
  0x01cb4d3e: je     0x01cb4d55
  0x01cb4d44: push   $0x55310148
  0x01cb4d49: call   0x01cb4d4e
  0x01cb4d4e: pusha  
  0x01cb4d4f: call   0x54dedbf0
  0x01cb4d54: hlt    
  0x01cb4d55: call   0x55215710
  0x01cb4d5a: add    $0x8,%esp
  0x01cb4d5d: pop    %eax
  0x01cb4d5e: pop    %edx
  0x01cb4d5f: mov    -0x4(%ebp),%ebx
  0x01cb4d62: mov    %ebp,%esp
  0x01cb4d64: pop    %ebp
  0x01cb4d65: pop    %esi
  0x01cb4d66: mov    %ebx,%esp
  0x01cb4d68: jmp    *%esi
  0x01cb4d6a: mov    -0x1c(%ebp),%esi
  0x01cb4d6d: mov    -0x18(%ebp),%edi
  0x01cb4d70: mov    -0x20(%ebp),%esp
  0x01cb4d73: movl   $0x0,-0x8(%ebp)
  0x01cb4d7a: emms   
  0x01cb4d7c: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb4d84: mov    -0xc(%ecx),%ecx
  0x01cb4d87: mov    0x328(%ecx),%ecx
  0x01cb4d8d: mov    0x58(%ecx),%eax
  0x01cb4d90: movl   $0xa,0x54(%ecx)
  0x01cb4d97: movl   $0x0,0x58(%ecx)
  0x01cb4d9e: movl   $0x0,0x5c(%ecx)
  0x01cb4da5: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb4dad: mov    -0xc(%ecx),%ecx
  0x01cb4db0: mov    0x328(%ecx),%ecx
  0x01cb4db6: movl   $0x0,0x50(%ecx)
  0x01cb4dbd: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb4dc5: mov    -0xc(%ecx),%ecx
  0x01cb4dc8: mov    0x1a1(%ecx),%bl
  0x01cb4dce: mov    %ebx,%edi
  0x01cb4dd0: movb   $0x0,0x1a1(%ecx)
  0x01cb4dd7: mov    -0xc(%ebp),%ebx
  0x01cb4dda: mov    0x14(%ebx),%ecx
  0x01cb4ddd: test   $0x20,%ecx
  0x01cb4de3: je     0x01cb4edf
  0x01cb4de9: mov    %edi,%ecx
  0x01cb4deb: test   $0xff,%cl
  0x01cb4dee: jne    0x01cb4fdc
  0x01cb4df4: push   %eax
  0x01cb4df5: lea    -0x28(%ebp),%edx
  0x01cb4df8: mov    0x4(%edx),%eax
  0x01cb4dfb: test   %eax,%eax
  0x01cb4dfd: jne    0x01cb4e09
  0x01cb4e03: pop    %eax
  0x01cb4e04: jmp    0x01cb4edf
  0x01cb4e09: mov    %esi,-0x1c(%ebp)
  0x01cb4e0c: lea    (%edx),%eax
  0x01cb4e0e: mov    0x4(%edx),%ecx
  0x01cb4e11: movl   $0x0,0x4(%edx)
  0x01cb4e18: mov    (%ecx),%ebx
  0x01cb4e1a: and    $0x7,%ebx
  0x01cb4e1d: cmp    $0x5,%ebx
  0x01cb4e20: je     0x01cb4edb
  0x01cb4e26: mov    (%eax),%ebx
  0x01cb4e28: test   %ebx,%ebx
  0x01cb4e2a: je     0x01cb4edb
  0x01cb4e30: lock cmpxchg %ebx,(%ecx)
  0x01cb4e34: je     0x01cb4edb
  0x01cb4e3a: mov    %ecx,0x4(%edx)
  0x01cb4e3d: call   0x01cb4e47
  0x01cb4e42: jmp    0x01cb4edb
  0x01cb4e47: push   %edx
  0x01cb4e48: lea    0x8(%esp),%eax
  0x01cb4e4c: cmpl   $0x0,-0x8(%ebp)
  0x01cb4e53: je     0x01cb4e6a
  0x01cb4e59: push   $0x55310188
  0x01cb4e5e: call   0x01cb4e63
  0x01cb4e63: pusha  
  0x01cb4e64: call   0x54dedbf0
  0x01cb4e69: hlt    
  0x01cb4e6a: mov    %esi,-0x1c(%ebp)
  0x01cb4e6d: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb4e75: mov    -0xc(%edi),%edi
  0x01cb4e78: push   %edi
  0x01cb4e79: mov    %ebp,0x144(%edi)
  0x01cb4e7f: mov    %eax,0x13c(%edi)
  0x01cb4e85: call   0x5505ab90
  0x01cb4e8a: add    $0x8,%esp
  0x01cb4e8d: push   %eax
  0x01cb4e8e: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb4e96: mov    -0xc(%eax),%eax
  0x01cb4e99: cmp    %eax,%edi
  0x01cb4e9b: je     0x01cb4eb2
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb4ea1: push   $0x55312af0
  0x01cb4ea6: call   0x01cb4eab
  0x01cb4eab: pusha  
  0x01cb4eac: call   0x54dedbf0
  0x01cb4eb1: hlt    
  0x01cb4eb2: pop    %eax
  0x01cb4eb3: movl   $0x0,0x13c(%edi)
  0x01cb4ebd: movl   $0x0,0x144(%edi)
  0x01cb4ec7: cmpl   $0x0,0x4(%edi)
  0x01cb4ece: jne    0x01cb0340
  0x01cb4ed4: mov    -0x1c(%ebp),%esi
  0x01cb4ed7: mov    -0x18(%ebp),%edi
  0x01cb4eda: ret    
  0x01cb4edb: mov    -0x1c(%ebp),%esi
  0x01cb4ede: pop    %eax
  0x01cb4edf: mov    -0x20(%ebp),%ecx
  0x01cb4ee2: lea    -0x20(%ebp),%ebx
  0x01cb4ee5: jmp    0x01cb4fd8
  0x01cb4eea: push   %eax
  0x01cb4eeb: mov    %ecx,%edx
  0x01cb4eed: mov    %esi,-0x1c(%ebp)
  0x01cb4ef0: lea    (%edx),%eax
  0x01cb4ef2: mov    0x4(%edx),%ecx
  0x01cb4ef5: movl   $0x0,0x4(%edx)
  0x01cb4efc: mov    (%ecx),%ebx
  0x01cb4efe: and    $0x7,%ebx
  0x01cb4f01: cmp    $0x5,%ebx
  0x01cb4f04: je     0x01cb4fbf
  0x01cb4f0a: mov    (%eax),%ebx
  0x01cb4f0c: test   %ebx,%ebx
  0x01cb4f0e: je     0x01cb4fbf
  0x01cb4f14: lock cmpxchg %ebx,(%ecx)
  0x01cb4f18: je     0x01cb4fbf
  0x01cb4f1e: mov    %ecx,0x4(%edx)
  0x01cb4f21: call   0x01cb4f2b
  0x01cb4f26: jmp    0x01cb4fbf
  0x01cb4f2b: push   %edx
  0x01cb4f2c: lea    0x8(%esp),%eax
  0x01cb4f30: cmpl   $0x0,-0x8(%ebp)
  0x01cb4f37: je     0x01cb4f4e
  0x01cb4f3d: push   $0x55310188
  0x01cb4f42: call   0x01cb4f47
  0x01cb4f47: pusha  
  0x01cb4f48: call   0x54dedbf0
  0x01cb4f4d: hlt    
  0x01cb4f4e: mov    %esi,-0x1c(%ebp)
  0x01cb4f51: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb4f59: mov    -0xc(%edi),%edi
  0x01cb4f5c: push   %edi
  0x01cb4f5d: mov    %ebp,0x144(%edi)
  0x01cb4f63: mov    %eax,0x13c(%edi)
  0x01cb4f69: call   0x5505ab90
  0x01cb4f6e: add    $0x8,%esp
  0x01cb4f71: push   %eax
  0x01cb4f72: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb4f7a: mov    -0xc(%eax),%eax
  0x01cb4f7d: cmp    %eax,%edi
  0x01cb4f7f: je     0x01cb4f96
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb4f85: push   $0x55312af0
  0x01cb4f8a: call   0x01cb4f8f
  0x01cb4f8f: pusha  
  0x01cb4f90: call   0x54dedbf0
  0x01cb4f95: hlt    
  0x01cb4f96: pop    %eax
  0x01cb4f97: movl   $0x0,0x13c(%edi)
  0x01cb4fa1: movl   $0x0,0x144(%edi)
  0x01cb4fab: cmpl   $0x0,0x4(%edi)
  0x01cb4fb2: jne    0x01cb0340
  0x01cb4fb8: mov    -0x1c(%ebp),%esi
  0x01cb4fbb: mov    -0x18(%ebp),%edi
  0x01cb4fbe: ret    
  0x01cb4fbf: mov    -0x1c(%ebp),%esi
  0x01cb4fc2: pop    %eax
  0x01cb4fc3: jmp    0x01cb4edf
  0x01cb4fc8: cmpl   $0x0,0x4(%ecx)
  0x01cb4fcf: jne    0x01cb4eea
  0x01cb4fd5: add    $0x8,%ecx
  0x01cb4fd8: cmp    %ebx,%ecx
  0x01cb4fda: jne    0x01cb4fc8
  0x01cb4fdc: cmpb   $0x0,0x55633e5f
  0x01cb4fe3: je     0x01cb5021
  0x01cb4fe9: push   %eax
  0x01cb4fea: mov    %fs:0x0(,%eiz,1),%ebx
  0x01cb4ff2: mov    -0xc(%ebx),%ebx
  0x01cb4ff5: mov    -0xc(%ebp),%ecx
  0x01cb4ff8: push   %ecx
  0x01cb4ff9: push   %ebx
  0x01cb4ffa: cmpl   $0x0,-0x8(%ebp)
  0x01cb5001: je     0x01cb5018
  0x01cb5007: push   $0x55310148
  0x01cb500c: call   0x01cb5011
  0x01cb5011: pusha  
  0x01cb5012: call   0x54dedbf0
  0x01cb5017: hlt    
  0x01cb5018: call   0x55215710
  0x01cb501d: add    $0x8,%esp
  0x01cb5020: pop    %eax
  0x01cb5021: mov    -0x4(%ebp),%ebx
  0x01cb5024: mov    %ebp,%esp
  0x01cb5026: pop    %ebp
  0x01cb5027: pop    %esi
  0x01cb5028: mov    %ebx,%esp
  0x01cb502a: jmp    *%esi
  0x01cb502c: mov    -0x1c(%ebp),%esi
  0x01cb502f: mov    -0x18(%ebp),%edi
  0x01cb5032: mov    -0x20(%ebp),%esp
  0x01cb5035: movl   $0x0,-0x8(%ebp)
  0x01cb503c: emms   
  0x01cb503e: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb5046: mov    -0xc(%ecx),%ecx
  0x01cb5049: mov    0x328(%ecx),%ecx
  0x01cb504f: mov    0x60(%ecx),%eax
  0x01cb5052: movl   $0x0,0x60(%ecx)
  0x01cb5059: movl   $0xa,0x54(%ecx)
  0x01cb5060: movl   $0x0,0x58(%ecx)
  0x01cb5067: movl   $0x0,0x5c(%ecx)
  0x01cb506e: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb5076: mov    -0xc(%ecx),%ecx
  0x01cb5079: mov    0x328(%ecx),%ecx
  0x01cb507f: movl   $0x0,0x50(%ecx)
  0x01cb5086: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb508e: mov    -0xc(%ecx),%ecx
  0x01cb5091: mov    0x1a1(%ecx),%bl
  0x01cb5097: mov    %ebx,%edi
  0x01cb5099: movb   $0x0,0x1a1(%ecx)
  0x01cb50a0: mov    -0xc(%ebp),%ebx
  0x01cb50a3: mov    0x14(%ebx),%ecx
  0x01cb50a6: test   $0x20,%ecx
  0x01cb50ac: je     0x01cb51a8
  0x01cb50b2: mov    %edi,%ecx
  0x01cb50b4: test   $0xff,%cl
  0x01cb50b7: jne    0x01cb52a5
  0x01cb50bd: push   %eax
  0x01cb50be: lea    -0x28(%ebp),%edx
  0x01cb50c1: mov    0x4(%edx),%eax
  0x01cb50c4: test   %eax,%eax
  0x01cb50c6: jne    0x01cb50d2
  0x01cb50cc: pop    %eax
  0x01cb50cd: jmp    0x01cb51a8
  0x01cb50d2: mov    %esi,-0x1c(%ebp)
  0x01cb50d5: lea    (%edx),%eax
  0x01cb50d7: mov    0x4(%edx),%ecx
  0x01cb50da: movl   $0x0,0x4(%edx)
  0x01cb50e1: mov    (%ecx),%ebx
  0x01cb50e3: and    $0x7,%ebx
  0x01cb50e6: cmp    $0x5,%ebx
  0x01cb50e9: je     0x01cb51a4
  0x01cb50ef: mov    (%eax),%ebx
  0x01cb50f1: test   %ebx,%ebx
  0x01cb50f3: je     0x01cb51a4
  0x01cb50f9: lock cmpxchg %ebx,(%ecx)
  0x01cb50fd: je     0x01cb51a4
  0x01cb5103: mov    %ecx,0x4(%edx)
  0x01cb5106: call   0x01cb5110
  0x01cb510b: jmp    0x01cb51a4
  0x01cb5110: push   %edx
  0x01cb5111: lea    0x8(%esp),%eax
  0x01cb5115: cmpl   $0x0,-0x8(%ebp)
  0x01cb511c: je     0x01cb5133
  0x01cb5122: push   $0x55310188
  0x01cb5127: call   0x01cb512c
  0x01cb512c: pusha  
  0x01cb512d: call   0x54dedbf0
  0x01cb5132: hlt    
  0x01cb5133: mov    %esi,-0x1c(%ebp)
  0x01cb5136: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb513e: mov    -0xc(%edi),%edi
  0x01cb5141: push   %edi
  0x01cb5142: mov    %ebp,0x144(%edi)
  0x01cb5148: mov    %eax,0x13c(%edi)
  0x01cb514e: call   0x5505ab90
  0x01cb5153: add    $0x8,%esp
  0x01cb5156: push   %eax
  0x01cb5157: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb515f: mov    -0xc(%eax),%eax
  0x01cb5162: cmp    %eax,%edi
  0x01cb5164: je     0x01cb517b
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb516a: push   $0x55312af0
  0x01cb516f: call   0x01cb5174
  0x01cb5174: pusha  
  0x01cb5175: call   0x54dedbf0
  0x01cb517a: hlt    
  0x01cb517b: pop    %eax
  0x01cb517c: movl   $0x0,0x13c(%edi)
  0x01cb5186: movl   $0x0,0x144(%edi)
  0x01cb5190: cmpl   $0x0,0x4(%edi)
  0x01cb5197: jne    0x01cb0340
  0x01cb519d: mov    -0x1c(%ebp),%esi
  0x01cb51a0: mov    -0x18(%ebp),%edi
  0x01cb51a3: ret    
  0x01cb51a4: mov    -0x1c(%ebp),%esi
  0x01cb51a7: pop    %eax
  0x01cb51a8: mov    -0x20(%ebp),%ecx
  0x01cb51ab: lea    -0x20(%ebp),%ebx
  0x01cb51ae: jmp    0x01cb52a1
  0x01cb51b3: push   %eax
  0x01cb51b4: mov    %ecx,%edx
  0x01cb51b6: mov    %esi,-0x1c(%ebp)
  0x01cb51b9: lea    (%edx),%eax
  0x01cb51bb: mov    0x4(%edx),%ecx
  0x01cb51be: movl   $0x0,0x4(%edx)
  0x01cb51c5: mov    (%ecx),%ebx
  0x01cb51c7: and    $0x7,%ebx
  0x01cb51ca: cmp    $0x5,%ebx
  0x01cb51cd: je     0x01cb5288
  0x01cb51d3: mov    (%eax),%ebx
  0x01cb51d5: test   %ebx,%ebx
  0x01cb51d7: je     0x01cb5288
  0x01cb51dd: lock cmpxchg %ebx,(%ecx)
  0x01cb51e1: je     0x01cb5288
  0x01cb51e7: mov    %ecx,0x4(%edx)
  0x01cb51ea: call   0x01cb51f4
  0x01cb51ef: jmp    0x01cb5288
  0x01cb51f4: push   %edx
  0x01cb51f5: lea    0x8(%esp),%eax
  0x01cb51f9: cmpl   $0x0,-0x8(%ebp)
  0x01cb5200: je     0x01cb5217
  0x01cb5206: push   $0x55310188
  0x01cb520b: call   0x01cb5210
  0x01cb5210: pusha  
  0x01cb5211: call   0x54dedbf0
  0x01cb5216: hlt    
  0x01cb5217: mov    %esi,-0x1c(%ebp)
  0x01cb521a: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb5222: mov    -0xc(%edi),%edi
  0x01cb5225: push   %edi
  0x01cb5226: mov    %ebp,0x144(%edi)
  0x01cb522c: mov    %eax,0x13c(%edi)
  0x01cb5232: call   0x5505ab90
  0x01cb5237: add    $0x8,%esp
  0x01cb523a: push   %eax
  0x01cb523b: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb5243: mov    -0xc(%eax),%eax
  0x01cb5246: cmp    %eax,%edi
  0x01cb5248: je     0x01cb525f
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb524e: push   $0x55312af0
  0x01cb5253: call   0x01cb5258
  0x01cb5258: pusha  
  0x01cb5259: call   0x54dedbf0
  0x01cb525e: hlt    
  0x01cb525f: pop    %eax
  0x01cb5260: movl   $0x0,0x13c(%edi)
  0x01cb526a: movl   $0x0,0x144(%edi)
  0x01cb5274: cmpl   $0x0,0x4(%edi)
  0x01cb527b: jne    0x01cb0340
  0x01cb5281: mov    -0x1c(%ebp),%esi
  0x01cb5284: mov    -0x18(%ebp),%edi
  0x01cb5287: ret    
  0x01cb5288: mov    -0x1c(%ebp),%esi
  0x01cb528b: pop    %eax
  0x01cb528c: jmp    0x01cb51a8
  0x01cb5291: cmpl   $0x0,0x4(%ecx)
  0x01cb5298: jne    0x01cb51b3
  0x01cb529e: add    $0x8,%ecx
  0x01cb52a1: cmp    %ebx,%ecx
  0x01cb52a3: jne    0x01cb5291
  0x01cb52a5: cmpb   $0x0,0x55633e5f
  0x01cb52ac: je     0x01cb52ea
  0x01cb52b2: push   %eax
  0x01cb52b3: mov    %fs:0x0(,%eiz,1),%ebx
  0x01cb52bb: mov    -0xc(%ebx),%ebx
  0x01cb52be: mov    -0xc(%ebp),%ecx
  0x01cb52c1: push   %ecx
  0x01cb52c2: push   %ebx
  0x01cb52c3: cmpl   $0x0,-0x8(%ebp)
  0x01cb52ca: je     0x01cb52e1
  0x01cb52d0: push   $0x55310148
  0x01cb52d5: call   0x01cb52da
  0x01cb52da: pusha  
  0x01cb52db: call   0x54dedbf0
  0x01cb52e0: hlt    
  0x01cb52e1: call   0x55215710
  0x01cb52e6: add    $0x8,%esp
  0x01cb52e9: pop    %eax
  0x01cb52ea: mov    -0x4(%ebp),%ebx
  0x01cb52ed: mov    %ebp,%esp
  0x01cb52ef: pop    %ebp
  0x01cb52f0: pop    %esi
  0x01cb52f1: mov    %ebx,%esp
  0x01cb52f3: jmp    *%esi
  0x01cb52f5: mov    -0x1c(%ebp),%esi
  0x01cb52f8: mov    -0x18(%ebp),%edi
  0x01cb52fb: mov    -0x20(%ebp),%esp
  0x01cb52fe: movl   $0x0,-0x8(%ebp)
  0x01cb5305: emms   
  0x01cb5307: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb530f: mov    -0xc(%ecx),%ecx
  0x01cb5312: mov    0x328(%ecx),%ecx
  0x01cb5318: mov    0x58(%ecx),%eax
  0x01cb531b: movl   $0xa,0x54(%ecx)
  0x01cb5322: movl   $0x0,0x58(%ecx)
  0x01cb5329: movl   $0x0,0x5c(%ecx)
  0x01cb5330: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb5338: mov    -0xc(%ecx),%ecx
  0x01cb533b: mov    0x328(%ecx),%ecx
  0x01cb5341: movl   $0x0,0x50(%ecx)
  0x01cb5348: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb5350: mov    -0xc(%ecx),%ecx
  0x01cb5353: mov    0x1a1(%ecx),%bl
  0x01cb5359: mov    %ebx,%edi
  0x01cb535b: movb   $0x0,0x1a1(%ecx)
  0x01cb5362: mov    -0xc(%ebp),%ebx
  0x01cb5365: mov    0x14(%ebx),%ecx
  0x01cb5368: test   $0x20,%ecx
  0x01cb536e: je     0x01cb546a
  0x01cb5374: mov    %edi,%ecx
  0x01cb5376: test   $0xff,%cl
  0x01cb5379: jne    0x01cb5567
  0x01cb537f: push   %eax
  0x01cb5380: lea    -0x28(%ebp),%edx
  0x01cb5383: mov    0x4(%edx),%eax
  0x01cb5386: test   %eax,%eax
  0x01cb5388: jne    0x01cb5394
  0x01cb538e: pop    %eax
  0x01cb538f: jmp    0x01cb546a
  0x01cb5394: mov    %esi,-0x1c(%ebp)
  0x01cb5397: lea    (%edx),%eax
  0x01cb5399: mov    0x4(%edx),%ecx
  0x01cb539c: movl   $0x0,0x4(%edx)
  0x01cb53a3: mov    (%ecx),%ebx
  0x01cb53a5: and    $0x7,%ebx
  0x01cb53a8: cmp    $0x5,%ebx
  0x01cb53ab: je     0x01cb5466
  0x01cb53b1: mov    (%eax),%ebx
  0x01cb53b3: test   %ebx,%ebx
  0x01cb53b5: je     0x01cb5466
  0x01cb53bb: lock cmpxchg %ebx,(%ecx)
  0x01cb53bf: je     0x01cb5466
  0x01cb53c5: mov    %ecx,0x4(%edx)
  0x01cb53c8: call   0x01cb53d2
  0x01cb53cd: jmp    0x01cb5466
  0x01cb53d2: push   %edx
  0x01cb53d3: lea    0x8(%esp),%eax
  0x01cb53d7: cmpl   $0x0,-0x8(%ebp)
  0x01cb53de: je     0x01cb53f5
  0x01cb53e4: push   $0x55310188
  0x01cb53e9: call   0x01cb53ee
  0x01cb53ee: pusha  
  0x01cb53ef: call   0x54dedbf0
  0x01cb53f4: hlt    
  0x01cb53f5: mov    %esi,-0x1c(%ebp)
  0x01cb53f8: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb5400: mov    -0xc(%edi),%edi
  0x01cb5403: push   %edi
  0x01cb5404: mov    %ebp,0x144(%edi)
  0x01cb540a: mov    %eax,0x13c(%edi)
  0x01cb5410: call   0x5505ab90
  0x01cb5415: add    $0x8,%esp
  0x01cb5418: push   %eax
  0x01cb5419: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb5421: mov    -0xc(%eax),%eax
  0x01cb5424: cmp    %eax,%edi
  0x01cb5426: je     0x01cb543d
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb542c: push   $0x55312af0
  0x01cb5431: call   0x01cb5436
  0x01cb5436: pusha  
  0x01cb5437: call   0x54dedbf0
  0x01cb543c: hlt    
  0x01cb543d: pop    %eax
  0x01cb543e: movl   $0x0,0x13c(%edi)
  0x01cb5448: movl   $0x0,0x144(%edi)
  0x01cb5452: cmpl   $0x0,0x4(%edi)
  0x01cb5459: jne    0x01cb0340
  0x01cb545f: mov    -0x1c(%ebp),%esi
  0x01cb5462: mov    -0x18(%ebp),%edi
  0x01cb5465: ret    
  0x01cb5466: mov    -0x1c(%ebp),%esi
  0x01cb5469: pop    %eax
  0x01cb546a: mov    -0x20(%ebp),%ecx
  0x01cb546d: lea    -0x20(%ebp),%ebx
  0x01cb5470: jmp    0x01cb5563
  0x01cb5475: push   %eax
  0x01cb5476: mov    %ecx,%edx
  0x01cb5478: mov    %esi,-0x1c(%ebp)
  0x01cb547b: lea    (%edx),%eax
  0x01cb547d: mov    0x4(%edx),%ecx
  0x01cb5480: movl   $0x0,0x4(%edx)
  0x01cb5487: mov    (%ecx),%ebx
  0x01cb5489: and    $0x7,%ebx
  0x01cb548c: cmp    $0x5,%ebx
  0x01cb548f: je     0x01cb554a
  0x01cb5495: mov    (%eax),%ebx
  0x01cb5497: test   %ebx,%ebx
  0x01cb5499: je     0x01cb554a
  0x01cb549f: lock cmpxchg %ebx,(%ecx)
  0x01cb54a3: je     0x01cb554a
  0x01cb54a9: mov    %ecx,0x4(%edx)
  0x01cb54ac: call   0x01cb54b6
  0x01cb54b1: jmp    0x01cb554a
  0x01cb54b6: push   %edx
  0x01cb54b7: lea    0x8(%esp),%eax
  0x01cb54bb: cmpl   $0x0,-0x8(%ebp)
  0x01cb54c2: je     0x01cb54d9
  0x01cb54c8: push   $0x55310188
  0x01cb54cd: call   0x01cb54d2
  0x01cb54d2: pusha  
  0x01cb54d3: call   0x54dedbf0
  0x01cb54d8: hlt    
  0x01cb54d9: mov    %esi,-0x1c(%ebp)
  0x01cb54dc: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb54e4: mov    -0xc(%edi),%edi
  0x01cb54e7: push   %edi
  0x01cb54e8: mov    %ebp,0x144(%edi)
  0x01cb54ee: mov    %eax,0x13c(%edi)
  0x01cb54f4: call   0x5505ab90
  0x01cb54f9: add    $0x8,%esp
  0x01cb54fc: push   %eax
  0x01cb54fd: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb5505: mov    -0xc(%eax),%eax
  0x01cb5508: cmp    %eax,%edi
  0x01cb550a: je     0x01cb5521
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb5510: push   $0x55312af0
  0x01cb5515: call   0x01cb551a
  0x01cb551a: pusha  
  0x01cb551b: call   0x54dedbf0
  0x01cb5520: hlt    
  0x01cb5521: pop    %eax
  0x01cb5522: movl   $0x0,0x13c(%edi)
  0x01cb552c: movl   $0x0,0x144(%edi)
  0x01cb5536: cmpl   $0x0,0x4(%edi)
  0x01cb553d: jne    0x01cb0340
  0x01cb5543: mov    -0x1c(%ebp),%esi
  0x01cb5546: mov    -0x18(%ebp),%edi
  0x01cb5549: ret    
  0x01cb554a: mov    -0x1c(%ebp),%esi
  0x01cb554d: pop    %eax
  0x01cb554e: jmp    0x01cb546a
  0x01cb5553: cmpl   $0x0,0x4(%ecx)
  0x01cb555a: jne    0x01cb5475
  0x01cb5560: add    $0x8,%ecx
  0x01cb5563: cmp    %ebx,%ecx
  0x01cb5565: jne    0x01cb5553
  0x01cb5567: cmpb   $0x0,0x55633e5f
  0x01cb556e: je     0x01cb55ac
  0x01cb5574: push   %eax
  0x01cb5575: mov    %fs:0x0(,%eiz,1),%ebx
  0x01cb557d: mov    -0xc(%ebx),%ebx
  0x01cb5580: mov    -0xc(%ebp),%ecx
  0x01cb5583: push   %ecx
  0x01cb5584: push   %ebx
  0x01cb5585: cmpl   $0x0,-0x8(%ebp)
  0x01cb558c: je     0x01cb55a3
  0x01cb5592: push   $0x55310148
  0x01cb5597: call   0x01cb559c
  0x01cb559c: pusha  
  0x01cb559d: call   0x54dedbf0
  0x01cb55a2: hlt    
  0x01cb55a3: call   0x55215710
  0x01cb55a8: add    $0x8,%esp
  0x01cb55ab: pop    %eax
  0x01cb55ac: mov    -0x4(%ebp),%ebx
  0x01cb55af: mov    %ebp,%esp
  0x01cb55b1: pop    %ebp
  0x01cb55b2: pop    %esi
  0x01cb55b3: mov    %ebx,%esp
  0x01cb55b5: jmp    *%esi
  0x01cb55b7: mov    -0x1c(%ebp),%esi
  0x01cb55ba: mov    -0x18(%ebp),%edi
  0x01cb55bd: mov    -0x20(%ebp),%esp
  0x01cb55c0: movl   $0x0,-0x8(%ebp)
  0x01cb55c7: emms   
  0x01cb55c9: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb55d1: mov    -0xc(%ecx),%ecx
  0x01cb55d4: mov    0x328(%ecx),%ecx
  0x01cb55da: mov    0x58(%ecx),%eax
  0x01cb55dd: movl   $0xa,0x54(%ecx)
  0x01cb55e4: movl   $0x0,0x58(%ecx)
  0x01cb55eb: movl   $0x0,0x5c(%ecx)
  0x01cb55f2: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb55fa: mov    -0xc(%ecx),%ecx
  0x01cb55fd: mov    0x328(%ecx),%ecx
  0x01cb5603: movl   $0x0,0x50(%ecx)
  0x01cb560a: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb5612: mov    -0xc(%ecx),%ecx
  0x01cb5615: mov    0x1a1(%ecx),%bl
  0x01cb561b: mov    %ebx,%edi
  0x01cb561d: movb   $0x0,0x1a1(%ecx)
  0x01cb5624: mov    -0xc(%ebp),%ebx
  0x01cb5627: mov    0x14(%ebx),%ecx
  0x01cb562a: test   $0x20,%ecx
  0x01cb5630: je     0x01cb572c
  0x01cb5636: mov    %edi,%ecx
  0x01cb5638: test   $0xff,%cl
  0x01cb563b: jne    0x01cb5829
  0x01cb5641: push   %eax
  0x01cb5642: lea    -0x28(%ebp),%edx
  0x01cb5645: mov    0x4(%edx),%eax
  0x01cb5648: test   %eax,%eax
  0x01cb564a: jne    0x01cb5656
  0x01cb5650: pop    %eax
  0x01cb5651: jmp    0x01cb572c
  0x01cb5656: mov    %esi,-0x1c(%ebp)
  0x01cb5659: lea    (%edx),%eax
  0x01cb565b: mov    0x4(%edx),%ecx
  0x01cb565e: movl   $0x0,0x4(%edx)
  0x01cb5665: mov    (%ecx),%ebx
  0x01cb5667: and    $0x7,%ebx
  0x01cb566a: cmp    $0x5,%ebx
  0x01cb566d: je     0x01cb5728
  0x01cb5673: mov    (%eax),%ebx
  0x01cb5675: test   %ebx,%ebx
  0x01cb5677: je     0x01cb5728
  0x01cb567d: lock cmpxchg %ebx,(%ecx)
  0x01cb5681: je     0x01cb5728
  0x01cb5687: mov    %ecx,0x4(%edx)
  0x01cb568a: call   0x01cb5694
  0x01cb568f: jmp    0x01cb5728
  0x01cb5694: push   %edx
  0x01cb5695: lea    0x8(%esp),%eax
  0x01cb5699: cmpl   $0x0,-0x8(%ebp)
  0x01cb56a0: je     0x01cb56b7
  0x01cb56a6: push   $0x55310188
  0x01cb56ab: call   0x01cb56b0
  0x01cb56b0: pusha  
  0x01cb56b1: call   0x54dedbf0
  0x01cb56b6: hlt    
  0x01cb56b7: mov    %esi,-0x1c(%ebp)
  0x01cb56ba: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb56c2: mov    -0xc(%edi),%edi
  0x01cb56c5: push   %edi
  0x01cb56c6: mov    %ebp,0x144(%edi)
  0x01cb56cc: mov    %eax,0x13c(%edi)
  0x01cb56d2: call   0x5505ab90
  0x01cb56d7: add    $0x8,%esp
  0x01cb56da: push   %eax
  0x01cb56db: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb56e3: mov    -0xc(%eax),%eax
  0x01cb56e6: cmp    %eax,%edi
  0x01cb56e8: je     0x01cb56ff
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb56ee: push   $0x55312af0
  0x01cb56f3: call   0x01cb56f8
  0x01cb56f8: pusha  
  0x01cb56f9: call   0x54dedbf0
  0x01cb56fe: hlt    
  0x01cb56ff: pop    %eax
  0x01cb5700: movl   $0x0,0x13c(%edi)
  0x01cb570a: movl   $0x0,0x144(%edi)
  0x01cb5714: cmpl   $0x0,0x4(%edi)
  0x01cb571b: jne    0x01cb0340
  0x01cb5721: mov    -0x1c(%ebp),%esi
  0x01cb5724: mov    -0x18(%ebp),%edi
  0x01cb5727: ret    
  0x01cb5728: mov    -0x1c(%ebp),%esi
  0x01cb572b: pop    %eax
  0x01cb572c: mov    -0x20(%ebp),%ecx
  0x01cb572f: lea    -0x20(%ebp),%ebx
  0x01cb5732: jmp    0x01cb5825
  0x01cb5737: push   %eax
  0x01cb5738: mov    %ecx,%edx
  0x01cb573a: mov    %esi,-0x1c(%ebp)
  0x01cb573d: lea    (%edx),%eax
  0x01cb573f: mov    0x4(%edx),%ecx
  0x01cb5742: movl   $0x0,0x4(%edx)
  0x01cb5749: mov    (%ecx),%ebx
  0x01cb574b: and    $0x7,%ebx
  0x01cb574e: cmp    $0x5,%ebx
  0x01cb5751: je     0x01cb580c
  0x01cb5757: mov    (%eax),%ebx
  0x01cb5759: test   %ebx,%ebx
  0x01cb575b: je     0x01cb580c
  0x01cb5761: lock cmpxchg %ebx,(%ecx)
  0x01cb5765: je     0x01cb580c
  0x01cb576b: mov    %ecx,0x4(%edx)
  0x01cb576e: call   0x01cb5778
  0x01cb5773: jmp    0x01cb580c
  0x01cb5778: push   %edx
  0x01cb5779: lea    0x8(%esp),%eax
  0x01cb577d: cmpl   $0x0,-0x8(%ebp)
  0x01cb5784: je     0x01cb579b
  0x01cb578a: push   $0x55310188
  0x01cb578f: call   0x01cb5794
  0x01cb5794: pusha  
  0x01cb5795: call   0x54dedbf0
  0x01cb579a: hlt    
  0x01cb579b: mov    %esi,-0x1c(%ebp)
  0x01cb579e: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb57a6: mov    -0xc(%edi),%edi
  0x01cb57a9: push   %edi
  0x01cb57aa: mov    %ebp,0x144(%edi)
  0x01cb57b0: mov    %eax,0x13c(%edi)
  0x01cb57b6: call   0x5505ab90
  0x01cb57bb: add    $0x8,%esp
  0x01cb57be: push   %eax
  0x01cb57bf: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb57c7: mov    -0xc(%eax),%eax
  0x01cb57ca: cmp    %eax,%edi
  0x01cb57cc: je     0x01cb57e3
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb57d2: push   $0x55312af0
  0x01cb57d7: call   0x01cb57dc
  0x01cb57dc: pusha  
  0x01cb57dd: call   0x54dedbf0
  0x01cb57e2: hlt    
  0x01cb57e3: pop    %eax
  0x01cb57e4: movl   $0x0,0x13c(%edi)
  0x01cb57ee: movl   $0x0,0x144(%edi)
  0x01cb57f8: cmpl   $0x0,0x4(%edi)
  0x01cb57ff: jne    0x01cb0340
  0x01cb5805: mov    -0x1c(%ebp),%esi
  0x01cb5808: mov    -0x18(%ebp),%edi
  0x01cb580b: ret    
  0x01cb580c: mov    -0x1c(%ebp),%esi
  0x01cb580f: pop    %eax
  0x01cb5810: jmp    0x01cb572c
  0x01cb5815: cmpl   $0x0,0x4(%ecx)
  0x01cb581c: jne    0x01cb5737
  0x01cb5822: add    $0x8,%ecx
  0x01cb5825: cmp    %ebx,%ecx
  0x01cb5827: jne    0x01cb5815
  0x01cb5829: cmpb   $0x0,0x55633e5f
  0x01cb5830: je     0x01cb586e
  0x01cb5836: push   %eax
  0x01cb5837: mov    %fs:0x0(,%eiz,1),%ebx
  0x01cb583f: mov    -0xc(%ebx),%ebx
  0x01cb5842: mov    -0xc(%ebp),%ecx
  0x01cb5845: push   %ecx
  0x01cb5846: push   %ebx
  0x01cb5847: cmpl   $0x0,-0x8(%ebp)
  0x01cb584e: je     0x01cb5865
  0x01cb5854: push   $0x55310148
  0x01cb5859: call   0x01cb585e
  0x01cb585e: pusha  
  0x01cb585f: call   0x54dedbf0
  0x01cb5864: hlt    
  0x01cb5865: call   0x55215710
  0x01cb586a: add    $0x8,%esp
  0x01cb586d: pop    %eax
  0x01cb586e: mov    -0x4(%ebp),%ebx
  0x01cb5871: mov    %ebp,%esp
  0x01cb5873: pop    %ebp
  0x01cb5874: pop    %esi
  0x01cb5875: mov    %ebx,%esp
  0x01cb5877: jmp    *%esi
  0x01cb5879: mov    -0x1c(%ebp),%esi
  0x01cb587c: mov    -0x18(%ebp),%edi
  0x01cb587f: mov    -0x20(%ebp),%esp
  0x01cb5882: movl   $0x0,-0x8(%ebp)
  0x01cb5889: emms   
  0x01cb588b: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb5893: mov    -0xc(%ecx),%ecx
  0x01cb5896: mov    0x328(%ecx),%ecx
  0x01cb589c: mov    0x58(%ecx),%eax
  0x01cb589f: movl   $0xa,0x54(%ecx)
  0x01cb58a6: movl   $0x0,0x58(%ecx)
  0x01cb58ad: movl   $0x0,0x5c(%ecx)
  0x01cb58b4: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb58bc: mov    -0xc(%ecx),%ecx
  0x01cb58bf: mov    0x328(%ecx),%ecx
  0x01cb58c5: movl   $0x0,0x50(%ecx)
  0x01cb58cc: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb58d4: mov    -0xc(%ecx),%ecx
  0x01cb58d7: mov    0x1a1(%ecx),%bl
  0x01cb58dd: mov    %ebx,%edi
  0x01cb58df: movb   $0x0,0x1a1(%ecx)
  0x01cb58e6: mov    -0xc(%ebp),%ebx
  0x01cb58e9: mov    0x14(%ebx),%ecx
  0x01cb58ec: test   $0x20,%ecx
  0x01cb58f2: je     0x01cb59ee
  0x01cb58f8: mov    %edi,%ecx
  0x01cb58fa: test   $0xff,%cl
  0x01cb58fd: jne    0x01cb5aeb
  0x01cb5903: push   %eax
  0x01cb5904: lea    -0x28(%ebp),%edx
  0x01cb5907: mov    0x4(%edx),%eax
  0x01cb590a: test   %eax,%eax
  0x01cb590c: jne    0x01cb5918
  0x01cb5912: pop    %eax
  0x01cb5913: jmp    0x01cb59ee
  0x01cb5918: mov    %esi,-0x1c(%ebp)
  0x01cb591b: lea    (%edx),%eax
  0x01cb591d: mov    0x4(%edx),%ecx
  0x01cb5920: movl   $0x0,0x4(%edx)
  0x01cb5927: mov    (%ecx),%ebx
  0x01cb5929: and    $0x7,%ebx
  0x01cb592c: cmp    $0x5,%ebx
  0x01cb592f: je     0x01cb59ea
  0x01cb5935: mov    (%eax),%ebx
  0x01cb5937: test   %ebx,%ebx
  0x01cb5939: je     0x01cb59ea
  0x01cb593f: lock cmpxchg %ebx,(%ecx)
  0x01cb5943: je     0x01cb59ea
  0x01cb5949: mov    %ecx,0x4(%edx)
  0x01cb594c: call   0x01cb5956
  0x01cb5951: jmp    0x01cb59ea
  0x01cb5956: push   %edx
  0x01cb5957: lea    0x8(%esp),%eax
  0x01cb595b: cmpl   $0x0,-0x8(%ebp)
  0x01cb5962: je     0x01cb5979
  0x01cb5968: push   $0x55310188
  0x01cb596d: call   0x01cb5972
  0x01cb5972: pusha  
  0x01cb5973: call   0x54dedbf0
  0x01cb5978: hlt    
  0x01cb5979: mov    %esi,-0x1c(%ebp)
  0x01cb597c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb5984: mov    -0xc(%edi),%edi
  0x01cb5987: push   %edi
  0x01cb5988: mov    %ebp,0x144(%edi)
  0x01cb598e: mov    %eax,0x13c(%edi)
  0x01cb5994: call   0x5505ab90
  0x01cb5999: add    $0x8,%esp
  0x01cb599c: push   %eax
  0x01cb599d: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb59a5: mov    -0xc(%eax),%eax
  0x01cb59a8: cmp    %eax,%edi
  0x01cb59aa: je     0x01cb59c1
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb59b0: push   $0x55312af0
  0x01cb59b5: call   0x01cb59ba
  0x01cb59ba: pusha  
  0x01cb59bb: call   0x54dedbf0
  0x01cb59c0: hlt    
  0x01cb59c1: pop    %eax
  0x01cb59c2: movl   $0x0,0x13c(%edi)
  0x01cb59cc: movl   $0x0,0x144(%edi)
  0x01cb59d6: cmpl   $0x0,0x4(%edi)
  0x01cb59dd: jne    0x01cb0340
  0x01cb59e3: mov    -0x1c(%ebp),%esi
  0x01cb59e6: mov    -0x18(%ebp),%edi
  0x01cb59e9: ret    
  0x01cb59ea: mov    -0x1c(%ebp),%esi
  0x01cb59ed: pop    %eax
  0x01cb59ee: mov    -0x20(%ebp),%ecx
  0x01cb59f1: lea    -0x20(%ebp),%ebx
  0x01cb59f4: jmp    0x01cb5ae7
  0x01cb59f9: push   %eax
  0x01cb59fa: mov    %ecx,%edx
  0x01cb59fc: mov    %esi,-0x1c(%ebp)
  0x01cb59ff: lea    (%edx),%eax
  0x01cb5a01: mov    0x4(%edx),%ecx
  0x01cb5a04: movl   $0x0,0x4(%edx)
  0x01cb5a0b: mov    (%ecx),%ebx
  0x01cb5a0d: and    $0x7,%ebx
  0x01cb5a10: cmp    $0x5,%ebx
  0x01cb5a13: je     0x01cb5ace
  0x01cb5a19: mov    (%eax),%ebx
  0x01cb5a1b: test   %ebx,%ebx
  0x01cb5a1d: je     0x01cb5ace
  0x01cb5a23: lock cmpxchg %ebx,(%ecx)
  0x01cb5a27: je     0x01cb5ace
  0x01cb5a2d: mov    %ecx,0x4(%edx)
  0x01cb5a30: call   0x01cb5a3a
  0x01cb5a35: jmp    0x01cb5ace
  0x01cb5a3a: push   %edx
  0x01cb5a3b: lea    0x8(%esp),%eax
  0x01cb5a3f: cmpl   $0x0,-0x8(%ebp)
  0x01cb5a46: je     0x01cb5a5d
  0x01cb5a4c: push   $0x55310188
  0x01cb5a51: call   0x01cb5a56
  0x01cb5a56: pusha  
  0x01cb5a57: call   0x54dedbf0
  0x01cb5a5c: hlt    
  0x01cb5a5d: mov    %esi,-0x1c(%ebp)
  0x01cb5a60: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb5a68: mov    -0xc(%edi),%edi
  0x01cb5a6b: push   %edi
  0x01cb5a6c: mov    %ebp,0x144(%edi)
  0x01cb5a72: mov    %eax,0x13c(%edi)
  0x01cb5a78: call   0x5505ab90
  0x01cb5a7d: add    $0x8,%esp
  0x01cb5a80: push   %eax
  0x01cb5a81: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb5a89: mov    -0xc(%eax),%eax
  0x01cb5a8c: cmp    %eax,%edi
  0x01cb5a8e: je     0x01cb5aa5
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb5a94: push   $0x55312af0
  0x01cb5a99: call   0x01cb5a9e
  0x01cb5a9e: pusha  
  0x01cb5a9f: call   0x54dedbf0
  0x01cb5aa4: hlt    
  0x01cb5aa5: pop    %eax
  0x01cb5aa6: movl   $0x0,0x13c(%edi)
  0x01cb5ab0: movl   $0x0,0x144(%edi)
  0x01cb5aba: cmpl   $0x0,0x4(%edi)
  0x01cb5ac1: jne    0x01cb0340
  0x01cb5ac7: mov    -0x1c(%ebp),%esi
  0x01cb5aca: mov    -0x18(%ebp),%edi
  0x01cb5acd: ret    
  0x01cb5ace: mov    -0x1c(%ebp),%esi
  0x01cb5ad1: pop    %eax
  0x01cb5ad2: jmp    0x01cb59ee
  0x01cb5ad7: cmpl   $0x0,0x4(%ecx)
  0x01cb5ade: jne    0x01cb59f9
  0x01cb5ae4: add    $0x8,%ecx
  0x01cb5ae7: cmp    %ebx,%ecx
  0x01cb5ae9: jne    0x01cb5ad7
  0x01cb5aeb: cmpb   $0x0,0x55633e5f
  0x01cb5af2: je     0x01cb5b30
  0x01cb5af8: push   %eax
  0x01cb5af9: mov    %fs:0x0(,%eiz,1),%ebx
  0x01cb5b01: mov    -0xc(%ebx),%ebx
  0x01cb5b04: mov    -0xc(%ebp),%ecx
  0x01cb5b07: push   %ecx
  0x01cb5b08: push   %ebx
  0x01cb5b09: cmpl   $0x0,-0x8(%ebp)
  0x01cb5b10: je     0x01cb5b27
  0x01cb5b16: push   $0x55310148
  0x01cb5b1b: call   0x01cb5b20
  0x01cb5b20: pusha  
  0x01cb5b21: call   0x54dedbf0
  0x01cb5b26: hlt    
  0x01cb5b27: call   0x55215710
  0x01cb5b2c: add    $0x8,%esp
  0x01cb5b2f: pop    %eax
  0x01cb5b30: mov    -0x4(%ebp),%ebx
  0x01cb5b33: mov    %ebp,%esp
  0x01cb5b35: pop    %ebp
  0x01cb5b36: pop    %esi
  0x01cb5b37: mov    %ebx,%esp
  0x01cb5b39: jmp    *%esi
  0x01cb5b3b: nop    
  0x01cb5b3c: int3   
  0x01cb5b3d: int3   
  0x01cb5b3e: int3   
  0x01cb5b3f: int3   

----------------------------------------------------------------------
deoptimization entry points  [0x01cb5b50, 0x01cba350]  18432 bytes

  0x01cb5b50: movl   $0x0,-0x8(%ebp)
  0x01cb5b57: mov    -0x1c(%ebp),%esi
  0x01cb5b5a: mov    -0x18(%ebp),%edi
  0x01cb5b5d: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb5b65: mov    -0xc(%ecx),%ecx
  0x01cb5b68: cmpl   $0x0,0x4(%ecx)
  0x01cb5b6f: je     0x01cb5c23
  0x01cb5b75: call   0x01cb5b7f
  0x01cb5b7a: jmp    0x01cb5c12
  0x01cb5b7f: lea    0x4(%esp),%eax
  0x01cb5b83: cmpl   $0x0,-0x8(%ebp)
  0x01cb5b8a: je     0x01cb5ba1
  0x01cb5b90: push   $0x55310188
  0x01cb5b95: call   0x01cb5b9a
  0x01cb5b9a: pusha  
  0x01cb5b9b: call   0x54dedbf0
  0x01cb5ba0: hlt    
  0x01cb5ba1: mov    %esi,-0x1c(%ebp)
  0x01cb5ba4: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb5bac: mov    -0xc(%edi),%edi
  0x01cb5baf: push   %edi
  0x01cb5bb0: mov    %ebp,0x144(%edi)
  0x01cb5bb6: mov    %eax,0x13c(%edi)
  0x01cb5bbc: call   0x5505a470
  0x01cb5bc1: add    $0x4,%esp
  0x01cb5bc4: push   %eax
  0x01cb5bc5: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb5bcd: mov    -0xc(%eax),%eax
  0x01cb5bd0: cmp    %eax,%edi
  0x01cb5bd2: je     0x01cb5be9
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb5bd8: push   $0x55312af0
  0x01cb5bdd: call   0x01cb5be2
  0x01cb5be2: pusha  
  0x01cb5be3: call   0x54dedbf0
  0x01cb5be8: hlt    
  0x01cb5be9: pop    %eax
  0x01cb5bea: movl   $0x0,0x13c(%edi)
  0x01cb5bf4: movl   $0x0,0x144(%edi)
  0x01cb5bfe: cmpl   $0x0,0x4(%edi)
  0x01cb5c05: jne    0x01cb0340
  0x01cb5c0b: mov    -0x1c(%ebp),%esi
  0x01cb5c0e: mov    -0x18(%ebp),%edi
  0x01cb5c11: ret    
  0x01cb5c12: push   $0x552fd97c
  0x01cb5c17: call   0x01cb5c1c
  0x01cb5c1c: pusha  
  0x01cb5c1d: call   0x54dedbf0
  0x01cb5c22: hlt    
  0x01cb5c23: movzbl (%esi),%ebx
  0x01cb5c26: jmp    *0x55629838(,%ebx,4)
  0x01cb5c2d: sub    $0x8,%esp
  0x01cb5c30: movsd  %xmm0,(%esp)
  0x01cb5c35: fldl   (%esp)
  0x01cb5c38: add    $0x8,%esp
  0x01cb5c3b: movl   $0x0,-0x8(%ebp)
  0x01cb5c42: mov    -0x1c(%ebp),%esi
  0x01cb5c45: mov    -0x18(%ebp),%edi
  0x01cb5c48: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb5c50: mov    -0xc(%ecx),%ecx
  0x01cb5c53: cmpl   $0x0,0x4(%ecx)
  0x01cb5c5a: je     0x01cb5d0e
  0x01cb5c60: call   0x01cb5c6a
  0x01cb5c65: jmp    0x01cb5cfd
  0x01cb5c6a: lea    0x4(%esp),%eax
  0x01cb5c6e: cmpl   $0x0,-0x8(%ebp)
  0x01cb5c75: je     0x01cb5c8c
  0x01cb5c7b: push   $0x55310188
  0x01cb5c80: call   0x01cb5c85
  0x01cb5c85: pusha  
  0x01cb5c86: call   0x54dedbf0
  0x01cb5c8b: hlt    
  0x01cb5c8c: mov    %esi,-0x1c(%ebp)
  0x01cb5c8f: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb5c97: mov    -0xc(%edi),%edi
  0x01cb5c9a: push   %edi
  0x01cb5c9b: mov    %ebp,0x144(%edi)
  0x01cb5ca1: mov    %eax,0x13c(%edi)
  0x01cb5ca7: call   0x5505a470
  0x01cb5cac: add    $0x4,%esp
  0x01cb5caf: push   %eax
  0x01cb5cb0: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb5cb8: mov    -0xc(%eax),%eax
  0x01cb5cbb: cmp    %eax,%edi
  0x01cb5cbd: je     0x01cb5cd4
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb5cc3: push   $0x55312af0
  0x01cb5cc8: call   0x01cb5ccd
  0x01cb5ccd: pusha  
  0x01cb5cce: call   0x54dedbf0
  0x01cb5cd3: hlt    
  0x01cb5cd4: pop    %eax
  0x01cb5cd5: movl   $0x0,0x13c(%edi)
  0x01cb5cdf: movl   $0x0,0x144(%edi)
  0x01cb5ce9: cmpl   $0x0,0x4(%edi)
  0x01cb5cf0: jne    0x01cb0340
  0x01cb5cf6: mov    -0x1c(%ebp),%esi
  0x01cb5cf9: mov    -0x18(%ebp),%edi
  0x01cb5cfc: ret    
  0x01cb5cfd: push   $0x552fd97c
  0x01cb5d02: call   0x01cb5d07
  0x01cb5d07: pusha  
  0x01cb5d08: call   0x54dedbf0
  0x01cb5d0d: hlt    
  0x01cb5d0e: movzbl (%esi),%ebx
  0x01cb5d11: jmp    *0x55629038(,%ebx,4)
  0x01cb5d18: sub    $0x4,%esp
  0x01cb5d1b: movss  %xmm0,(%esp)
  0x01cb5d20: flds   (%esp)
  0x01cb5d23: add    $0x4,%esp
  0x01cb5d26: movl   $0x0,-0x8(%ebp)
  0x01cb5d2d: mov    -0x1c(%ebp),%esi
  0x01cb5d30: mov    -0x18(%ebp),%edi
  0x01cb5d33: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb5d3b: mov    -0xc(%ecx),%ecx
  0x01cb5d3e: cmpl   $0x0,0x4(%ecx)
  0x01cb5d45: je     0x01cb5df9
  0x01cb5d4b: call   0x01cb5d55
  0x01cb5d50: jmp    0x01cb5de8
  0x01cb5d55: lea    0x4(%esp),%eax
  0x01cb5d59: cmpl   $0x0,-0x8(%ebp)
  0x01cb5d60: je     0x01cb5d77
  0x01cb5d66: push   $0x55310188
  0x01cb5d6b: call   0x01cb5d70
  0x01cb5d70: pusha  
  0x01cb5d71: call   0x54dedbf0
  0x01cb5d76: hlt    
  0x01cb5d77: mov    %esi,-0x1c(%ebp)
  0x01cb5d7a: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb5d82: mov    -0xc(%edi),%edi
  0x01cb5d85: push   %edi
  0x01cb5d86: mov    %ebp,0x144(%edi)
  0x01cb5d8c: mov    %eax,0x13c(%edi)
  0x01cb5d92: call   0x5505a470
  0x01cb5d97: add    $0x4,%esp
  0x01cb5d9a: push   %eax
  0x01cb5d9b: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb5da3: mov    -0xc(%eax),%eax
  0x01cb5da6: cmp    %eax,%edi
  0x01cb5da8: je     0x01cb5dbf
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb5dae: push   $0x55312af0
  0x01cb5db3: call   0x01cb5db8
  0x01cb5db8: pusha  
  0x01cb5db9: call   0x54dedbf0
  0x01cb5dbe: hlt    
  0x01cb5dbf: pop    %eax
  0x01cb5dc0: movl   $0x0,0x13c(%edi)
  0x01cb5dca: movl   $0x0,0x144(%edi)
  0x01cb5dd4: cmpl   $0x0,0x4(%edi)
  0x01cb5ddb: jne    0x01cb0340
  0x01cb5de1: mov    -0x1c(%ebp),%esi
  0x01cb5de4: mov    -0x18(%ebp),%edi
  0x01cb5de7: ret    
  0x01cb5de8: push   $0x552fd97c
  0x01cb5ded: call   0x01cb5df2
  0x01cb5df2: pusha  
  0x01cb5df3: call   0x54dedbf0
  0x01cb5df8: hlt    
  0x01cb5df9: movzbl (%esi),%ebx
  0x01cb5dfc: jmp    *0x55628c38(,%ebx,4)
  0x01cb5e03: movl   $0x0,-0x8(%ebp)
  0x01cb5e0a: mov    -0x1c(%ebp),%esi
  0x01cb5e0d: mov    -0x18(%ebp),%edi
  0x01cb5e10: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb5e18: mov    -0xc(%ecx),%ecx
  0x01cb5e1b: cmpl   $0x0,0x4(%ecx)
  0x01cb5e22: je     0x01cb5ed6
  0x01cb5e28: call   0x01cb5e32
  0x01cb5e2d: jmp    0x01cb5ec5
  0x01cb5e32: lea    0x4(%esp),%eax
  0x01cb5e36: cmpl   $0x0,-0x8(%ebp)
  0x01cb5e3d: je     0x01cb5e54
  0x01cb5e43: push   $0x55310188
  0x01cb5e48: call   0x01cb5e4d
  0x01cb5e4d: pusha  
  0x01cb5e4e: call   0x54dedbf0
  0x01cb5e53: hlt    
  0x01cb5e54: mov    %esi,-0x1c(%ebp)
  0x01cb5e57: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb5e5f: mov    -0xc(%edi),%edi
  0x01cb5e62: push   %edi
  0x01cb5e63: mov    %ebp,0x144(%edi)
  0x01cb5e69: mov    %eax,0x13c(%edi)
  0x01cb5e6f: call   0x5505a470
  0x01cb5e74: add    $0x4,%esp
  0x01cb5e77: push   %eax
  0x01cb5e78: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb5e80: mov    -0xc(%eax),%eax
  0x01cb5e83: cmp    %eax,%edi
  0x01cb5e85: je     0x01cb5e9c
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb5e8b: push   $0x55312af0
  0x01cb5e90: call   0x01cb5e95
  0x01cb5e95: pusha  
  0x01cb5e96: call   0x54dedbf0
  0x01cb5e9b: hlt    
  0x01cb5e9c: pop    %eax
  0x01cb5e9d: movl   $0x0,0x13c(%edi)
  0x01cb5ea7: movl   $0x0,0x144(%edi)
  0x01cb5eb1: cmpl   $0x0,0x4(%edi)
  0x01cb5eb8: jne    0x01cb0340
  0x01cb5ebe: mov    -0x1c(%ebp),%esi
  0x01cb5ec1: mov    -0x18(%ebp),%edi
  0x01cb5ec4: ret    
  0x01cb5ec5: push   $0x552fd97c
  0x01cb5eca: call   0x01cb5ecf
  0x01cb5ecf: pusha  
  0x01cb5ed0: call   0x54dedbf0
  0x01cb5ed5: hlt    
  0x01cb5ed6: movzbl (%esi),%ebx
  0x01cb5ed9: jmp    *0x55628838(,%ebx,4)
  0x01cb5ee0: movl   $0x0,-0x8(%ebp)
  0x01cb5ee7: mov    -0x1c(%ebp),%esi
  0x01cb5eea: mov    -0x18(%ebp),%edi
  0x01cb5eed: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb5ef5: mov    -0xc(%ecx),%ecx
  0x01cb5ef8: cmpl   $0x0,0x4(%ecx)
  0x01cb5eff: je     0x01cb5fb3
  0x01cb5f05: call   0x01cb5f0f
  0x01cb5f0a: jmp    0x01cb5fa2
  0x01cb5f0f: lea    0x4(%esp),%eax
  0x01cb5f13: cmpl   $0x0,-0x8(%ebp)
  0x01cb5f1a: je     0x01cb5f31
  0x01cb5f20: push   $0x55310188
  0x01cb5f25: call   0x01cb5f2a
  0x01cb5f2a: pusha  
  0x01cb5f2b: call   0x54dedbf0
  0x01cb5f30: hlt    
  0x01cb5f31: mov    %esi,-0x1c(%ebp)
  0x01cb5f34: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb5f3c: mov    -0xc(%edi),%edi
  0x01cb5f3f: push   %edi
  0x01cb5f40: mov    %ebp,0x144(%edi)
  0x01cb5f46: mov    %eax,0x13c(%edi)
  0x01cb5f4c: call   0x5505a470
  0x01cb5f51: add    $0x4,%esp
  0x01cb5f54: push   %eax
  0x01cb5f55: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb5f5d: mov    -0xc(%eax),%eax
  0x01cb5f60: cmp    %eax,%edi
  0x01cb5f62: je     0x01cb5f79
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb5f68: push   $0x55312af0
  0x01cb5f6d: call   0x01cb5f72
  0x01cb5f72: pusha  
  0x01cb5f73: call   0x54dedbf0
  0x01cb5f78: hlt    
  0x01cb5f79: pop    %eax
  0x01cb5f7a: movl   $0x0,0x13c(%edi)
  0x01cb5f84: movl   $0x0,0x144(%edi)
  0x01cb5f8e: cmpl   $0x0,0x4(%edi)
  0x01cb5f95: jne    0x01cb0340
  0x01cb5f9b: mov    -0x1c(%ebp),%esi
  0x01cb5f9e: mov    -0x18(%ebp),%edi
  0x01cb5fa1: ret    
  0x01cb5fa2: push   $0x552fd97c
  0x01cb5fa7: call   0x01cb5fac
  0x01cb5fac: pusha  
  0x01cb5fad: call   0x54dedbf0
  0x01cb5fb2: hlt    
  0x01cb5fb3: movzbl (%esi),%ebx
  0x01cb5fb6: jmp    *0x55628438(,%ebx,4)
  0x01cb5fbd: movl   $0x0,-0x8(%ebp)
  0x01cb5fc4: mov    -0x1c(%ebp),%esi
  0x01cb5fc7: mov    -0x18(%ebp),%edi
  0x01cb5fca: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb5fd2: mov    -0xc(%ecx),%ecx
  0x01cb5fd5: cmpl   $0x0,0x4(%ecx)
  0x01cb5fdc: je     0x01cb6090
  0x01cb5fe2: call   0x01cb5fec
  0x01cb5fe7: jmp    0x01cb607f
  0x01cb5fec: lea    0x4(%esp),%eax
  0x01cb5ff0: cmpl   $0x0,-0x8(%ebp)
  0x01cb5ff7: je     0x01cb600e
  0x01cb5ffd: push   $0x55310188
  0x01cb6002: call   0x01cb6007
  0x01cb6007: pusha  
  0x01cb6008: call   0x54dedbf0
  0x01cb600d: hlt    
  0x01cb600e: mov    %esi,-0x1c(%ebp)
  0x01cb6011: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb6019: mov    -0xc(%edi),%edi
  0x01cb601c: push   %edi
  0x01cb601d: mov    %ebp,0x144(%edi)
  0x01cb6023: mov    %eax,0x13c(%edi)
  0x01cb6029: call   0x5505a470
  0x01cb602e: add    $0x4,%esp
  0x01cb6031: push   %eax
  0x01cb6032: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb603a: mov    -0xc(%eax),%eax
  0x01cb603d: cmp    %eax,%edi
  0x01cb603f: je     0x01cb6056
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb6045: push   $0x55312af0
  0x01cb604a: call   0x01cb604f
  0x01cb604f: pusha  
  0x01cb6050: call   0x54dedbf0
  0x01cb6055: hlt    
  0x01cb6056: pop    %eax
  0x01cb6057: movl   $0x0,0x13c(%edi)
  0x01cb6061: movl   $0x0,0x144(%edi)
  0x01cb606b: cmpl   $0x0,0x4(%edi)
  0x01cb6072: jne    0x01cb0340
  0x01cb6078: mov    -0x1c(%ebp),%esi
  0x01cb607b: mov    -0x18(%ebp),%edi
  0x01cb607e: ret    
  0x01cb607f: push   $0x552fd97c
  0x01cb6084: call   0x01cb6089
  0x01cb6089: pusha  
  0x01cb608a: call   0x54dedbf0
  0x01cb608f: hlt    
  0x01cb6090: movzbl (%esi),%ebx
  0x01cb6093: jmp    *0x55629438(,%ebx,4)
  0x01cb609a: movl   $0x0,-0x8(%ebp)
  0x01cb60a1: mov    -0x1c(%ebp),%esi
  0x01cb60a4: mov    -0x18(%ebp),%edi
  0x01cb60a7: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb60af: mov    -0xc(%ecx),%ecx
  0x01cb60b2: cmpl   $0x0,0x4(%ecx)
  0x01cb60b9: je     0x01cb616d
  0x01cb60bf: call   0x01cb60c9
  0x01cb60c4: jmp    0x01cb615c
  0x01cb60c9: lea    0x4(%esp),%eax
  0x01cb60cd: cmpl   $0x0,-0x8(%ebp)
  0x01cb60d4: je     0x01cb60eb
  0x01cb60da: push   $0x55310188
  0x01cb60df: call   0x01cb60e4
  0x01cb60e4: pusha  
  0x01cb60e5: call   0x54dedbf0
  0x01cb60ea: hlt    
  0x01cb60eb: mov    %esi,-0x1c(%ebp)
  0x01cb60ee: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb60f6: mov    -0xc(%edi),%edi
  0x01cb60f9: push   %edi
  0x01cb60fa: mov    %ebp,0x144(%edi)
  0x01cb6100: mov    %eax,0x13c(%edi)
  0x01cb6106: call   0x5505a470
  0x01cb610b: add    $0x4,%esp
  0x01cb610e: push   %eax
  0x01cb610f: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb6117: mov    -0xc(%eax),%eax
  0x01cb611a: cmp    %eax,%edi
  0x01cb611c: je     0x01cb6133
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb6122: push   $0x55312af0
  0x01cb6127: call   0x01cb612c
  0x01cb612c: pusha  
  0x01cb612d: call   0x54dedbf0
  0x01cb6132: hlt    
  0x01cb6133: pop    %eax
  0x01cb6134: movl   $0x0,0x13c(%edi)
  0x01cb613e: movl   $0x0,0x144(%edi)
  0x01cb6148: cmpl   $0x0,0x4(%edi)
  0x01cb614f: jne    0x01cb0340
  0x01cb6155: mov    -0x1c(%ebp),%esi
  0x01cb6158: mov    -0x18(%ebp),%edi
  0x01cb615b: ret    
  0x01cb615c: push   $0x552fd97c
  0x01cb6161: call   0x01cb6166
  0x01cb6166: pusha  
  0x01cb6167: call   0x54dedbf0
  0x01cb616c: hlt    
  0x01cb616d: movzbl (%esi),%ebx
  0x01cb6170: jmp    *0x55628438(,%ebx,4)
  0x01cb6177: movl   $0x0,-0x8(%ebp)
  0x01cb617e: mov    -0x1c(%ebp),%esi
  0x01cb6181: mov    -0x18(%ebp),%edi
  0x01cb6184: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb618c: mov    -0xc(%ecx),%ecx
  0x01cb618f: cmpl   $0x0,0x4(%ecx)
  0x01cb6196: je     0x01cb624a
  0x01cb619c: call   0x01cb61a6
  0x01cb61a1: jmp    0x01cb6239
  0x01cb61a6: lea    0x4(%esp),%eax
  0x01cb61aa: cmpl   $0x0,-0x8(%ebp)
  0x01cb61b1: je     0x01cb61c8
  0x01cb61b7: push   $0x55310188
  0x01cb61bc: call   0x01cb61c1
  0x01cb61c1: pusha  
  0x01cb61c2: call   0x54dedbf0
  0x01cb61c7: hlt    
  0x01cb61c8: mov    %esi,-0x1c(%ebp)
  0x01cb61cb: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb61d3: mov    -0xc(%edi),%edi
  0x01cb61d6: push   %edi
  0x01cb61d7: mov    %ebp,0x144(%edi)
  0x01cb61dd: mov    %eax,0x13c(%edi)
  0x01cb61e3: call   0x5505a470
  0x01cb61e8: add    $0x4,%esp
  0x01cb61eb: push   %eax
  0x01cb61ec: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb61f4: mov    -0xc(%eax),%eax
  0x01cb61f7: cmp    %eax,%edi
  0x01cb61f9: je     0x01cb6210
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb61ff: push   $0x55312af0
  0x01cb6204: call   0x01cb6209
  0x01cb6209: pusha  
  0x01cb620a: call   0x54dedbf0
  0x01cb620f: hlt    
  0x01cb6210: pop    %eax
  0x01cb6211: movl   $0x0,0x13c(%edi)
  0x01cb621b: movl   $0x0,0x144(%edi)
  0x01cb6225: cmpl   $0x0,0x4(%edi)
  0x01cb622c: jne    0x01cb0340
  0x01cb6232: mov    -0x1c(%ebp),%esi
  0x01cb6235: mov    -0x18(%ebp),%edi
  0x01cb6238: ret    
  0x01cb6239: push   $0x552fd97c
  0x01cb623e: call   0x01cb6243
  0x01cb6243: pusha  
  0x01cb6244: call   0x54dedbf0
  0x01cb6249: hlt    
  0x01cb624a: movzbl (%esi),%ebx
  0x01cb624d: jmp    *0x55628438(,%ebx,4)
  0x01cb6254: movl   $0x0,-0x8(%ebp)
  0x01cb625b: mov    -0x1c(%ebp),%esi
  0x01cb625e: mov    -0x18(%ebp),%edi
  0x01cb6261: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb6269: mov    -0xc(%ecx),%ecx
  0x01cb626c: cmpl   $0x0,0x4(%ecx)
  0x01cb6273: je     0x01cb6327
  0x01cb6279: call   0x01cb6283
  0x01cb627e: jmp    0x01cb6316
  0x01cb6283: lea    0x4(%esp),%eax
  0x01cb6287: cmpl   $0x0,-0x8(%ebp)
  0x01cb628e: je     0x01cb62a5
  0x01cb6294: push   $0x55310188
  0x01cb6299: call   0x01cb629e
  0x01cb629e: pusha  
  0x01cb629f: call   0x54dedbf0
  0x01cb62a4: hlt    
  0x01cb62a5: mov    %esi,-0x1c(%ebp)
  0x01cb62a8: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb62b0: mov    -0xc(%edi),%edi
  0x01cb62b3: push   %edi
  0x01cb62b4: mov    %ebp,0x144(%edi)
  0x01cb62ba: mov    %eax,0x13c(%edi)
  0x01cb62c0: call   0x5505a470
  0x01cb62c5: add    $0x4,%esp
  0x01cb62c8: push   %eax
  0x01cb62c9: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb62d1: mov    -0xc(%eax),%eax
  0x01cb62d4: cmp    %eax,%edi
  0x01cb62d6: je     0x01cb62ed
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb62dc: push   $0x55312af0
  0x01cb62e1: call   0x01cb62e6
  0x01cb62e6: pusha  
  0x01cb62e7: call   0x54dedbf0
  0x01cb62ec: hlt    
  0x01cb62ed: pop    %eax
  0x01cb62ee: movl   $0x0,0x13c(%edi)
  0x01cb62f8: movl   $0x0,0x144(%edi)
  0x01cb6302: cmpl   $0x0,0x4(%edi)
  0x01cb6309: jne    0x01cb0340
  0x01cb630f: mov    -0x1c(%ebp),%esi
  0x01cb6312: mov    -0x18(%ebp),%edi
  0x01cb6315: ret    
  0x01cb6316: push   $0x552fd97c
  0x01cb631b: call   0x01cb6320
  0x01cb6320: pusha  
  0x01cb6321: call   0x54dedbf0
  0x01cb6326: hlt    
  0x01cb6327: movzbl (%esi),%ebx
  0x01cb632a: jmp    *0x55628438(,%ebx,4)
  0x01cb6331: movl   $0x0,-0x8(%ebp)
  0x01cb6338: mov    -0x1c(%ebp),%esi
  0x01cb633b: mov    -0x18(%ebp),%edi
  0x01cb633e: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb6346: mov    -0xc(%ecx),%ecx
  0x01cb6349: cmpl   $0x0,0x4(%ecx)
  0x01cb6350: je     0x01cb6404
  0x01cb6356: call   0x01cb6360
  0x01cb635b: jmp    0x01cb63f3
  0x01cb6360: lea    0x4(%esp),%eax
  0x01cb6364: cmpl   $0x0,-0x8(%ebp)
  0x01cb636b: je     0x01cb6382
  0x01cb6371: push   $0x55310188
  0x01cb6376: call   0x01cb637b
  0x01cb637b: pusha  
  0x01cb637c: call   0x54dedbf0
  0x01cb6381: hlt    
  0x01cb6382: mov    %esi,-0x1c(%ebp)
  0x01cb6385: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb638d: mov    -0xc(%edi),%edi
  0x01cb6390: push   %edi
  0x01cb6391: mov    %ebp,0x144(%edi)
  0x01cb6397: mov    %eax,0x13c(%edi)
  0x01cb639d: call   0x5505a470
  0x01cb63a2: add    $0x4,%esp
  0x01cb63a5: push   %eax
  0x01cb63a6: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb63ae: mov    -0xc(%eax),%eax
  0x01cb63b1: cmp    %eax,%edi
  0x01cb63b3: je     0x01cb63ca
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb63b9: push   $0x55312af0
  0x01cb63be: call   0x01cb63c3
  0x01cb63c3: pusha  
  0x01cb63c4: call   0x54dedbf0
  0x01cb63c9: hlt    
  0x01cb63ca: pop    %eax
  0x01cb63cb: movl   $0x0,0x13c(%edi)
  0x01cb63d5: movl   $0x0,0x144(%edi)
  0x01cb63df: cmpl   $0x0,0x4(%edi)
  0x01cb63e6: jne    0x01cb0340
  0x01cb63ec: mov    -0x1c(%ebp),%esi
  0x01cb63ef: mov    -0x18(%ebp),%edi
  0x01cb63f2: ret    
  0x01cb63f3: push   $0x552fd97c
  0x01cb63f8: call   0x01cb63fd
  0x01cb63fd: pusha  
  0x01cb63fe: call   0x54dedbf0
  0x01cb6403: hlt    
  0x01cb6404: movzbl 0x1(%esi),%ebx
  0x01cb6408: inc    %esi
  0x01cb6409: jmp    *0x55629838(,%ebx,4)
  0x01cb6410: sub    $0x8,%esp
  0x01cb6413: movsd  %xmm0,(%esp)
  0x01cb6418: fldl   (%esp)
  0x01cb641b: add    $0x8,%esp
  0x01cb641e: movl   $0x0,-0x8(%ebp)
  0x01cb6425: mov    -0x1c(%ebp),%esi
  0x01cb6428: mov    -0x18(%ebp),%edi
  0x01cb642b: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb6433: mov    -0xc(%ecx),%ecx
  0x01cb6436: cmpl   $0x0,0x4(%ecx)
  0x01cb643d: je     0x01cb64f1
  0x01cb6443: call   0x01cb644d
  0x01cb6448: jmp    0x01cb64e0
  0x01cb644d: lea    0x4(%esp),%eax
  0x01cb6451: cmpl   $0x0,-0x8(%ebp)
  0x01cb6458: je     0x01cb646f
  0x01cb645e: push   $0x55310188
  0x01cb6463: call   0x01cb6468
  0x01cb6468: pusha  
  0x01cb6469: call   0x54dedbf0
  0x01cb646e: hlt    
  0x01cb646f: mov    %esi,-0x1c(%ebp)
  0x01cb6472: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb647a: mov    -0xc(%edi),%edi
  0x01cb647d: push   %edi
  0x01cb647e: mov    %ebp,0x144(%edi)
  0x01cb6484: mov    %eax,0x13c(%edi)
  0x01cb648a: call   0x5505a470
  0x01cb648f: add    $0x4,%esp
  0x01cb6492: push   %eax
  0x01cb6493: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb649b: mov    -0xc(%eax),%eax
  0x01cb649e: cmp    %eax,%edi
  0x01cb64a0: je     0x01cb64b7
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb64a6: push   $0x55312af0
  0x01cb64ab: call   0x01cb64b0
  0x01cb64b0: pusha  
  0x01cb64b1: call   0x54dedbf0
  0x01cb64b6: hlt    
  0x01cb64b7: pop    %eax
  0x01cb64b8: movl   $0x0,0x13c(%edi)
  0x01cb64c2: movl   $0x0,0x144(%edi)
  0x01cb64cc: cmpl   $0x0,0x4(%edi)
  0x01cb64d3: jne    0x01cb0340
  0x01cb64d9: mov    -0x1c(%ebp),%esi
  0x01cb64dc: mov    -0x18(%ebp),%edi
  0x01cb64df: ret    
  0x01cb64e0: push   $0x552fd97c
  0x01cb64e5: call   0x01cb64ea
  0x01cb64ea: pusha  
  0x01cb64eb: call   0x54dedbf0
  0x01cb64f0: hlt    
  0x01cb64f1: movzbl 0x1(%esi),%ebx
  0x01cb64f5: inc    %esi
  0x01cb64f6: jmp    *0x55629038(,%ebx,4)
  0x01cb64fd: sub    $0x4,%esp
  0x01cb6500: movss  %xmm0,(%esp)
  0x01cb6505: flds   (%esp)
  0x01cb6508: add    $0x4,%esp
  0x01cb650b: movl   $0x0,-0x8(%ebp)
  0x01cb6512: mov    -0x1c(%ebp),%esi
  0x01cb6515: mov    -0x18(%ebp),%edi
  0x01cb6518: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb6520: mov    -0xc(%ecx),%ecx
  0x01cb6523: cmpl   $0x0,0x4(%ecx)
  0x01cb652a: je     0x01cb65de
  0x01cb6530: call   0x01cb653a
  0x01cb6535: jmp    0x01cb65cd
  0x01cb653a: lea    0x4(%esp),%eax
  0x01cb653e: cmpl   $0x0,-0x8(%ebp)
  0x01cb6545: je     0x01cb655c
  0x01cb654b: push   $0x55310188
  0x01cb6550: call   0x01cb6555
  0x01cb6555: pusha  
  0x01cb6556: call   0x54dedbf0
  0x01cb655b: hlt    
  0x01cb655c: mov    %esi,-0x1c(%ebp)
  0x01cb655f: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb6567: mov    -0xc(%edi),%edi
  0x01cb656a: push   %edi
  0x01cb656b: mov    %ebp,0x144(%edi)
  0x01cb6571: mov    %eax,0x13c(%edi)
  0x01cb6577: call   0x5505a470
  0x01cb657c: add    $0x4,%esp
  0x01cb657f: push   %eax
  0x01cb6580: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb6588: mov    -0xc(%eax),%eax
  0x01cb658b: cmp    %eax,%edi
  0x01cb658d: je     0x01cb65a4
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb6593: push   $0x55312af0
  0x01cb6598: call   0x01cb659d
  0x01cb659d: pusha  
  0x01cb659e: call   0x54dedbf0
  0x01cb65a3: hlt    
  0x01cb65a4: pop    %eax
  0x01cb65a5: movl   $0x0,0x13c(%edi)
  0x01cb65af: movl   $0x0,0x144(%edi)
  0x01cb65b9: cmpl   $0x0,0x4(%edi)
  0x01cb65c0: jne    0x01cb0340
  0x01cb65c6: mov    -0x1c(%ebp),%esi
  0x01cb65c9: mov    -0x18(%ebp),%edi
  0x01cb65cc: ret    
  0x01cb65cd: push   $0x552fd97c
  0x01cb65d2: call   0x01cb65d7
  0x01cb65d7: pusha  
  0x01cb65d8: call   0x54dedbf0
  0x01cb65dd: hlt    
  0x01cb65de: movzbl 0x1(%esi),%ebx
  0x01cb65e2: inc    %esi
  0x01cb65e3: jmp    *0x55628c38(,%ebx,4)
  0x01cb65ea: movl   $0x0,-0x8(%ebp)
  0x01cb65f1: mov    -0x1c(%ebp),%esi
  0x01cb65f4: mov    -0x18(%ebp),%edi
  0x01cb65f7: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb65ff: mov    -0xc(%ecx),%ecx
  0x01cb6602: cmpl   $0x0,0x4(%ecx)
  0x01cb6609: je     0x01cb66bd
  0x01cb660f: call   0x01cb6619
  0x01cb6614: jmp    0x01cb66ac
  0x01cb6619: lea    0x4(%esp),%eax
  0x01cb661d: cmpl   $0x0,-0x8(%ebp)
  0x01cb6624: je     0x01cb663b
  0x01cb662a: push   $0x55310188
  0x01cb662f: call   0x01cb6634
  0x01cb6634: pusha  
  0x01cb6635: call   0x54dedbf0
  0x01cb663a: hlt    
  0x01cb663b: mov    %esi,-0x1c(%ebp)
  0x01cb663e: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb6646: mov    -0xc(%edi),%edi
  0x01cb6649: push   %edi
  0x01cb664a: mov    %ebp,0x144(%edi)
  0x01cb6650: mov    %eax,0x13c(%edi)
  0x01cb6656: call   0x5505a470
  0x01cb665b: add    $0x4,%esp
  0x01cb665e: push   %eax
  0x01cb665f: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb6667: mov    -0xc(%eax),%eax
  0x01cb666a: cmp    %eax,%edi
  0x01cb666c: je     0x01cb6683
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb6672: push   $0x55312af0
  0x01cb6677: call   0x01cb667c
  0x01cb667c: pusha  
  0x01cb667d: call   0x54dedbf0
  0x01cb6682: hlt    
  0x01cb6683: pop    %eax
  0x01cb6684: movl   $0x0,0x13c(%edi)
  0x01cb668e: movl   $0x0,0x144(%edi)
  0x01cb6698: cmpl   $0x0,0x4(%edi)
  0x01cb669f: jne    0x01cb0340
  0x01cb66a5: mov    -0x1c(%ebp),%esi
  0x01cb66a8: mov    -0x18(%ebp),%edi
  0x01cb66ab: ret    
  0x01cb66ac: push   $0x552fd97c
  0x01cb66b1: call   0x01cb66b6
  0x01cb66b6: pusha  
  0x01cb66b7: call   0x54dedbf0
  0x01cb66bc: hlt    
  0x01cb66bd: movzbl 0x1(%esi),%ebx
  0x01cb66c1: inc    %esi
  0x01cb66c2: jmp    *0x55628838(,%ebx,4)
  0x01cb66c9: movl   $0x0,-0x8(%ebp)
  0x01cb66d0: mov    -0x1c(%ebp),%esi
  0x01cb66d3: mov    -0x18(%ebp),%edi
  0x01cb66d6: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb66de: mov    -0xc(%ecx),%ecx
  0x01cb66e1: cmpl   $0x0,0x4(%ecx)
  0x01cb66e8: je     0x01cb679c
  0x01cb66ee: call   0x01cb66f8
  0x01cb66f3: jmp    0x01cb678b
  0x01cb66f8: lea    0x4(%esp),%eax
  0x01cb66fc: cmpl   $0x0,-0x8(%ebp)
  0x01cb6703: je     0x01cb671a
  0x01cb6709: push   $0x55310188
  0x01cb670e: call   0x01cb6713
  0x01cb6713: pusha  
  0x01cb6714: call   0x54dedbf0
  0x01cb6719: hlt    
  0x01cb671a: mov    %esi,-0x1c(%ebp)
  0x01cb671d: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb6725: mov    -0xc(%edi),%edi
  0x01cb6728: push   %edi
  0x01cb6729: mov    %ebp,0x144(%edi)
  0x01cb672f: mov    %eax,0x13c(%edi)
  0x01cb6735: call   0x5505a470
  0x01cb673a: add    $0x4,%esp
  0x01cb673d: push   %eax
  0x01cb673e: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb6746: mov    -0xc(%eax),%eax
  0x01cb6749: cmp    %eax,%edi
  0x01cb674b: je     0x01cb6762
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb6751: push   $0x55312af0
  0x01cb6756: call   0x01cb675b
  0x01cb675b: pusha  
  0x01cb675c: call   0x54dedbf0
  0x01cb6761: hlt    
  0x01cb6762: pop    %eax
  0x01cb6763: movl   $0x0,0x13c(%edi)
  0x01cb676d: movl   $0x0,0x144(%edi)
  0x01cb6777: cmpl   $0x0,0x4(%edi)
  0x01cb677e: jne    0x01cb0340
  0x01cb6784: mov    -0x1c(%ebp),%esi
  0x01cb6787: mov    -0x18(%ebp),%edi
  0x01cb678a: ret    
  0x01cb678b: push   $0x552fd97c
  0x01cb6790: call   0x01cb6795
  0x01cb6795: pusha  
  0x01cb6796: call   0x54dedbf0
  0x01cb679b: hlt    
  0x01cb679c: movzbl 0x1(%esi),%ebx
  0x01cb67a0: inc    %esi
  0x01cb67a1: jmp    *0x55628438(,%ebx,4)
  0x01cb67a8: movl   $0x0,-0x8(%ebp)
  0x01cb67af: mov    -0x1c(%ebp),%esi
  0x01cb67b2: mov    -0x18(%ebp),%edi
  0x01cb67b5: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb67bd: mov    -0xc(%ecx),%ecx
  0x01cb67c0: cmpl   $0x0,0x4(%ecx)
  0x01cb67c7: je     0x01cb687b
  0x01cb67cd: call   0x01cb67d7
  0x01cb67d2: jmp    0x01cb686a
  0x01cb67d7: lea    0x4(%esp),%eax
  0x01cb67db: cmpl   $0x0,-0x8(%ebp)
  0x01cb67e2: je     0x01cb67f9
  0x01cb67e8: push   $0x55310188
  0x01cb67ed: call   0x01cb67f2
  0x01cb67f2: pusha  
  0x01cb67f3: call   0x54dedbf0
  0x01cb67f8: hlt    
  0x01cb67f9: mov    %esi,-0x1c(%ebp)
  0x01cb67fc: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb6804: mov    -0xc(%edi),%edi
  0x01cb6807: push   %edi
  0x01cb6808: mov    %ebp,0x144(%edi)
  0x01cb680e: mov    %eax,0x13c(%edi)
  0x01cb6814: call   0x5505a470
  0x01cb6819: add    $0x4,%esp
  0x01cb681c: push   %eax
  0x01cb681d: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb6825: mov    -0xc(%eax),%eax
  0x01cb6828: cmp    %eax,%edi
  0x01cb682a: je     0x01cb6841
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb6830: push   $0x55312af0
  0x01cb6835: call   0x01cb683a
  0x01cb683a: pusha  
  0x01cb683b: call   0x54dedbf0
  0x01cb6840: hlt    
  0x01cb6841: pop    %eax
  0x01cb6842: movl   $0x0,0x13c(%edi)
  0x01cb684c: movl   $0x0,0x144(%edi)
  0x01cb6856: cmpl   $0x0,0x4(%edi)
  0x01cb685d: jne    0x01cb0340
  0x01cb6863: mov    -0x1c(%ebp),%esi
  0x01cb6866: mov    -0x18(%ebp),%edi
  0x01cb6869: ret    
  0x01cb686a: push   $0x552fd97c
  0x01cb686f: call   0x01cb6874
  0x01cb6874: pusha  
  0x01cb6875: call   0x54dedbf0
  0x01cb687a: hlt    
  0x01cb687b: movzbl 0x1(%esi),%ebx
  0x01cb687f: inc    %esi
  0x01cb6880: jmp    *0x55629438(,%ebx,4)
  0x01cb6887: movl   $0x0,-0x8(%ebp)
  0x01cb688e: mov    -0x1c(%ebp),%esi
  0x01cb6891: mov    -0x18(%ebp),%edi
  0x01cb6894: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb689c: mov    -0xc(%ecx),%ecx
  0x01cb689f: cmpl   $0x0,0x4(%ecx)
  0x01cb68a6: je     0x01cb695a
  0x01cb68ac: call   0x01cb68b6
  0x01cb68b1: jmp    0x01cb6949
  0x01cb68b6: lea    0x4(%esp),%eax
  0x01cb68ba: cmpl   $0x0,-0x8(%ebp)
  0x01cb68c1: je     0x01cb68d8
  0x01cb68c7: push   $0x55310188
  0x01cb68cc: call   0x01cb68d1
  0x01cb68d1: pusha  
  0x01cb68d2: call   0x54dedbf0
  0x01cb68d7: hlt    
  0x01cb68d8: mov    %esi,-0x1c(%ebp)
  0x01cb68db: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb68e3: mov    -0xc(%edi),%edi
  0x01cb68e6: push   %edi
  0x01cb68e7: mov    %ebp,0x144(%edi)
  0x01cb68ed: mov    %eax,0x13c(%edi)
  0x01cb68f3: call   0x5505a470
  0x01cb68f8: add    $0x4,%esp
  0x01cb68fb: push   %eax
  0x01cb68fc: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb6904: mov    -0xc(%eax),%eax
  0x01cb6907: cmp    %eax,%edi
  0x01cb6909: je     0x01cb6920
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb690f: push   $0x55312af0
  0x01cb6914: call   0x01cb6919
  0x01cb6919: pusha  
  0x01cb691a: call   0x54dedbf0
  0x01cb691f: hlt    
  0x01cb6920: pop    %eax
  0x01cb6921: movl   $0x0,0x13c(%edi)
  0x01cb692b: movl   $0x0,0x144(%edi)
  0x01cb6935: cmpl   $0x0,0x4(%edi)
  0x01cb693c: jne    0x01cb0340
  0x01cb6942: mov    -0x1c(%ebp),%esi
  0x01cb6945: mov    -0x18(%ebp),%edi
  0x01cb6948: ret    
  0x01cb6949: push   $0x552fd97c
  0x01cb694e: call   0x01cb6953
  0x01cb6953: pusha  
  0x01cb6954: call   0x54dedbf0
  0x01cb6959: hlt    
  0x01cb695a: movzbl 0x1(%esi),%ebx
  0x01cb695e: inc    %esi
  0x01cb695f: jmp    *0x55628438(,%ebx,4)
  0x01cb6966: movl   $0x0,-0x8(%ebp)
  0x01cb696d: mov    -0x1c(%ebp),%esi
  0x01cb6970: mov    -0x18(%ebp),%edi
  0x01cb6973: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb697b: mov    -0xc(%ecx),%ecx
  0x01cb697e: cmpl   $0x0,0x4(%ecx)
  0x01cb6985: je     0x01cb6a39
  0x01cb698b: call   0x01cb6995
  0x01cb6990: jmp    0x01cb6a28
  0x01cb6995: lea    0x4(%esp),%eax
  0x01cb6999: cmpl   $0x0,-0x8(%ebp)
  0x01cb69a0: je     0x01cb69b7
  0x01cb69a6: push   $0x55310188
  0x01cb69ab: call   0x01cb69b0
  0x01cb69b0: pusha  
  0x01cb69b1: call   0x54dedbf0
  0x01cb69b6: hlt    
  0x01cb69b7: mov    %esi,-0x1c(%ebp)
  0x01cb69ba: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb69c2: mov    -0xc(%edi),%edi
  0x01cb69c5: push   %edi
  0x01cb69c6: mov    %ebp,0x144(%edi)
  0x01cb69cc: mov    %eax,0x13c(%edi)
  0x01cb69d2: call   0x5505a470
  0x01cb69d7: add    $0x4,%esp
  0x01cb69da: push   %eax
  0x01cb69db: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb69e3: mov    -0xc(%eax),%eax
  0x01cb69e6: cmp    %eax,%edi
  0x01cb69e8: je     0x01cb69ff
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb69ee: push   $0x55312af0
  0x01cb69f3: call   0x01cb69f8
  0x01cb69f8: pusha  
  0x01cb69f9: call   0x54dedbf0
  0x01cb69fe: hlt    
  0x01cb69ff: pop    %eax
  0x01cb6a00: movl   $0x0,0x13c(%edi)
  0x01cb6a0a: movl   $0x0,0x144(%edi)
  0x01cb6a14: cmpl   $0x0,0x4(%edi)
  0x01cb6a1b: jne    0x01cb0340
  0x01cb6a21: mov    -0x1c(%ebp),%esi
  0x01cb6a24: mov    -0x18(%ebp),%edi
  0x01cb6a27: ret    
  0x01cb6a28: push   $0x552fd97c
  0x01cb6a2d: call   0x01cb6a32
  0x01cb6a32: pusha  
  0x01cb6a33: call   0x54dedbf0
  0x01cb6a38: hlt    
  0x01cb6a39: movzbl 0x1(%esi),%ebx
  0x01cb6a3d: inc    %esi
  0x01cb6a3e: jmp    *0x55628438(,%ebx,4)
  0x01cb6a45: movl   $0x0,-0x8(%ebp)
  0x01cb6a4c: mov    -0x1c(%ebp),%esi
  0x01cb6a4f: mov    -0x18(%ebp),%edi
  0x01cb6a52: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb6a5a: mov    -0xc(%ecx),%ecx
  0x01cb6a5d: cmpl   $0x0,0x4(%ecx)
  0x01cb6a64: je     0x01cb6b18
  0x01cb6a6a: call   0x01cb6a74
  0x01cb6a6f: jmp    0x01cb6b07
  0x01cb6a74: lea    0x4(%esp),%eax
  0x01cb6a78: cmpl   $0x0,-0x8(%ebp)
  0x01cb6a7f: je     0x01cb6a96
  0x01cb6a85: push   $0x55310188
  0x01cb6a8a: call   0x01cb6a8f
  0x01cb6a8f: pusha  
  0x01cb6a90: call   0x54dedbf0
  0x01cb6a95: hlt    
  0x01cb6a96: mov    %esi,-0x1c(%ebp)
  0x01cb6a99: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb6aa1: mov    -0xc(%edi),%edi
  0x01cb6aa4: push   %edi
  0x01cb6aa5: mov    %ebp,0x144(%edi)
  0x01cb6aab: mov    %eax,0x13c(%edi)
  0x01cb6ab1: call   0x5505a470
  0x01cb6ab6: add    $0x4,%esp
  0x01cb6ab9: push   %eax
  0x01cb6aba: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb6ac2: mov    -0xc(%eax),%eax
  0x01cb6ac5: cmp    %eax,%edi
  0x01cb6ac7: je     0x01cb6ade
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb6acd: push   $0x55312af0
  0x01cb6ad2: call   0x01cb6ad7
  0x01cb6ad7: pusha  
  0x01cb6ad8: call   0x54dedbf0
  0x01cb6add: hlt    
  0x01cb6ade: pop    %eax
  0x01cb6adf: movl   $0x0,0x13c(%edi)
  0x01cb6ae9: movl   $0x0,0x144(%edi)
  0x01cb6af3: cmpl   $0x0,0x4(%edi)
  0x01cb6afa: jne    0x01cb0340
  0x01cb6b00: mov    -0x1c(%ebp),%esi
  0x01cb6b03: mov    -0x18(%ebp),%edi
  0x01cb6b06: ret    
  0x01cb6b07: push   $0x552fd97c
  0x01cb6b0c: call   0x01cb6b11
  0x01cb6b11: pusha  
  0x01cb6b12: call   0x54dedbf0
  0x01cb6b17: hlt    
  0x01cb6b18: movzbl 0x1(%esi),%ebx
  0x01cb6b1c: inc    %esi
  0x01cb6b1d: jmp    *0x55628438(,%ebx,4)
  0x01cb6b24: movl   $0x0,-0x8(%ebp)
  0x01cb6b2b: mov    -0x1c(%ebp),%esi
  0x01cb6b2e: mov    -0x18(%ebp),%edi
  0x01cb6b31: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb6b39: mov    -0xc(%ecx),%ecx
  0x01cb6b3c: cmpl   $0x0,0x4(%ecx)
  0x01cb6b43: je     0x01cb6bf7
  0x01cb6b49: call   0x01cb6b53
  0x01cb6b4e: jmp    0x01cb6be6
  0x01cb6b53: lea    0x4(%esp),%eax
  0x01cb6b57: cmpl   $0x0,-0x8(%ebp)
  0x01cb6b5e: je     0x01cb6b75
  0x01cb6b64: push   $0x55310188
  0x01cb6b69: call   0x01cb6b6e
  0x01cb6b6e: pusha  
  0x01cb6b6f: call   0x54dedbf0
  0x01cb6b74: hlt    
  0x01cb6b75: mov    %esi,-0x1c(%ebp)
  0x01cb6b78: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb6b80: mov    -0xc(%edi),%edi
  0x01cb6b83: push   %edi
  0x01cb6b84: mov    %ebp,0x144(%edi)
  0x01cb6b8a: mov    %eax,0x13c(%edi)
  0x01cb6b90: call   0x5505a470
  0x01cb6b95: add    $0x4,%esp
  0x01cb6b98: push   %eax
  0x01cb6b99: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb6ba1: mov    -0xc(%eax),%eax
  0x01cb6ba4: cmp    %eax,%edi
  0x01cb6ba6: je     0x01cb6bbd
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb6bac: push   $0x55312af0
  0x01cb6bb1: call   0x01cb6bb6
  0x01cb6bb6: pusha  
  0x01cb6bb7: call   0x54dedbf0
  0x01cb6bbc: hlt    
  0x01cb6bbd: pop    %eax
  0x01cb6bbe: movl   $0x0,0x13c(%edi)
  0x01cb6bc8: movl   $0x0,0x144(%edi)
  0x01cb6bd2: cmpl   $0x0,0x4(%edi)
  0x01cb6bd9: jne    0x01cb0340
  0x01cb6bdf: mov    -0x1c(%ebp),%esi
  0x01cb6be2: mov    -0x18(%ebp),%edi
  0x01cb6be5: ret    
  0x01cb6be6: push   $0x552fd97c
  0x01cb6beb: call   0x01cb6bf0
  0x01cb6bf0: pusha  
  0x01cb6bf1: call   0x54dedbf0
  0x01cb6bf6: hlt    
  0x01cb6bf7: movzbl 0x2(%esi),%ebx
  0x01cb6bfb: add    $0x2,%esi
  0x01cb6bfe: jmp    *0x55629838(,%ebx,4)
  0x01cb6c05: sub    $0x8,%esp
  0x01cb6c08: movsd  %xmm0,(%esp)
  0x01cb6c0d: fldl   (%esp)
  0x01cb6c10: add    $0x8,%esp
  0x01cb6c13: movl   $0x0,-0x8(%ebp)
  0x01cb6c1a: mov    -0x1c(%ebp),%esi
  0x01cb6c1d: mov    -0x18(%ebp),%edi
  0x01cb6c20: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb6c28: mov    -0xc(%ecx),%ecx
  0x01cb6c2b: cmpl   $0x0,0x4(%ecx)
  0x01cb6c32: je     0x01cb6ce6
  0x01cb6c38: call   0x01cb6c42
  0x01cb6c3d: jmp    0x01cb6cd5
  0x01cb6c42: lea    0x4(%esp),%eax
  0x01cb6c46: cmpl   $0x0,-0x8(%ebp)
  0x01cb6c4d: je     0x01cb6c64
  0x01cb6c53: push   $0x55310188
  0x01cb6c58: call   0x01cb6c5d
  0x01cb6c5d: pusha  
  0x01cb6c5e: call   0x54dedbf0
  0x01cb6c63: hlt    
  0x01cb6c64: mov    %esi,-0x1c(%ebp)
  0x01cb6c67: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb6c6f: mov    -0xc(%edi),%edi
  0x01cb6c72: push   %edi
  0x01cb6c73: mov    %ebp,0x144(%edi)
  0x01cb6c79: mov    %eax,0x13c(%edi)
  0x01cb6c7f: call   0x5505a470
  0x01cb6c84: add    $0x4,%esp
  0x01cb6c87: push   %eax
  0x01cb6c88: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb6c90: mov    -0xc(%eax),%eax
  0x01cb6c93: cmp    %eax,%edi
  0x01cb6c95: je     0x01cb6cac
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb6c9b: push   $0x55312af0
  0x01cb6ca0: call   0x01cb6ca5
  0x01cb6ca5: pusha  
  0x01cb6ca6: call   0x54dedbf0
  0x01cb6cab: hlt    
  0x01cb6cac: pop    %eax
  0x01cb6cad: movl   $0x0,0x13c(%edi)
  0x01cb6cb7: movl   $0x0,0x144(%edi)
  0x01cb6cc1: cmpl   $0x0,0x4(%edi)
  0x01cb6cc8: jne    0x01cb0340
  0x01cb6cce: mov    -0x1c(%ebp),%esi
  0x01cb6cd1: mov    -0x18(%ebp),%edi
  0x01cb6cd4: ret    
  0x01cb6cd5: push   $0x552fd97c
  0x01cb6cda: call   0x01cb6cdf
  0x01cb6cdf: pusha  
  0x01cb6ce0: call   0x54dedbf0
  0x01cb6ce5: hlt    
  0x01cb6ce6: movzbl 0x2(%esi),%ebx
  0x01cb6cea: add    $0x2,%esi
  0x01cb6ced: jmp    *0x55629038(,%ebx,4)
  0x01cb6cf4: sub    $0x4,%esp
  0x01cb6cf7: movss  %xmm0,(%esp)
  0x01cb6cfc: flds   (%esp)
  0x01cb6cff: add    $0x4,%esp
  0x01cb6d02: movl   $0x0,-0x8(%ebp)
  0x01cb6d09: mov    -0x1c(%ebp),%esi
  0x01cb6d0c: mov    -0x18(%ebp),%edi
  0x01cb6d0f: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb6d17: mov    -0xc(%ecx),%ecx
  0x01cb6d1a: cmpl   $0x0,0x4(%ecx)
  0x01cb6d21: je     0x01cb6dd5
  0x01cb6d27: call   0x01cb6d31
  0x01cb6d2c: jmp    0x01cb6dc4
  0x01cb6d31: lea    0x4(%esp),%eax
  0x01cb6d35: cmpl   $0x0,-0x8(%ebp)
  0x01cb6d3c: je     0x01cb6d53
  0x01cb6d42: push   $0x55310188
  0x01cb6d47: call   0x01cb6d4c
  0x01cb6d4c: pusha  
  0x01cb6d4d: call   0x54dedbf0
  0x01cb6d52: hlt    
  0x01cb6d53: mov    %esi,-0x1c(%ebp)
  0x01cb6d56: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb6d5e: mov    -0xc(%edi),%edi
  0x01cb6d61: push   %edi
  0x01cb6d62: mov    %ebp,0x144(%edi)
  0x01cb6d68: mov    %eax,0x13c(%edi)
  0x01cb6d6e: call   0x5505a470
  0x01cb6d73: add    $0x4,%esp
  0x01cb6d76: push   %eax
  0x01cb6d77: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb6d7f: mov    -0xc(%eax),%eax
  0x01cb6d82: cmp    %eax,%edi
  0x01cb6d84: je     0x01cb6d9b
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb6d8a: push   $0x55312af0
  0x01cb6d8f: call   0x01cb6d94
  0x01cb6d94: pusha  
  0x01cb6d95: call   0x54dedbf0
  0x01cb6d9a: hlt    
  0x01cb6d9b: pop    %eax
  0x01cb6d9c: movl   $0x0,0x13c(%edi)
  0x01cb6da6: movl   $0x0,0x144(%edi)
  0x01cb6db0: cmpl   $0x0,0x4(%edi)
  0x01cb6db7: jne    0x01cb0340
  0x01cb6dbd: mov    -0x1c(%ebp),%esi
  0x01cb6dc0: mov    -0x18(%ebp),%edi
  0x01cb6dc3: ret    
  0x01cb6dc4: push   $0x552fd97c
  0x01cb6dc9: call   0x01cb6dce
  0x01cb6dce: pusha  
  0x01cb6dcf: call   0x54dedbf0
  0x01cb6dd4: hlt    
  0x01cb6dd5: movzbl 0x2(%esi),%ebx
  0x01cb6dd9: add    $0x2,%esi
  0x01cb6ddc: jmp    *0x55628c38(,%ebx,4)
  0x01cb6de3: movl   $0x0,-0x8(%ebp)
  0x01cb6dea: mov    -0x1c(%ebp),%esi
  0x01cb6ded: mov    -0x18(%ebp),%edi
  0x01cb6df0: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb6df8: mov    -0xc(%ecx),%ecx
  0x01cb6dfb: cmpl   $0x0,0x4(%ecx)
  0x01cb6e02: je     0x01cb6eb6
  0x01cb6e08: call   0x01cb6e12
  0x01cb6e0d: jmp    0x01cb6ea5
  0x01cb6e12: lea    0x4(%esp),%eax
  0x01cb6e16: cmpl   $0x0,-0x8(%ebp)
  0x01cb6e1d: je     0x01cb6e34
  0x01cb6e23: push   $0x55310188
  0x01cb6e28: call   0x01cb6e2d
  0x01cb6e2d: pusha  
  0x01cb6e2e: call   0x54dedbf0
  0x01cb6e33: hlt    
  0x01cb6e34: mov    %esi,-0x1c(%ebp)
  0x01cb6e37: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb6e3f: mov    -0xc(%edi),%edi
  0x01cb6e42: push   %edi
  0x01cb6e43: mov    %ebp,0x144(%edi)
  0x01cb6e49: mov    %eax,0x13c(%edi)
  0x01cb6e4f: call   0x5505a470
  0x01cb6e54: add    $0x4,%esp
  0x01cb6e57: push   %eax
  0x01cb6e58: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb6e60: mov    -0xc(%eax),%eax
  0x01cb6e63: cmp    %eax,%edi
  0x01cb6e65: je     0x01cb6e7c
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb6e6b: push   $0x55312af0
  0x01cb6e70: call   0x01cb6e75
  0x01cb6e75: pusha  
  0x01cb6e76: call   0x54dedbf0
  0x01cb6e7b: hlt    
  0x01cb6e7c: pop    %eax
  0x01cb6e7d: movl   $0x0,0x13c(%edi)
  0x01cb6e87: movl   $0x0,0x144(%edi)
  0x01cb6e91: cmpl   $0x0,0x4(%edi)
  0x01cb6e98: jne    0x01cb0340
  0x01cb6e9e: mov    -0x1c(%ebp),%esi
  0x01cb6ea1: mov    -0x18(%ebp),%edi
  0x01cb6ea4: ret    
  0x01cb6ea5: push   $0x552fd97c
  0x01cb6eaa: call   0x01cb6eaf
  0x01cb6eaf: pusha  
  0x01cb6eb0: call   0x54dedbf0
  0x01cb6eb5: hlt    
  0x01cb6eb6: movzbl 0x2(%esi),%ebx
  0x01cb6eba: add    $0x2,%esi
  0x01cb6ebd: jmp    *0x55628838(,%ebx,4)
  0x01cb6ec4: movl   $0x0,-0x8(%ebp)
  0x01cb6ecb: mov    -0x1c(%ebp),%esi
  0x01cb6ece: mov    -0x18(%ebp),%edi
  0x01cb6ed1: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb6ed9: mov    -0xc(%ecx),%ecx
  0x01cb6edc: cmpl   $0x0,0x4(%ecx)
  0x01cb6ee3: je     0x01cb6f97
  0x01cb6ee9: call   0x01cb6ef3
  0x01cb6eee: jmp    0x01cb6f86
  0x01cb6ef3: lea    0x4(%esp),%eax
  0x01cb6ef7: cmpl   $0x0,-0x8(%ebp)
  0x01cb6efe: je     0x01cb6f15
  0x01cb6f04: push   $0x55310188
  0x01cb6f09: call   0x01cb6f0e
  0x01cb6f0e: pusha  
  0x01cb6f0f: call   0x54dedbf0
  0x01cb6f14: hlt    
  0x01cb6f15: mov    %esi,-0x1c(%ebp)
  0x01cb6f18: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb6f20: mov    -0xc(%edi),%edi
  0x01cb6f23: push   %edi
  0x01cb6f24: mov    %ebp,0x144(%edi)
  0x01cb6f2a: mov    %eax,0x13c(%edi)
  0x01cb6f30: call   0x5505a470
  0x01cb6f35: add    $0x4,%esp
  0x01cb6f38: push   %eax
  0x01cb6f39: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb6f41: mov    -0xc(%eax),%eax
  0x01cb6f44: cmp    %eax,%edi
  0x01cb6f46: je     0x01cb6f5d
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb6f4c: push   $0x55312af0
  0x01cb6f51: call   0x01cb6f56
  0x01cb6f56: pusha  
  0x01cb6f57: call   0x54dedbf0
  0x01cb6f5c: hlt    
  0x01cb6f5d: pop    %eax
  0x01cb6f5e: movl   $0x0,0x13c(%edi)
  0x01cb6f68: movl   $0x0,0x144(%edi)
  0x01cb6f72: cmpl   $0x0,0x4(%edi)
  0x01cb6f79: jne    0x01cb0340
  0x01cb6f7f: mov    -0x1c(%ebp),%esi
  0x01cb6f82: mov    -0x18(%ebp),%edi
  0x01cb6f85: ret    
  0x01cb6f86: push   $0x552fd97c
  0x01cb6f8b: call   0x01cb6f90
  0x01cb6f90: pusha  
  0x01cb6f91: call   0x54dedbf0
  0x01cb6f96: hlt    
  0x01cb6f97: movzbl 0x2(%esi),%ebx
  0x01cb6f9b: add    $0x2,%esi
  0x01cb6f9e: jmp    *0x55628438(,%ebx,4)
  0x01cb6fa5: movl   $0x0,-0x8(%ebp)
  0x01cb6fac: mov    -0x1c(%ebp),%esi
  0x01cb6faf: mov    -0x18(%ebp),%edi
  0x01cb6fb2: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb6fba: mov    -0xc(%ecx),%ecx
  0x01cb6fbd: cmpl   $0x0,0x4(%ecx)
  0x01cb6fc4: je     0x01cb7078
  0x01cb6fca: call   0x01cb6fd4
  0x01cb6fcf: jmp    0x01cb7067
  0x01cb6fd4: lea    0x4(%esp),%eax
  0x01cb6fd8: cmpl   $0x0,-0x8(%ebp)
  0x01cb6fdf: je     0x01cb6ff6
  0x01cb6fe5: push   $0x55310188
  0x01cb6fea: call   0x01cb6fef
  0x01cb6fef: pusha  
  0x01cb6ff0: call   0x54dedbf0
  0x01cb6ff5: hlt    
  0x01cb6ff6: mov    %esi,-0x1c(%ebp)
  0x01cb6ff9: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb7001: mov    -0xc(%edi),%edi
  0x01cb7004: push   %edi
  0x01cb7005: mov    %ebp,0x144(%edi)
  0x01cb700b: mov    %eax,0x13c(%edi)
  0x01cb7011: call   0x5505a470
  0x01cb7016: add    $0x4,%esp
  0x01cb7019: push   %eax
  0x01cb701a: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb7022: mov    -0xc(%eax),%eax
  0x01cb7025: cmp    %eax,%edi
  0x01cb7027: je     0x01cb703e
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb702d: push   $0x55312af0
  0x01cb7032: call   0x01cb7037
  0x01cb7037: pusha  
  0x01cb7038: call   0x54dedbf0
  0x01cb703d: hlt    
  0x01cb703e: pop    %eax
  0x01cb703f: movl   $0x0,0x13c(%edi)
  0x01cb7049: movl   $0x0,0x144(%edi)
  0x01cb7053: cmpl   $0x0,0x4(%edi)
  0x01cb705a: jne    0x01cb0340
  0x01cb7060: mov    -0x1c(%ebp),%esi
  0x01cb7063: mov    -0x18(%ebp),%edi
  0x01cb7066: ret    
  0x01cb7067: push   $0x552fd97c
  0x01cb706c: call   0x01cb7071
  0x01cb7071: pusha  
  0x01cb7072: call   0x54dedbf0
  0x01cb7077: hlt    
  0x01cb7078: movzbl 0x2(%esi),%ebx
  0x01cb707c: add    $0x2,%esi
  0x01cb707f: jmp    *0x55629438(,%ebx,4)
  0x01cb7086: movl   $0x0,-0x8(%ebp)
  0x01cb708d: mov    -0x1c(%ebp),%esi
  0x01cb7090: mov    -0x18(%ebp),%edi
  0x01cb7093: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb709b: mov    -0xc(%ecx),%ecx
  0x01cb709e: cmpl   $0x0,0x4(%ecx)
  0x01cb70a5: je     0x01cb7159
  0x01cb70ab: call   0x01cb70b5
  0x01cb70b0: jmp    0x01cb7148
  0x01cb70b5: lea    0x4(%esp),%eax
  0x01cb70b9: cmpl   $0x0,-0x8(%ebp)
  0x01cb70c0: je     0x01cb70d7
  0x01cb70c6: push   $0x55310188
  0x01cb70cb: call   0x01cb70d0
  0x01cb70d0: pusha  
  0x01cb70d1: call   0x54dedbf0
  0x01cb70d6: hlt    
  0x01cb70d7: mov    %esi,-0x1c(%ebp)
  0x01cb70da: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb70e2: mov    -0xc(%edi),%edi
  0x01cb70e5: push   %edi
  0x01cb70e6: mov    %ebp,0x144(%edi)
  0x01cb70ec: mov    %eax,0x13c(%edi)
  0x01cb70f2: call   0x5505a470
  0x01cb70f7: add    $0x4,%esp
  0x01cb70fa: push   %eax
  0x01cb70fb: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb7103: mov    -0xc(%eax),%eax
  0x01cb7106: cmp    %eax,%edi
  0x01cb7108: je     0x01cb711f
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb710e: push   $0x55312af0
  0x01cb7113: call   0x01cb7118
  0x01cb7118: pusha  
  0x01cb7119: call   0x54dedbf0
  0x01cb711e: hlt    
  0x01cb711f: pop    %eax
  0x01cb7120: movl   $0x0,0x13c(%edi)
  0x01cb712a: movl   $0x0,0x144(%edi)
  0x01cb7134: cmpl   $0x0,0x4(%edi)
  0x01cb713b: jne    0x01cb0340
  0x01cb7141: mov    -0x1c(%ebp),%esi
  0x01cb7144: mov    -0x18(%ebp),%edi
  0x01cb7147: ret    
  0x01cb7148: push   $0x552fd97c
  0x01cb714d: call   0x01cb7152
  0x01cb7152: pusha  
  0x01cb7153: call   0x54dedbf0
  0x01cb7158: hlt    
  0x01cb7159: movzbl 0x2(%esi),%ebx
  0x01cb715d: add    $0x2,%esi
  0x01cb7160: jmp    *0x55628438(,%ebx,4)
  0x01cb7167: movl   $0x0,-0x8(%ebp)
  0x01cb716e: mov    -0x1c(%ebp),%esi
  0x01cb7171: mov    -0x18(%ebp),%edi
  0x01cb7174: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb717c: mov    -0xc(%ecx),%ecx
  0x01cb717f: cmpl   $0x0,0x4(%ecx)
  0x01cb7186: je     0x01cb723a
  0x01cb718c: call   0x01cb7196
  0x01cb7191: jmp    0x01cb7229
  0x01cb7196: lea    0x4(%esp),%eax
  0x01cb719a: cmpl   $0x0,-0x8(%ebp)
  0x01cb71a1: je     0x01cb71b8
  0x01cb71a7: push   $0x55310188
  0x01cb71ac: call   0x01cb71b1
  0x01cb71b1: pusha  
  0x01cb71b2: call   0x54dedbf0
  0x01cb71b7: hlt    
  0x01cb71b8: mov    %esi,-0x1c(%ebp)
  0x01cb71bb: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb71c3: mov    -0xc(%edi),%edi
  0x01cb71c6: push   %edi
  0x01cb71c7: mov    %ebp,0x144(%edi)
  0x01cb71cd: mov    %eax,0x13c(%edi)
  0x01cb71d3: call   0x5505a470
  0x01cb71d8: add    $0x4,%esp
  0x01cb71db: push   %eax
  0x01cb71dc: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb71e4: mov    -0xc(%eax),%eax
  0x01cb71e7: cmp    %eax,%edi
  0x01cb71e9: je     0x01cb7200
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb71ef: push   $0x55312af0
  0x01cb71f4: call   0x01cb71f9
  0x01cb71f9: pusha  
  0x01cb71fa: call   0x54dedbf0
  0x01cb71ff: hlt    
  0x01cb7200: pop    %eax
  0x01cb7201: movl   $0x0,0x13c(%edi)
  0x01cb720b: movl   $0x0,0x144(%edi)
  0x01cb7215: cmpl   $0x0,0x4(%edi)
  0x01cb721c: jne    0x01cb0340
  0x01cb7222: mov    -0x1c(%ebp),%esi
  0x01cb7225: mov    -0x18(%ebp),%edi
  0x01cb7228: ret    
  0x01cb7229: push   $0x552fd97c
  0x01cb722e: call   0x01cb7233
  0x01cb7233: pusha  
  0x01cb7234: call   0x54dedbf0
  0x01cb7239: hlt    
  0x01cb723a: movzbl 0x2(%esi),%ebx
  0x01cb723e: add    $0x2,%esi
  0x01cb7241: jmp    *0x55628438(,%ebx,4)
  0x01cb7248: movl   $0x0,-0x8(%ebp)
  0x01cb724f: mov    -0x1c(%ebp),%esi
  0x01cb7252: mov    -0x18(%ebp),%edi
  0x01cb7255: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb725d: mov    -0xc(%ecx),%ecx
  0x01cb7260: cmpl   $0x0,0x4(%ecx)
  0x01cb7267: je     0x01cb731b
  0x01cb726d: call   0x01cb7277
  0x01cb7272: jmp    0x01cb730a
  0x01cb7277: lea    0x4(%esp),%eax
  0x01cb727b: cmpl   $0x0,-0x8(%ebp)
  0x01cb7282: je     0x01cb7299
  0x01cb7288: push   $0x55310188
  0x01cb728d: call   0x01cb7292
  0x01cb7292: pusha  
  0x01cb7293: call   0x54dedbf0
  0x01cb7298: hlt    
  0x01cb7299: mov    %esi,-0x1c(%ebp)
  0x01cb729c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb72a4: mov    -0xc(%edi),%edi
  0x01cb72a7: push   %edi
  0x01cb72a8: mov    %ebp,0x144(%edi)
  0x01cb72ae: mov    %eax,0x13c(%edi)
  0x01cb72b4: call   0x5505a470
  0x01cb72b9: add    $0x4,%esp
  0x01cb72bc: push   %eax
  0x01cb72bd: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb72c5: mov    -0xc(%eax),%eax
  0x01cb72c8: cmp    %eax,%edi
  0x01cb72ca: je     0x01cb72e1
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb72d0: push   $0x55312af0
  0x01cb72d5: call   0x01cb72da
  0x01cb72da: pusha  
  0x01cb72db: call   0x54dedbf0
  0x01cb72e0: hlt    
  0x01cb72e1: pop    %eax
  0x01cb72e2: movl   $0x0,0x13c(%edi)
  0x01cb72ec: movl   $0x0,0x144(%edi)
  0x01cb72f6: cmpl   $0x0,0x4(%edi)
  0x01cb72fd: jne    0x01cb0340
  0x01cb7303: mov    -0x1c(%ebp),%esi
  0x01cb7306: mov    -0x18(%ebp),%edi
  0x01cb7309: ret    
  0x01cb730a: push   $0x552fd97c
  0x01cb730f: call   0x01cb7314
  0x01cb7314: pusha  
  0x01cb7315: call   0x54dedbf0
  0x01cb731a: hlt    
  0x01cb731b: movzbl 0x2(%esi),%ebx
  0x01cb731f: add    $0x2,%esi
  0x01cb7322: jmp    *0x55628438(,%ebx,4)
  0x01cb7329: movl   $0x0,-0x8(%ebp)
  0x01cb7330: mov    -0x1c(%ebp),%esi
  0x01cb7333: mov    -0x18(%ebp),%edi
  0x01cb7336: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb733e: mov    -0xc(%ecx),%ecx
  0x01cb7341: cmpl   $0x0,0x4(%ecx)
  0x01cb7348: je     0x01cb73fc
  0x01cb734e: call   0x01cb7358
  0x01cb7353: jmp    0x01cb73eb
  0x01cb7358: lea    0x4(%esp),%eax
  0x01cb735c: cmpl   $0x0,-0x8(%ebp)
  0x01cb7363: je     0x01cb737a
  0x01cb7369: push   $0x55310188
  0x01cb736e: call   0x01cb7373
  0x01cb7373: pusha  
  0x01cb7374: call   0x54dedbf0
  0x01cb7379: hlt    
  0x01cb737a: mov    %esi,-0x1c(%ebp)
  0x01cb737d: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb7385: mov    -0xc(%edi),%edi
  0x01cb7388: push   %edi
  0x01cb7389: mov    %ebp,0x144(%edi)
  0x01cb738f: mov    %eax,0x13c(%edi)
  0x01cb7395: call   0x5505a470
  0x01cb739a: add    $0x4,%esp
  0x01cb739d: push   %eax
  0x01cb739e: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb73a6: mov    -0xc(%eax),%eax
  0x01cb73a9: cmp    %eax,%edi
  0x01cb73ab: je     0x01cb73c2
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb73b1: push   $0x55312af0
  0x01cb73b6: call   0x01cb73bb
  0x01cb73bb: pusha  
  0x01cb73bc: call   0x54dedbf0
  0x01cb73c1: hlt    
  0x01cb73c2: pop    %eax
  0x01cb73c3: movl   $0x0,0x13c(%edi)
  0x01cb73cd: movl   $0x0,0x144(%edi)
  0x01cb73d7: cmpl   $0x0,0x4(%edi)
  0x01cb73de: jne    0x01cb0340
  0x01cb73e4: mov    -0x1c(%ebp),%esi
  0x01cb73e7: mov    -0x18(%ebp),%edi
  0x01cb73ea: ret    
  0x01cb73eb: push   $0x552fd97c
  0x01cb73f0: call   0x01cb73f5
  0x01cb73f5: pusha  
  0x01cb73f6: call   0x54dedbf0
  0x01cb73fb: hlt    
  0x01cb73fc: movzbl 0x3(%esi),%ebx
  0x01cb7400: add    $0x3,%esi
  0x01cb7403: jmp    *0x55629838(,%ebx,4)
  0x01cb740a: sub    $0x8,%esp
  0x01cb740d: movsd  %xmm0,(%esp)
  0x01cb7412: fldl   (%esp)
  0x01cb7415: add    $0x8,%esp
  0x01cb7418: movl   $0x0,-0x8(%ebp)
  0x01cb741f: mov    -0x1c(%ebp),%esi
  0x01cb7422: mov    -0x18(%ebp),%edi
  0x01cb7425: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb742d: mov    -0xc(%ecx),%ecx
  0x01cb7430: cmpl   $0x0,0x4(%ecx)
  0x01cb7437: je     0x01cb74eb
  0x01cb743d: call   0x01cb7447
  0x01cb7442: jmp    0x01cb74da
  0x01cb7447: lea    0x4(%esp),%eax
  0x01cb744b: cmpl   $0x0,-0x8(%ebp)
  0x01cb7452: je     0x01cb7469
  0x01cb7458: push   $0x55310188
  0x01cb745d: call   0x01cb7462
  0x01cb7462: pusha  
  0x01cb7463: call   0x54dedbf0
  0x01cb7468: hlt    
  0x01cb7469: mov    %esi,-0x1c(%ebp)
  0x01cb746c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb7474: mov    -0xc(%edi),%edi
  0x01cb7477: push   %edi
  0x01cb7478: mov    %ebp,0x144(%edi)
  0x01cb747e: mov    %eax,0x13c(%edi)
  0x01cb7484: call   0x5505a470
  0x01cb7489: add    $0x4,%esp
  0x01cb748c: push   %eax
  0x01cb748d: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb7495: mov    -0xc(%eax),%eax
  0x01cb7498: cmp    %eax,%edi
  0x01cb749a: je     0x01cb74b1
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb74a0: push   $0x55312af0
  0x01cb74a5: call   0x01cb74aa
  0x01cb74aa: pusha  
  0x01cb74ab: call   0x54dedbf0
  0x01cb74b0: hlt    
  0x01cb74b1: pop    %eax
  0x01cb74b2: movl   $0x0,0x13c(%edi)
  0x01cb74bc: movl   $0x0,0x144(%edi)
  0x01cb74c6: cmpl   $0x0,0x4(%edi)
  0x01cb74cd: jne    0x01cb0340
  0x01cb74d3: mov    -0x1c(%ebp),%esi
  0x01cb74d6: mov    -0x18(%ebp),%edi
  0x01cb74d9: ret    
  0x01cb74da: push   $0x552fd97c
  0x01cb74df: call   0x01cb74e4
  0x01cb74e4: pusha  
  0x01cb74e5: call   0x54dedbf0
  0x01cb74ea: hlt    
  0x01cb74eb: movzbl 0x3(%esi),%ebx
  0x01cb74ef: add    $0x3,%esi
  0x01cb74f2: jmp    *0x55629038(,%ebx,4)
  0x01cb74f9: sub    $0x4,%esp
  0x01cb74fc: movss  %xmm0,(%esp)
  0x01cb7501: flds   (%esp)
  0x01cb7504: add    $0x4,%esp
  0x01cb7507: movl   $0x0,-0x8(%ebp)
  0x01cb750e: mov    -0x1c(%ebp),%esi
  0x01cb7511: mov    -0x18(%ebp),%edi
  0x01cb7514: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb751c: mov    -0xc(%ecx),%ecx
  0x01cb751f: cmpl   $0x0,0x4(%ecx)
  0x01cb7526: je     0x01cb75da
  0x01cb752c: call   0x01cb7536
  0x01cb7531: jmp    0x01cb75c9
  0x01cb7536: lea    0x4(%esp),%eax
  0x01cb753a: cmpl   $0x0,-0x8(%ebp)
  0x01cb7541: je     0x01cb7558
  0x01cb7547: push   $0x55310188
  0x01cb754c: call   0x01cb7551
  0x01cb7551: pusha  
  0x01cb7552: call   0x54dedbf0
  0x01cb7557: hlt    
  0x01cb7558: mov    %esi,-0x1c(%ebp)
  0x01cb755b: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb7563: mov    -0xc(%edi),%edi
  0x01cb7566: push   %edi
  0x01cb7567: mov    %ebp,0x144(%edi)
  0x01cb756d: mov    %eax,0x13c(%edi)
  0x01cb7573: call   0x5505a470
  0x01cb7578: add    $0x4,%esp
  0x01cb757b: push   %eax
  0x01cb757c: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb7584: mov    -0xc(%eax),%eax
  0x01cb7587: cmp    %eax,%edi
  0x01cb7589: je     0x01cb75a0
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb758f: push   $0x55312af0
  0x01cb7594: call   0x01cb7599
  0x01cb7599: pusha  
  0x01cb759a: call   0x54dedbf0
  0x01cb759f: hlt    
  0x01cb75a0: pop    %eax
  0x01cb75a1: movl   $0x0,0x13c(%edi)
  0x01cb75ab: movl   $0x0,0x144(%edi)
  0x01cb75b5: cmpl   $0x0,0x4(%edi)
  0x01cb75bc: jne    0x01cb0340
  0x01cb75c2: mov    -0x1c(%ebp),%esi
  0x01cb75c5: mov    -0x18(%ebp),%edi
  0x01cb75c8: ret    
  0x01cb75c9: push   $0x552fd97c
  0x01cb75ce: call   0x01cb75d3
  0x01cb75d3: pusha  
  0x01cb75d4: call   0x54dedbf0
  0x01cb75d9: hlt    
  0x01cb75da: movzbl 0x3(%esi),%ebx
  0x01cb75de: add    $0x3,%esi
  0x01cb75e1: jmp    *0x55628c38(,%ebx,4)
  0x01cb75e8: movl   $0x0,-0x8(%ebp)
  0x01cb75ef: mov    -0x1c(%ebp),%esi
  0x01cb75f2: mov    -0x18(%ebp),%edi
  0x01cb75f5: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb75fd: mov    -0xc(%ecx),%ecx
  0x01cb7600: cmpl   $0x0,0x4(%ecx)
  0x01cb7607: je     0x01cb76bb
  0x01cb760d: call   0x01cb7617
  0x01cb7612: jmp    0x01cb76aa
  0x01cb7617: lea    0x4(%esp),%eax
  0x01cb761b: cmpl   $0x0,-0x8(%ebp)
  0x01cb7622: je     0x01cb7639
  0x01cb7628: push   $0x55310188
  0x01cb762d: call   0x01cb7632
  0x01cb7632: pusha  
  0x01cb7633: call   0x54dedbf0
  0x01cb7638: hlt    
  0x01cb7639: mov    %esi,-0x1c(%ebp)
  0x01cb763c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb7644: mov    -0xc(%edi),%edi
  0x01cb7647: push   %edi
  0x01cb7648: mov    %ebp,0x144(%edi)
  0x01cb764e: mov    %eax,0x13c(%edi)
  0x01cb7654: call   0x5505a470
  0x01cb7659: add    $0x4,%esp
  0x01cb765c: push   %eax
  0x01cb765d: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb7665: mov    -0xc(%eax),%eax
  0x01cb7668: cmp    %eax,%edi
  0x01cb766a: je     0x01cb7681
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb7670: push   $0x55312af0
  0x01cb7675: call   0x01cb767a
  0x01cb767a: pusha  
  0x01cb767b: call   0x54dedbf0
  0x01cb7680: hlt    
  0x01cb7681: pop    %eax
  0x01cb7682: movl   $0x0,0x13c(%edi)
  0x01cb768c: movl   $0x0,0x144(%edi)
  0x01cb7696: cmpl   $0x0,0x4(%edi)
  0x01cb769d: jne    0x01cb0340
  0x01cb76a3: mov    -0x1c(%ebp),%esi
  0x01cb76a6: mov    -0x18(%ebp),%edi
  0x01cb76a9: ret    
  0x01cb76aa: push   $0x552fd97c
  0x01cb76af: call   0x01cb76b4
  0x01cb76b4: pusha  
  0x01cb76b5: call   0x54dedbf0
  0x01cb76ba: hlt    
  0x01cb76bb: movzbl 0x3(%esi),%ebx
  0x01cb76bf: add    $0x3,%esi
  0x01cb76c2: jmp    *0x55628838(,%ebx,4)
  0x01cb76c9: movl   $0x0,-0x8(%ebp)
  0x01cb76d0: mov    -0x1c(%ebp),%esi
  0x01cb76d3: mov    -0x18(%ebp),%edi
  0x01cb76d6: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb76de: mov    -0xc(%ecx),%ecx
  0x01cb76e1: cmpl   $0x0,0x4(%ecx)
  0x01cb76e8: je     0x01cb779c
  0x01cb76ee: call   0x01cb76f8
  0x01cb76f3: jmp    0x01cb778b
  0x01cb76f8: lea    0x4(%esp),%eax
  0x01cb76fc: cmpl   $0x0,-0x8(%ebp)
  0x01cb7703: je     0x01cb771a
  0x01cb7709: push   $0x55310188
  0x01cb770e: call   0x01cb7713
  0x01cb7713: pusha  
  0x01cb7714: call   0x54dedbf0
  0x01cb7719: hlt    
  0x01cb771a: mov    %esi,-0x1c(%ebp)
  0x01cb771d: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb7725: mov    -0xc(%edi),%edi
  0x01cb7728: push   %edi
  0x01cb7729: mov    %ebp,0x144(%edi)
  0x01cb772f: mov    %eax,0x13c(%edi)
  0x01cb7735: call   0x5505a470
  0x01cb773a: add    $0x4,%esp
  0x01cb773d: push   %eax
  0x01cb773e: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb7746: mov    -0xc(%eax),%eax
  0x01cb7749: cmp    %eax,%edi
  0x01cb774b: je     0x01cb7762
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb7751: push   $0x55312af0
  0x01cb7756: call   0x01cb775b
  0x01cb775b: pusha  
  0x01cb775c: call   0x54dedbf0
  0x01cb7761: hlt    
  0x01cb7762: pop    %eax
  0x01cb7763: movl   $0x0,0x13c(%edi)
  0x01cb776d: movl   $0x0,0x144(%edi)
  0x01cb7777: cmpl   $0x0,0x4(%edi)
  0x01cb777e: jne    0x01cb0340
  0x01cb7784: mov    -0x1c(%ebp),%esi
  0x01cb7787: mov    -0x18(%ebp),%edi
  0x01cb778a: ret    
  0x01cb778b: push   $0x552fd97c
  0x01cb7790: call   0x01cb7795
  0x01cb7795: pusha  
  0x01cb7796: call   0x54dedbf0
  0x01cb779b: hlt    
  0x01cb779c: movzbl 0x3(%esi),%ebx
  0x01cb77a0: add    $0x3,%esi
  0x01cb77a3: jmp    *0x55628438(,%ebx,4)
  0x01cb77aa: movl   $0x0,-0x8(%ebp)
  0x01cb77b1: mov    -0x1c(%ebp),%esi
  0x01cb77b4: mov    -0x18(%ebp),%edi
  0x01cb77b7: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb77bf: mov    -0xc(%ecx),%ecx
  0x01cb77c2: cmpl   $0x0,0x4(%ecx)
  0x01cb77c9: je     0x01cb787d
  0x01cb77cf: call   0x01cb77d9
  0x01cb77d4: jmp    0x01cb786c
  0x01cb77d9: lea    0x4(%esp),%eax
  0x01cb77dd: cmpl   $0x0,-0x8(%ebp)
  0x01cb77e4: je     0x01cb77fb
  0x01cb77ea: push   $0x55310188
  0x01cb77ef: call   0x01cb77f4
  0x01cb77f4: pusha  
  0x01cb77f5: call   0x54dedbf0
  0x01cb77fa: hlt    
  0x01cb77fb: mov    %esi,-0x1c(%ebp)
  0x01cb77fe: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb7806: mov    -0xc(%edi),%edi
  0x01cb7809: push   %edi
  0x01cb780a: mov    %ebp,0x144(%edi)
  0x01cb7810: mov    %eax,0x13c(%edi)
  0x01cb7816: call   0x5505a470
  0x01cb781b: add    $0x4,%esp
  0x01cb781e: push   %eax
  0x01cb781f: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb7827: mov    -0xc(%eax),%eax
  0x01cb782a: cmp    %eax,%edi
  0x01cb782c: je     0x01cb7843
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb7832: push   $0x55312af0
  0x01cb7837: call   0x01cb783c
  0x01cb783c: pusha  
  0x01cb783d: call   0x54dedbf0
  0x01cb7842: hlt    
  0x01cb7843: pop    %eax
  0x01cb7844: movl   $0x0,0x13c(%edi)
  0x01cb784e: movl   $0x0,0x144(%edi)
  0x01cb7858: cmpl   $0x0,0x4(%edi)
  0x01cb785f: jne    0x01cb0340
  0x01cb7865: mov    -0x1c(%ebp),%esi
  0x01cb7868: mov    -0x18(%ebp),%edi
  0x01cb786b: ret    
  0x01cb786c: push   $0x552fd97c
  0x01cb7871: call   0x01cb7876
  0x01cb7876: pusha  
  0x01cb7877: call   0x54dedbf0
  0x01cb787c: hlt    
  0x01cb787d: movzbl 0x3(%esi),%ebx
  0x01cb7881: add    $0x3,%esi
  0x01cb7884: jmp    *0x55629438(,%ebx,4)
  0x01cb788b: movl   $0x0,-0x8(%ebp)
  0x01cb7892: mov    -0x1c(%ebp),%esi
  0x01cb7895: mov    -0x18(%ebp),%edi
  0x01cb7898: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb78a0: mov    -0xc(%ecx),%ecx
  0x01cb78a3: cmpl   $0x0,0x4(%ecx)
  0x01cb78aa: je     0x01cb795e
  0x01cb78b0: call   0x01cb78ba
  0x01cb78b5: jmp    0x01cb794d
  0x01cb78ba: lea    0x4(%esp),%eax
  0x01cb78be: cmpl   $0x0,-0x8(%ebp)
  0x01cb78c5: je     0x01cb78dc
  0x01cb78cb: push   $0x55310188
  0x01cb78d0: call   0x01cb78d5
  0x01cb78d5: pusha  
  0x01cb78d6: call   0x54dedbf0
  0x01cb78db: hlt    
  0x01cb78dc: mov    %esi,-0x1c(%ebp)
  0x01cb78df: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb78e7: mov    -0xc(%edi),%edi
  0x01cb78ea: push   %edi
  0x01cb78eb: mov    %ebp,0x144(%edi)
  0x01cb78f1: mov    %eax,0x13c(%edi)
  0x01cb78f7: call   0x5505a470
  0x01cb78fc: add    $0x4,%esp
  0x01cb78ff: push   %eax
  0x01cb7900: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb7908: mov    -0xc(%eax),%eax
  0x01cb790b: cmp    %eax,%edi
  0x01cb790d: je     0x01cb7924
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb7913: push   $0x55312af0
  0x01cb7918: call   0x01cb791d
  0x01cb791d: pusha  
  0x01cb791e: call   0x54dedbf0
  0x01cb7923: hlt    
  0x01cb7924: pop    %eax
  0x01cb7925: movl   $0x0,0x13c(%edi)
  0x01cb792f: movl   $0x0,0x144(%edi)
  0x01cb7939: cmpl   $0x0,0x4(%edi)
  0x01cb7940: jne    0x01cb0340
  0x01cb7946: mov    -0x1c(%ebp),%esi
  0x01cb7949: mov    -0x18(%ebp),%edi
  0x01cb794c: ret    
  0x01cb794d: push   $0x552fd97c
  0x01cb7952: call   0x01cb7957
  0x01cb7957: pusha  
  0x01cb7958: call   0x54dedbf0
  0x01cb795d: hlt    
  0x01cb795e: movzbl 0x3(%esi),%ebx
  0x01cb7962: add    $0x3,%esi
  0x01cb7965: jmp    *0x55628438(,%ebx,4)
  0x01cb796c: movl   $0x0,-0x8(%ebp)
  0x01cb7973: mov    -0x1c(%ebp),%esi
  0x01cb7976: mov    -0x18(%ebp),%edi
  0x01cb7979: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb7981: mov    -0xc(%ecx),%ecx
  0x01cb7984: cmpl   $0x0,0x4(%ecx)
  0x01cb798b: je     0x01cb7a3f
  0x01cb7991: call   0x01cb799b
  0x01cb7996: jmp    0x01cb7a2e
  0x01cb799b: lea    0x4(%esp),%eax
  0x01cb799f: cmpl   $0x0,-0x8(%ebp)
  0x01cb79a6: je     0x01cb79bd
  0x01cb79ac: push   $0x55310188
  0x01cb79b1: call   0x01cb79b6
  0x01cb79b6: pusha  
  0x01cb79b7: call   0x54dedbf0
  0x01cb79bc: hlt    
  0x01cb79bd: mov    %esi,-0x1c(%ebp)
  0x01cb79c0: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb79c8: mov    -0xc(%edi),%edi
  0x01cb79cb: push   %edi
  0x01cb79cc: mov    %ebp,0x144(%edi)
  0x01cb79d2: mov    %eax,0x13c(%edi)
  0x01cb79d8: call   0x5505a470
  0x01cb79dd: add    $0x4,%esp
  0x01cb79e0: push   %eax
  0x01cb79e1: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb79e9: mov    -0xc(%eax),%eax
  0x01cb79ec: cmp    %eax,%edi
  0x01cb79ee: je     0x01cb7a05
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb79f4: push   $0x55312af0
  0x01cb79f9: call   0x01cb79fe
  0x01cb79fe: pusha  
  0x01cb79ff: call   0x54dedbf0
  0x01cb7a04: hlt    
  0x01cb7a05: pop    %eax
  0x01cb7a06: movl   $0x0,0x13c(%edi)
  0x01cb7a10: movl   $0x0,0x144(%edi)
  0x01cb7a1a: cmpl   $0x0,0x4(%edi)
  0x01cb7a21: jne    0x01cb0340
  0x01cb7a27: mov    -0x1c(%ebp),%esi
  0x01cb7a2a: mov    -0x18(%ebp),%edi
  0x01cb7a2d: ret    
  0x01cb7a2e: push   $0x552fd97c
  0x01cb7a33: call   0x01cb7a38
  0x01cb7a38: pusha  
  0x01cb7a39: call   0x54dedbf0
  0x01cb7a3e: hlt    
  0x01cb7a3f: movzbl 0x3(%esi),%ebx
  0x01cb7a43: add    $0x3,%esi
  0x01cb7a46: jmp    *0x55628438(,%ebx,4)
  0x01cb7a4d: movl   $0x0,-0x8(%ebp)
  0x01cb7a54: mov    -0x1c(%ebp),%esi
  0x01cb7a57: mov    -0x18(%ebp),%edi
  0x01cb7a5a: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb7a62: mov    -0xc(%ecx),%ecx
  0x01cb7a65: cmpl   $0x0,0x4(%ecx)
  0x01cb7a6c: je     0x01cb7b20
  0x01cb7a72: call   0x01cb7a7c
  0x01cb7a77: jmp    0x01cb7b0f
  0x01cb7a7c: lea    0x4(%esp),%eax
  0x01cb7a80: cmpl   $0x0,-0x8(%ebp)
  0x01cb7a87: je     0x01cb7a9e
  0x01cb7a8d: push   $0x55310188
  0x01cb7a92: call   0x01cb7a97
  0x01cb7a97: pusha  
  0x01cb7a98: call   0x54dedbf0
  0x01cb7a9d: hlt    
  0x01cb7a9e: mov    %esi,-0x1c(%ebp)
  0x01cb7aa1: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb7aa9: mov    -0xc(%edi),%edi
  0x01cb7aac: push   %edi
  0x01cb7aad: mov    %ebp,0x144(%edi)
  0x01cb7ab3: mov    %eax,0x13c(%edi)
  0x01cb7ab9: call   0x5505a470
  0x01cb7abe: add    $0x4,%esp
  0x01cb7ac1: push   %eax
  0x01cb7ac2: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb7aca: mov    -0xc(%eax),%eax
  0x01cb7acd: cmp    %eax,%edi
  0x01cb7acf: je     0x01cb7ae6
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb7ad5: push   $0x55312af0
  0x01cb7ada: call   0x01cb7adf
  0x01cb7adf: pusha  
  0x01cb7ae0: call   0x54dedbf0
  0x01cb7ae5: hlt    
  0x01cb7ae6: pop    %eax
  0x01cb7ae7: movl   $0x0,0x13c(%edi)
  0x01cb7af1: movl   $0x0,0x144(%edi)
  0x01cb7afb: cmpl   $0x0,0x4(%edi)
  0x01cb7b02: jne    0x01cb0340
  0x01cb7b08: mov    -0x1c(%ebp),%esi
  0x01cb7b0b: mov    -0x18(%ebp),%edi
  0x01cb7b0e: ret    
  0x01cb7b0f: push   $0x552fd97c
  0x01cb7b14: call   0x01cb7b19
  0x01cb7b19: pusha  
  0x01cb7b1a: call   0x54dedbf0
  0x01cb7b1f: hlt    
  0x01cb7b20: movzbl 0x3(%esi),%ebx
  0x01cb7b24: add    $0x3,%esi
  0x01cb7b27: jmp    *0x55628438(,%ebx,4)
  0x01cb7b2e: movl   $0x0,-0x8(%ebp)
  0x01cb7b35: mov    -0x1c(%ebp),%esi
  0x01cb7b38: mov    -0x18(%ebp),%edi
  0x01cb7b3b: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb7b43: mov    -0xc(%ecx),%ecx
  0x01cb7b46: cmpl   $0x0,0x4(%ecx)
  0x01cb7b4d: je     0x01cb7c01
  0x01cb7b53: call   0x01cb7b5d
  0x01cb7b58: jmp    0x01cb7bf0
  0x01cb7b5d: lea    0x4(%esp),%eax
  0x01cb7b61: cmpl   $0x0,-0x8(%ebp)
  0x01cb7b68: je     0x01cb7b7f
  0x01cb7b6e: push   $0x55310188
  0x01cb7b73: call   0x01cb7b78
  0x01cb7b78: pusha  
  0x01cb7b79: call   0x54dedbf0
  0x01cb7b7e: hlt    
  0x01cb7b7f: mov    %esi,-0x1c(%ebp)
  0x01cb7b82: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb7b8a: mov    -0xc(%edi),%edi
  0x01cb7b8d: push   %edi
  0x01cb7b8e: mov    %ebp,0x144(%edi)
  0x01cb7b94: mov    %eax,0x13c(%edi)
  0x01cb7b9a: call   0x5505a470
  0x01cb7b9f: add    $0x4,%esp
  0x01cb7ba2: push   %eax
  0x01cb7ba3: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb7bab: mov    -0xc(%eax),%eax
  0x01cb7bae: cmp    %eax,%edi
  0x01cb7bb0: je     0x01cb7bc7
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb7bb6: push   $0x55312af0
  0x01cb7bbb: call   0x01cb7bc0
  0x01cb7bc0: pusha  
  0x01cb7bc1: call   0x54dedbf0
  0x01cb7bc6: hlt    
  0x01cb7bc7: pop    %eax
  0x01cb7bc8: movl   $0x0,0x13c(%edi)
  0x01cb7bd2: movl   $0x0,0x144(%edi)
  0x01cb7bdc: cmpl   $0x0,0x4(%edi)
  0x01cb7be3: jne    0x01cb0340
  0x01cb7be9: mov    -0x1c(%ebp),%esi
  0x01cb7bec: mov    -0x18(%ebp),%edi
  0x01cb7bef: ret    
  0x01cb7bf0: push   $0x552fd97c
  0x01cb7bf5: call   0x01cb7bfa
  0x01cb7bfa: pusha  
  0x01cb7bfb: call   0x54dedbf0
  0x01cb7c00: hlt    
  0x01cb7c01: movzbl 0x4(%esi),%ebx
  0x01cb7c05: add    $0x4,%esi
  0x01cb7c08: jmp    *0x55629838(,%ebx,4)
  0x01cb7c0f: sub    $0x8,%esp
  0x01cb7c12: movsd  %xmm0,(%esp)
  0x01cb7c17: fldl   (%esp)
  0x01cb7c1a: add    $0x8,%esp
  0x01cb7c1d: movl   $0x0,-0x8(%ebp)
  0x01cb7c24: mov    -0x1c(%ebp),%esi
  0x01cb7c27: mov    -0x18(%ebp),%edi
  0x01cb7c2a: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb7c32: mov    -0xc(%ecx),%ecx
  0x01cb7c35: cmpl   $0x0,0x4(%ecx)
  0x01cb7c3c: je     0x01cb7cf0
  0x01cb7c42: call   0x01cb7c4c
  0x01cb7c47: jmp    0x01cb7cdf
  0x01cb7c4c: lea    0x4(%esp),%eax
  0x01cb7c50: cmpl   $0x0,-0x8(%ebp)
  0x01cb7c57: je     0x01cb7c6e
  0x01cb7c5d: push   $0x55310188
  0x01cb7c62: call   0x01cb7c67
  0x01cb7c67: pusha  
  0x01cb7c68: call   0x54dedbf0
  0x01cb7c6d: hlt    
  0x01cb7c6e: mov    %esi,-0x1c(%ebp)
  0x01cb7c71: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb7c79: mov    -0xc(%edi),%edi
  0x01cb7c7c: push   %edi
  0x01cb7c7d: mov    %ebp,0x144(%edi)
  0x01cb7c83: mov    %eax,0x13c(%edi)
  0x01cb7c89: call   0x5505a470
  0x01cb7c8e: add    $0x4,%esp
  0x01cb7c91: push   %eax
  0x01cb7c92: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb7c9a: mov    -0xc(%eax),%eax
  0x01cb7c9d: cmp    %eax,%edi
  0x01cb7c9f: je     0x01cb7cb6
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb7ca5: push   $0x55312af0
  0x01cb7caa: call   0x01cb7caf
  0x01cb7caf: pusha  
  0x01cb7cb0: call   0x54dedbf0
  0x01cb7cb5: hlt    
  0x01cb7cb6: pop    %eax
  0x01cb7cb7: movl   $0x0,0x13c(%edi)
  0x01cb7cc1: movl   $0x0,0x144(%edi)
  0x01cb7ccb: cmpl   $0x0,0x4(%edi)
  0x01cb7cd2: jne    0x01cb0340
  0x01cb7cd8: mov    -0x1c(%ebp),%esi
  0x01cb7cdb: mov    -0x18(%ebp),%edi
  0x01cb7cde: ret    
  0x01cb7cdf: push   $0x552fd97c
  0x01cb7ce4: call   0x01cb7ce9
  0x01cb7ce9: pusha  
  0x01cb7cea: call   0x54dedbf0
  0x01cb7cef: hlt    
  0x01cb7cf0: movzbl 0x4(%esi),%ebx
  0x01cb7cf4: add    $0x4,%esi
  0x01cb7cf7: jmp    *0x55629038(,%ebx,4)
  0x01cb7cfe: sub    $0x4,%esp
  0x01cb7d01: movss  %xmm0,(%esp)
  0x01cb7d06: flds   (%esp)
  0x01cb7d09: add    $0x4,%esp
  0x01cb7d0c: movl   $0x0,-0x8(%ebp)
  0x01cb7d13: mov    -0x1c(%ebp),%esi
  0x01cb7d16: mov    -0x18(%ebp),%edi
  0x01cb7d19: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb7d21: mov    -0xc(%ecx),%ecx
  0x01cb7d24: cmpl   $0x0,0x4(%ecx)
  0x01cb7d2b: je     0x01cb7ddf
  0x01cb7d31: call   0x01cb7d3b
  0x01cb7d36: jmp    0x01cb7dce
  0x01cb7d3b: lea    0x4(%esp),%eax
  0x01cb7d3f: cmpl   $0x0,-0x8(%ebp)
  0x01cb7d46: je     0x01cb7d5d
  0x01cb7d4c: push   $0x55310188
  0x01cb7d51: call   0x01cb7d56
  0x01cb7d56: pusha  
  0x01cb7d57: call   0x54dedbf0
  0x01cb7d5c: hlt    
  0x01cb7d5d: mov    %esi,-0x1c(%ebp)
  0x01cb7d60: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb7d68: mov    -0xc(%edi),%edi
  0x01cb7d6b: push   %edi
  0x01cb7d6c: mov    %ebp,0x144(%edi)
  0x01cb7d72: mov    %eax,0x13c(%edi)
  0x01cb7d78: call   0x5505a470
  0x01cb7d7d: add    $0x4,%esp
  0x01cb7d80: push   %eax
  0x01cb7d81: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb7d89: mov    -0xc(%eax),%eax
  0x01cb7d8c: cmp    %eax,%edi
  0x01cb7d8e: je     0x01cb7da5
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb7d94: push   $0x55312af0
  0x01cb7d99: call   0x01cb7d9e
  0x01cb7d9e: pusha  
  0x01cb7d9f: call   0x54dedbf0
  0x01cb7da4: hlt    
  0x01cb7da5: pop    %eax
  0x01cb7da6: movl   $0x0,0x13c(%edi)
  0x01cb7db0: movl   $0x0,0x144(%edi)
  0x01cb7dba: cmpl   $0x0,0x4(%edi)
  0x01cb7dc1: jne    0x01cb0340
  0x01cb7dc7: mov    -0x1c(%ebp),%esi
  0x01cb7dca: mov    -0x18(%ebp),%edi
  0x01cb7dcd: ret    
  0x01cb7dce: push   $0x552fd97c
  0x01cb7dd3: call   0x01cb7dd8
  0x01cb7dd8: pusha  
  0x01cb7dd9: call   0x54dedbf0
  0x01cb7dde: hlt    
  0x01cb7ddf: movzbl 0x4(%esi),%ebx
  0x01cb7de3: add    $0x4,%esi
  0x01cb7de6: jmp    *0x55628c38(,%ebx,4)
  0x01cb7ded: movl   $0x0,-0x8(%ebp)
  0x01cb7df4: mov    -0x1c(%ebp),%esi
  0x01cb7df7: mov    -0x18(%ebp),%edi
  0x01cb7dfa: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb7e02: mov    -0xc(%ecx),%ecx
  0x01cb7e05: cmpl   $0x0,0x4(%ecx)
  0x01cb7e0c: je     0x01cb7ec0
  0x01cb7e12: call   0x01cb7e1c
  0x01cb7e17: jmp    0x01cb7eaf
  0x01cb7e1c: lea    0x4(%esp),%eax
  0x01cb7e20: cmpl   $0x0,-0x8(%ebp)
  0x01cb7e27: je     0x01cb7e3e
  0x01cb7e2d: push   $0x55310188
  0x01cb7e32: call   0x01cb7e37
  0x01cb7e37: pusha  
  0x01cb7e38: call   0x54dedbf0
  0x01cb7e3d: hlt    
  0x01cb7e3e: mov    %esi,-0x1c(%ebp)
  0x01cb7e41: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb7e49: mov    -0xc(%edi),%edi
  0x01cb7e4c: push   %edi
  0x01cb7e4d: mov    %ebp,0x144(%edi)
  0x01cb7e53: mov    %eax,0x13c(%edi)
  0x01cb7e59: call   0x5505a470
  0x01cb7e5e: add    $0x4,%esp
  0x01cb7e61: push   %eax
  0x01cb7e62: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb7e6a: mov    -0xc(%eax),%eax
  0x01cb7e6d: cmp    %eax,%edi
  0x01cb7e6f: je     0x01cb7e86
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb7e75: push   $0x55312af0
  0x01cb7e7a: call   0x01cb7e7f
  0x01cb7e7f: pusha  
  0x01cb7e80: call   0x54dedbf0
  0x01cb7e85: hlt    
  0x01cb7e86: pop    %eax
  0x01cb7e87: movl   $0x0,0x13c(%edi)
  0x01cb7e91: movl   $0x0,0x144(%edi)
  0x01cb7e9b: cmpl   $0x0,0x4(%edi)
  0x01cb7ea2: jne    0x01cb0340
  0x01cb7ea8: mov    -0x1c(%ebp),%esi
  0x01cb7eab: mov    -0x18(%ebp),%edi
  0x01cb7eae: ret    
  0x01cb7eaf: push   $0x552fd97c
  0x01cb7eb4: call   0x01cb7eb9
  0x01cb7eb9: pusha  
  0x01cb7eba: call   0x54dedbf0
  0x01cb7ebf: hlt    
  0x01cb7ec0: movzbl 0x4(%esi),%ebx
  0x01cb7ec4: add    $0x4,%esi
  0x01cb7ec7: jmp    *0x55628838(,%ebx,4)
  0x01cb7ece: movl   $0x0,-0x8(%ebp)
  0x01cb7ed5: mov    -0x1c(%ebp),%esi
  0x01cb7ed8: mov    -0x18(%ebp),%edi
  0x01cb7edb: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb7ee3: mov    -0xc(%ecx),%ecx
  0x01cb7ee6: cmpl   $0x0,0x4(%ecx)
  0x01cb7eed: je     0x01cb7fa1
  0x01cb7ef3: call   0x01cb7efd
  0x01cb7ef8: jmp    0x01cb7f90
  0x01cb7efd: lea    0x4(%esp),%eax
  0x01cb7f01: cmpl   $0x0,-0x8(%ebp)
  0x01cb7f08: je     0x01cb7f1f
  0x01cb7f0e: push   $0x55310188
  0x01cb7f13: call   0x01cb7f18
  0x01cb7f18: pusha  
  0x01cb7f19: call   0x54dedbf0
  0x01cb7f1e: hlt    
  0x01cb7f1f: mov    %esi,-0x1c(%ebp)
  0x01cb7f22: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb7f2a: mov    -0xc(%edi),%edi
  0x01cb7f2d: push   %edi
  0x01cb7f2e: mov    %ebp,0x144(%edi)
  0x01cb7f34: mov    %eax,0x13c(%edi)
  0x01cb7f3a: call   0x5505a470
  0x01cb7f3f: add    $0x4,%esp
  0x01cb7f42: push   %eax
  0x01cb7f43: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb7f4b: mov    -0xc(%eax),%eax
  0x01cb7f4e: cmp    %eax,%edi
  0x01cb7f50: je     0x01cb7f67
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb7f56: push   $0x55312af0
  0x01cb7f5b: call   0x01cb7f60
  0x01cb7f60: pusha  
  0x01cb7f61: call   0x54dedbf0
  0x01cb7f66: hlt    
  0x01cb7f67: pop    %eax
  0x01cb7f68: movl   $0x0,0x13c(%edi)
  0x01cb7f72: movl   $0x0,0x144(%edi)
  0x01cb7f7c: cmpl   $0x0,0x4(%edi)
  0x01cb7f83: jne    0x01cb0340
  0x01cb7f89: mov    -0x1c(%ebp),%esi
  0x01cb7f8c: mov    -0x18(%ebp),%edi
  0x01cb7f8f: ret    
  0x01cb7f90: push   $0x552fd97c
  0x01cb7f95: call   0x01cb7f9a
  0x01cb7f9a: pusha  
  0x01cb7f9b: call   0x54dedbf0
  0x01cb7fa0: hlt    
  0x01cb7fa1: movzbl 0x4(%esi),%ebx
  0x01cb7fa5: add    $0x4,%esi
  0x01cb7fa8: jmp    *0x55628438(,%ebx,4)
  0x01cb7faf: movl   $0x0,-0x8(%ebp)
  0x01cb7fb6: mov    -0x1c(%ebp),%esi
  0x01cb7fb9: mov    -0x18(%ebp),%edi
  0x01cb7fbc: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb7fc4: mov    -0xc(%ecx),%ecx
  0x01cb7fc7: cmpl   $0x0,0x4(%ecx)
  0x01cb7fce: je     0x01cb8082
  0x01cb7fd4: call   0x01cb7fde
  0x01cb7fd9: jmp    0x01cb8071
  0x01cb7fde: lea    0x4(%esp),%eax
  0x01cb7fe2: cmpl   $0x0,-0x8(%ebp)
  0x01cb7fe9: je     0x01cb8000
  0x01cb7fef: push   $0x55310188
  0x01cb7ff4: call   0x01cb7ff9
  0x01cb7ff9: pusha  
  0x01cb7ffa: call   0x54dedbf0
  0x01cb7fff: hlt    
  0x01cb8000: mov    %esi,-0x1c(%ebp)
  0x01cb8003: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb800b: mov    -0xc(%edi),%edi
  0x01cb800e: push   %edi
  0x01cb800f: mov    %ebp,0x144(%edi)
  0x01cb8015: mov    %eax,0x13c(%edi)
  0x01cb801b: call   0x5505a470
  0x01cb8020: add    $0x4,%esp
  0x01cb8023: push   %eax
  0x01cb8024: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb802c: mov    -0xc(%eax),%eax
  0x01cb802f: cmp    %eax,%edi
  0x01cb8031: je     0x01cb8048
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb8037: push   $0x55312af0
  0x01cb803c: call   0x01cb8041
  0x01cb8041: pusha  
  0x01cb8042: call   0x54dedbf0
  0x01cb8047: hlt    
  0x01cb8048: pop    %eax
  0x01cb8049: movl   $0x0,0x13c(%edi)
  0x01cb8053: movl   $0x0,0x144(%edi)
  0x01cb805d: cmpl   $0x0,0x4(%edi)
  0x01cb8064: jne    0x01cb0340
  0x01cb806a: mov    -0x1c(%ebp),%esi
  0x01cb806d: mov    -0x18(%ebp),%edi
  0x01cb8070: ret    
  0x01cb8071: push   $0x552fd97c
  0x01cb8076: call   0x01cb807b
  0x01cb807b: pusha  
  0x01cb807c: call   0x54dedbf0
  0x01cb8081: hlt    
  0x01cb8082: movzbl 0x4(%esi),%ebx
  0x01cb8086: add    $0x4,%esi
  0x01cb8089: jmp    *0x55629438(,%ebx,4)
  0x01cb8090: movl   $0x0,-0x8(%ebp)
  0x01cb8097: mov    -0x1c(%ebp),%esi
  0x01cb809a: mov    -0x18(%ebp),%edi
  0x01cb809d: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb80a5: mov    -0xc(%ecx),%ecx
  0x01cb80a8: cmpl   $0x0,0x4(%ecx)
  0x01cb80af: je     0x01cb8163
  0x01cb80b5: call   0x01cb80bf
  0x01cb80ba: jmp    0x01cb8152
  0x01cb80bf: lea    0x4(%esp),%eax
  0x01cb80c3: cmpl   $0x0,-0x8(%ebp)
  0x01cb80ca: je     0x01cb80e1
  0x01cb80d0: push   $0x55310188
  0x01cb80d5: call   0x01cb80da
  0x01cb80da: pusha  
  0x01cb80db: call   0x54dedbf0
  0x01cb80e0: hlt    
  0x01cb80e1: mov    %esi,-0x1c(%ebp)
  0x01cb80e4: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb80ec: mov    -0xc(%edi),%edi
  0x01cb80ef: push   %edi
  0x01cb80f0: mov    %ebp,0x144(%edi)
  0x01cb80f6: mov    %eax,0x13c(%edi)
  0x01cb80fc: call   0x5505a470
  0x01cb8101: add    $0x4,%esp
  0x01cb8104: push   %eax
  0x01cb8105: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb810d: mov    -0xc(%eax),%eax
  0x01cb8110: cmp    %eax,%edi
  0x01cb8112: je     0x01cb8129
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb8118: push   $0x55312af0
  0x01cb811d: call   0x01cb8122
  0x01cb8122: pusha  
  0x01cb8123: call   0x54dedbf0
  0x01cb8128: hlt    
  0x01cb8129: pop    %eax
  0x01cb812a: movl   $0x0,0x13c(%edi)
  0x01cb8134: movl   $0x0,0x144(%edi)
  0x01cb813e: cmpl   $0x0,0x4(%edi)
  0x01cb8145: jne    0x01cb0340
  0x01cb814b: mov    -0x1c(%ebp),%esi
  0x01cb814e: mov    -0x18(%ebp),%edi
  0x01cb8151: ret    
  0x01cb8152: push   $0x552fd97c
  0x01cb8157: call   0x01cb815c
  0x01cb815c: pusha  
  0x01cb815d: call   0x54dedbf0
  0x01cb8162: hlt    
  0x01cb8163: movzbl 0x4(%esi),%ebx
  0x01cb8167: add    $0x4,%esi
  0x01cb816a: jmp    *0x55628438(,%ebx,4)
  0x01cb8171: movl   $0x0,-0x8(%ebp)
  0x01cb8178: mov    -0x1c(%ebp),%esi
  0x01cb817b: mov    -0x18(%ebp),%edi
  0x01cb817e: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb8186: mov    -0xc(%ecx),%ecx
  0x01cb8189: cmpl   $0x0,0x4(%ecx)
  0x01cb8190: je     0x01cb8244
  0x01cb8196: call   0x01cb81a0
  0x01cb819b: jmp    0x01cb8233
  0x01cb81a0: lea    0x4(%esp),%eax
  0x01cb81a4: cmpl   $0x0,-0x8(%ebp)
  0x01cb81ab: je     0x01cb81c2
  0x01cb81b1: push   $0x55310188
  0x01cb81b6: call   0x01cb81bb
  0x01cb81bb: pusha  
  0x01cb81bc: call   0x54dedbf0
  0x01cb81c1: hlt    
  0x01cb81c2: mov    %esi,-0x1c(%ebp)
  0x01cb81c5: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb81cd: mov    -0xc(%edi),%edi
  0x01cb81d0: push   %edi
  0x01cb81d1: mov    %ebp,0x144(%edi)
  0x01cb81d7: mov    %eax,0x13c(%edi)
  0x01cb81dd: call   0x5505a470
  0x01cb81e2: add    $0x4,%esp
  0x01cb81e5: push   %eax
  0x01cb81e6: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb81ee: mov    -0xc(%eax),%eax
  0x01cb81f1: cmp    %eax,%edi
  0x01cb81f3: je     0x01cb820a
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb81f9: push   $0x55312af0
  0x01cb81fe: call   0x01cb8203
  0x01cb8203: pusha  
  0x01cb8204: call   0x54dedbf0
  0x01cb8209: hlt    
  0x01cb820a: pop    %eax
  0x01cb820b: movl   $0x0,0x13c(%edi)
  0x01cb8215: movl   $0x0,0x144(%edi)
  0x01cb821f: cmpl   $0x0,0x4(%edi)
  0x01cb8226: jne    0x01cb0340
  0x01cb822c: mov    -0x1c(%ebp),%esi
  0x01cb822f: mov    -0x18(%ebp),%edi
  0x01cb8232: ret    
  0x01cb8233: push   $0x552fd97c
  0x01cb8238: call   0x01cb823d
  0x01cb823d: pusha  
  0x01cb823e: call   0x54dedbf0
  0x01cb8243: hlt    
  0x01cb8244: movzbl 0x4(%esi),%ebx
  0x01cb8248: add    $0x4,%esi
  0x01cb824b: jmp    *0x55628438(,%ebx,4)
  0x01cb8252: movl   $0x0,-0x8(%ebp)
  0x01cb8259: mov    -0x1c(%ebp),%esi
  0x01cb825c: mov    -0x18(%ebp),%edi
  0x01cb825f: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb8267: mov    -0xc(%ecx),%ecx
  0x01cb826a: cmpl   $0x0,0x4(%ecx)
  0x01cb8271: je     0x01cb8325
  0x01cb8277: call   0x01cb8281
  0x01cb827c: jmp    0x01cb8314
  0x01cb8281: lea    0x4(%esp),%eax
  0x01cb8285: cmpl   $0x0,-0x8(%ebp)
  0x01cb828c: je     0x01cb82a3
  0x01cb8292: push   $0x55310188
  0x01cb8297: call   0x01cb829c
  0x01cb829c: pusha  
  0x01cb829d: call   0x54dedbf0
  0x01cb82a2: hlt    
  0x01cb82a3: mov    %esi,-0x1c(%ebp)
  0x01cb82a6: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb82ae: mov    -0xc(%edi),%edi
  0x01cb82b1: push   %edi
  0x01cb82b2: mov    %ebp,0x144(%edi)
  0x01cb82b8: mov    %eax,0x13c(%edi)
  0x01cb82be: call   0x5505a470
  0x01cb82c3: add    $0x4,%esp
  0x01cb82c6: push   %eax
  0x01cb82c7: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb82cf: mov    -0xc(%eax),%eax
  0x01cb82d2: cmp    %eax,%edi
  0x01cb82d4: je     0x01cb82eb
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb82da: push   $0x55312af0
  0x01cb82df: call   0x01cb82e4
  0x01cb82e4: pusha  
  0x01cb82e5: call   0x54dedbf0
  0x01cb82ea: hlt    
  0x01cb82eb: pop    %eax
  0x01cb82ec: movl   $0x0,0x13c(%edi)
  0x01cb82f6: movl   $0x0,0x144(%edi)
  0x01cb8300: cmpl   $0x0,0x4(%edi)
  0x01cb8307: jne    0x01cb0340
  0x01cb830d: mov    -0x1c(%ebp),%esi
  0x01cb8310: mov    -0x18(%ebp),%edi
  0x01cb8313: ret    
  0x01cb8314: push   $0x552fd97c
  0x01cb8319: call   0x01cb831e
  0x01cb831e: pusha  
  0x01cb831f: call   0x54dedbf0
  0x01cb8324: hlt    
  0x01cb8325: movzbl 0x4(%esi),%ebx
  0x01cb8329: add    $0x4,%esi
  0x01cb832c: jmp    *0x55628438(,%ebx,4)
  0x01cb8333: movl   $0x0,-0x8(%ebp)
  0x01cb833a: mov    -0x1c(%ebp),%esi
  0x01cb833d: mov    -0x18(%ebp),%edi
  0x01cb8340: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb8348: mov    -0xc(%ecx),%ecx
  0x01cb834b: cmpl   $0x0,0x4(%ecx)
  0x01cb8352: je     0x01cb8406
  0x01cb8358: call   0x01cb8362
  0x01cb835d: jmp    0x01cb83f5
  0x01cb8362: lea    0x4(%esp),%eax
  0x01cb8366: cmpl   $0x0,-0x8(%ebp)
  0x01cb836d: je     0x01cb8384
  0x01cb8373: push   $0x55310188
  0x01cb8378: call   0x01cb837d
  0x01cb837d: pusha  
  0x01cb837e: call   0x54dedbf0
  0x01cb8383: hlt    
  0x01cb8384: mov    %esi,-0x1c(%ebp)
  0x01cb8387: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb838f: mov    -0xc(%edi),%edi
  0x01cb8392: push   %edi
  0x01cb8393: mov    %ebp,0x144(%edi)
  0x01cb8399: mov    %eax,0x13c(%edi)
  0x01cb839f: call   0x5505a470
  0x01cb83a4: add    $0x4,%esp
  0x01cb83a7: push   %eax
  0x01cb83a8: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb83b0: mov    -0xc(%eax),%eax
  0x01cb83b3: cmp    %eax,%edi
  0x01cb83b5: je     0x01cb83cc
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb83bb: push   $0x55312af0
  0x01cb83c0: call   0x01cb83c5
  0x01cb83c5: pusha  
  0x01cb83c6: call   0x54dedbf0
  0x01cb83cb: hlt    
  0x01cb83cc: pop    %eax
  0x01cb83cd: movl   $0x0,0x13c(%edi)
  0x01cb83d7: movl   $0x0,0x144(%edi)
  0x01cb83e1: cmpl   $0x0,0x4(%edi)
  0x01cb83e8: jne    0x01cb0340
  0x01cb83ee: mov    -0x1c(%ebp),%esi
  0x01cb83f1: mov    -0x18(%ebp),%edi
  0x01cb83f4: ret    
  0x01cb83f5: push   $0x552fd97c
  0x01cb83fa: call   0x01cb83ff
  0x01cb83ff: pusha  
  0x01cb8400: call   0x54dedbf0
  0x01cb8405: hlt    
  0x01cb8406: movzbl 0x5(%esi),%ebx
  0x01cb840a: add    $0x5,%esi
  0x01cb840d: jmp    *0x55629838(,%ebx,4)
  0x01cb8414: sub    $0x8,%esp
  0x01cb8417: movsd  %xmm0,(%esp)
  0x01cb841c: fldl   (%esp)
  0x01cb841f: add    $0x8,%esp
  0x01cb8422: movl   $0x0,-0x8(%ebp)
  0x01cb8429: mov    -0x1c(%ebp),%esi
  0x01cb842c: mov    -0x18(%ebp),%edi
  0x01cb842f: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb8437: mov    -0xc(%ecx),%ecx
  0x01cb843a: cmpl   $0x0,0x4(%ecx)
  0x01cb8441: je     0x01cb84f5
  0x01cb8447: call   0x01cb8451
  0x01cb844c: jmp    0x01cb84e4
  0x01cb8451: lea    0x4(%esp),%eax
  0x01cb8455: cmpl   $0x0,-0x8(%ebp)
  0x01cb845c: je     0x01cb8473
  0x01cb8462: push   $0x55310188
  0x01cb8467: call   0x01cb846c
  0x01cb846c: pusha  
  0x01cb846d: call   0x54dedbf0
  0x01cb8472: hlt    
  0x01cb8473: mov    %esi,-0x1c(%ebp)
  0x01cb8476: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb847e: mov    -0xc(%edi),%edi
  0x01cb8481: push   %edi
  0x01cb8482: mov    %ebp,0x144(%edi)
  0x01cb8488: mov    %eax,0x13c(%edi)
  0x01cb848e: call   0x5505a470
  0x01cb8493: add    $0x4,%esp
  0x01cb8496: push   %eax
  0x01cb8497: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb849f: mov    -0xc(%eax),%eax
  0x01cb84a2: cmp    %eax,%edi
  0x01cb84a4: je     0x01cb84bb
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb84aa: push   $0x55312af0
  0x01cb84af: call   0x01cb84b4
  0x01cb84b4: pusha  
  0x01cb84b5: call   0x54dedbf0
  0x01cb84ba: hlt    
  0x01cb84bb: pop    %eax
  0x01cb84bc: movl   $0x0,0x13c(%edi)
  0x01cb84c6: movl   $0x0,0x144(%edi)
  0x01cb84d0: cmpl   $0x0,0x4(%edi)
  0x01cb84d7: jne    0x01cb0340
  0x01cb84dd: mov    -0x1c(%ebp),%esi
  0x01cb84e0: mov    -0x18(%ebp),%edi
  0x01cb84e3: ret    
  0x01cb84e4: push   $0x552fd97c
  0x01cb84e9: call   0x01cb84ee
  0x01cb84ee: pusha  
  0x01cb84ef: call   0x54dedbf0
  0x01cb84f4: hlt    
  0x01cb84f5: movzbl 0x5(%esi),%ebx
  0x01cb84f9: add    $0x5,%esi
  0x01cb84fc: jmp    *0x55629038(,%ebx,4)
  0x01cb8503: sub    $0x4,%esp
  0x01cb8506: movss  %xmm0,(%esp)
  0x01cb850b: flds   (%esp)
  0x01cb850e: add    $0x4,%esp
  0x01cb8511: movl   $0x0,-0x8(%ebp)
  0x01cb8518: mov    -0x1c(%ebp),%esi
  0x01cb851b: mov    -0x18(%ebp),%edi
  0x01cb851e: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb8526: mov    -0xc(%ecx),%ecx
  0x01cb8529: cmpl   $0x0,0x4(%ecx)
  0x01cb8530: je     0x01cb85e4
  0x01cb8536: call   0x01cb8540
  0x01cb853b: jmp    0x01cb85d3
  0x01cb8540: lea    0x4(%esp),%eax
  0x01cb8544: cmpl   $0x0,-0x8(%ebp)
  0x01cb854b: je     0x01cb8562
  0x01cb8551: push   $0x55310188
  0x01cb8556: call   0x01cb855b
  0x01cb855b: pusha  
  0x01cb855c: call   0x54dedbf0
  0x01cb8561: hlt    
  0x01cb8562: mov    %esi,-0x1c(%ebp)
  0x01cb8565: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb856d: mov    -0xc(%edi),%edi
  0x01cb8570: push   %edi
  0x01cb8571: mov    %ebp,0x144(%edi)
  0x01cb8577: mov    %eax,0x13c(%edi)
  0x01cb857d: call   0x5505a470
  0x01cb8582: add    $0x4,%esp
  0x01cb8585: push   %eax
  0x01cb8586: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb858e: mov    -0xc(%eax),%eax
  0x01cb8591: cmp    %eax,%edi
  0x01cb8593: je     0x01cb85aa
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb8599: push   $0x55312af0
  0x01cb859e: call   0x01cb85a3
  0x01cb85a3: pusha  
  0x01cb85a4: call   0x54dedbf0
  0x01cb85a9: hlt    
  0x01cb85aa: pop    %eax
  0x01cb85ab: movl   $0x0,0x13c(%edi)
  0x01cb85b5: movl   $0x0,0x144(%edi)
  0x01cb85bf: cmpl   $0x0,0x4(%edi)
  0x01cb85c6: jne    0x01cb0340
  0x01cb85cc: mov    -0x1c(%ebp),%esi
  0x01cb85cf: mov    -0x18(%ebp),%edi
  0x01cb85d2: ret    
  0x01cb85d3: push   $0x552fd97c
  0x01cb85d8: call   0x01cb85dd
  0x01cb85dd: pusha  
  0x01cb85de: call   0x54dedbf0
  0x01cb85e3: hlt    
  0x01cb85e4: movzbl 0x5(%esi),%ebx
  0x01cb85e8: add    $0x5,%esi
  0x01cb85eb: jmp    *0x55628c38(,%ebx,4)
  0x01cb85f2: movl   $0x0,-0x8(%ebp)
  0x01cb85f9: mov    -0x1c(%ebp),%esi
  0x01cb85fc: mov    -0x18(%ebp),%edi
  0x01cb85ff: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb8607: mov    -0xc(%ecx),%ecx
  0x01cb860a: cmpl   $0x0,0x4(%ecx)
  0x01cb8611: je     0x01cb86c5
  0x01cb8617: call   0x01cb8621
  0x01cb861c: jmp    0x01cb86b4
  0x01cb8621: lea    0x4(%esp),%eax
  0x01cb8625: cmpl   $0x0,-0x8(%ebp)
  0x01cb862c: je     0x01cb8643
  0x01cb8632: push   $0x55310188
  0x01cb8637: call   0x01cb863c
  0x01cb863c: pusha  
  0x01cb863d: call   0x54dedbf0
  0x01cb8642: hlt    
  0x01cb8643: mov    %esi,-0x1c(%ebp)
  0x01cb8646: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb864e: mov    -0xc(%edi),%edi
  0x01cb8651: push   %edi
  0x01cb8652: mov    %ebp,0x144(%edi)
  0x01cb8658: mov    %eax,0x13c(%edi)
  0x01cb865e: call   0x5505a470
  0x01cb8663: add    $0x4,%esp
  0x01cb8666: push   %eax
  0x01cb8667: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb866f: mov    -0xc(%eax),%eax
  0x01cb8672: cmp    %eax,%edi
  0x01cb8674: je     0x01cb868b
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb867a: push   $0x55312af0
  0x01cb867f: call   0x01cb8684
  0x01cb8684: pusha  
  0x01cb8685: call   0x54dedbf0
  0x01cb868a: hlt    
  0x01cb868b: pop    %eax
  0x01cb868c: movl   $0x0,0x13c(%edi)
  0x01cb8696: movl   $0x0,0x144(%edi)
  0x01cb86a0: cmpl   $0x0,0x4(%edi)
  0x01cb86a7: jne    0x01cb0340
  0x01cb86ad: mov    -0x1c(%ebp),%esi
  0x01cb86b0: mov    -0x18(%ebp),%edi
  0x01cb86b3: ret    
  0x01cb86b4: push   $0x552fd97c
  0x01cb86b9: call   0x01cb86be
  0x01cb86be: pusha  
  0x01cb86bf: call   0x54dedbf0
  0x01cb86c4: hlt    
  0x01cb86c5: movzbl 0x5(%esi),%ebx
  0x01cb86c9: add    $0x5,%esi
  0x01cb86cc: jmp    *0x55628838(,%ebx,4)
  0x01cb86d3: movl   $0x0,-0x8(%ebp)
  0x01cb86da: mov    -0x1c(%ebp),%esi
  0x01cb86dd: mov    -0x18(%ebp),%edi
  0x01cb86e0: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb86e8: mov    -0xc(%ecx),%ecx
  0x01cb86eb: cmpl   $0x0,0x4(%ecx)
  0x01cb86f2: je     0x01cb87a6
  0x01cb86f8: call   0x01cb8702
  0x01cb86fd: jmp    0x01cb8795
  0x01cb8702: lea    0x4(%esp),%eax
  0x01cb8706: cmpl   $0x0,-0x8(%ebp)
  0x01cb870d: je     0x01cb8724
  0x01cb8713: push   $0x55310188
  0x01cb8718: call   0x01cb871d
  0x01cb871d: pusha  
  0x01cb871e: call   0x54dedbf0
  0x01cb8723: hlt    
  0x01cb8724: mov    %esi,-0x1c(%ebp)
  0x01cb8727: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb872f: mov    -0xc(%edi),%edi
  0x01cb8732: push   %edi
  0x01cb8733: mov    %ebp,0x144(%edi)
  0x01cb8739: mov    %eax,0x13c(%edi)
  0x01cb873f: call   0x5505a470
  0x01cb8744: add    $0x4,%esp
  0x01cb8747: push   %eax
  0x01cb8748: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb8750: mov    -0xc(%eax),%eax
  0x01cb8753: cmp    %eax,%edi
  0x01cb8755: je     0x01cb876c
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb875b: push   $0x55312af0
  0x01cb8760: call   0x01cb8765
  0x01cb8765: pusha  
  0x01cb8766: call   0x54dedbf0
  0x01cb876b: hlt    
  0x01cb876c: pop    %eax
  0x01cb876d: movl   $0x0,0x13c(%edi)
  0x01cb8777: movl   $0x0,0x144(%edi)
  0x01cb8781: cmpl   $0x0,0x4(%edi)
  0x01cb8788: jne    0x01cb0340
  0x01cb878e: mov    -0x1c(%ebp),%esi
  0x01cb8791: mov    -0x18(%ebp),%edi
  0x01cb8794: ret    
  0x01cb8795: push   $0x552fd97c
  0x01cb879a: call   0x01cb879f
  0x01cb879f: pusha  
  0x01cb87a0: call   0x54dedbf0
  0x01cb87a5: hlt    
  0x01cb87a6: movzbl 0x5(%esi),%ebx
  0x01cb87aa: add    $0x5,%esi
  0x01cb87ad: jmp    *0x55628438(,%ebx,4)
  0x01cb87b4: movl   $0x0,-0x8(%ebp)
  0x01cb87bb: mov    -0x1c(%ebp),%esi
  0x01cb87be: mov    -0x18(%ebp),%edi
  0x01cb87c1: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb87c9: mov    -0xc(%ecx),%ecx
  0x01cb87cc: cmpl   $0x0,0x4(%ecx)
  0x01cb87d3: je     0x01cb8887
  0x01cb87d9: call   0x01cb87e3
  0x01cb87de: jmp    0x01cb8876
  0x01cb87e3: lea    0x4(%esp),%eax
  0x01cb87e7: cmpl   $0x0,-0x8(%ebp)
  0x01cb87ee: je     0x01cb8805
  0x01cb87f4: push   $0x55310188
  0x01cb87f9: call   0x01cb87fe
  0x01cb87fe: pusha  
  0x01cb87ff: call   0x54dedbf0
  0x01cb8804: hlt    
  0x01cb8805: mov    %esi,-0x1c(%ebp)
  0x01cb8808: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb8810: mov    -0xc(%edi),%edi
  0x01cb8813: push   %edi
  0x01cb8814: mov    %ebp,0x144(%edi)
  0x01cb881a: mov    %eax,0x13c(%edi)
  0x01cb8820: call   0x5505a470
  0x01cb8825: add    $0x4,%esp
  0x01cb8828: push   %eax
  0x01cb8829: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb8831: mov    -0xc(%eax),%eax
  0x01cb8834: cmp    %eax,%edi
  0x01cb8836: je     0x01cb884d
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb883c: push   $0x55312af0
  0x01cb8841: call   0x01cb8846
  0x01cb8846: pusha  
  0x01cb8847: call   0x54dedbf0
  0x01cb884c: hlt    
  0x01cb884d: pop    %eax
  0x01cb884e: movl   $0x0,0x13c(%edi)
  0x01cb8858: movl   $0x0,0x144(%edi)
  0x01cb8862: cmpl   $0x0,0x4(%edi)
  0x01cb8869: jne    0x01cb0340
  0x01cb886f: mov    -0x1c(%ebp),%esi
  0x01cb8872: mov    -0x18(%ebp),%edi
  0x01cb8875: ret    
  0x01cb8876: push   $0x552fd97c
  0x01cb887b: call   0x01cb8880
  0x01cb8880: pusha  
  0x01cb8881: call   0x54dedbf0
  0x01cb8886: hlt    
  0x01cb8887: movzbl 0x5(%esi),%ebx
  0x01cb888b: add    $0x5,%esi
  0x01cb888e: jmp    *0x55629438(,%ebx,4)
  0x01cb8895: movl   $0x0,-0x8(%ebp)
  0x01cb889c: mov    -0x1c(%ebp),%esi
  0x01cb889f: mov    -0x18(%ebp),%edi
  0x01cb88a2: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb88aa: mov    -0xc(%ecx),%ecx
  0x01cb88ad: cmpl   $0x0,0x4(%ecx)
  0x01cb88b4: je     0x01cb8968
  0x01cb88ba: call   0x01cb88c4
  0x01cb88bf: jmp    0x01cb8957
  0x01cb88c4: lea    0x4(%esp),%eax
  0x01cb88c8: cmpl   $0x0,-0x8(%ebp)
  0x01cb88cf: je     0x01cb88e6
  0x01cb88d5: push   $0x55310188
  0x01cb88da: call   0x01cb88df
  0x01cb88df: pusha  
  0x01cb88e0: call   0x54dedbf0
  0x01cb88e5: hlt    
  0x01cb88e6: mov    %esi,-0x1c(%ebp)
  0x01cb88e9: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb88f1: mov    -0xc(%edi),%edi
  0x01cb88f4: push   %edi
  0x01cb88f5: mov    %ebp,0x144(%edi)
  0x01cb88fb: mov    %eax,0x13c(%edi)
  0x01cb8901: call   0x5505a470
  0x01cb8906: add    $0x4,%esp
  0x01cb8909: push   %eax
  0x01cb890a: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb8912: mov    -0xc(%eax),%eax
  0x01cb8915: cmp    %eax,%edi
  0x01cb8917: je     0x01cb892e
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb891d: push   $0x55312af0
  0x01cb8922: call   0x01cb8927
  0x01cb8927: pusha  
  0x01cb8928: call   0x54dedbf0
  0x01cb892d: hlt    
  0x01cb892e: pop    %eax
  0x01cb892f: movl   $0x0,0x13c(%edi)
  0x01cb8939: movl   $0x0,0x144(%edi)
  0x01cb8943: cmpl   $0x0,0x4(%edi)
  0x01cb894a: jne    0x01cb0340
  0x01cb8950: mov    -0x1c(%ebp),%esi
  0x01cb8953: mov    -0x18(%ebp),%edi
  0x01cb8956: ret    
  0x01cb8957: push   $0x552fd97c
  0x01cb895c: call   0x01cb8961
  0x01cb8961: pusha  
  0x01cb8962: call   0x54dedbf0
  0x01cb8967: hlt    
  0x01cb8968: movzbl 0x5(%esi),%ebx
  0x01cb896c: add    $0x5,%esi
  0x01cb896f: jmp    *0x55628438(,%ebx,4)
  0x01cb8976: movl   $0x0,-0x8(%ebp)
  0x01cb897d: mov    -0x1c(%ebp),%esi
  0x01cb8980: mov    -0x18(%ebp),%edi
  0x01cb8983: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb898b: mov    -0xc(%ecx),%ecx
  0x01cb898e: cmpl   $0x0,0x4(%ecx)
  0x01cb8995: je     0x01cb8a49
  0x01cb899b: call   0x01cb89a5
  0x01cb89a0: jmp    0x01cb8a38
  0x01cb89a5: lea    0x4(%esp),%eax
  0x01cb89a9: cmpl   $0x0,-0x8(%ebp)
  0x01cb89b0: je     0x01cb89c7
  0x01cb89b6: push   $0x55310188
  0x01cb89bb: call   0x01cb89c0
  0x01cb89c0: pusha  
  0x01cb89c1: call   0x54dedbf0
  0x01cb89c6: hlt    
  0x01cb89c7: mov    %esi,-0x1c(%ebp)
  0x01cb89ca: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb89d2: mov    -0xc(%edi),%edi
  0x01cb89d5: push   %edi
  0x01cb89d6: mov    %ebp,0x144(%edi)
  0x01cb89dc: mov    %eax,0x13c(%edi)
  0x01cb89e2: call   0x5505a470
  0x01cb89e7: add    $0x4,%esp
  0x01cb89ea: push   %eax
  0x01cb89eb: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb89f3: mov    -0xc(%eax),%eax
  0x01cb89f6: cmp    %eax,%edi
  0x01cb89f8: je     0x01cb8a0f
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb89fe: push   $0x55312af0
  0x01cb8a03: call   0x01cb8a08
  0x01cb8a08: pusha  
  0x01cb8a09: call   0x54dedbf0
  0x01cb8a0e: hlt    
  0x01cb8a0f: pop    %eax
  0x01cb8a10: movl   $0x0,0x13c(%edi)
  0x01cb8a1a: movl   $0x0,0x144(%edi)
  0x01cb8a24: cmpl   $0x0,0x4(%edi)
  0x01cb8a2b: jne    0x01cb0340
  0x01cb8a31: mov    -0x1c(%ebp),%esi
  0x01cb8a34: mov    -0x18(%ebp),%edi
  0x01cb8a37: ret    
  0x01cb8a38: push   $0x552fd97c
  0x01cb8a3d: call   0x01cb8a42
  0x01cb8a42: pusha  
  0x01cb8a43: call   0x54dedbf0
  0x01cb8a48: hlt    
  0x01cb8a49: movzbl 0x5(%esi),%ebx
  0x01cb8a4d: add    $0x5,%esi
  0x01cb8a50: jmp    *0x55628438(,%ebx,4)
  0x01cb8a57: movl   $0x0,-0x8(%ebp)
  0x01cb8a5e: mov    -0x1c(%ebp),%esi
  0x01cb8a61: mov    -0x18(%ebp),%edi
  0x01cb8a64: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb8a6c: mov    -0xc(%ecx),%ecx
  0x01cb8a6f: cmpl   $0x0,0x4(%ecx)
  0x01cb8a76: je     0x01cb8b2a
  0x01cb8a7c: call   0x01cb8a86
  0x01cb8a81: jmp    0x01cb8b19
  0x01cb8a86: lea    0x4(%esp),%eax
  0x01cb8a8a: cmpl   $0x0,-0x8(%ebp)
  0x01cb8a91: je     0x01cb8aa8
  0x01cb8a97: push   $0x55310188
  0x01cb8a9c: call   0x01cb8aa1
  0x01cb8aa1: pusha  
  0x01cb8aa2: call   0x54dedbf0
  0x01cb8aa7: hlt    
  0x01cb8aa8: mov    %esi,-0x1c(%ebp)
  0x01cb8aab: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb8ab3: mov    -0xc(%edi),%edi
  0x01cb8ab6: push   %edi
  0x01cb8ab7: mov    %ebp,0x144(%edi)
  0x01cb8abd: mov    %eax,0x13c(%edi)
  0x01cb8ac3: call   0x5505a470
  0x01cb8ac8: add    $0x4,%esp
  0x01cb8acb: push   %eax
  0x01cb8acc: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb8ad4: mov    -0xc(%eax),%eax
  0x01cb8ad7: cmp    %eax,%edi
  0x01cb8ad9: je     0x01cb8af0
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb8adf: push   $0x55312af0
  0x01cb8ae4: call   0x01cb8ae9
  0x01cb8ae9: pusha  
  0x01cb8aea: call   0x54dedbf0
  0x01cb8aef: hlt    
  0x01cb8af0: pop    %eax
  0x01cb8af1: movl   $0x0,0x13c(%edi)
  0x01cb8afb: movl   $0x0,0x144(%edi)
  0x01cb8b05: cmpl   $0x0,0x4(%edi)
  0x01cb8b0c: jne    0x01cb0340
  0x01cb8b12: mov    -0x1c(%ebp),%esi
  0x01cb8b15: mov    -0x18(%ebp),%edi
  0x01cb8b18: ret    
  0x01cb8b19: push   $0x552fd97c
  0x01cb8b1e: call   0x01cb8b23
  0x01cb8b23: pusha  
  0x01cb8b24: call   0x54dedbf0
  0x01cb8b29: hlt    
  0x01cb8b2a: movzbl 0x5(%esi),%ebx
  0x01cb8b2e: add    $0x5,%esi
  0x01cb8b31: jmp    *0x55628438(,%ebx,4)
  0x01cb8b38: movl   $0x0,-0x8(%ebp)
  0x01cb8b3f: mov    -0x1c(%ebp),%esi
  0x01cb8b42: mov    -0x18(%ebp),%edi
  0x01cb8b45: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb8b4d: mov    -0xc(%ecx),%ecx
  0x01cb8b50: cmpl   $0x0,0x4(%ecx)
  0x01cb8b57: je     0x01cb8c0b
  0x01cb8b5d: call   0x01cb8b67
  0x01cb8b62: jmp    0x01cb8bfa
  0x01cb8b67: lea    0x4(%esp),%eax
  0x01cb8b6b: cmpl   $0x0,-0x8(%ebp)
  0x01cb8b72: je     0x01cb8b89
  0x01cb8b78: push   $0x55310188
  0x01cb8b7d: call   0x01cb8b82
  0x01cb8b82: pusha  
  0x01cb8b83: call   0x54dedbf0
  0x01cb8b88: hlt    
  0x01cb8b89: mov    %esi,-0x1c(%ebp)
  0x01cb8b8c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb8b94: mov    -0xc(%edi),%edi
  0x01cb8b97: push   %edi
  0x01cb8b98: mov    %ebp,0x144(%edi)
  0x01cb8b9e: mov    %eax,0x13c(%edi)
  0x01cb8ba4: call   0x5505a470
  0x01cb8ba9: add    $0x4,%esp
  0x01cb8bac: push   %eax
  0x01cb8bad: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb8bb5: mov    -0xc(%eax),%eax
  0x01cb8bb8: cmp    %eax,%edi
  0x01cb8bba: je     0x01cb8bd1
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb8bc0: push   $0x55312af0
  0x01cb8bc5: call   0x01cb8bca
  0x01cb8bca: pusha  
  0x01cb8bcb: call   0x54dedbf0
  0x01cb8bd0: hlt    
  0x01cb8bd1: pop    %eax
  0x01cb8bd2: movl   $0x0,0x13c(%edi)
  0x01cb8bdc: movl   $0x0,0x144(%edi)
  0x01cb8be6: cmpl   $0x0,0x4(%edi)
  0x01cb8bed: jne    0x01cb0340
  0x01cb8bf3: mov    -0x1c(%ebp),%esi
  0x01cb8bf6: mov    -0x18(%ebp),%edi
  0x01cb8bf9: ret    
  0x01cb8bfa: push   $0x552fd97c
  0x01cb8bff: call   0x01cb8c04
  0x01cb8c04: pusha  
  0x01cb8c05: call   0x54dedbf0
  0x01cb8c0a: hlt    
  0x01cb8c0b: movzbl 0x6(%esi),%ebx
  0x01cb8c0f: add    $0x6,%esi
  0x01cb8c12: jmp    *0x55629838(,%ebx,4)
  0x01cb8c19: sub    $0x8,%esp
  0x01cb8c1c: movsd  %xmm0,(%esp)
  0x01cb8c21: fldl   (%esp)
  0x01cb8c24: add    $0x8,%esp
  0x01cb8c27: movl   $0x0,-0x8(%ebp)
  0x01cb8c2e: mov    -0x1c(%ebp),%esi
  0x01cb8c31: mov    -0x18(%ebp),%edi
  0x01cb8c34: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb8c3c: mov    -0xc(%ecx),%ecx
  0x01cb8c3f: cmpl   $0x0,0x4(%ecx)
  0x01cb8c46: je     0x01cb8cfa
  0x01cb8c4c: call   0x01cb8c56
  0x01cb8c51: jmp    0x01cb8ce9
  0x01cb8c56: lea    0x4(%esp),%eax
  0x01cb8c5a: cmpl   $0x0,-0x8(%ebp)
  0x01cb8c61: je     0x01cb8c78
  0x01cb8c67: push   $0x55310188
  0x01cb8c6c: call   0x01cb8c71
  0x01cb8c71: pusha  
  0x01cb8c72: call   0x54dedbf0
  0x01cb8c77: hlt    
  0x01cb8c78: mov    %esi,-0x1c(%ebp)
  0x01cb8c7b: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb8c83: mov    -0xc(%edi),%edi
  0x01cb8c86: push   %edi
  0x01cb8c87: mov    %ebp,0x144(%edi)
  0x01cb8c8d: mov    %eax,0x13c(%edi)
  0x01cb8c93: call   0x5505a470
  0x01cb8c98: add    $0x4,%esp
  0x01cb8c9b: push   %eax
  0x01cb8c9c: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb8ca4: mov    -0xc(%eax),%eax
  0x01cb8ca7: cmp    %eax,%edi
  0x01cb8ca9: je     0x01cb8cc0
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb8caf: push   $0x55312af0
  0x01cb8cb4: call   0x01cb8cb9
  0x01cb8cb9: pusha  
  0x01cb8cba: call   0x54dedbf0
  0x01cb8cbf: hlt    
  0x01cb8cc0: pop    %eax
  0x01cb8cc1: movl   $0x0,0x13c(%edi)
  0x01cb8ccb: movl   $0x0,0x144(%edi)
  0x01cb8cd5: cmpl   $0x0,0x4(%edi)
  0x01cb8cdc: jne    0x01cb0340
  0x01cb8ce2: mov    -0x1c(%ebp),%esi
  0x01cb8ce5: mov    -0x18(%ebp),%edi
  0x01cb8ce8: ret    
  0x01cb8ce9: push   $0x552fd97c
  0x01cb8cee: call   0x01cb8cf3
  0x01cb8cf3: pusha  
  0x01cb8cf4: call   0x54dedbf0
  0x01cb8cf9: hlt    
  0x01cb8cfa: movzbl 0x6(%esi),%ebx
  0x01cb8cfe: add    $0x6,%esi
  0x01cb8d01: jmp    *0x55629038(,%ebx,4)
  0x01cb8d08: sub    $0x4,%esp
  0x01cb8d0b: movss  %xmm0,(%esp)
  0x01cb8d10: flds   (%esp)
  0x01cb8d13: add    $0x4,%esp
  0x01cb8d16: movl   $0x0,-0x8(%ebp)
  0x01cb8d1d: mov    -0x1c(%ebp),%esi
  0x01cb8d20: mov    -0x18(%ebp),%edi
  0x01cb8d23: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb8d2b: mov    -0xc(%ecx),%ecx
  0x01cb8d2e: cmpl   $0x0,0x4(%ecx)
  0x01cb8d35: je     0x01cb8de9
  0x01cb8d3b: call   0x01cb8d45
  0x01cb8d40: jmp    0x01cb8dd8
  0x01cb8d45: lea    0x4(%esp),%eax
  0x01cb8d49: cmpl   $0x0,-0x8(%ebp)
  0x01cb8d50: je     0x01cb8d67
  0x01cb8d56: push   $0x55310188
  0x01cb8d5b: call   0x01cb8d60
  0x01cb8d60: pusha  
  0x01cb8d61: call   0x54dedbf0
  0x01cb8d66: hlt    
  0x01cb8d67: mov    %esi,-0x1c(%ebp)
  0x01cb8d6a: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb8d72: mov    -0xc(%edi),%edi
  0x01cb8d75: push   %edi
  0x01cb8d76: mov    %ebp,0x144(%edi)
  0x01cb8d7c: mov    %eax,0x13c(%edi)
  0x01cb8d82: call   0x5505a470
  0x01cb8d87: add    $0x4,%esp
  0x01cb8d8a: push   %eax
  0x01cb8d8b: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb8d93: mov    -0xc(%eax),%eax
  0x01cb8d96: cmp    %eax,%edi
  0x01cb8d98: je     0x01cb8daf
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb8d9e: push   $0x55312af0
  0x01cb8da3: call   0x01cb8da8
  0x01cb8da8: pusha  
  0x01cb8da9: call   0x54dedbf0
  0x01cb8dae: hlt    
  0x01cb8daf: pop    %eax
  0x01cb8db0: movl   $0x0,0x13c(%edi)
  0x01cb8dba: movl   $0x0,0x144(%edi)
  0x01cb8dc4: cmpl   $0x0,0x4(%edi)
  0x01cb8dcb: jne    0x01cb0340
  0x01cb8dd1: mov    -0x1c(%ebp),%esi
  0x01cb8dd4: mov    -0x18(%ebp),%edi
  0x01cb8dd7: ret    
  0x01cb8dd8: push   $0x552fd97c
  0x01cb8ddd: call   0x01cb8de2
  0x01cb8de2: pusha  
  0x01cb8de3: call   0x54dedbf0
  0x01cb8de8: hlt    
  0x01cb8de9: movzbl 0x6(%esi),%ebx
  0x01cb8ded: add    $0x6,%esi
  0x01cb8df0: jmp    *0x55628c38(,%ebx,4)
  0x01cb8df7: movl   $0x0,-0x8(%ebp)
  0x01cb8dfe: mov    -0x1c(%ebp),%esi
  0x01cb8e01: mov    -0x18(%ebp),%edi
  0x01cb8e04: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb8e0c: mov    -0xc(%ecx),%ecx
  0x01cb8e0f: cmpl   $0x0,0x4(%ecx)
  0x01cb8e16: je     0x01cb8eca
  0x01cb8e1c: call   0x01cb8e26
  0x01cb8e21: jmp    0x01cb8eb9
  0x01cb8e26: lea    0x4(%esp),%eax
  0x01cb8e2a: cmpl   $0x0,-0x8(%ebp)
  0x01cb8e31: je     0x01cb8e48
  0x01cb8e37: push   $0x55310188
  0x01cb8e3c: call   0x01cb8e41
  0x01cb8e41: pusha  
  0x01cb8e42: call   0x54dedbf0
  0x01cb8e47: hlt    
  0x01cb8e48: mov    %esi,-0x1c(%ebp)
  0x01cb8e4b: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb8e53: mov    -0xc(%edi),%edi
  0x01cb8e56: push   %edi
  0x01cb8e57: mov    %ebp,0x144(%edi)
  0x01cb8e5d: mov    %eax,0x13c(%edi)
  0x01cb8e63: call   0x5505a470
  0x01cb8e68: add    $0x4,%esp
  0x01cb8e6b: push   %eax
  0x01cb8e6c: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb8e74: mov    -0xc(%eax),%eax
  0x01cb8e77: cmp    %eax,%edi
  0x01cb8e79: je     0x01cb8e90
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb8e7f: push   $0x55312af0
  0x01cb8e84: call   0x01cb8e89
  0x01cb8e89: pusha  
  0x01cb8e8a: call   0x54dedbf0
  0x01cb8e8f: hlt    
  0x01cb8e90: pop    %eax
  0x01cb8e91: movl   $0x0,0x13c(%edi)
  0x01cb8e9b: movl   $0x0,0x144(%edi)
  0x01cb8ea5: cmpl   $0x0,0x4(%edi)
  0x01cb8eac: jne    0x01cb0340
  0x01cb8eb2: mov    -0x1c(%ebp),%esi
  0x01cb8eb5: mov    -0x18(%ebp),%edi
  0x01cb8eb8: ret    
  0x01cb8eb9: push   $0x552fd97c
  0x01cb8ebe: call   0x01cb8ec3
  0x01cb8ec3: pusha  
  0x01cb8ec4: call   0x54dedbf0
  0x01cb8ec9: hlt    
  0x01cb8eca: movzbl 0x6(%esi),%ebx
  0x01cb8ece: add    $0x6,%esi
  0x01cb8ed1: jmp    *0x55628838(,%ebx,4)
  0x01cb8ed8: movl   $0x0,-0x8(%ebp)
  0x01cb8edf: mov    -0x1c(%ebp),%esi
  0x01cb8ee2: mov    -0x18(%ebp),%edi
  0x01cb8ee5: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb8eed: mov    -0xc(%ecx),%ecx
  0x01cb8ef0: cmpl   $0x0,0x4(%ecx)
  0x01cb8ef7: je     0x01cb8fab
  0x01cb8efd: call   0x01cb8f07
  0x01cb8f02: jmp    0x01cb8f9a
  0x01cb8f07: lea    0x4(%esp),%eax
  0x01cb8f0b: cmpl   $0x0,-0x8(%ebp)
  0x01cb8f12: je     0x01cb8f29
  0x01cb8f18: push   $0x55310188
  0x01cb8f1d: call   0x01cb8f22
  0x01cb8f22: pusha  
  0x01cb8f23: call   0x54dedbf0
  0x01cb8f28: hlt    
  0x01cb8f29: mov    %esi,-0x1c(%ebp)
  0x01cb8f2c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb8f34: mov    -0xc(%edi),%edi
  0x01cb8f37: push   %edi
  0x01cb8f38: mov    %ebp,0x144(%edi)
  0x01cb8f3e: mov    %eax,0x13c(%edi)
  0x01cb8f44: call   0x5505a470
  0x01cb8f49: add    $0x4,%esp
  0x01cb8f4c: push   %eax
  0x01cb8f4d: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb8f55: mov    -0xc(%eax),%eax
  0x01cb8f58: cmp    %eax,%edi
  0x01cb8f5a: je     0x01cb8f71
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb8f60: push   $0x55312af0
  0x01cb8f65: call   0x01cb8f6a
  0x01cb8f6a: pusha  
  0x01cb8f6b: call   0x54dedbf0
  0x01cb8f70: hlt    
  0x01cb8f71: pop    %eax
  0x01cb8f72: movl   $0x0,0x13c(%edi)
  0x01cb8f7c: movl   $0x0,0x144(%edi)
  0x01cb8f86: cmpl   $0x0,0x4(%edi)
  0x01cb8f8d: jne    0x01cb0340
  0x01cb8f93: mov    -0x1c(%ebp),%esi
  0x01cb8f96: mov    -0x18(%ebp),%edi
  0x01cb8f99: ret    
  0x01cb8f9a: push   $0x552fd97c
  0x01cb8f9f: call   0x01cb8fa4
  0x01cb8fa4: pusha  
  0x01cb8fa5: call   0x54dedbf0
  0x01cb8faa: hlt    
  0x01cb8fab: movzbl 0x6(%esi),%ebx
  0x01cb8faf: add    $0x6,%esi
  0x01cb8fb2: jmp    *0x55628438(,%ebx,4)
  0x01cb8fb9: movl   $0x0,-0x8(%ebp)
  0x01cb8fc0: mov    -0x1c(%ebp),%esi
  0x01cb8fc3: mov    -0x18(%ebp),%edi
  0x01cb8fc6: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb8fce: mov    -0xc(%ecx),%ecx
  0x01cb8fd1: cmpl   $0x0,0x4(%ecx)
  0x01cb8fd8: je     0x01cb908c
  0x01cb8fde: call   0x01cb8fe8
  0x01cb8fe3: jmp    0x01cb907b
  0x01cb8fe8: lea    0x4(%esp),%eax
  0x01cb8fec: cmpl   $0x0,-0x8(%ebp)
  0x01cb8ff3: je     0x01cb900a
  0x01cb8ff9: push   $0x55310188
  0x01cb8ffe: call   0x01cb9003
  0x01cb9003: pusha  
  0x01cb9004: call   0x54dedbf0
  0x01cb9009: hlt    
  0x01cb900a: mov    %esi,-0x1c(%ebp)
  0x01cb900d: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb9015: mov    -0xc(%edi),%edi
  0x01cb9018: push   %edi
  0x01cb9019: mov    %ebp,0x144(%edi)
  0x01cb901f: mov    %eax,0x13c(%edi)
  0x01cb9025: call   0x5505a470
  0x01cb902a: add    $0x4,%esp
  0x01cb902d: push   %eax
  0x01cb902e: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb9036: mov    -0xc(%eax),%eax
  0x01cb9039: cmp    %eax,%edi
  0x01cb903b: je     0x01cb9052
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb9041: push   $0x55312af0
  0x01cb9046: call   0x01cb904b
  0x01cb904b: pusha  
  0x01cb904c: call   0x54dedbf0
  0x01cb9051: hlt    
  0x01cb9052: pop    %eax
  0x01cb9053: movl   $0x0,0x13c(%edi)
  0x01cb905d: movl   $0x0,0x144(%edi)
  0x01cb9067: cmpl   $0x0,0x4(%edi)
  0x01cb906e: jne    0x01cb0340
  0x01cb9074: mov    -0x1c(%ebp),%esi
  0x01cb9077: mov    -0x18(%ebp),%edi
  0x01cb907a: ret    
  0x01cb907b: push   $0x552fd97c
  0x01cb9080: call   0x01cb9085
  0x01cb9085: pusha  
  0x01cb9086: call   0x54dedbf0
  0x01cb908b: hlt    
  0x01cb908c: movzbl 0x6(%esi),%ebx
  0x01cb9090: add    $0x6,%esi
  0x01cb9093: jmp    *0x55629438(,%ebx,4)
  0x01cb909a: movl   $0x0,-0x8(%ebp)
  0x01cb90a1: mov    -0x1c(%ebp),%esi
  0x01cb90a4: mov    -0x18(%ebp),%edi
  0x01cb90a7: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb90af: mov    -0xc(%ecx),%ecx
  0x01cb90b2: cmpl   $0x0,0x4(%ecx)
  0x01cb90b9: je     0x01cb916d
  0x01cb90bf: call   0x01cb90c9
  0x01cb90c4: jmp    0x01cb915c
  0x01cb90c9: lea    0x4(%esp),%eax
  0x01cb90cd: cmpl   $0x0,-0x8(%ebp)
  0x01cb90d4: je     0x01cb90eb
  0x01cb90da: push   $0x55310188
  0x01cb90df: call   0x01cb90e4
  0x01cb90e4: pusha  
  0x01cb90e5: call   0x54dedbf0
  0x01cb90ea: hlt    
  0x01cb90eb: mov    %esi,-0x1c(%ebp)
  0x01cb90ee: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb90f6: mov    -0xc(%edi),%edi
  0x01cb90f9: push   %edi
  0x01cb90fa: mov    %ebp,0x144(%edi)
  0x01cb9100: mov    %eax,0x13c(%edi)
  0x01cb9106: call   0x5505a470
  0x01cb910b: add    $0x4,%esp
  0x01cb910e: push   %eax
  0x01cb910f: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb9117: mov    -0xc(%eax),%eax
  0x01cb911a: cmp    %eax,%edi
  0x01cb911c: je     0x01cb9133
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb9122: push   $0x55312af0
  0x01cb9127: call   0x01cb912c
  0x01cb912c: pusha  
  0x01cb912d: call   0x54dedbf0
  0x01cb9132: hlt    
  0x01cb9133: pop    %eax
  0x01cb9134: movl   $0x0,0x13c(%edi)
  0x01cb913e: movl   $0x0,0x144(%edi)
  0x01cb9148: cmpl   $0x0,0x4(%edi)
  0x01cb914f: jne    0x01cb0340
  0x01cb9155: mov    -0x1c(%ebp),%esi
  0x01cb9158: mov    -0x18(%ebp),%edi
  0x01cb915b: ret    
  0x01cb915c: push   $0x552fd97c
  0x01cb9161: call   0x01cb9166
  0x01cb9166: pusha  
  0x01cb9167: call   0x54dedbf0
  0x01cb916c: hlt    
  0x01cb916d: movzbl 0x6(%esi),%ebx
  0x01cb9171: add    $0x6,%esi
  0x01cb9174: jmp    *0x55628438(,%ebx,4)
  0x01cb917b: movl   $0x0,-0x8(%ebp)
  0x01cb9182: mov    -0x1c(%ebp),%esi
  0x01cb9185: mov    -0x18(%ebp),%edi
  0x01cb9188: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb9190: mov    -0xc(%ecx),%ecx
  0x01cb9193: cmpl   $0x0,0x4(%ecx)
  0x01cb919a: je     0x01cb924e
  0x01cb91a0: call   0x01cb91aa
  0x01cb91a5: jmp    0x01cb923d
  0x01cb91aa: lea    0x4(%esp),%eax
  0x01cb91ae: cmpl   $0x0,-0x8(%ebp)
  0x01cb91b5: je     0x01cb91cc
  0x01cb91bb: push   $0x55310188
  0x01cb91c0: call   0x01cb91c5
  0x01cb91c5: pusha  
  0x01cb91c6: call   0x54dedbf0
  0x01cb91cb: hlt    
  0x01cb91cc: mov    %esi,-0x1c(%ebp)
  0x01cb91cf: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb91d7: mov    -0xc(%edi),%edi
  0x01cb91da: push   %edi
  0x01cb91db: mov    %ebp,0x144(%edi)
  0x01cb91e1: mov    %eax,0x13c(%edi)
  0x01cb91e7: call   0x5505a470
  0x01cb91ec: add    $0x4,%esp
  0x01cb91ef: push   %eax
  0x01cb91f0: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb91f8: mov    -0xc(%eax),%eax
  0x01cb91fb: cmp    %eax,%edi
  0x01cb91fd: je     0x01cb9214
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb9203: push   $0x55312af0
  0x01cb9208: call   0x01cb920d
  0x01cb920d: pusha  
  0x01cb920e: call   0x54dedbf0
  0x01cb9213: hlt    
  0x01cb9214: pop    %eax
  0x01cb9215: movl   $0x0,0x13c(%edi)
  0x01cb921f: movl   $0x0,0x144(%edi)
  0x01cb9229: cmpl   $0x0,0x4(%edi)
  0x01cb9230: jne    0x01cb0340
  0x01cb9236: mov    -0x1c(%ebp),%esi
  0x01cb9239: mov    -0x18(%ebp),%edi
  0x01cb923c: ret    
  0x01cb923d: push   $0x552fd97c
  0x01cb9242: call   0x01cb9247
  0x01cb9247: pusha  
  0x01cb9248: call   0x54dedbf0
  0x01cb924d: hlt    
  0x01cb924e: movzbl 0x6(%esi),%ebx
  0x01cb9252: add    $0x6,%esi
  0x01cb9255: jmp    *0x55628438(,%ebx,4)
  0x01cb925c: movl   $0x0,-0x8(%ebp)
  0x01cb9263: mov    -0x1c(%ebp),%esi
  0x01cb9266: mov    -0x18(%ebp),%edi
  0x01cb9269: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb9271: mov    -0xc(%ecx),%ecx
  0x01cb9274: cmpl   $0x0,0x4(%ecx)
  0x01cb927b: je     0x01cb932f
  0x01cb9281: call   0x01cb928b
  0x01cb9286: jmp    0x01cb931e
  0x01cb928b: lea    0x4(%esp),%eax
  0x01cb928f: cmpl   $0x0,-0x8(%ebp)
  0x01cb9296: je     0x01cb92ad
  0x01cb929c: push   $0x55310188
  0x01cb92a1: call   0x01cb92a6
  0x01cb92a6: pusha  
  0x01cb92a7: call   0x54dedbf0
  0x01cb92ac: hlt    
  0x01cb92ad: mov    %esi,-0x1c(%ebp)
  0x01cb92b0: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb92b8: mov    -0xc(%edi),%edi
  0x01cb92bb: push   %edi
  0x01cb92bc: mov    %ebp,0x144(%edi)
  0x01cb92c2: mov    %eax,0x13c(%edi)
  0x01cb92c8: call   0x5505a470
  0x01cb92cd: add    $0x4,%esp
  0x01cb92d0: push   %eax
  0x01cb92d1: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb92d9: mov    -0xc(%eax),%eax
  0x01cb92dc: cmp    %eax,%edi
  0x01cb92de: je     0x01cb92f5
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb92e4: push   $0x55312af0
  0x01cb92e9: call   0x01cb92ee
  0x01cb92ee: pusha  
  0x01cb92ef: call   0x54dedbf0
  0x01cb92f4: hlt    
  0x01cb92f5: pop    %eax
  0x01cb92f6: movl   $0x0,0x13c(%edi)
  0x01cb9300: movl   $0x0,0x144(%edi)
  0x01cb930a: cmpl   $0x0,0x4(%edi)
  0x01cb9311: jne    0x01cb0340
  0x01cb9317: mov    -0x1c(%ebp),%esi
  0x01cb931a: mov    -0x18(%ebp),%edi
  0x01cb931d: ret    
  0x01cb931e: push   $0x552fd97c
  0x01cb9323: call   0x01cb9328
  0x01cb9328: pusha  
  0x01cb9329: call   0x54dedbf0
  0x01cb932e: hlt    
  0x01cb932f: movzbl 0x6(%esi),%ebx
  0x01cb9333: add    $0x6,%esi
  0x01cb9336: jmp    *0x55628438(,%ebx,4)
  0x01cb933d: movl   $0x0,-0x8(%ebp)
  0x01cb9344: mov    -0x1c(%ebp),%esi
  0x01cb9347: mov    -0x18(%ebp),%edi
  0x01cb934a: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb9352: mov    -0xc(%ecx),%ecx
  0x01cb9355: cmpl   $0x0,0x4(%ecx)
  0x01cb935c: je     0x01cb9410
  0x01cb9362: call   0x01cb936c
  0x01cb9367: jmp    0x01cb93ff
  0x01cb936c: lea    0x4(%esp),%eax
  0x01cb9370: cmpl   $0x0,-0x8(%ebp)
  0x01cb9377: je     0x01cb938e
  0x01cb937d: push   $0x55310188
  0x01cb9382: call   0x01cb9387
  0x01cb9387: pusha  
  0x01cb9388: call   0x54dedbf0
  0x01cb938d: hlt    
  0x01cb938e: mov    %esi,-0x1c(%ebp)
  0x01cb9391: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb9399: mov    -0xc(%edi),%edi
  0x01cb939c: push   %edi
  0x01cb939d: mov    %ebp,0x144(%edi)
  0x01cb93a3: mov    %eax,0x13c(%edi)
  0x01cb93a9: call   0x5505a470
  0x01cb93ae: add    $0x4,%esp
  0x01cb93b1: push   %eax
  0x01cb93b2: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb93ba: mov    -0xc(%eax),%eax
  0x01cb93bd: cmp    %eax,%edi
  0x01cb93bf: je     0x01cb93d6
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb93c5: push   $0x55312af0
  0x01cb93ca: call   0x01cb93cf
  0x01cb93cf: pusha  
  0x01cb93d0: call   0x54dedbf0
  0x01cb93d5: hlt    
  0x01cb93d6: pop    %eax
  0x01cb93d7: movl   $0x0,0x13c(%edi)
  0x01cb93e1: movl   $0x0,0x144(%edi)
  0x01cb93eb: cmpl   $0x0,0x4(%edi)
  0x01cb93f2: jne    0x01cb0340
  0x01cb93f8: mov    -0x1c(%ebp),%esi
  0x01cb93fb: mov    -0x18(%ebp),%edi
  0x01cb93fe: ret    
  0x01cb93ff: push   $0x552fd97c
  0x01cb9404: call   0x01cb9409
  0x01cb9409: pusha  
  0x01cb940a: call   0x54dedbf0
  0x01cb940f: hlt    
  0x01cb9410: movzbl 0x7(%esi),%ebx
  0x01cb9414: add    $0x7,%esi
  0x01cb9417: jmp    *0x55629838(,%ebx,4)
  0x01cb941e: sub    $0x8,%esp
  0x01cb9421: movsd  %xmm0,(%esp)
  0x01cb9426: fldl   (%esp)
  0x01cb9429: add    $0x8,%esp
  0x01cb942c: movl   $0x0,-0x8(%ebp)
  0x01cb9433: mov    -0x1c(%ebp),%esi
  0x01cb9436: mov    -0x18(%ebp),%edi
  0x01cb9439: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb9441: mov    -0xc(%ecx),%ecx
  0x01cb9444: cmpl   $0x0,0x4(%ecx)
  0x01cb944b: je     0x01cb94ff
  0x01cb9451: call   0x01cb945b
  0x01cb9456: jmp    0x01cb94ee
  0x01cb945b: lea    0x4(%esp),%eax
  0x01cb945f: cmpl   $0x0,-0x8(%ebp)
  0x01cb9466: je     0x01cb947d
  0x01cb946c: push   $0x55310188
  0x01cb9471: call   0x01cb9476
  0x01cb9476: pusha  
  0x01cb9477: call   0x54dedbf0
  0x01cb947c: hlt    
  0x01cb947d: mov    %esi,-0x1c(%ebp)
  0x01cb9480: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb9488: mov    -0xc(%edi),%edi
  0x01cb948b: push   %edi
  0x01cb948c: mov    %ebp,0x144(%edi)
  0x01cb9492: mov    %eax,0x13c(%edi)
  0x01cb9498: call   0x5505a470
  0x01cb949d: add    $0x4,%esp
  0x01cb94a0: push   %eax
  0x01cb94a1: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb94a9: mov    -0xc(%eax),%eax
  0x01cb94ac: cmp    %eax,%edi
  0x01cb94ae: je     0x01cb94c5
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb94b4: push   $0x55312af0
  0x01cb94b9: call   0x01cb94be
  0x01cb94be: pusha  
  0x01cb94bf: call   0x54dedbf0
  0x01cb94c4: hlt    
  0x01cb94c5: pop    %eax
  0x01cb94c6: movl   $0x0,0x13c(%edi)
  0x01cb94d0: movl   $0x0,0x144(%edi)
  0x01cb94da: cmpl   $0x0,0x4(%edi)
  0x01cb94e1: jne    0x01cb0340
  0x01cb94e7: mov    -0x1c(%ebp),%esi
  0x01cb94ea: mov    -0x18(%ebp),%edi
  0x01cb94ed: ret    
  0x01cb94ee: push   $0x552fd97c
  0x01cb94f3: call   0x01cb94f8
  0x01cb94f8: pusha  
  0x01cb94f9: call   0x54dedbf0
  0x01cb94fe: hlt    
  0x01cb94ff: movzbl 0x7(%esi),%ebx
  0x01cb9503: add    $0x7,%esi
  0x01cb9506: jmp    *0x55629038(,%ebx,4)
  0x01cb950d: sub    $0x4,%esp
  0x01cb9510: movss  %xmm0,(%esp)
  0x01cb9515: flds   (%esp)
  0x01cb9518: add    $0x4,%esp
  0x01cb951b: movl   $0x0,-0x8(%ebp)
  0x01cb9522: mov    -0x1c(%ebp),%esi
  0x01cb9525: mov    -0x18(%ebp),%edi
  0x01cb9528: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb9530: mov    -0xc(%ecx),%ecx
  0x01cb9533: cmpl   $0x0,0x4(%ecx)
  0x01cb953a: je     0x01cb95ee
  0x01cb9540: call   0x01cb954a
  0x01cb9545: jmp    0x01cb95dd
  0x01cb954a: lea    0x4(%esp),%eax
  0x01cb954e: cmpl   $0x0,-0x8(%ebp)
  0x01cb9555: je     0x01cb956c
  0x01cb955b: push   $0x55310188
  0x01cb9560: call   0x01cb9565
  0x01cb9565: pusha  
  0x01cb9566: call   0x54dedbf0
  0x01cb956b: hlt    
  0x01cb956c: mov    %esi,-0x1c(%ebp)
  0x01cb956f: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb9577: mov    -0xc(%edi),%edi
  0x01cb957a: push   %edi
  0x01cb957b: mov    %ebp,0x144(%edi)
  0x01cb9581: mov    %eax,0x13c(%edi)
  0x01cb9587: call   0x5505a470
  0x01cb958c: add    $0x4,%esp
  0x01cb958f: push   %eax
  0x01cb9590: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb9598: mov    -0xc(%eax),%eax
  0x01cb959b: cmp    %eax,%edi
  0x01cb959d: je     0x01cb95b4
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb95a3: push   $0x55312af0
  0x01cb95a8: call   0x01cb95ad
  0x01cb95ad: pusha  
  0x01cb95ae: call   0x54dedbf0
  0x01cb95b3: hlt    
  0x01cb95b4: pop    %eax
  0x01cb95b5: movl   $0x0,0x13c(%edi)
  0x01cb95bf: movl   $0x0,0x144(%edi)
  0x01cb95c9: cmpl   $0x0,0x4(%edi)
  0x01cb95d0: jne    0x01cb0340
  0x01cb95d6: mov    -0x1c(%ebp),%esi
  0x01cb95d9: mov    -0x18(%ebp),%edi
  0x01cb95dc: ret    
  0x01cb95dd: push   $0x552fd97c
  0x01cb95e2: call   0x01cb95e7
  0x01cb95e7: pusha  
  0x01cb95e8: call   0x54dedbf0
  0x01cb95ed: hlt    
  0x01cb95ee: movzbl 0x7(%esi),%ebx
  0x01cb95f2: add    $0x7,%esi
  0x01cb95f5: jmp    *0x55628c38(,%ebx,4)
  0x01cb95fc: movl   $0x0,-0x8(%ebp)
  0x01cb9603: mov    -0x1c(%ebp),%esi
  0x01cb9606: mov    -0x18(%ebp),%edi
  0x01cb9609: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb9611: mov    -0xc(%ecx),%ecx
  0x01cb9614: cmpl   $0x0,0x4(%ecx)
  0x01cb961b: je     0x01cb96cf
  0x01cb9621: call   0x01cb962b
  0x01cb9626: jmp    0x01cb96be
  0x01cb962b: lea    0x4(%esp),%eax
  0x01cb962f: cmpl   $0x0,-0x8(%ebp)
  0x01cb9636: je     0x01cb964d
  0x01cb963c: push   $0x55310188
  0x01cb9641: call   0x01cb9646
  0x01cb9646: pusha  
  0x01cb9647: call   0x54dedbf0
  0x01cb964c: hlt    
  0x01cb964d: mov    %esi,-0x1c(%ebp)
  0x01cb9650: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb9658: mov    -0xc(%edi),%edi
  0x01cb965b: push   %edi
  0x01cb965c: mov    %ebp,0x144(%edi)
  0x01cb9662: mov    %eax,0x13c(%edi)
  0x01cb9668: call   0x5505a470
  0x01cb966d: add    $0x4,%esp
  0x01cb9670: push   %eax
  0x01cb9671: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb9679: mov    -0xc(%eax),%eax
  0x01cb967c: cmp    %eax,%edi
  0x01cb967e: je     0x01cb9695
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb9684: push   $0x55312af0
  0x01cb9689: call   0x01cb968e
  0x01cb968e: pusha  
  0x01cb968f: call   0x54dedbf0
  0x01cb9694: hlt    
  0x01cb9695: pop    %eax
  0x01cb9696: movl   $0x0,0x13c(%edi)
  0x01cb96a0: movl   $0x0,0x144(%edi)
  0x01cb96aa: cmpl   $0x0,0x4(%edi)
  0x01cb96b1: jne    0x01cb0340
  0x01cb96b7: mov    -0x1c(%ebp),%esi
  0x01cb96ba: mov    -0x18(%ebp),%edi
  0x01cb96bd: ret    
  0x01cb96be: push   $0x552fd97c
  0x01cb96c3: call   0x01cb96c8
  0x01cb96c8: pusha  
  0x01cb96c9: call   0x54dedbf0
  0x01cb96ce: hlt    
  0x01cb96cf: movzbl 0x7(%esi),%ebx
  0x01cb96d3: add    $0x7,%esi
  0x01cb96d6: jmp    *0x55628838(,%ebx,4)
  0x01cb96dd: movl   $0x0,-0x8(%ebp)
  0x01cb96e4: mov    -0x1c(%ebp),%esi
  0x01cb96e7: mov    -0x18(%ebp),%edi
  0x01cb96ea: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb96f2: mov    -0xc(%ecx),%ecx
  0x01cb96f5: cmpl   $0x0,0x4(%ecx)
  0x01cb96fc: je     0x01cb97b0
  0x01cb9702: call   0x01cb970c
  0x01cb9707: jmp    0x01cb979f
  0x01cb970c: lea    0x4(%esp),%eax
  0x01cb9710: cmpl   $0x0,-0x8(%ebp)
  0x01cb9717: je     0x01cb972e
  0x01cb971d: push   $0x55310188
  0x01cb9722: call   0x01cb9727
  0x01cb9727: pusha  
  0x01cb9728: call   0x54dedbf0
  0x01cb972d: hlt    
  0x01cb972e: mov    %esi,-0x1c(%ebp)
  0x01cb9731: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb9739: mov    -0xc(%edi),%edi
  0x01cb973c: push   %edi
  0x01cb973d: mov    %ebp,0x144(%edi)
  0x01cb9743: mov    %eax,0x13c(%edi)
  0x01cb9749: call   0x5505a470
  0x01cb974e: add    $0x4,%esp
  0x01cb9751: push   %eax
  0x01cb9752: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb975a: mov    -0xc(%eax),%eax
  0x01cb975d: cmp    %eax,%edi
  0x01cb975f: je     0x01cb9776
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb9765: push   $0x55312af0
  0x01cb976a: call   0x01cb976f
  0x01cb976f: pusha  
  0x01cb9770: call   0x54dedbf0
  0x01cb9775: hlt    
  0x01cb9776: pop    %eax
  0x01cb9777: movl   $0x0,0x13c(%edi)
  0x01cb9781: movl   $0x0,0x144(%edi)
  0x01cb978b: cmpl   $0x0,0x4(%edi)
  0x01cb9792: jne    0x01cb0340
  0x01cb9798: mov    -0x1c(%ebp),%esi
  0x01cb979b: mov    -0x18(%ebp),%edi
  0x01cb979e: ret    
  0x01cb979f: push   $0x552fd97c
  0x01cb97a4: call   0x01cb97a9
  0x01cb97a9: pusha  
  0x01cb97aa: call   0x54dedbf0
  0x01cb97af: hlt    
  0x01cb97b0: movzbl 0x7(%esi),%ebx
  0x01cb97b4: add    $0x7,%esi
  0x01cb97b7: jmp    *0x55628438(,%ebx,4)
  0x01cb97be: movl   $0x0,-0x8(%ebp)
  0x01cb97c5: mov    -0x1c(%ebp),%esi
  0x01cb97c8: mov    -0x18(%ebp),%edi
  0x01cb97cb: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb97d3: mov    -0xc(%ecx),%ecx
  0x01cb97d6: cmpl   $0x0,0x4(%ecx)
  0x01cb97dd: je     0x01cb9891
  0x01cb97e3: call   0x01cb97ed
  0x01cb97e8: jmp    0x01cb9880
  0x01cb97ed: lea    0x4(%esp),%eax
  0x01cb97f1: cmpl   $0x0,-0x8(%ebp)
  0x01cb97f8: je     0x01cb980f
  0x01cb97fe: push   $0x55310188
  0x01cb9803: call   0x01cb9808
  0x01cb9808: pusha  
  0x01cb9809: call   0x54dedbf0
  0x01cb980e: hlt    
  0x01cb980f: mov    %esi,-0x1c(%ebp)
  0x01cb9812: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb981a: mov    -0xc(%edi),%edi
  0x01cb981d: push   %edi
  0x01cb981e: mov    %ebp,0x144(%edi)
  0x01cb9824: mov    %eax,0x13c(%edi)
  0x01cb982a: call   0x5505a470
  0x01cb982f: add    $0x4,%esp
  0x01cb9832: push   %eax
  0x01cb9833: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb983b: mov    -0xc(%eax),%eax
  0x01cb983e: cmp    %eax,%edi
  0x01cb9840: je     0x01cb9857
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb9846: push   $0x55312af0
  0x01cb984b: call   0x01cb9850
  0x01cb9850: pusha  
  0x01cb9851: call   0x54dedbf0
  0x01cb9856: hlt    
  0x01cb9857: pop    %eax
  0x01cb9858: movl   $0x0,0x13c(%edi)
  0x01cb9862: movl   $0x0,0x144(%edi)
  0x01cb986c: cmpl   $0x0,0x4(%edi)
  0x01cb9873: jne    0x01cb0340
  0x01cb9879: mov    -0x1c(%ebp),%esi
  0x01cb987c: mov    -0x18(%ebp),%edi
  0x01cb987f: ret    
  0x01cb9880: push   $0x552fd97c
  0x01cb9885: call   0x01cb988a
  0x01cb988a: pusha  
  0x01cb988b: call   0x54dedbf0
  0x01cb9890: hlt    
  0x01cb9891: movzbl 0x7(%esi),%ebx
  0x01cb9895: add    $0x7,%esi
  0x01cb9898: jmp    *0x55629438(,%ebx,4)
  0x01cb989f: movl   $0x0,-0x8(%ebp)
  0x01cb98a6: mov    -0x1c(%ebp),%esi
  0x01cb98a9: mov    -0x18(%ebp),%edi
  0x01cb98ac: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb98b4: mov    -0xc(%ecx),%ecx
  0x01cb98b7: cmpl   $0x0,0x4(%ecx)
  0x01cb98be: je     0x01cb9972
  0x01cb98c4: call   0x01cb98ce
  0x01cb98c9: jmp    0x01cb9961
  0x01cb98ce: lea    0x4(%esp),%eax
  0x01cb98d2: cmpl   $0x0,-0x8(%ebp)
  0x01cb98d9: je     0x01cb98f0
  0x01cb98df: push   $0x55310188
  0x01cb98e4: call   0x01cb98e9
  0x01cb98e9: pusha  
  0x01cb98ea: call   0x54dedbf0
  0x01cb98ef: hlt    
  0x01cb98f0: mov    %esi,-0x1c(%ebp)
  0x01cb98f3: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb98fb: mov    -0xc(%edi),%edi
  0x01cb98fe: push   %edi
  0x01cb98ff: mov    %ebp,0x144(%edi)
  0x01cb9905: mov    %eax,0x13c(%edi)
  0x01cb990b: call   0x5505a470
  0x01cb9910: add    $0x4,%esp
  0x01cb9913: push   %eax
  0x01cb9914: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb991c: mov    -0xc(%eax),%eax
  0x01cb991f: cmp    %eax,%edi
  0x01cb9921: je     0x01cb9938
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb9927: push   $0x55312af0
  0x01cb992c: call   0x01cb9931
  0x01cb9931: pusha  
  0x01cb9932: call   0x54dedbf0
  0x01cb9937: hlt    
  0x01cb9938: pop    %eax
  0x01cb9939: movl   $0x0,0x13c(%edi)
  0x01cb9943: movl   $0x0,0x144(%edi)
  0x01cb994d: cmpl   $0x0,0x4(%edi)
  0x01cb9954: jne    0x01cb0340
  0x01cb995a: mov    -0x1c(%ebp),%esi
  0x01cb995d: mov    -0x18(%ebp),%edi
  0x01cb9960: ret    
  0x01cb9961: push   $0x552fd97c
  0x01cb9966: call   0x01cb996b
  0x01cb996b: pusha  
  0x01cb996c: call   0x54dedbf0
  0x01cb9971: hlt    
  0x01cb9972: movzbl 0x7(%esi),%ebx
  0x01cb9976: add    $0x7,%esi
  0x01cb9979: jmp    *0x55628438(,%ebx,4)
  0x01cb9980: movl   $0x0,-0x8(%ebp)
  0x01cb9987: mov    -0x1c(%ebp),%esi
  0x01cb998a: mov    -0x18(%ebp),%edi
  0x01cb998d: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb9995: mov    -0xc(%ecx),%ecx
  0x01cb9998: cmpl   $0x0,0x4(%ecx)
  0x01cb999f: je     0x01cb9a53
  0x01cb99a5: call   0x01cb99af
  0x01cb99aa: jmp    0x01cb9a42
  0x01cb99af: lea    0x4(%esp),%eax
  0x01cb99b3: cmpl   $0x0,-0x8(%ebp)
  0x01cb99ba: je     0x01cb99d1
  0x01cb99c0: push   $0x55310188
  0x01cb99c5: call   0x01cb99ca
  0x01cb99ca: pusha  
  0x01cb99cb: call   0x54dedbf0
  0x01cb99d0: hlt    
  0x01cb99d1: mov    %esi,-0x1c(%ebp)
  0x01cb99d4: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb99dc: mov    -0xc(%edi),%edi
  0x01cb99df: push   %edi
  0x01cb99e0: mov    %ebp,0x144(%edi)
  0x01cb99e6: mov    %eax,0x13c(%edi)
  0x01cb99ec: call   0x5505a470
  0x01cb99f1: add    $0x4,%esp
  0x01cb99f4: push   %eax
  0x01cb99f5: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb99fd: mov    -0xc(%eax),%eax
  0x01cb9a00: cmp    %eax,%edi
  0x01cb9a02: je     0x01cb9a19
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb9a08: push   $0x55312af0
  0x01cb9a0d: call   0x01cb9a12
  0x01cb9a12: pusha  
  0x01cb9a13: call   0x54dedbf0
  0x01cb9a18: hlt    
  0x01cb9a19: pop    %eax
  0x01cb9a1a: movl   $0x0,0x13c(%edi)
  0x01cb9a24: movl   $0x0,0x144(%edi)
  0x01cb9a2e: cmpl   $0x0,0x4(%edi)
  0x01cb9a35: jne    0x01cb0340
  0x01cb9a3b: mov    -0x1c(%ebp),%esi
  0x01cb9a3e: mov    -0x18(%ebp),%edi
  0x01cb9a41: ret    
  0x01cb9a42: push   $0x552fd97c
  0x01cb9a47: call   0x01cb9a4c
  0x01cb9a4c: pusha  
  0x01cb9a4d: call   0x54dedbf0
  0x01cb9a52: hlt    
  0x01cb9a53: movzbl 0x7(%esi),%ebx
  0x01cb9a57: add    $0x7,%esi
  0x01cb9a5a: jmp    *0x55628438(,%ebx,4)
  0x01cb9a61: movl   $0x0,-0x8(%ebp)
  0x01cb9a68: mov    -0x1c(%ebp),%esi
  0x01cb9a6b: mov    -0x18(%ebp),%edi
  0x01cb9a6e: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb9a76: mov    -0xc(%ecx),%ecx
  0x01cb9a79: cmpl   $0x0,0x4(%ecx)
  0x01cb9a80: je     0x01cb9b34
  0x01cb9a86: call   0x01cb9a90
  0x01cb9a8b: jmp    0x01cb9b23
  0x01cb9a90: lea    0x4(%esp),%eax
  0x01cb9a94: cmpl   $0x0,-0x8(%ebp)
  0x01cb9a9b: je     0x01cb9ab2
  0x01cb9aa1: push   $0x55310188
  0x01cb9aa6: call   0x01cb9aab
  0x01cb9aab: pusha  
  0x01cb9aac: call   0x54dedbf0
  0x01cb9ab1: hlt    
  0x01cb9ab2: mov    %esi,-0x1c(%ebp)
  0x01cb9ab5: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb9abd: mov    -0xc(%edi),%edi
  0x01cb9ac0: push   %edi
  0x01cb9ac1: mov    %ebp,0x144(%edi)
  0x01cb9ac7: mov    %eax,0x13c(%edi)
  0x01cb9acd: call   0x5505a470
  0x01cb9ad2: add    $0x4,%esp
  0x01cb9ad5: push   %eax
  0x01cb9ad6: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb9ade: mov    -0xc(%eax),%eax
  0x01cb9ae1: cmp    %eax,%edi
  0x01cb9ae3: je     0x01cb9afa
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb9ae9: push   $0x55312af0
  0x01cb9aee: call   0x01cb9af3
  0x01cb9af3: pusha  
  0x01cb9af4: call   0x54dedbf0
  0x01cb9af9: hlt    
  0x01cb9afa: pop    %eax
  0x01cb9afb: movl   $0x0,0x13c(%edi)
  0x01cb9b05: movl   $0x0,0x144(%edi)
  0x01cb9b0f: cmpl   $0x0,0x4(%edi)
  0x01cb9b16: jne    0x01cb0340
  0x01cb9b1c: mov    -0x1c(%ebp),%esi
  0x01cb9b1f: mov    -0x18(%ebp),%edi
  0x01cb9b22: ret    
  0x01cb9b23: push   $0x552fd97c
  0x01cb9b28: call   0x01cb9b2d
  0x01cb9b2d: pusha  
  0x01cb9b2e: call   0x54dedbf0
  0x01cb9b33: hlt    
  0x01cb9b34: movzbl 0x7(%esi),%ebx
  0x01cb9b38: add    $0x7,%esi
  0x01cb9b3b: jmp    *0x55628438(,%ebx,4)
  0x01cb9b42: movl   $0x0,-0x8(%ebp)
  0x01cb9b49: mov    -0x1c(%ebp),%esi
  0x01cb9b4c: mov    -0x18(%ebp),%edi
  0x01cb9b4f: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb9b57: mov    -0xc(%ecx),%ecx
  0x01cb9b5a: cmpl   $0x0,0x4(%ecx)
  0x01cb9b61: je     0x01cb9c15
  0x01cb9b67: call   0x01cb9b71
  0x01cb9b6c: jmp    0x01cb9c04
  0x01cb9b71: lea    0x4(%esp),%eax
  0x01cb9b75: cmpl   $0x0,-0x8(%ebp)
  0x01cb9b7c: je     0x01cb9b93
  0x01cb9b82: push   $0x55310188
  0x01cb9b87: call   0x01cb9b8c
  0x01cb9b8c: pusha  
  0x01cb9b8d: call   0x54dedbf0
  0x01cb9b92: hlt    
  0x01cb9b93: mov    %esi,-0x1c(%ebp)
  0x01cb9b96: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb9b9e: mov    -0xc(%edi),%edi
  0x01cb9ba1: push   %edi
  0x01cb9ba2: mov    %ebp,0x144(%edi)
  0x01cb9ba8: mov    %eax,0x13c(%edi)
  0x01cb9bae: call   0x5505a470
  0x01cb9bb3: add    $0x4,%esp
  0x01cb9bb6: push   %eax
  0x01cb9bb7: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb9bbf: mov    -0xc(%eax),%eax
  0x01cb9bc2: cmp    %eax,%edi
  0x01cb9bc4: je     0x01cb9bdb
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb9bca: push   $0x55312af0
  0x01cb9bcf: call   0x01cb9bd4
  0x01cb9bd4: pusha  
  0x01cb9bd5: call   0x54dedbf0
  0x01cb9bda: hlt    
  0x01cb9bdb: pop    %eax
  0x01cb9bdc: movl   $0x0,0x13c(%edi)
  0x01cb9be6: movl   $0x0,0x144(%edi)
  0x01cb9bf0: cmpl   $0x0,0x4(%edi)
  0x01cb9bf7: jne    0x01cb0340
  0x01cb9bfd: mov    -0x1c(%ebp),%esi
  0x01cb9c00: mov    -0x18(%ebp),%edi
  0x01cb9c03: ret    
  0x01cb9c04: push   $0x552fd97c
  0x01cb9c09: call   0x01cb9c0e
  0x01cb9c0e: pusha  
  0x01cb9c0f: call   0x54dedbf0
  0x01cb9c14: hlt    
  0x01cb9c15: movzbl 0x8(%esi),%ebx
  0x01cb9c19: add    $0x8,%esi
  0x01cb9c1c: jmp    *0x55629838(,%ebx,4)
  0x01cb9c23: sub    $0x8,%esp
  0x01cb9c26: movsd  %xmm0,(%esp)
  0x01cb9c2b: fldl   (%esp)
  0x01cb9c2e: add    $0x8,%esp
  0x01cb9c31: movl   $0x0,-0x8(%ebp)
  0x01cb9c38: mov    -0x1c(%ebp),%esi
  0x01cb9c3b: mov    -0x18(%ebp),%edi
  0x01cb9c3e: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb9c46: mov    -0xc(%ecx),%ecx
  0x01cb9c49: cmpl   $0x0,0x4(%ecx)
  0x01cb9c50: je     0x01cb9d04
  0x01cb9c56: call   0x01cb9c60
  0x01cb9c5b: jmp    0x01cb9cf3
  0x01cb9c60: lea    0x4(%esp),%eax
  0x01cb9c64: cmpl   $0x0,-0x8(%ebp)
  0x01cb9c6b: je     0x01cb9c82
  0x01cb9c71: push   $0x55310188
  0x01cb9c76: call   0x01cb9c7b
  0x01cb9c7b: pusha  
  0x01cb9c7c: call   0x54dedbf0
  0x01cb9c81: hlt    
  0x01cb9c82: mov    %esi,-0x1c(%ebp)
  0x01cb9c85: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb9c8d: mov    -0xc(%edi),%edi
  0x01cb9c90: push   %edi
  0x01cb9c91: mov    %ebp,0x144(%edi)
  0x01cb9c97: mov    %eax,0x13c(%edi)
  0x01cb9c9d: call   0x5505a470
  0x01cb9ca2: add    $0x4,%esp
  0x01cb9ca5: push   %eax
  0x01cb9ca6: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb9cae: mov    -0xc(%eax),%eax
  0x01cb9cb1: cmp    %eax,%edi
  0x01cb9cb3: je     0x01cb9cca
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb9cb9: push   $0x55312af0
  0x01cb9cbe: call   0x01cb9cc3
  0x01cb9cc3: pusha  
  0x01cb9cc4: call   0x54dedbf0
  0x01cb9cc9: hlt    
  0x01cb9cca: pop    %eax
  0x01cb9ccb: movl   $0x0,0x13c(%edi)
  0x01cb9cd5: movl   $0x0,0x144(%edi)
  0x01cb9cdf: cmpl   $0x0,0x4(%edi)
  0x01cb9ce6: jne    0x01cb0340
  0x01cb9cec: mov    -0x1c(%ebp),%esi
  0x01cb9cef: mov    -0x18(%ebp),%edi
  0x01cb9cf2: ret    
  0x01cb9cf3: push   $0x552fd97c
  0x01cb9cf8: call   0x01cb9cfd
  0x01cb9cfd: pusha  
  0x01cb9cfe: call   0x54dedbf0
  0x01cb9d03: hlt    
  0x01cb9d04: movzbl 0x8(%esi),%ebx
  0x01cb9d08: add    $0x8,%esi
  0x01cb9d0b: jmp    *0x55629038(,%ebx,4)
  0x01cb9d12: sub    $0x4,%esp
  0x01cb9d15: movss  %xmm0,(%esp)
  0x01cb9d1a: flds   (%esp)
  0x01cb9d1d: add    $0x4,%esp
  0x01cb9d20: movl   $0x0,-0x8(%ebp)
  0x01cb9d27: mov    -0x1c(%ebp),%esi
  0x01cb9d2a: mov    -0x18(%ebp),%edi
  0x01cb9d2d: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb9d35: mov    -0xc(%ecx),%ecx
  0x01cb9d38: cmpl   $0x0,0x4(%ecx)
  0x01cb9d3f: je     0x01cb9df3
  0x01cb9d45: call   0x01cb9d4f
  0x01cb9d4a: jmp    0x01cb9de2
  0x01cb9d4f: lea    0x4(%esp),%eax
  0x01cb9d53: cmpl   $0x0,-0x8(%ebp)
  0x01cb9d5a: je     0x01cb9d71
  0x01cb9d60: push   $0x55310188
  0x01cb9d65: call   0x01cb9d6a
  0x01cb9d6a: pusha  
  0x01cb9d6b: call   0x54dedbf0
  0x01cb9d70: hlt    
  0x01cb9d71: mov    %esi,-0x1c(%ebp)
  0x01cb9d74: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb9d7c: mov    -0xc(%edi),%edi
  0x01cb9d7f: push   %edi
  0x01cb9d80: mov    %ebp,0x144(%edi)
  0x01cb9d86: mov    %eax,0x13c(%edi)
  0x01cb9d8c: call   0x5505a470
  0x01cb9d91: add    $0x4,%esp
  0x01cb9d94: push   %eax
  0x01cb9d95: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb9d9d: mov    -0xc(%eax),%eax
  0x01cb9da0: cmp    %eax,%edi
  0x01cb9da2: je     0x01cb9db9
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb9da8: push   $0x55312af0
  0x01cb9dad: call   0x01cb9db2
  0x01cb9db2: pusha  
  0x01cb9db3: call   0x54dedbf0
  0x01cb9db8: hlt    
  0x01cb9db9: pop    %eax
  0x01cb9dba: movl   $0x0,0x13c(%edi)
  0x01cb9dc4: movl   $0x0,0x144(%edi)
  0x01cb9dce: cmpl   $0x0,0x4(%edi)
  0x01cb9dd5: jne    0x01cb0340
  0x01cb9ddb: mov    -0x1c(%ebp),%esi
  0x01cb9dde: mov    -0x18(%ebp),%edi
  0x01cb9de1: ret    
  0x01cb9de2: push   $0x552fd97c
  0x01cb9de7: call   0x01cb9dec
  0x01cb9dec: pusha  
  0x01cb9ded: call   0x54dedbf0
  0x01cb9df2: hlt    
  0x01cb9df3: movzbl 0x8(%esi),%ebx
  0x01cb9df7: add    $0x8,%esi
  0x01cb9dfa: jmp    *0x55628c38(,%ebx,4)
  0x01cb9e01: movl   $0x0,-0x8(%ebp)
  0x01cb9e08: mov    -0x1c(%ebp),%esi
  0x01cb9e0b: mov    -0x18(%ebp),%edi
  0x01cb9e0e: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb9e16: mov    -0xc(%ecx),%ecx
  0x01cb9e19: cmpl   $0x0,0x4(%ecx)
  0x01cb9e20: je     0x01cb9ed4
  0x01cb9e26: call   0x01cb9e30
  0x01cb9e2b: jmp    0x01cb9ec3
  0x01cb9e30: lea    0x4(%esp),%eax
  0x01cb9e34: cmpl   $0x0,-0x8(%ebp)
  0x01cb9e3b: je     0x01cb9e52
  0x01cb9e41: push   $0x55310188
  0x01cb9e46: call   0x01cb9e4b
  0x01cb9e4b: pusha  
  0x01cb9e4c: call   0x54dedbf0
  0x01cb9e51: hlt    
  0x01cb9e52: mov    %esi,-0x1c(%ebp)
  0x01cb9e55: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb9e5d: mov    -0xc(%edi),%edi
  0x01cb9e60: push   %edi
  0x01cb9e61: mov    %ebp,0x144(%edi)
  0x01cb9e67: mov    %eax,0x13c(%edi)
  0x01cb9e6d: call   0x5505a470
  0x01cb9e72: add    $0x4,%esp
  0x01cb9e75: push   %eax
  0x01cb9e76: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb9e7e: mov    -0xc(%eax),%eax
  0x01cb9e81: cmp    %eax,%edi
  0x01cb9e83: je     0x01cb9e9a
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb9e89: push   $0x55312af0
  0x01cb9e8e: call   0x01cb9e93
  0x01cb9e93: pusha  
  0x01cb9e94: call   0x54dedbf0
  0x01cb9e99: hlt    
  0x01cb9e9a: pop    %eax
  0x01cb9e9b: movl   $0x0,0x13c(%edi)
  0x01cb9ea5: movl   $0x0,0x144(%edi)
  0x01cb9eaf: cmpl   $0x0,0x4(%edi)
  0x01cb9eb6: jne    0x01cb0340
  0x01cb9ebc: mov    -0x1c(%ebp),%esi
  0x01cb9ebf: mov    -0x18(%ebp),%edi
  0x01cb9ec2: ret    
  0x01cb9ec3: push   $0x552fd97c
  0x01cb9ec8: call   0x01cb9ecd
  0x01cb9ecd: pusha  
  0x01cb9ece: call   0x54dedbf0
  0x01cb9ed3: hlt    
  0x01cb9ed4: movzbl 0x8(%esi),%ebx
  0x01cb9ed8: add    $0x8,%esi
  0x01cb9edb: jmp    *0x55628838(,%ebx,4)
  0x01cb9ee2: movl   $0x0,-0x8(%ebp)
  0x01cb9ee9: mov    -0x1c(%ebp),%esi
  0x01cb9eec: mov    -0x18(%ebp),%edi
  0x01cb9eef: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb9ef7: mov    -0xc(%ecx),%ecx
  0x01cb9efa: cmpl   $0x0,0x4(%ecx)
  0x01cb9f01: je     0x01cb9fb5
  0x01cb9f07: call   0x01cb9f11
  0x01cb9f0c: jmp    0x01cb9fa4
  0x01cb9f11: lea    0x4(%esp),%eax
  0x01cb9f15: cmpl   $0x0,-0x8(%ebp)
  0x01cb9f1c: je     0x01cb9f33
  0x01cb9f22: push   $0x55310188
  0x01cb9f27: call   0x01cb9f2c
  0x01cb9f2c: pusha  
  0x01cb9f2d: call   0x54dedbf0
  0x01cb9f32: hlt    
  0x01cb9f33: mov    %esi,-0x1c(%ebp)
  0x01cb9f36: mov    %fs:0x0(,%eiz,1),%edi
  0x01cb9f3e: mov    -0xc(%edi),%edi
  0x01cb9f41: push   %edi
  0x01cb9f42: mov    %ebp,0x144(%edi)
  0x01cb9f48: mov    %eax,0x13c(%edi)
  0x01cb9f4e: call   0x5505a470
  0x01cb9f53: add    $0x4,%esp
  0x01cb9f56: push   %eax
  0x01cb9f57: mov    %fs:0x0(,%eiz,1),%eax
  0x01cb9f5f: mov    -0xc(%eax),%eax
  0x01cb9f62: cmp    %eax,%edi
  0x01cb9f64: je     0x01cb9f7b
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cb9f6a: push   $0x55312af0
  0x01cb9f6f: call   0x01cb9f74
  0x01cb9f74: pusha  
  0x01cb9f75: call   0x54dedbf0
  0x01cb9f7a: hlt    
  0x01cb9f7b: pop    %eax
  0x01cb9f7c: movl   $0x0,0x13c(%edi)
  0x01cb9f86: movl   $0x0,0x144(%edi)
  0x01cb9f90: cmpl   $0x0,0x4(%edi)
  0x01cb9f97: jne    0x01cb0340
  0x01cb9f9d: mov    -0x1c(%ebp),%esi
  0x01cb9fa0: mov    -0x18(%ebp),%edi
  0x01cb9fa3: ret    
  0x01cb9fa4: push   $0x552fd97c
  0x01cb9fa9: call   0x01cb9fae
  0x01cb9fae: pusha  
  0x01cb9faf: call   0x54dedbf0
  0x01cb9fb4: hlt    
  0x01cb9fb5: movzbl 0x8(%esi),%ebx
  0x01cb9fb9: add    $0x8,%esi
  0x01cb9fbc: jmp    *0x55628438(,%ebx,4)
  0x01cb9fc3: movl   $0x0,-0x8(%ebp)
  0x01cb9fca: mov    -0x1c(%ebp),%esi
  0x01cb9fcd: mov    -0x18(%ebp),%edi
  0x01cb9fd0: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cb9fd8: mov    -0xc(%ecx),%ecx
  0x01cb9fdb: cmpl   $0x0,0x4(%ecx)
  0x01cb9fe2: je     0x01cba096
  0x01cb9fe8: call   0x01cb9ff2
  0x01cb9fed: jmp    0x01cba085
  0x01cb9ff2: lea    0x4(%esp),%eax
  0x01cb9ff6: cmpl   $0x0,-0x8(%ebp)
  0x01cb9ffd: je     0x01cba014
  0x01cba003: push   $0x55310188
  0x01cba008: call   0x01cba00d
  0x01cba00d: pusha  
  0x01cba00e: call   0x54dedbf0
  0x01cba013: hlt    
  0x01cba014: mov    %esi,-0x1c(%ebp)
  0x01cba017: mov    %fs:0x0(,%eiz,1),%edi
  0x01cba01f: mov    -0xc(%edi),%edi
  0x01cba022: push   %edi
  0x01cba023: mov    %ebp,0x144(%edi)
  0x01cba029: mov    %eax,0x13c(%edi)
  0x01cba02f: call   0x5505a470
  0x01cba034: add    $0x4,%esp
  0x01cba037: push   %eax
  0x01cba038: mov    %fs:0x0(,%eiz,1),%eax
  0x01cba040: mov    -0xc(%eax),%eax
  0x01cba043: cmp    %eax,%edi
  0x01cba045: je     0x01cba05c
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cba04b: push   $0x55312af0
  0x01cba050: call   0x01cba055
  0x01cba055: pusha  
  0x01cba056: call   0x54dedbf0
  0x01cba05b: hlt    
  0x01cba05c: pop    %eax
  0x01cba05d: movl   $0x0,0x13c(%edi)
  0x01cba067: movl   $0x0,0x144(%edi)
  0x01cba071: cmpl   $0x0,0x4(%edi)
  0x01cba078: jne    0x01cb0340
  0x01cba07e: mov    -0x1c(%ebp),%esi
  0x01cba081: mov    -0x18(%ebp),%edi
  0x01cba084: ret    
  0x01cba085: push   $0x552fd97c
  0x01cba08a: call   0x01cba08f
  0x01cba08f: pusha  
  0x01cba090: call   0x54dedbf0
  0x01cba095: hlt    
  0x01cba096: movzbl 0x8(%esi),%ebx
  0x01cba09a: add    $0x8,%esi
  0x01cba09d: jmp    *0x55629438(,%ebx,4)
  0x01cba0a4: movl   $0x0,-0x8(%ebp)
  0x01cba0ab: mov    -0x1c(%ebp),%esi
  0x01cba0ae: mov    -0x18(%ebp),%edi
  0x01cba0b1: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cba0b9: mov    -0xc(%ecx),%ecx
  0x01cba0bc: cmpl   $0x0,0x4(%ecx)
  0x01cba0c3: je     0x01cba177
  0x01cba0c9: call   0x01cba0d3
  0x01cba0ce: jmp    0x01cba166
  0x01cba0d3: lea    0x4(%esp),%eax
  0x01cba0d7: cmpl   $0x0,-0x8(%ebp)
  0x01cba0de: je     0x01cba0f5
  0x01cba0e4: push   $0x55310188
  0x01cba0e9: call   0x01cba0ee
  0x01cba0ee: pusha  
  0x01cba0ef: call   0x54dedbf0
  0x01cba0f4: hlt    
  0x01cba0f5: mov    %esi,-0x1c(%ebp)
  0x01cba0f8: mov    %fs:0x0(,%eiz,1),%edi
  0x01cba100: mov    -0xc(%edi),%edi
  0x01cba103: push   %edi
  0x01cba104: mov    %ebp,0x144(%edi)
  0x01cba10a: mov    %eax,0x13c(%edi)
  0x01cba110: call   0x5505a470
  0x01cba115: add    $0x4,%esp
  0x01cba118: push   %eax
  0x01cba119: mov    %fs:0x0(,%eiz,1),%eax
  0x01cba121: mov    -0xc(%eax),%eax
  0x01cba124: cmp    %eax,%edi
  0x01cba126: je     0x01cba13d
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cba12c: push   $0x55312af0
  0x01cba131: call   0x01cba136
  0x01cba136: pusha  
  0x01cba137: call   0x54dedbf0
  0x01cba13c: hlt    
  0x01cba13d: pop    %eax
  0x01cba13e: movl   $0x0,0x13c(%edi)
  0x01cba148: movl   $0x0,0x144(%edi)
  0x01cba152: cmpl   $0x0,0x4(%edi)
  0x01cba159: jne    0x01cb0340
  0x01cba15f: mov    -0x1c(%ebp),%esi
  0x01cba162: mov    -0x18(%ebp),%edi
  0x01cba165: ret    
  0x01cba166: push   $0x552fd97c
  0x01cba16b: call   0x01cba170
  0x01cba170: pusha  
  0x01cba171: call   0x54dedbf0
  0x01cba176: hlt    
  0x01cba177: movzbl 0x8(%esi),%ebx
  0x01cba17b: add    $0x8,%esi
  0x01cba17e: jmp    *0x55628438(,%ebx,4)
  0x01cba185: movl   $0x0,-0x8(%ebp)
  0x01cba18c: mov    -0x1c(%ebp),%esi
  0x01cba18f: mov    -0x18(%ebp),%edi
  0x01cba192: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cba19a: mov    -0xc(%ecx),%ecx
  0x01cba19d: cmpl   $0x0,0x4(%ecx)
  0x01cba1a4: je     0x01cba258
  0x01cba1aa: call   0x01cba1b4
  0x01cba1af: jmp    0x01cba247
  0x01cba1b4: lea    0x4(%esp),%eax
  0x01cba1b8: cmpl   $0x0,-0x8(%ebp)
  0x01cba1bf: je     0x01cba1d6
  0x01cba1c5: push   $0x55310188
  0x01cba1ca: call   0x01cba1cf
  0x01cba1cf: pusha  
  0x01cba1d0: call   0x54dedbf0
  0x01cba1d5: hlt    
  0x01cba1d6: mov    %esi,-0x1c(%ebp)
  0x01cba1d9: mov    %fs:0x0(,%eiz,1),%edi
  0x01cba1e1: mov    -0xc(%edi),%edi
  0x01cba1e4: push   %edi
  0x01cba1e5: mov    %ebp,0x144(%edi)
  0x01cba1eb: mov    %eax,0x13c(%edi)
  0x01cba1f1: call   0x5505a470
  0x01cba1f6: add    $0x4,%esp
  0x01cba1f9: push   %eax
  0x01cba1fa: mov    %fs:0x0(,%eiz,1),%eax
  0x01cba202: mov    -0xc(%eax),%eax
  0x01cba205: cmp    %eax,%edi
  0x01cba207: je     0x01cba21e
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cba20d: push   $0x55312af0
  0x01cba212: call   0x01cba217
  0x01cba217: pusha  
  0x01cba218: call   0x54dedbf0
  0x01cba21d: hlt    
  0x01cba21e: pop    %eax
  0x01cba21f: movl   $0x0,0x13c(%edi)
  0x01cba229: movl   $0x0,0x144(%edi)
  0x01cba233: cmpl   $0x0,0x4(%edi)
  0x01cba23a: jne    0x01cb0340
  0x01cba240: mov    -0x1c(%ebp),%esi
  0x01cba243: mov    -0x18(%ebp),%edi
  0x01cba246: ret    
  0x01cba247: push   $0x552fd97c
  0x01cba24c: call   0x01cba251
  0x01cba251: pusha  
  0x01cba252: call   0x54dedbf0
  0x01cba257: hlt    
  0x01cba258: movzbl 0x8(%esi),%ebx
  0x01cba25c: add    $0x8,%esi
  0x01cba25f: jmp    *0x55628438(,%ebx,4)
  0x01cba266: movl   $0x0,-0x8(%ebp)
  0x01cba26d: mov    -0x1c(%ebp),%esi
  0x01cba270: mov    -0x18(%ebp),%edi
  0x01cba273: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cba27b: mov    -0xc(%ecx),%ecx
  0x01cba27e: cmpl   $0x0,0x4(%ecx)
  0x01cba285: je     0x01cba339
  0x01cba28b: call   0x01cba295
  0x01cba290: jmp    0x01cba328
  0x01cba295: lea    0x4(%esp),%eax
  0x01cba299: cmpl   $0x0,-0x8(%ebp)
  0x01cba2a0: je     0x01cba2b7
  0x01cba2a6: push   $0x55310188
  0x01cba2ab: call   0x01cba2b0
  0x01cba2b0: pusha  
  0x01cba2b1: call   0x54dedbf0
  0x01cba2b6: hlt    
  0x01cba2b7: mov    %esi,-0x1c(%ebp)
  0x01cba2ba: mov    %fs:0x0(,%eiz,1),%edi
  0x01cba2c2: mov    -0xc(%edi),%edi
  0x01cba2c5: push   %edi
  0x01cba2c6: mov    %ebp,0x144(%edi)
  0x01cba2cc: mov    %eax,0x13c(%edi)
  0x01cba2d2: call   0x5505a470
  0x01cba2d7: add    $0x4,%esp
  0x01cba2da: push   %eax
  0x01cba2db: mov    %fs:0x0(,%eiz,1),%eax
  0x01cba2e3: mov    -0xc(%eax),%eax
  0x01cba2e6: cmp    %eax,%edi
  0x01cba2e8: je     0x01cba2ff
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cba2ee: push   $0x55312af0
  0x01cba2f3: call   0x01cba2f8
  0x01cba2f8: pusha  
  0x01cba2f9: call   0x54dedbf0
  0x01cba2fe: hlt    
  0x01cba2ff: pop    %eax
  0x01cba300: movl   $0x0,0x13c(%edi)
  0x01cba30a: movl   $0x0,0x144(%edi)
  0x01cba314: cmpl   $0x0,0x4(%edi)
  0x01cba31b: jne    0x01cb0340
  0x01cba321: mov    -0x1c(%ebp),%esi
  0x01cba324: mov    -0x18(%ebp),%edi
  0x01cba327: ret    
  0x01cba328: push   $0x552fd97c
  0x01cba32d: call   0x01cba332
  0x01cba332: pusha  
  0x01cba333: call   0x54dedbf0
  0x01cba338: hlt    
  0x01cba339: movzbl 0x8(%esi),%ebx
  0x01cba33d: add    $0x8,%esi
  0x01cba340: jmp    *0x55628438(,%ebx,4)
  0x01cba347: nop    
  0x01cba348: int3   
  0x01cba349: int3   
  0x01cba34a: int3   
  0x01cba34b: int3   
  0x01cba34c: int3   
  0x01cba34d: int3   
  0x01cba34e: int3   
  0x01cba34f: int3   

----------------------------------------------------------------------
result handlers for native calls  [0x01cba360, 0x01cba3a0]  64 bytes

  0x01cba360: and    $0xff,%eax
  0x01cba366: setne  %al
  0x01cba369: ret    
  0x01cba36a: and    $0xffff,%eax
  0x01cba370: ret    
  0x01cba371: movsbl %al,%eax
  0x01cba374: ret    
  0x01cba375: movswl %ax,%eax
  0x01cba378: ret    
  0x01cba379: ret    
  0x01cba37a: pop    %ecx
  0x01cba37b: fldl   (%esp)
  0x01cba37e: fstps  (%esp)
  0x01cba381: movss  (%esp),%xmm0
  0x01cba386: add    $0x8,%esp
  0x01cba389: push   %ecx
  0x01cba38a: ret    
  0x01cba38b: pop    %ecx
  0x01cba38c: movsd  (%esp),%xmm0
  0x01cba391: add    $0x8,%esp
  0x01cba394: push   %ecx
  0x01cba395: ret    
  0x01cba396: mov    0x8(%ebp),%eax
  0x01cba399: ret    
  0x01cba39a: nop    
  0x01cba39b: nop    
  0x01cba39c: int3   
  0x01cba39d: int3   
  0x01cba39e: int3   
  0x01cba39f: int3   

----------------------------------------------------------------------
continuation entry points  [0x01cba3b0, 0x01cba450]  160 bytes

  0x01cba3b0: movl   $0x0,-0x8(%ebp)
  0x01cba3b7: movzbl (%esi),%ebx
  0x01cba3ba: jmp    *0x55629838(,%ebx,4)
  0x01cba3c1: movl   $0x0,-0x8(%ebp)
  0x01cba3c8: movzbl (%esi),%ebx
  0x01cba3cb: jmp    *0x55629038(,%ebx,4)
  0x01cba3d2: movl   $0x0,-0x8(%ebp)
  0x01cba3d9: movzbl (%esi),%ebx
  0x01cba3dc: jmp    *0x55628c38(,%ebx,4)
  0x01cba3e3: movl   $0x0,-0x8(%ebp)
  0x01cba3ea: movzbl (%esi),%ebx
  0x01cba3ed: jmp    *0x55628838(,%ebx,4)
  0x01cba3f4: movl   $0x0,-0x8(%ebp)
  0x01cba3fb: movzbl (%esi),%ebx
  0x01cba3fe: jmp    *0x55628438(,%ebx,4)
  0x01cba405: movl   $0x0,-0x8(%ebp)
  0x01cba40c: movzbl (%esi),%ebx
  0x01cba40f: jmp    *0x55629438(,%ebx,4)
  0x01cba416: movl   $0x0,-0x8(%ebp)
  0x01cba41d: movzbl (%esi),%ebx
  0x01cba420: jmp    *0x55628038(,%ebx,4)
  0x01cba427: movl   $0x0,-0x8(%ebp)
  0x01cba42e: movzbl (%esi),%ebx
  0x01cba431: jmp    *0x55627c38(,%ebx,4)
  0x01cba438: movl   $0x0,-0x8(%ebp)
  0x01cba43f: movzbl (%esi),%ebx
  0x01cba442: jmp    *0x55627838(,%ebx,4)
  0x01cba449: nop    
  0x01cba44a: nop    
  0x01cba44b: nop    
  0x01cba44c: int3   
  0x01cba44d: int3   
  0x01cba44e: int3   
  0x01cba44f: int3   

----------------------------------------------------------------------
safepoint entry points  [0x01cba460, 0x01cbaa60]  1536 bytes

  0x01cba460: call   0x01cba46a
  0x01cba465: jmp    0x01cba4fd
  0x01cba46a: lea    0x4(%esp),%eax
  0x01cba46e: cmpl   $0x0,-0x8(%ebp)
  0x01cba475: je     0x01cba48c
  0x01cba47b: push   $0x55310188
  0x01cba480: call   0x01cba485
  0x01cba485: pusha  
  0x01cba486: call   0x54dedbf0
  0x01cba48b: hlt    
  0x01cba48c: mov    %esi,-0x1c(%ebp)
  0x01cba48f: mov    %fs:0x0(,%eiz,1),%edi
  0x01cba497: mov    -0xc(%edi),%edi
  0x01cba49a: push   %edi
  0x01cba49b: mov    %ebp,0x144(%edi)
  0x01cba4a1: mov    %eax,0x13c(%edi)
  0x01cba4a7: call   0x5505c060
  0x01cba4ac: add    $0x4,%esp
  0x01cba4af: push   %eax
  0x01cba4b0: mov    %fs:0x0(,%eiz,1),%eax
  0x01cba4b8: mov    -0xc(%eax),%eax
  0x01cba4bb: cmp    %eax,%edi
  0x01cba4bd: je     0x01cba4d4
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cba4c3: push   $0x55312af0
  0x01cba4c8: call   0x01cba4cd
  0x01cba4cd: pusha  
  0x01cba4ce: call   0x54dedbf0
  0x01cba4d3: hlt    
  0x01cba4d4: pop    %eax
  0x01cba4d5: movl   $0x0,0x13c(%edi)
  0x01cba4df: movl   $0x0,0x144(%edi)
  0x01cba4e9: cmpl   $0x0,0x4(%edi)
  0x01cba4f0: jne    0x01cb0340
  0x01cba4f6: mov    -0x1c(%ebp),%esi
  0x01cba4f9: mov    -0x18(%ebp),%edi
  0x01cba4fc: ret    
  0x01cba4fd: movzbl (%esi),%ebx
  0x01cba500: jmp    *0x5562bc38(,%ebx,4)
  0x01cba507: sub    $0x8,%esp
  0x01cba50a: fstpl  (%esp)
  0x01cba50d: call   0x01cba517
  0x01cba512: jmp    0x01cba5aa
  0x01cba517: lea    0x4(%esp),%eax
  0x01cba51b: cmpl   $0x0,-0x8(%ebp)
  0x01cba522: je     0x01cba539
  0x01cba528: push   $0x55310188
  0x01cba52d: call   0x01cba532
  0x01cba532: pusha  
  0x01cba533: call   0x54dedbf0
  0x01cba538: hlt    
  0x01cba539: mov    %esi,-0x1c(%ebp)
  0x01cba53c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cba544: mov    -0xc(%edi),%edi
  0x01cba547: push   %edi
  0x01cba548: mov    %ebp,0x144(%edi)
  0x01cba54e: mov    %eax,0x13c(%edi)
  0x01cba554: call   0x5505c060
  0x01cba559: add    $0x4,%esp
  0x01cba55c: push   %eax
  0x01cba55d: mov    %fs:0x0(,%eiz,1),%eax
  0x01cba565: mov    -0xc(%eax),%eax
  0x01cba568: cmp    %eax,%edi
  0x01cba56a: je     0x01cba581
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cba570: push   $0x55312af0
  0x01cba575: call   0x01cba57a
  0x01cba57a: pusha  
  0x01cba57b: call   0x54dedbf0
  0x01cba580: hlt    
  0x01cba581: pop    %eax
  0x01cba582: movl   $0x0,0x13c(%edi)
  0x01cba58c: movl   $0x0,0x144(%edi)
  0x01cba596: cmpl   $0x0,0x4(%edi)
  0x01cba59d: jne    0x01cb0340
  0x01cba5a3: mov    -0x1c(%ebp),%esi
  0x01cba5a6: mov    -0x18(%ebp),%edi
  0x01cba5a9: ret    
  0x01cba5aa: movzbl (%esi),%ebx
  0x01cba5ad: jmp    *0x5562bc38(,%ebx,4)
  0x01cba5b4: sub    $0x4,%esp
  0x01cba5b7: fstps  (%esp)
  0x01cba5ba: call   0x01cba5c4
  0x01cba5bf: jmp    0x01cba657
  0x01cba5c4: lea    0x4(%esp),%eax
  0x01cba5c8: cmpl   $0x0,-0x8(%ebp)
  0x01cba5cf: je     0x01cba5e6
  0x01cba5d5: push   $0x55310188
  0x01cba5da: call   0x01cba5df
  0x01cba5df: pusha  
  0x01cba5e0: call   0x54dedbf0
  0x01cba5e5: hlt    
  0x01cba5e6: mov    %esi,-0x1c(%ebp)
  0x01cba5e9: mov    %fs:0x0(,%eiz,1),%edi
  0x01cba5f1: mov    -0xc(%edi),%edi
  0x01cba5f4: push   %edi
  0x01cba5f5: mov    %ebp,0x144(%edi)
  0x01cba5fb: mov    %eax,0x13c(%edi)
  0x01cba601: call   0x5505c060
  0x01cba606: add    $0x4,%esp
  0x01cba609: push   %eax
  0x01cba60a: mov    %fs:0x0(,%eiz,1),%eax
  0x01cba612: mov    -0xc(%eax),%eax
  0x01cba615: cmp    %eax,%edi
  0x01cba617: je     0x01cba62e
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cba61d: push   $0x55312af0
  0x01cba622: call   0x01cba627
  0x01cba627: pusha  
  0x01cba628: call   0x54dedbf0
  0x01cba62d: hlt    
  0x01cba62e: pop    %eax
  0x01cba62f: movl   $0x0,0x13c(%edi)
  0x01cba639: movl   $0x0,0x144(%edi)
  0x01cba643: cmpl   $0x0,0x4(%edi)
  0x01cba64a: jne    0x01cb0340
  0x01cba650: mov    -0x1c(%ebp),%esi
  0x01cba653: mov    -0x18(%ebp),%edi
  0x01cba656: ret    
  0x01cba657: movzbl (%esi),%ebx
  0x01cba65a: jmp    *0x5562bc38(,%ebx,4)
  0x01cba661: push   %edx
  0x01cba662: push   %eax
  0x01cba663: call   0x01cba66d
  0x01cba668: jmp    0x01cba700
  0x01cba66d: lea    0x4(%esp),%eax
  0x01cba671: cmpl   $0x0,-0x8(%ebp)
  0x01cba678: je     0x01cba68f
  0x01cba67e: push   $0x55310188
  0x01cba683: call   0x01cba688
  0x01cba688: pusha  
  0x01cba689: call   0x54dedbf0
  0x01cba68e: hlt    
  0x01cba68f: mov    %esi,-0x1c(%ebp)
  0x01cba692: mov    %fs:0x0(,%eiz,1),%edi
  0x01cba69a: mov    -0xc(%edi),%edi
  0x01cba69d: push   %edi
  0x01cba69e: mov    %ebp,0x144(%edi)
  0x01cba6a4: mov    %eax,0x13c(%edi)
  0x01cba6aa: call   0x5505c060
  0x01cba6af: add    $0x4,%esp
  0x01cba6b2: push   %eax
  0x01cba6b3: mov    %fs:0x0(,%eiz,1),%eax
  0x01cba6bb: mov    -0xc(%eax),%eax
  0x01cba6be: cmp    %eax,%edi
  0x01cba6c0: je     0x01cba6d7
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cba6c6: push   $0x55312af0
  0x01cba6cb: call   0x01cba6d0
  0x01cba6d0: pusha  
  0x01cba6d1: call   0x54dedbf0
  0x01cba6d6: hlt    
  0x01cba6d7: pop    %eax
  0x01cba6d8: movl   $0x0,0x13c(%edi)
  0x01cba6e2: movl   $0x0,0x144(%edi)
  0x01cba6ec: cmpl   $0x0,0x4(%edi)
  0x01cba6f3: jne    0x01cb0340
  0x01cba6f9: mov    -0x1c(%ebp),%esi
  0x01cba6fc: mov    -0x18(%ebp),%edi
  0x01cba6ff: ret    
  0x01cba700: movzbl (%esi),%ebx
  0x01cba703: jmp    *0x5562bc38(,%ebx,4)
  0x01cba70a: push   %eax
  0x01cba70b: call   0x01cba715
  0x01cba710: jmp    0x01cba7a8
  0x01cba715: lea    0x4(%esp),%eax
  0x01cba719: cmpl   $0x0,-0x8(%ebp)
  0x01cba720: je     0x01cba737
  0x01cba726: push   $0x55310188
  0x01cba72b: call   0x01cba730
  0x01cba730: pusha  
  0x01cba731: call   0x54dedbf0
  0x01cba736: hlt    
  0x01cba737: mov    %esi,-0x1c(%ebp)
  0x01cba73a: mov    %fs:0x0(,%eiz,1),%edi
  0x01cba742: mov    -0xc(%edi),%edi
  0x01cba745: push   %edi
  0x01cba746: mov    %ebp,0x144(%edi)
  0x01cba74c: mov    %eax,0x13c(%edi)
  0x01cba752: call   0x5505c060
  0x01cba757: add    $0x4,%esp
  0x01cba75a: push   %eax
  0x01cba75b: mov    %fs:0x0(,%eiz,1),%eax
  0x01cba763: mov    -0xc(%eax),%eax
  0x01cba766: cmp    %eax,%edi
  0x01cba768: je     0x01cba77f
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cba76e: push   $0x55312af0
  0x01cba773: call   0x01cba778
  0x01cba778: pusha  
  0x01cba779: call   0x54dedbf0
  0x01cba77e: hlt    
  0x01cba77f: pop    %eax
  0x01cba780: movl   $0x0,0x13c(%edi)
  0x01cba78a: movl   $0x0,0x144(%edi)
  0x01cba794: cmpl   $0x0,0x4(%edi)
  0x01cba79b: jne    0x01cb0340
  0x01cba7a1: mov    -0x1c(%ebp),%esi
  0x01cba7a4: mov    -0x18(%ebp),%edi
  0x01cba7a7: ret    
  0x01cba7a8: movzbl (%esi),%ebx
  0x01cba7ab: jmp    *0x5562bc38(,%ebx,4)
  0x01cba7b2: push   %eax
  0x01cba7b3: call   0x01cba7bd
  0x01cba7b8: jmp    0x01cba850
  0x01cba7bd: lea    0x4(%esp),%eax
  0x01cba7c1: cmpl   $0x0,-0x8(%ebp)
  0x01cba7c8: je     0x01cba7df
  0x01cba7ce: push   $0x55310188
  0x01cba7d3: call   0x01cba7d8
  0x01cba7d8: pusha  
  0x01cba7d9: call   0x54dedbf0
  0x01cba7de: hlt    
  0x01cba7df: mov    %esi,-0x1c(%ebp)
  0x01cba7e2: mov    %fs:0x0(,%eiz,1),%edi
  0x01cba7ea: mov    -0xc(%edi),%edi
  0x01cba7ed: push   %edi
  0x01cba7ee: mov    %ebp,0x144(%edi)
  0x01cba7f4: mov    %eax,0x13c(%edi)
  0x01cba7fa: call   0x5505c060
  0x01cba7ff: add    $0x4,%esp
  0x01cba802: push   %eax
  0x01cba803: mov    %fs:0x0(,%eiz,1),%eax
  0x01cba80b: mov    -0xc(%eax),%eax
  0x01cba80e: cmp    %eax,%edi
  0x01cba810: je     0x01cba827
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cba816: push   $0x55312af0
  0x01cba81b: call   0x01cba820
  0x01cba820: pusha  
  0x01cba821: call   0x54dedbf0
  0x01cba826: hlt    
  0x01cba827: pop    %eax
  0x01cba828: movl   $0x0,0x13c(%edi)
  0x01cba832: movl   $0x0,0x144(%edi)
  0x01cba83c: cmpl   $0x0,0x4(%edi)
  0x01cba843: jne    0x01cb0340
  0x01cba849: mov    -0x1c(%ebp),%esi
  0x01cba84c: mov    -0x18(%ebp),%edi
  0x01cba84f: ret    
  0x01cba850: movzbl (%esi),%ebx
  0x01cba853: jmp    *0x5562bc38(,%ebx,4)
  0x01cba85a: push   %eax
  0x01cba85b: call   0x01cba865
  0x01cba860: jmp    0x01cba8f8
  0x01cba865: lea    0x4(%esp),%eax
  0x01cba869: cmpl   $0x0,-0x8(%ebp)
  0x01cba870: je     0x01cba887
  0x01cba876: push   $0x55310188
  0x01cba87b: call   0x01cba880
  0x01cba880: pusha  
  0x01cba881: call   0x54dedbf0
  0x01cba886: hlt    
  0x01cba887: mov    %esi,-0x1c(%ebp)
  0x01cba88a: mov    %fs:0x0(,%eiz,1),%edi
  0x01cba892: mov    -0xc(%edi),%edi
  0x01cba895: push   %edi
  0x01cba896: mov    %ebp,0x144(%edi)
  0x01cba89c: mov    %eax,0x13c(%edi)
  0x01cba8a2: call   0x5505c060
  0x01cba8a7: add    $0x4,%esp
  0x01cba8aa: push   %eax
  0x01cba8ab: mov    %fs:0x0(,%eiz,1),%eax
  0x01cba8b3: mov    -0xc(%eax),%eax
  0x01cba8b6: cmp    %eax,%edi
  0x01cba8b8: je     0x01cba8cf
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cba8be: push   $0x55312af0
  0x01cba8c3: call   0x01cba8c8
  0x01cba8c8: pusha  
  0x01cba8c9: call   0x54dedbf0
  0x01cba8ce: hlt    
  0x01cba8cf: pop    %eax
  0x01cba8d0: movl   $0x0,0x13c(%edi)
  0x01cba8da: movl   $0x0,0x144(%edi)
  0x01cba8e4: cmpl   $0x0,0x4(%edi)
  0x01cba8eb: jne    0x01cb0340
  0x01cba8f1: mov    -0x1c(%ebp),%esi
  0x01cba8f4: mov    -0x18(%ebp),%edi
  0x01cba8f7: ret    
  0x01cba8f8: movzbl (%esi),%ebx
  0x01cba8fb: jmp    *0x5562bc38(,%ebx,4)
  0x01cba902: push   %eax
  0x01cba903: call   0x01cba90d
  0x01cba908: jmp    0x01cba9a0
  0x01cba90d: lea    0x4(%esp),%eax
  0x01cba911: cmpl   $0x0,-0x8(%ebp)
  0x01cba918: je     0x01cba92f
  0x01cba91e: push   $0x55310188
  0x01cba923: call   0x01cba928
  0x01cba928: pusha  
  0x01cba929: call   0x54dedbf0
  0x01cba92e: hlt    
  0x01cba92f: mov    %esi,-0x1c(%ebp)
  0x01cba932: mov    %fs:0x0(,%eiz,1),%edi
  0x01cba93a: mov    -0xc(%edi),%edi
  0x01cba93d: push   %edi
  0x01cba93e: mov    %ebp,0x144(%edi)
  0x01cba944: mov    %eax,0x13c(%edi)
  0x01cba94a: call   0x5505c060
  0x01cba94f: add    $0x4,%esp
  0x01cba952: push   %eax
  0x01cba953: mov    %fs:0x0(,%eiz,1),%eax
  0x01cba95b: mov    -0xc(%eax),%eax
  0x01cba95e: cmp    %eax,%edi
  0x01cba960: je     0x01cba977
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cba966: push   $0x55312af0
  0x01cba96b: call   0x01cba970
  0x01cba970: pusha  
  0x01cba971: call   0x54dedbf0
  0x01cba976: hlt    
  0x01cba977: pop    %eax
  0x01cba978: movl   $0x0,0x13c(%edi)
  0x01cba982: movl   $0x0,0x144(%edi)
  0x01cba98c: cmpl   $0x0,0x4(%edi)
  0x01cba993: jne    0x01cb0340
  0x01cba999: mov    -0x1c(%ebp),%esi
  0x01cba99c: mov    -0x18(%ebp),%edi
  0x01cba99f: ret    
  0x01cba9a0: movzbl (%esi),%ebx
  0x01cba9a3: jmp    *0x5562bc38(,%ebx,4)
  0x01cba9aa: push   %eax
  0x01cba9ab: call   0x01cba9b5
  0x01cba9b0: jmp    0x01cbaa48
  0x01cba9b5: lea    0x4(%esp),%eax
  0x01cba9b9: cmpl   $0x0,-0x8(%ebp)
  0x01cba9c0: je     0x01cba9d7
  0x01cba9c6: push   $0x55310188
  0x01cba9cb: call   0x01cba9d0
  0x01cba9d0: pusha  
  0x01cba9d1: call   0x54dedbf0
  0x01cba9d6: hlt    
  0x01cba9d7: mov    %esi,-0x1c(%ebp)
  0x01cba9da: mov    %fs:0x0(,%eiz,1),%edi
  0x01cba9e2: mov    -0xc(%edi),%edi
  0x01cba9e5: push   %edi
  0x01cba9e6: mov    %ebp,0x144(%edi)
  0x01cba9ec: mov    %eax,0x13c(%edi)
  0x01cba9f2: call   0x5505c060
  0x01cba9f7: add    $0x4,%esp
  0x01cba9fa: push   %eax
  0x01cba9fb: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbaa03: mov    -0xc(%eax),%eax
  0x01cbaa06: cmp    %eax,%edi
  0x01cbaa08: je     0x01cbaa1f
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbaa0e: push   $0x55312af0
  0x01cbaa13: call   0x01cbaa18
  0x01cbaa18: pusha  
  0x01cbaa19: call   0x54dedbf0
  0x01cbaa1e: hlt    
  0x01cbaa1f: pop    %eax
  0x01cbaa20: movl   $0x0,0x13c(%edi)
  0x01cbaa2a: movl   $0x0,0x144(%edi)
  0x01cbaa34: cmpl   $0x0,0x4(%edi)
  0x01cbaa3b: jne    0x01cb0340
  0x01cbaa41: mov    -0x1c(%ebp),%esi
  0x01cbaa44: mov    -0x18(%ebp),%edi
  0x01cbaa47: ret    
  0x01cbaa48: movzbl (%esi),%ebx
  0x01cbaa4b: jmp    *0x5562bc38(,%ebx,4)
  0x01cbaa52: nop    
  0x01cbaa53: nop    
  0x01cbaa54: int3   
  0x01cbaa55: int3   
  0x01cbaa56: int3   
  0x01cbaa57: int3   
  0x01cbaa58: int3   
  0x01cbaa59: int3   
  0x01cbaa5a: int3   
  0x01cbaa5b: int3   
  0x01cbaa5c: int3   
  0x01cbaa5d: int3   
  0x01cbaa5e: int3   
  0x01cbaa5f: int3   

----------------------------------------------------------------------
exception handling  [0x01cbaa70, 0x01cbb5c0]  2896 bytes

  0x01cbaa70: movl   $0x0,-0x8(%ebp)
  0x01cbaa77: mov    -0x1c(%ebp),%esi
  0x01cbaa7a: mov    -0x18(%ebp),%edi
  0x01cbaa7d: mov    -0x20(%ebp),%esp
  0x01cbaa80: movl   $0x0,-0x8(%ebp)
  0x01cbaa87: emms   
  0x01cbaa89: call   0x01cbaa93
  0x01cbaa8e: jmp    0x01cbab37
  0x01cbaa93: push   %eax
  0x01cbaa94: lea    0x8(%esp),%eax
  0x01cbaa98: cmpl   $0x0,-0x8(%ebp)
  0x01cbaa9f: je     0x01cbaab6
  0x01cbaaa5: push   $0x55310188
  0x01cbaaaa: call   0x01cbaaaf
  0x01cbaaaf: pusha  
  0x01cbaab0: call   0x54dedbf0
  0x01cbaab5: hlt    
  0x01cbaab6: mov    %esi,-0x1c(%ebp)
  0x01cbaab9: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbaac1: mov    -0xc(%edi),%edi
  0x01cbaac4: push   %edi
  0x01cbaac5: mov    %ebp,0x144(%edi)
  0x01cbaacb: mov    %eax,0x13c(%edi)
  0x01cbaad1: call   0x55059dc0
  0x01cbaad6: add    $0x8,%esp
  0x01cbaad9: push   %eax
  0x01cbaada: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbaae2: mov    -0xc(%eax),%eax
  0x01cbaae5: cmp    %eax,%edi
  0x01cbaae7: je     0x01cbaafe
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbaaed: push   $0x55312af0
  0x01cbaaf2: call   0x01cbaaf7
  0x01cbaaf7: pusha  
  0x01cbaaf8: call   0x54dedbf0
  0x01cbaafd: hlt    
  0x01cbaafe: pop    %eax
  0x01cbaaff: movl   $0x0,0x13c(%edi)
  0x01cbab09: movl   $0x0,0x144(%edi)
  0x01cbab13: cmpl   $0x0,0x4(%edi)
  0x01cbab1a: jne    0x01cb0340
  0x01cbab20: mov    0x16c(%edi),%edx
  0x01cbab26: movl   $0x0,0x16c(%edi)
  0x01cbab30: mov    -0x1c(%ebp),%esi
  0x01cbab33: mov    -0x18(%ebp),%edi
  0x01cbab36: ret    
  0x01cbab37: push   %edx
  0x01cbab38: jmp    *%eax
  0x01cbab3a: mov    -0x20(%ebp),%esp
  0x01cbab3d: movl   $0x0,-0x8(%ebp)
  0x01cbab44: emms   
  0x01cbab46: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cbab4e: mov    -0xc(%ecx),%ecx
  0x01cbab51: mov    0x1c4(%ecx),%edx
  0x01cbab57: or     $0x2,%edx
  0x01cbab5a: mov    %edx,0x1c4(%ecx)
  0x01cbab60: mov    0x4(%ebp),%edx
  0x01cbab63: push   %edx
  0x01cbab64: call   0x5505c970
  0x01cbab69: add    $0x4,%esp
  0x01cbab6c: test   %eax,%eax
  0x01cbab6e: jne    0x01cbae1c
  0x01cbab74: mov    -0xc(%ebp),%eax
  0x01cbab77: mov    0x8(%eax),%eax
  0x01cbab7a: movzwl 0x22(%eax),%eax
  0x01cbab7e: shl    $0x2,%eax
  0x01cbab81: mov    -0x18(%ebp),%edi
  0x01cbab84: sub    %eax,%edi
  0x01cbab86: add    $0x4,%edi
  0x01cbab89: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cbab91: mov    -0xc(%ecx),%ecx
  0x01cbab94: push   %edi
  0x01cbab95: push   %eax
  0x01cbab96: push   %ecx
  0x01cbab97: call   0x551e2390
  0x01cbab9c: add    $0xc,%esp
  0x01cbab9f: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cbaba7: mov    -0xc(%ecx),%ecx
  0x01cbabaa: mov    0x1a1(%ecx),%bl
  0x01cbabb0: mov    %ebx,%edi
  0x01cbabb2: movb   $0x0,0x1a1(%ecx)
  0x01cbabb9: mov    -0xc(%ebp),%ebx
  0x01cbabbc: mov    0x14(%ebx),%ecx
  0x01cbabbf: test   $0x20,%ecx
  0x01cbabc5: je     0x01cbacbe
  0x01cbabcb: mov    %edi,%ecx
  0x01cbabcd: test   $0xff,%cl
  0x01cbabd0: jne    0x01cbadb9
  0x01cbabd6: lea    -0x28(%ebp),%edx
  0x01cbabd9: mov    0x4(%edx),%eax
  0x01cbabdc: test   %eax,%eax
  0x01cbabde: jne    0x01cbabe9
  0x01cbabe4: jmp    0x01cbacbe
  0x01cbabe9: mov    %esi,-0x1c(%ebp)
  0x01cbabec: lea    (%edx),%eax
  0x01cbabee: mov    0x4(%edx),%ecx
  0x01cbabf1: movl   $0x0,0x4(%edx)
  0x01cbabf8: mov    (%ecx),%ebx
  0x01cbabfa: and    $0x7,%ebx
  0x01cbabfd: cmp    $0x5,%ebx
  0x01cbac00: je     0x01cbacbb
  0x01cbac06: mov    (%eax),%ebx
  0x01cbac08: test   %ebx,%ebx
  0x01cbac0a: je     0x01cbacbb
  0x01cbac10: lock cmpxchg %ebx,(%ecx)
  0x01cbac14: je     0x01cbacbb
  0x01cbac1a: mov    %ecx,0x4(%edx)
  0x01cbac1d: call   0x01cbac27
  0x01cbac22: jmp    0x01cbacbb
  0x01cbac27: push   %edx
  0x01cbac28: lea    0x8(%esp),%eax
  0x01cbac2c: cmpl   $0x0,-0x8(%ebp)
  0x01cbac33: je     0x01cbac4a
  0x01cbac39: push   $0x55310188
  0x01cbac3e: call   0x01cbac43
  0x01cbac43: pusha  
  0x01cbac44: call   0x54dedbf0
  0x01cbac49: hlt    
  0x01cbac4a: mov    %esi,-0x1c(%ebp)
  0x01cbac4d: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbac55: mov    -0xc(%edi),%edi
  0x01cbac58: push   %edi
  0x01cbac59: mov    %ebp,0x144(%edi)
  0x01cbac5f: mov    %eax,0x13c(%edi)
  0x01cbac65: call   0x5505ab90
  0x01cbac6a: add    $0x8,%esp
  0x01cbac6d: push   %eax
  0x01cbac6e: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbac76: mov    -0xc(%eax),%eax
  0x01cbac79: cmp    %eax,%edi
  0x01cbac7b: je     0x01cbac92
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbac81: push   $0x55312af0
  0x01cbac86: call   0x01cbac8b
  0x01cbac8b: pusha  
  0x01cbac8c: call   0x54dedbf0
  0x01cbac91: hlt    
  0x01cbac92: pop    %eax
  0x01cbac93: movl   $0x0,0x13c(%edi)
  0x01cbac9d: movl   $0x0,0x144(%edi)
  0x01cbaca7: cmpl   $0x0,0x4(%edi)
  0x01cbacae: jne    0x01cb0340
  0x01cbacb4: mov    -0x1c(%ebp),%esi
  0x01cbacb7: mov    -0x18(%ebp),%edi
  0x01cbacba: ret    
  0x01cbacbb: mov    -0x1c(%ebp),%esi
  0x01cbacbe: mov    -0x20(%ebp),%ecx
  0x01cbacc1: lea    -0x20(%ebp),%ebx
  0x01cbacc4: jmp    0x01cbadb5
  0x01cbacc9: mov    %ecx,%edx
  0x01cbaccb: mov    %esi,-0x1c(%ebp)
  0x01cbacce: lea    (%edx),%eax
  0x01cbacd0: mov    0x4(%edx),%ecx
  0x01cbacd3: movl   $0x0,0x4(%edx)
  0x01cbacda: mov    (%ecx),%ebx
  0x01cbacdc: and    $0x7,%ebx
  0x01cbacdf: cmp    $0x5,%ebx
  0x01cbace2: je     0x01cbad9d
  0x01cbace8: mov    (%eax),%ebx
  0x01cbacea: test   %ebx,%ebx
  0x01cbacec: je     0x01cbad9d
  0x01cbacf2: lock cmpxchg %ebx,(%ecx)
  0x01cbacf6: je     0x01cbad9d
  0x01cbacfc: mov    %ecx,0x4(%edx)
  0x01cbacff: call   0x01cbad09
  0x01cbad04: jmp    0x01cbad9d
  0x01cbad09: push   %edx
  0x01cbad0a: lea    0x8(%esp),%eax
  0x01cbad0e: cmpl   $0x0,-0x8(%ebp)
  0x01cbad15: je     0x01cbad2c
  0x01cbad1b: push   $0x55310188
  0x01cbad20: call   0x01cbad25
  0x01cbad25: pusha  
  0x01cbad26: call   0x54dedbf0
  0x01cbad2b: hlt    
  0x01cbad2c: mov    %esi,-0x1c(%ebp)
  0x01cbad2f: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbad37: mov    -0xc(%edi),%edi
  0x01cbad3a: push   %edi
  0x01cbad3b: mov    %ebp,0x144(%edi)
  0x01cbad41: mov    %eax,0x13c(%edi)
  0x01cbad47: call   0x5505ab90
  0x01cbad4c: add    $0x8,%esp
  0x01cbad4f: push   %eax
  0x01cbad50: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbad58: mov    -0xc(%eax),%eax
  0x01cbad5b: cmp    %eax,%edi
  0x01cbad5d: je     0x01cbad74
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbad63: push   $0x55312af0
  0x01cbad68: call   0x01cbad6d
  0x01cbad6d: pusha  
  0x01cbad6e: call   0x54dedbf0
  0x01cbad73: hlt    
  0x01cbad74: pop    %eax
  0x01cbad75: movl   $0x0,0x13c(%edi)
  0x01cbad7f: movl   $0x0,0x144(%edi)
  0x01cbad89: cmpl   $0x0,0x4(%edi)
  0x01cbad90: jne    0x01cb0340
  0x01cbad96: mov    -0x1c(%ebp),%esi
  0x01cbad99: mov    -0x18(%ebp),%edi
  0x01cbad9c: ret    
  0x01cbad9d: mov    -0x1c(%ebp),%esi
  0x01cbada0: jmp    0x01cbacbe
  0x01cbada5: cmpl   $0x0,0x4(%ecx)
  0x01cbadac: jne    0x01cbacc9
  0x01cbadb2: add    $0x8,%ecx
  0x01cbadb5: cmp    %ebx,%ecx
  0x01cbadb7: jne    0x01cbada5
  0x01cbadb9: cmpb   $0x0,0x55633e5f
  0x01cbadc0: je     0x01cbadfc
  0x01cbadc6: mov    %fs:0x0(,%eiz,1),%ebx
  0x01cbadce: mov    -0xc(%ebx),%ebx
  0x01cbadd1: mov    -0xc(%ebp),%ecx
  0x01cbadd4: push   %ecx
  0x01cbadd5: push   %ebx
  0x01cbadd6: cmpl   $0x0,-0x8(%ebp)
  0x01cbaddd: je     0x01cbadf4
  0x01cbade3: push   $0x55310148
  0x01cbade8: call   0x01cbaded
  0x01cbaded: pusha  
  0x01cbadee: call   0x54dedbf0
  0x01cbadf3: hlt    
  0x01cbadf4: call   0x55215710
  0x01cbadf9: add    $0x8,%esp
  0x01cbadfc: mov    -0x4(%ebp),%ebx
  0x01cbadff: mov    %ebp,%esp
  0x01cbae01: pop    %ebp
  0x01cbae02: pop    %edx
  0x01cbae03: mov    %ebx,%esp
  0x01cbae05: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cbae0d: mov    -0xc(%ecx),%ecx
  0x01cbae10: movl   $0x4,0x1c4(%ecx)
  0x01cbae1a: jmp    *%edx
  0x01cbae1c: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cbae24: mov    -0xc(%ecx),%ecx
  0x01cbae27: mov    0x1a1(%ecx),%bl
  0x01cbae2d: mov    %ebx,%edi
  0x01cbae2f: movb   $0x0,0x1a1(%ecx)
  0x01cbae36: mov    -0xc(%ebp),%ebx
  0x01cbae39: mov    0x14(%ebx),%ecx
  0x01cbae3c: test   $0x20,%ecx
  0x01cbae42: je     0x01cbaf3b
  0x01cbae48: mov    %edi,%ecx
  0x01cbae4a: test   $0xff,%cl
  0x01cbae4d: jne    0x01cbb036
  0x01cbae53: lea    -0x28(%ebp),%edx
  0x01cbae56: mov    0x4(%edx),%eax
  0x01cbae59: test   %eax,%eax
  0x01cbae5b: jne    0x01cbae66
  0x01cbae61: jmp    0x01cbaf3b
  0x01cbae66: mov    %esi,-0x1c(%ebp)
  0x01cbae69: lea    (%edx),%eax
  0x01cbae6b: mov    0x4(%edx),%ecx
  0x01cbae6e: movl   $0x0,0x4(%edx)
  0x01cbae75: mov    (%ecx),%ebx
  0x01cbae77: and    $0x7,%ebx
  0x01cbae7a: cmp    $0x5,%ebx
  0x01cbae7d: je     0x01cbaf38
  0x01cbae83: mov    (%eax),%ebx
  0x01cbae85: test   %ebx,%ebx
  0x01cbae87: je     0x01cbaf38
  0x01cbae8d: lock cmpxchg %ebx,(%ecx)
  0x01cbae91: je     0x01cbaf38
  0x01cbae97: mov    %ecx,0x4(%edx)
  0x01cbae9a: call   0x01cbaea4
  0x01cbae9f: jmp    0x01cbaf38
  0x01cbaea4: push   %edx
  0x01cbaea5: lea    0x8(%esp),%eax
  0x01cbaea9: cmpl   $0x0,-0x8(%ebp)
  0x01cbaeb0: je     0x01cbaec7
  0x01cbaeb6: push   $0x55310188
  0x01cbaebb: call   0x01cbaec0
  0x01cbaec0: pusha  
  0x01cbaec1: call   0x54dedbf0
  0x01cbaec6: hlt    
  0x01cbaec7: mov    %esi,-0x1c(%ebp)
  0x01cbaeca: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbaed2: mov    -0xc(%edi),%edi
  0x01cbaed5: push   %edi
  0x01cbaed6: mov    %ebp,0x144(%edi)
  0x01cbaedc: mov    %eax,0x13c(%edi)
  0x01cbaee2: call   0x5505ab90
  0x01cbaee7: add    $0x8,%esp
  0x01cbaeea: push   %eax
  0x01cbaeeb: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbaef3: mov    -0xc(%eax),%eax
  0x01cbaef6: cmp    %eax,%edi
  0x01cbaef8: je     0x01cbaf0f
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbaefe: push   $0x55312af0
  0x01cbaf03: call   0x01cbaf08
  0x01cbaf08: pusha  
  0x01cbaf09: call   0x54dedbf0
  0x01cbaf0e: hlt    
  0x01cbaf0f: pop    %eax
  0x01cbaf10: movl   $0x0,0x13c(%edi)
  0x01cbaf1a: movl   $0x0,0x144(%edi)
  0x01cbaf24: cmpl   $0x0,0x4(%edi)
  0x01cbaf2b: jne    0x01cb0340
  0x01cbaf31: mov    -0x1c(%ebp),%esi
  0x01cbaf34: mov    -0x18(%ebp),%edi
  0x01cbaf37: ret    
  0x01cbaf38: mov    -0x1c(%ebp),%esi
  0x01cbaf3b: mov    -0x20(%ebp),%ecx
  0x01cbaf3e: lea    -0x20(%ebp),%ebx
  0x01cbaf41: jmp    0x01cbb032
  0x01cbaf46: mov    %ecx,%edx
  0x01cbaf48: mov    %esi,-0x1c(%ebp)
  0x01cbaf4b: lea    (%edx),%eax
  0x01cbaf4d: mov    0x4(%edx),%ecx
  0x01cbaf50: movl   $0x0,0x4(%edx)
  0x01cbaf57: mov    (%ecx),%ebx
  0x01cbaf59: and    $0x7,%ebx
  0x01cbaf5c: cmp    $0x5,%ebx
  0x01cbaf5f: je     0x01cbb01a
  0x01cbaf65: mov    (%eax),%ebx
  0x01cbaf67: test   %ebx,%ebx
  0x01cbaf69: je     0x01cbb01a
  0x01cbaf6f: lock cmpxchg %ebx,(%ecx)
  0x01cbaf73: je     0x01cbb01a
  0x01cbaf79: mov    %ecx,0x4(%edx)
  0x01cbaf7c: call   0x01cbaf86
  0x01cbaf81: jmp    0x01cbb01a
  0x01cbaf86: push   %edx
  0x01cbaf87: lea    0x8(%esp),%eax
  0x01cbaf8b: cmpl   $0x0,-0x8(%ebp)
  0x01cbaf92: je     0x01cbafa9
  0x01cbaf98: push   $0x55310188
  0x01cbaf9d: call   0x01cbafa2
  0x01cbafa2: pusha  
  0x01cbafa3: call   0x54dedbf0
  0x01cbafa8: hlt    
  0x01cbafa9: mov    %esi,-0x1c(%ebp)
  0x01cbafac: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbafb4: mov    -0xc(%edi),%edi
  0x01cbafb7: push   %edi
  0x01cbafb8: mov    %ebp,0x144(%edi)
  0x01cbafbe: mov    %eax,0x13c(%edi)
  0x01cbafc4: call   0x5505ab90
  0x01cbafc9: add    $0x8,%esp
  0x01cbafcc: push   %eax
  0x01cbafcd: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbafd5: mov    -0xc(%eax),%eax
  0x01cbafd8: cmp    %eax,%edi
  0x01cbafda: je     0x01cbaff1
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbafe0: push   $0x55312af0
  0x01cbafe5: call   0x01cbafea
  0x01cbafea: pusha  
  0x01cbafeb: call   0x54dedbf0
  0x01cbaff0: hlt    
  0x01cbaff1: pop    %eax
  0x01cbaff2: movl   $0x0,0x13c(%edi)
  0x01cbaffc: movl   $0x0,0x144(%edi)
  0x01cbb006: cmpl   $0x0,0x4(%edi)
  0x01cbb00d: jne    0x01cb0340
  0x01cbb013: mov    -0x1c(%ebp),%esi
  0x01cbb016: mov    -0x18(%ebp),%edi
  0x01cbb019: ret    
  0x01cbb01a: mov    -0x1c(%ebp),%esi
  0x01cbb01d: jmp    0x01cbaf3b
  0x01cbb022: cmpl   $0x0,0x4(%ecx)
  0x01cbb029: jne    0x01cbaf46
  0x01cbb02f: add    $0x8,%ecx
  0x01cbb032: cmp    %ebx,%ecx
  0x01cbb034: jne    0x01cbb022
  0x01cbb036: cmpb   $0x0,0x55633e5f
  0x01cbb03d: je     0x01cbb079
  0x01cbb043: mov    %fs:0x0(,%eiz,1),%ebx
  0x01cbb04b: mov    -0xc(%ebx),%ebx
  0x01cbb04e: mov    -0xc(%ebp),%ecx
  0x01cbb051: push   %ecx
  0x01cbb052: push   %ebx
  0x01cbb053: cmpl   $0x0,-0x8(%ebp)
  0x01cbb05a: je     0x01cbb071
  0x01cbb060: push   $0x55310148
  0x01cbb065: call   0x01cbb06a
  0x01cbb06a: pusha  
  0x01cbb06b: call   0x54dedbf0
  0x01cbb070: hlt    
  0x01cbb071: call   0x55215710
  0x01cbb076: add    $0x8,%esp
  0x01cbb079: mov    -0x4(%ebp),%ebx
  0x01cbb07c: mov    %ebp,%esp
  0x01cbb07e: pop    %ebp
  0x01cbb07f: pop    %edx
  0x01cbb080: mov    %ebx,%esp
  0x01cbb082: mov    %esp,%eax
  0x01cbb084: mov    -0x8(%ebp),%ebx
  0x01cbb087: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cbb08f: mov    -0xc(%ecx),%ecx
  0x01cbb092: mov    %ebp,0x144(%ecx)
  0x01cbb098: movl   $0x1cbb092,0x140(%ecx)
  0x01cbb0a2: mov    %esp,0x13c(%ecx)
  0x01cbb0a8: push   %ebx
  0x01cbb0a9: push   %eax
  0x01cbb0aa: push   %ecx
  0x01cbb0ab: call   0x5505cc50
  0x01cbb0b0: add    $0xc,%esp
  0x01cbb0b3: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cbb0bb: mov    -0xc(%ecx),%ecx
  0x01cbb0be: movl   $0x0,0x13c(%ecx)
  0x01cbb0c8: movl   $0x0,0x144(%ecx)
  0x01cbb0d2: movl   $0x0,0x140(%ecx)
  0x01cbb0dc: mov    -0x8(%ebp),%esp
  0x01cbb0df: movl   $0x0,-0x8(%ebp)
  0x01cbb0e6: mov    -0x1c(%ebp),%esi
  0x01cbb0e9: mov    -0x18(%ebp),%edi
  0x01cbb0ec: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cbb0f4: mov    -0xc(%ecx),%ecx
  0x01cbb0f7: movl   $0x0,0x1c4(%ecx)
  0x01cbb101: cmpb   $0xb8,(%esi)
  0x01cbb104: jne    0x01cbb1c9
  0x01cbb10a: mov    -0xc(%ebp),%edx
  0x01cbb10d: mov    (%edi),%eax
  0x01cbb10f: call   0x01cbb119
  0x01cbb114: jmp    0x01cbb1bf
  0x01cbb119: push   %esi
  0x01cbb11a: push   %edx
  0x01cbb11b: push   %eax
  0x01cbb11c: lea    0x10(%esp),%eax
  0x01cbb120: cmpl   $0x0,-0x8(%ebp)
  0x01cbb127: je     0x01cbb13e
  0x01cbb12d: push   $0x55310188
  0x01cbb132: call   0x01cbb137
  0x01cbb137: pusha  
  0x01cbb138: call   0x54dedbf0
  0x01cbb13d: hlt    
  0x01cbb13e: mov    %esi,-0x1c(%ebp)
  0x01cbb141: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbb149: mov    -0xc(%edi),%edi
  0x01cbb14c: push   %edi
  0x01cbb14d: mov    %ebp,0x144(%edi)
  0x01cbb153: mov    %eax,0x13c(%edi)
  0x01cbb159: call   0x5505a2c0
  0x01cbb15e: add    $0x10,%esp
  0x01cbb161: push   %eax
  0x01cbb162: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbb16a: mov    -0xc(%eax),%eax
  0x01cbb16d: cmp    %eax,%edi
  0x01cbb16f: je     0x01cbb186
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbb175: push   $0x55312af0
  0x01cbb17a: call   0x01cbb17f
  0x01cbb17f: pusha  
  0x01cbb180: call   0x54dedbf0
  0x01cbb185: hlt    
  0x01cbb186: pop    %eax
  0x01cbb187: movl   $0x0,0x13c(%edi)
  0x01cbb191: movl   $0x0,0x144(%edi)
  0x01cbb19b: cmpl   $0x0,0x4(%edi)
  0x01cbb1a2: jne    0x01cb0340
  0x01cbb1a8: mov    0x16c(%edi),%eax
  0x01cbb1ae: movl   $0x0,0x16c(%edi)
  0x01cbb1b8: mov    -0x1c(%ebp),%esi
  0x01cbb1bb: mov    -0x18(%ebp),%edi
  0x01cbb1be: ret    
  0x01cbb1bf: test   %eax,%eax
  0x01cbb1c1: je     0x01cbb1c9
  0x01cbb1c7: mov    %eax,(%ebx)
  0x01cbb1c9: movzbl (%esi),%ebx
  0x01cbb1cc: jmp    *0x55629838(,%ebx,4)
  0x01cbb1d3: pop    %eax
  0x01cbb1d4: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cbb1dc: mov    -0xc(%ecx),%ecx
  0x01cbb1df: mov    %eax,0x16c(%ecx)
  0x01cbb1e5: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cbb1ed: mov    -0xc(%ecx),%ecx
  0x01cbb1f0: mov    0x1a1(%ecx),%bl
  0x01cbb1f6: mov    %ebx,%edi
  0x01cbb1f8: movb   $0x0,0x1a1(%ecx)
  0x01cbb1ff: mov    -0xc(%ebp),%ebx
  0x01cbb202: mov    0x14(%ebx),%ecx
  0x01cbb205: test   $0x20,%ecx
  0x01cbb20b: je     0x01cbb3a3
  0x01cbb211: mov    %edi,%ecx
  0x01cbb213: test   $0xff,%cl
  0x01cbb216: jne    0x01cbb53d
  0x01cbb21c: lea    -0x28(%ebp),%edx
  0x01cbb21f: mov    0x4(%edx),%eax
  0x01cbb222: test   %eax,%eax
  0x01cbb224: jne    0x01cbb2ce
  0x01cbb22a: emms   
  0x01cbb22c: call   0x01cbb236
  0x01cbb231: jmp    0x01cbb2c9
  0x01cbb236: lea    0x4(%esp),%eax
  0x01cbb23a: cmpl   $0x0,-0x8(%ebp)
  0x01cbb241: je     0x01cbb258
  0x01cbb247: push   $0x55310188
  0x01cbb24c: call   0x01cbb251
  0x01cbb251: pusha  
  0x01cbb252: call   0x54dedbf0
  0x01cbb257: hlt    
  0x01cbb258: mov    %esi,-0x1c(%ebp)
  0x01cbb25b: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbb263: mov    -0xc(%edi),%edi
  0x01cbb266: push   %edi
  0x01cbb267: mov    %ebp,0x144(%edi)
  0x01cbb26d: mov    %eax,0x13c(%edi)
  0x01cbb273: call   0x5505aeb0
  0x01cbb278: add    $0x4,%esp
  0x01cbb27b: push   %eax
  0x01cbb27c: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbb284: mov    -0xc(%eax),%eax
  0x01cbb287: cmp    %eax,%edi
  0x01cbb289: je     0x01cbb2a0
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbb28f: push   $0x55312af0
  0x01cbb294: call   0x01cbb299
  0x01cbb299: pusha  
  0x01cbb29a: call   0x54dedbf0
  0x01cbb29f: hlt    
  0x01cbb2a0: pop    %eax
  0x01cbb2a1: movl   $0x0,0x13c(%edi)
  0x01cbb2ab: movl   $0x0,0x144(%edi)
  0x01cbb2b5: cmpl   $0x0,0x4(%edi)
  0x01cbb2bc: jne    0x01cb0340
  0x01cbb2c2: mov    -0x1c(%ebp),%esi
  0x01cbb2c5: mov    -0x18(%ebp),%edi
  0x01cbb2c8: ret    
  0x01cbb2c9: jmp    0x01cbb3a3
  0x01cbb2ce: mov    %esi,-0x1c(%ebp)
  0x01cbb2d1: lea    (%edx),%eax
  0x01cbb2d3: mov    0x4(%edx),%ecx
  0x01cbb2d6: movl   $0x0,0x4(%edx)
  0x01cbb2dd: mov    (%ecx),%ebx
  0x01cbb2df: and    $0x7,%ebx
  0x01cbb2e2: cmp    $0x5,%ebx
  0x01cbb2e5: je     0x01cbb3a0
  0x01cbb2eb: mov    (%eax),%ebx
  0x01cbb2ed: test   %ebx,%ebx
  0x01cbb2ef: je     0x01cbb3a0
  0x01cbb2f5: lock cmpxchg %ebx,(%ecx)
  0x01cbb2f9: je     0x01cbb3a0
  0x01cbb2ff: mov    %ecx,0x4(%edx)
  0x01cbb302: call   0x01cbb30c
  0x01cbb307: jmp    0x01cbb3a0
  0x01cbb30c: push   %edx
  0x01cbb30d: lea    0x8(%esp),%eax
  0x01cbb311: cmpl   $0x0,-0x8(%ebp)
  0x01cbb318: je     0x01cbb32f
  0x01cbb31e: push   $0x55310188
  0x01cbb323: call   0x01cbb328
  0x01cbb328: pusha  
  0x01cbb329: call   0x54dedbf0
  0x01cbb32e: hlt    
  0x01cbb32f: mov    %esi,-0x1c(%ebp)
  0x01cbb332: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbb33a: mov    -0xc(%edi),%edi
  0x01cbb33d: push   %edi
  0x01cbb33e: mov    %ebp,0x144(%edi)
  0x01cbb344: mov    %eax,0x13c(%edi)
  0x01cbb34a: call   0x5505ab90
  0x01cbb34f: add    $0x8,%esp
  0x01cbb352: push   %eax
  0x01cbb353: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbb35b: mov    -0xc(%eax),%eax
  0x01cbb35e: cmp    %eax,%edi
  0x01cbb360: je     0x01cbb377
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbb366: push   $0x55312af0
  0x01cbb36b: call   0x01cbb370
  0x01cbb370: pusha  
  0x01cbb371: call   0x54dedbf0
  0x01cbb376: hlt    
  0x01cbb377: pop    %eax
  0x01cbb378: movl   $0x0,0x13c(%edi)
  0x01cbb382: movl   $0x0,0x144(%edi)
  0x01cbb38c: cmpl   $0x0,0x4(%edi)
  0x01cbb393: jne    0x01cb0340
  0x01cbb399: mov    -0x1c(%ebp),%esi
  0x01cbb39c: mov    -0x18(%ebp),%edi
  0x01cbb39f: ret    
  0x01cbb3a0: mov    -0x1c(%ebp),%esi
  0x01cbb3a3: mov    -0x20(%ebp),%ecx
  0x01cbb3a6: lea    -0x20(%ebp),%ebx
  0x01cbb3a9: jmp    0x01cbb539
  0x01cbb3ae: mov    %ecx,%edx
  0x01cbb3b0: mov    %esi,-0x1c(%ebp)
  0x01cbb3b3: lea    (%edx),%eax
  0x01cbb3b5: mov    0x4(%edx),%ecx
  0x01cbb3b8: movl   $0x0,0x4(%edx)
  0x01cbb3bf: mov    (%ecx),%ebx
  0x01cbb3c1: and    $0x7,%ebx
  0x01cbb3c4: cmp    $0x5,%ebx
  0x01cbb3c7: je     0x01cbb482
  0x01cbb3cd: mov    (%eax),%ebx
  0x01cbb3cf: test   %ebx,%ebx
  0x01cbb3d1: je     0x01cbb482
  0x01cbb3d7: lock cmpxchg %ebx,(%ecx)
  0x01cbb3db: je     0x01cbb482
  0x01cbb3e1: mov    %ecx,0x4(%edx)
  0x01cbb3e4: call   0x01cbb3ee
  0x01cbb3e9: jmp    0x01cbb482
  0x01cbb3ee: push   %edx
  0x01cbb3ef: lea    0x8(%esp),%eax
  0x01cbb3f3: cmpl   $0x0,-0x8(%ebp)
  0x01cbb3fa: je     0x01cbb411
  0x01cbb400: push   $0x55310188
  0x01cbb405: call   0x01cbb40a
  0x01cbb40a: pusha  
  0x01cbb40b: call   0x54dedbf0
  0x01cbb410: hlt    
  0x01cbb411: mov    %esi,-0x1c(%ebp)
  0x01cbb414: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbb41c: mov    -0xc(%edi),%edi
  0x01cbb41f: push   %edi
  0x01cbb420: mov    %ebp,0x144(%edi)
  0x01cbb426: mov    %eax,0x13c(%edi)
  0x01cbb42c: call   0x5505ab90
  0x01cbb431: add    $0x8,%esp
  0x01cbb434: push   %eax
  0x01cbb435: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbb43d: mov    -0xc(%eax),%eax
  0x01cbb440: cmp    %eax,%edi
  0x01cbb442: je     0x01cbb459
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbb448: push   $0x55312af0
  0x01cbb44d: call   0x01cbb452
  0x01cbb452: pusha  
  0x01cbb453: call   0x54dedbf0
  0x01cbb458: hlt    
  0x01cbb459: pop    %eax
  0x01cbb45a: movl   $0x0,0x13c(%edi)
  0x01cbb464: movl   $0x0,0x144(%edi)
  0x01cbb46e: cmpl   $0x0,0x4(%edi)
  0x01cbb475: jne    0x01cb0340
  0x01cbb47b: mov    -0x1c(%ebp),%esi
  0x01cbb47e: mov    -0x18(%ebp),%edi
  0x01cbb481: ret    
  0x01cbb482: mov    -0x1c(%ebp),%esi
  0x01cbb485: emms   
  0x01cbb487: call   0x01cbb491
  0x01cbb48c: jmp    0x01cbb524
  0x01cbb491: lea    0x4(%esp),%eax
  0x01cbb495: cmpl   $0x0,-0x8(%ebp)
  0x01cbb49c: je     0x01cbb4b3
  0x01cbb4a2: push   $0x55310188
  0x01cbb4a7: call   0x01cbb4ac
  0x01cbb4ac: pusha  
  0x01cbb4ad: call   0x54dedbf0
  0x01cbb4b2: hlt    
  0x01cbb4b3: mov    %esi,-0x1c(%ebp)
  0x01cbb4b6: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbb4be: mov    -0xc(%edi),%edi
  0x01cbb4c1: push   %edi
  0x01cbb4c2: mov    %ebp,0x144(%edi)
  0x01cbb4c8: mov    %eax,0x13c(%edi)
  0x01cbb4ce: call   0x5505aeb0
  0x01cbb4d3: add    $0x4,%esp
  0x01cbb4d6: push   %eax
  0x01cbb4d7: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbb4df: mov    -0xc(%eax),%eax
  0x01cbb4e2: cmp    %eax,%edi
  0x01cbb4e4: je     0x01cbb4fb
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbb4ea: push   $0x55312af0
  0x01cbb4ef: call   0x01cbb4f4
  0x01cbb4f4: pusha  
  0x01cbb4f5: call   0x54dedbf0
  0x01cbb4fa: hlt    
  0x01cbb4fb: pop    %eax
  0x01cbb4fc: movl   $0x0,0x13c(%edi)
  0x01cbb506: movl   $0x0,0x144(%edi)
  0x01cbb510: cmpl   $0x0,0x4(%edi)
  0x01cbb517: jne    0x01cb0340
  0x01cbb51d: mov    -0x1c(%ebp),%esi
  0x01cbb520: mov    -0x18(%ebp),%edi
  0x01cbb523: ret    
  0x01cbb524: jmp    0x01cbb3a3
  0x01cbb529: cmpl   $0x0,0x4(%ecx)
  0x01cbb530: jne    0x01cbb3ae
  0x01cbb536: add    $0x8,%ecx
  0x01cbb539: cmp    %ebx,%ecx
  0x01cbb53b: jne    0x01cbb529
  0x01cbb53d: cmpb   $0x0,0x55633e5f
  0x01cbb544: je     0x01cbb580
  0x01cbb54a: mov    %fs:0x0(,%eiz,1),%ebx
  0x01cbb552: mov    -0xc(%ebx),%ebx
  0x01cbb555: mov    -0xc(%ebp),%ecx
  0x01cbb558: push   %ecx
  0x01cbb559: push   %ebx
  0x01cbb55a: cmpl   $0x0,-0x8(%ebp)
  0x01cbb561: je     0x01cbb578
  0x01cbb567: push   $0x55310148
  0x01cbb56c: call   0x01cbb571
  0x01cbb571: pusha  
  0x01cbb572: call   0x54dedbf0
  0x01cbb577: hlt    
  0x01cbb578: call   0x55215710
  0x01cbb57d: add    $0x8,%esp
  0x01cbb580: mov    -0x4(%ebp),%ebx
  0x01cbb583: mov    %ebp,%esp
  0x01cbb585: pop    %ebp
  0x01cbb586: pop    %edx
  0x01cbb587: mov    %ebx,%esp
  0x01cbb589: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cbb591: mov    -0xc(%ecx),%ecx
  0x01cbb594: mov    0x16c(%ecx),%eax
  0x01cbb59a: movl   $0x0,0x16c(%ecx)
  0x01cbb5a4: push   %eax
  0x01cbb5a5: push   %edx
  0x01cbb5a6: push   %edx
  0x01cbb5a7: push   %ecx
  0x01cbb5a8: call   0x55213a10
  0x01cbb5ad: add    $0x8,%esp
  0x01cbb5b0: mov    %eax,%ebx
  0x01cbb5b2: pop    %edx
  0x01cbb5b3: pop    %eax
  0x01cbb5b4: jmp    *%ebx
  0x01cbb5b6: nop    
  0x01cbb5b7: nop    
  0x01cbb5b8: int3   
  0x01cbb5b9: int3   
  0x01cbb5ba: int3   
  0x01cbb5bb: int3   
  0x01cbb5bc: int3   
  0x01cbb5bd: int3   
  0x01cbb5be: int3   
  0x01cbb5bf: int3   

----------------------------------------------------------------------
throw exception entrypoints  [0x01cbb5d0, 0x01cbba50]  1152 bytes

  0x01cbb5d0: mov    -0x20(%ebp),%esp
  0x01cbb5d3: movl   $0x0,-0x8(%ebp)
  0x01cbb5da: emms   
  0x01cbb5dc: mov    $0x5543e5a4,%eax
  0x01cbb5e1: call   0x01cbb5eb
  0x01cbb5e6: jmp    0x01cbb680
  0x01cbb5eb: push   %ebx
  0x01cbb5ec: push   %eax
  0x01cbb5ed: lea    0xc(%esp),%eax
  0x01cbb5f1: cmpl   $0x0,-0x8(%ebp)
  0x01cbb5f8: je     0x01cbb60f
  0x01cbb5fe: push   $0x55310188
  0x01cbb603: call   0x01cbb608
  0x01cbb608: pusha  
  0x01cbb609: call   0x54dedbf0
  0x01cbb60e: hlt    
  0x01cbb60f: mov    %esi,-0x1c(%ebp)
  0x01cbb612: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbb61a: mov    -0xc(%edi),%edi
  0x01cbb61d: push   %edi
  0x01cbb61e: mov    %ebp,0x144(%edi)
  0x01cbb624: mov    %eax,0x13c(%edi)
  0x01cbb62a: call   0x550595d0
  0x01cbb62f: add    $0xc,%esp
  0x01cbb632: push   %eax
  0x01cbb633: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbb63b: mov    -0xc(%eax),%eax
  0x01cbb63e: cmp    %eax,%edi
  0x01cbb640: je     0x01cbb657
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbb646: push   $0x55312af0
  0x01cbb64b: call   0x01cbb650
  0x01cbb650: pusha  
  0x01cbb651: call   0x54dedbf0
  0x01cbb656: hlt    
  0x01cbb657: pop    %eax
  0x01cbb658: movl   $0x0,0x13c(%edi)
  0x01cbb662: movl   $0x0,0x144(%edi)
  0x01cbb66c: cmpl   $0x0,0x4(%edi)
  0x01cbb673: jne    0x01cb0340
  0x01cbb679: mov    -0x1c(%ebp),%esi
  0x01cbb67c: mov    -0x18(%ebp),%edi
  0x01cbb67f: ret    
  0x01cbb680: pop    %ebx
  0x01cbb681: mov    -0x20(%ebp),%esp
  0x01cbb684: movl   $0x0,-0x8(%ebp)
  0x01cbb68b: emms   
  0x01cbb68d: mov    $0x5543e5d0,%eax
  0x01cbb692: call   0x01cbb69c
  0x01cbb697: jmp    0x01cbb741
  0x01cbb69c: push   %ebx
  0x01cbb69d: push   %eax
  0x01cbb69e: lea    0xc(%esp),%eax
  0x01cbb6a2: cmpl   $0x0,-0x8(%ebp)
  0x01cbb6a9: je     0x01cbb6c0
  0x01cbb6af: push   $0x55310188
  0x01cbb6b4: call   0x01cbb6b9
  0x01cbb6b9: pusha  
  0x01cbb6ba: call   0x54dedbf0
  0x01cbb6bf: hlt    
  0x01cbb6c0: mov    %esi,-0x1c(%ebp)
  0x01cbb6c3: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbb6cb: mov    -0xc(%edi),%edi
  0x01cbb6ce: push   %edi
  0x01cbb6cf: mov    %ebp,0x144(%edi)
  0x01cbb6d5: mov    %eax,0x13c(%edi)
  0x01cbb6db: call   0x55059bc0
  0x01cbb6e0: add    $0xc,%esp
  0x01cbb6e3: push   %eax
  0x01cbb6e4: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbb6ec: mov    -0xc(%eax),%eax
  0x01cbb6ef: cmp    %eax,%edi
  0x01cbb6f1: je     0x01cbb708
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbb6f7: push   $0x55312af0
  0x01cbb6fc: call   0x01cbb701
  0x01cbb701: pusha  
  0x01cbb702: call   0x54dedbf0
  0x01cbb707: hlt    
  0x01cbb708: pop    %eax
  0x01cbb709: movl   $0x0,0x13c(%edi)
  0x01cbb713: movl   $0x0,0x144(%edi)
  0x01cbb71d: cmpl   $0x0,0x4(%edi)
  0x01cbb724: jne    0x01cb0340
  0x01cbb72a: mov    0x16c(%edi),%eax
  0x01cbb730: movl   $0x0,0x16c(%edi)
  0x01cbb73a: mov    -0x1c(%ebp),%esi
  0x01cbb73d: mov    -0x18(%ebp),%edi
  0x01cbb740: ret    
  0x01cbb741: jmp    0x01cbaa7d
  0x01cbb746: mov    -0x20(%ebp),%esp
  0x01cbb749: movl   $0x0,-0x8(%ebp)
  0x01cbb750: emms   
  0x01cbb752: mov    $0x5543e5fc,%eax
  0x01cbb757: mov    $0x5543e5f0,%ebx
  0x01cbb75c: call   0x01cbb766
  0x01cbb761: jmp    0x01cbb80b
  0x01cbb766: push   %ebx
  0x01cbb767: push   %eax
  0x01cbb768: lea    0xc(%esp),%eax
  0x01cbb76c: cmpl   $0x0,-0x8(%ebp)
  0x01cbb773: je     0x01cbb78a
  0x01cbb779: push   $0x55310188
  0x01cbb77e: call   0x01cbb783
  0x01cbb783: pusha  
  0x01cbb784: call   0x54dedbf0
  0x01cbb789: hlt    
  0x01cbb78a: mov    %esi,-0x1c(%ebp)
  0x01cbb78d: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbb795: mov    -0xc(%edi),%edi
  0x01cbb798: push   %edi
  0x01cbb799: mov    %ebp,0x144(%edi)
  0x01cbb79f: mov    %eax,0x13c(%edi)
  0x01cbb7a5: call   0x55059980
  0x01cbb7aa: add    $0xc,%esp
  0x01cbb7ad: push   %eax
  0x01cbb7ae: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbb7b6: mov    -0xc(%eax),%eax
  0x01cbb7b9: cmp    %eax,%edi
  0x01cbb7bb: je     0x01cbb7d2
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbb7c1: push   $0x55312af0
  0x01cbb7c6: call   0x01cbb7cb
  0x01cbb7cb: pusha  
  0x01cbb7cc: call   0x54dedbf0
  0x01cbb7d1: hlt    
  0x01cbb7d2: pop    %eax
  0x01cbb7d3: movl   $0x0,0x13c(%edi)
  0x01cbb7dd: movl   $0x0,0x144(%edi)
  0x01cbb7e7: cmpl   $0x0,0x4(%edi)
  0x01cbb7ee: jne    0x01cb0340
  0x01cbb7f4: mov    0x16c(%edi),%eax
  0x01cbb7fa: movl   $0x0,0x16c(%edi)
  0x01cbb804: mov    -0x1c(%ebp),%esi
  0x01cbb807: mov    -0x18(%ebp),%edi
  0x01cbb80a: ret    
  0x01cbb80b: jmp    0x01cbaa7d
  0x01cbb810: pop    %eax
  0x01cbb811: mov    -0x20(%ebp),%esp
  0x01cbb814: movl   $0x0,-0x8(%ebp)
  0x01cbb81b: emms   
  0x01cbb81d: call   0x01cbb827
  0x01cbb822: jmp    0x01cbb8bb
  0x01cbb827: push   %eax
  0x01cbb828: lea    0x8(%esp),%eax
  0x01cbb82c: cmpl   $0x0,-0x8(%ebp)
  0x01cbb833: je     0x01cbb84a
  0x01cbb839: push   $0x55310188
  0x01cbb83e: call   0x01cbb843
  0x01cbb843: pusha  
  0x01cbb844: call   0x54dedbf0
  0x01cbb849: hlt    
  0x01cbb84a: mov    %esi,-0x1c(%ebp)
  0x01cbb84d: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbb855: mov    -0xc(%edi),%edi
  0x01cbb858: push   %edi
  0x01cbb859: mov    %ebp,0x144(%edi)
  0x01cbb85f: mov    %eax,0x13c(%edi)
  0x01cbb865: call   0x550597c0
  0x01cbb86a: add    $0x8,%esp
  0x01cbb86d: push   %eax
  0x01cbb86e: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbb876: mov    -0xc(%eax),%eax
  0x01cbb879: cmp    %eax,%edi
  0x01cbb87b: je     0x01cbb892
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbb881: push   $0x55312af0
  0x01cbb886: call   0x01cbb88b
  0x01cbb88b: pusha  
  0x01cbb88c: call   0x54dedbf0
  0x01cbb891: hlt    
  0x01cbb892: pop    %eax
  0x01cbb893: movl   $0x0,0x13c(%edi)
  0x01cbb89d: movl   $0x0,0x144(%edi)
  0x01cbb8a7: cmpl   $0x0,0x4(%edi)
  0x01cbb8ae: jne    0x01cb0340
  0x01cbb8b4: mov    -0x1c(%ebp),%esi
  0x01cbb8b7: mov    -0x18(%ebp),%edi
  0x01cbb8ba: ret    
  0x01cbb8bb: mov    -0x20(%ebp),%esp
  0x01cbb8be: movl   $0x0,-0x8(%ebp)
  0x01cbb8c5: emms   
  0x01cbb8c7: mov    $0x5543e61c,%eax
  0x01cbb8cc: mov    $0x0,%ebx
  0x01cbb8d1: call   0x01cbb8db
  0x01cbb8d6: jmp    0x01cbb980
  0x01cbb8db: push   %ebx
  0x01cbb8dc: push   %eax
  0x01cbb8dd: lea    0xc(%esp),%eax
  0x01cbb8e1: cmpl   $0x0,-0x8(%ebp)
  0x01cbb8e8: je     0x01cbb8ff
  0x01cbb8ee: push   $0x55310188
  0x01cbb8f3: call   0x01cbb8f8
  0x01cbb8f8: pusha  
  0x01cbb8f9: call   0x54dedbf0
  0x01cbb8fe: hlt    
  0x01cbb8ff: mov    %esi,-0x1c(%ebp)
  0x01cbb902: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbb90a: mov    -0xc(%edi),%edi
  0x01cbb90d: push   %edi
  0x01cbb90e: mov    %ebp,0x144(%edi)
  0x01cbb914: mov    %eax,0x13c(%edi)
  0x01cbb91a: call   0x55059980
  0x01cbb91f: add    $0xc,%esp
  0x01cbb922: push   %eax
  0x01cbb923: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbb92b: mov    -0xc(%eax),%eax
  0x01cbb92e: cmp    %eax,%edi
  0x01cbb930: je     0x01cbb947
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbb936: push   $0x55312af0
  0x01cbb93b: call   0x01cbb940
  0x01cbb940: pusha  
  0x01cbb941: call   0x54dedbf0
  0x01cbb946: hlt    
  0x01cbb947: pop    %eax
  0x01cbb948: movl   $0x0,0x13c(%edi)
  0x01cbb952: movl   $0x0,0x144(%edi)
  0x01cbb95c: cmpl   $0x0,0x4(%edi)
  0x01cbb963: jne    0x01cb0340
  0x01cbb969: mov    0x16c(%edi),%eax
  0x01cbb96f: movl   $0x0,0x16c(%edi)
  0x01cbb979: mov    -0x1c(%ebp),%esi
  0x01cbb97c: mov    -0x18(%ebp),%edi
  0x01cbb97f: ret    
  0x01cbb980: jmp    0x01cbaa7d
  0x01cbb985: lea    -0x20(%ebp),%eax
  0x01cbb988: cmp    %esp,%eax
  0x01cbb98a: jae    0x01cbb9a1
  0x01cbb990: push   $0x55318f74
  0x01cbb995: call   0x01cbb99a
  0x01cbb99a: pusha  
  0x01cbb99b: call   0x54dedbf0
  0x01cbb9a0: hlt    
  0x01cbb9a1: mov    -0x1c(%ebp),%esi
  0x01cbb9a4: mov    -0x20(%ebp),%esp
  0x01cbb9a7: movl   $0x0,-0x8(%ebp)
  0x01cbb9ae: emms   
  0x01cbb9b0: call   0x01cbb9ba
  0x01cbb9b5: jmp    0x01cbba4d
  0x01cbb9ba: lea    0x4(%esp),%eax
  0x01cbb9be: cmpl   $0x0,-0x8(%ebp)
  0x01cbb9c5: je     0x01cbb9dc
  0x01cbb9cb: push   $0x55310188
  0x01cbb9d0: call   0x01cbb9d5
  0x01cbb9d5: pusha  
  0x01cbb9d6: call   0x54dedbf0
  0x01cbb9db: hlt    
  0x01cbb9dc: mov    %esi,-0x1c(%ebp)
  0x01cbb9df: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbb9e7: mov    -0xc(%edi),%edi
  0x01cbb9ea: push   %edi
  0x01cbb9eb: mov    %ebp,0x144(%edi)
  0x01cbb9f1: mov    %eax,0x13c(%edi)
  0x01cbb9f7: call   0x55059460
  0x01cbb9fc: add    $0x4,%esp
  0x01cbb9ff: push   %eax
  0x01cbba00: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbba08: mov    -0xc(%eax),%eax
  0x01cbba0b: cmp    %eax,%edi
  0x01cbba0d: je     0x01cbba24
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbba13: push   $0x55312af0
  0x01cbba18: call   0x01cbba1d
  0x01cbba1d: pusha  
  0x01cbba1e: call   0x54dedbf0
  0x01cbba23: hlt    
  0x01cbba24: pop    %eax
  0x01cbba25: movl   $0x0,0x13c(%edi)
  0x01cbba2f: movl   $0x0,0x144(%edi)
  0x01cbba39: cmpl   $0x0,0x4(%edi)
  0x01cbba40: jne    0x01cb0340
  0x01cbba46: mov    -0x1c(%ebp),%esi
  0x01cbba49: mov    -0x18(%ebp),%edi
  0x01cbba4c: ret    
  0x01cbba4d: nop    
  0x01cbba4e: nop    
  0x01cbba4f: nop    

----------------------------------------------------------------------
method entry point (kind = zerolocals)  [0x01cbba60, 0x01cbbde0]  896 bytes

  0x01cbba60: mov    0x8(%ebx),%edx
  0x01cbba63: movzwl 0x22(%edx),%ecx
  0x01cbba67: movzwl 0x20(%edx),%edx
  0x01cbba6b: sub    %ecx,%edx
  0x01cbba6d: cmp    $0x3f6,%edx
  0x01cbba73: jbe    0x01cbbaf3
  0x01cbba79: push   %esi
  0x01cbba7a: mov    %fs:0x0(,%eiz,1),%esi
  0x01cbba82: mov    -0xc(%esi),%esi
  0x01cbba85: lea    0x28(,%edx,4),%eax
  0x01cbba8c: cmpl   $0x0,0xd4(%esi)
  0x01cbba96: jne    0x01cbbaad
  0x01cbba9c: push   $0x553191c4
  0x01cbbaa1: call   0x01cbbaa6
  0x01cbbaa6: pusha  
  0x01cbbaa7: call   0x54dedbf0
  0x01cbbaac: hlt    
  0x01cbbaad: cmpl   $0x0,0xd8(%esi)
  0x01cbbab7: jne    0x01cbbace
  0x01cbbabd: push   $0x553191d8
  0x01cbbac2: call   0x01cbbac7
  0x01cbbac7: pusha  
  0x01cbbac8: call   0x54dedbf0
  0x01cbbacd: hlt    
  0x01cbbace: add    0xd4(%esi),%eax
  0x01cbbad4: sub    0xd8(%esi),%eax
  0x01cbbada: add    $0x9000,%eax
  0x01cbbae0: cmp    %eax,%esp
  0x01cbbae2: ja     0x01cbbaf2
  0x01cbbae8: pop    %esi
  0x01cbbae9: pop    %eax
  0x01cbbaea: mov    %esi,%esp
  0x01cbbaec: push   %eax
  0x01cbbaed: jmp    0x01cb2890
  0x01cbbaf2: pop    %esi
  0x01cbbaf3: pop    %eax
  0x01cbbaf4: lea    -0x4(%esp,%ecx,4),%edi
  0x01cbbaf8: test   %edx,%edx
  0x01cbbafa: jle    0x01cbbb08
  0x01cbbb00: push   $0x0
  0x01cbbb05: dec    %edx
  0x01cbbb06: jg     0x01cbbb00
  0x01cbbb08: push   %eax
  0x01cbbb09: push   %ebp
  0x01cbbb0a: mov    %esp,%ebp
  0x01cbbb0c: push   %esi
  0x01cbbb0d: push   $0x0
  0x01cbbb12: mov    0x8(%ebx),%esi
  0x01cbbb15: lea    0x28(%esi),%esi
  0x01cbbb18: push   %ebx
  0x01cbbb19: push   $0x0
  0x01cbbb1e: mov    0x8(%ebx),%edx
  0x01cbbb21: mov    0x8(%edx),%edx
  0x01cbbb24: mov    0xc(%edx),%edx
  0x01cbbb27: push   %edx
  0x01cbbb28: push   %edi
  0x01cbbb29: push   %esi
  0x01cbbb2a: push   $0x0
  0x01cbbb2f: mov    %esp,(%esp)
  0x01cbbb32: mov    0x14(%ebx),%eax
  0x01cbbb35: test   $0x100,%eax
  0x01cbbb3a: je     0x01cbbb51
  0x01cbbb40: push   $0x55318b94
  0x01cbbb45: call   0x01cbbb4a
  0x01cbbb4a: pusha  
  0x01cbbb4b: call   0x54dedbf0
  0x01cbbb50: hlt    
  0x01cbbb51: test   $0x400,%eax
  0x01cbbb56: je     0x01cbbb6d
  0x01cbbb5c: push   $0x55318bc4
  0x01cbbb61: call   0x01cbbb66
  0x01cbbb66: pusha  
  0x01cbbb67: call   0x54dedbf0
  0x01cbbb6c: hlt    
  0x01cbbb6d: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbbb75: mov    -0xc(%eax),%eax
  0x01cbbb78: movb   $0x1,0x1a1(%eax)
  0x01cbbb7f: mov    0x10(%ebx),%eax
  0x01cbbb82: test   %eax,%eax
  0x01cbbb84: jne    0x01cbbc33
  0x01cbbb8a: call   0x01cbbb94
  0x01cbbb8f: jmp    0x01cbbc28
  0x01cbbb94: push   %ebx
  0x01cbbb95: lea    0x8(%esp),%eax
  0x01cbbb99: cmpl   $0x0,-0x8(%ebp)
  0x01cbbba0: je     0x01cbbbb7
  0x01cbbba6: push   $0x55310188
  0x01cbbbab: call   0x01cbbbb0
  0x01cbbbb0: pusha  
  0x01cbbbb1: call   0x54dedbf0
  0x01cbbbb6: hlt    
  0x01cbbbb7: mov    %esi,-0x1c(%ebp)
  0x01cbbbba: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbbbc2: mov    -0xc(%edi),%edi
  0x01cbbbc5: push   %edi
  0x01cbbbc6: mov    %ebp,0x144(%edi)
  0x01cbbbcc: mov    %eax,0x13c(%edi)
  0x01cbbbd2: call   0x5505d720
  0x01cbbbd7: add    $0x8,%esp
  0x01cbbbda: push   %eax
  0x01cbbbdb: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbbbe3: mov    -0xc(%eax),%eax
  0x01cbbbe6: cmp    %eax,%edi
  0x01cbbbe8: je     0x01cbbbff
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbbbee: push   $0x55312af0
  0x01cbbbf3: call   0x01cbbbf8
  0x01cbbbf8: pusha  
  0x01cbbbf9: call   0x54dedbf0
  0x01cbbbfe: hlt    
  0x01cbbbff: pop    %eax
  0x01cbbc00: movl   $0x0,0x13c(%edi)
  0x01cbbc0a: movl   $0x0,0x144(%edi)
  0x01cbbc14: cmpl   $0x0,0x4(%edi)
  0x01cbbc1b: jne    0x01cb0340
  0x01cbbc21: mov    -0x1c(%ebp),%esi
  0x01cbbc24: mov    -0x18(%ebp),%edi
  0x01cbbc27: ret    
  0x01cbbc28: mov    0x10(%ebx),%eax
  0x01cbbc2b: test   %eax,%eax
  0x01cbbc2d: je     0x01cbbc50
  0x01cbbc33: mov    0x8(%eax),%ecx
  0x01cbbc36: add    $0x8,%ecx
  0x01cbbc39: mov    %ecx,0x8(%eax)
  0x01cbbc3c: mov    0xc(%eax),%eax
  0x01cbbc3f: and    $0xfffffff8,%eax
  0x01cbbc42: add    %eax,%ecx
  0x01cbbc44: cmp    0x55627784,%ecx
  0x01cbbc4a: jae    0x01cbbd29
  0x01cbbc50: mov    %eax,-0x1000(%esp)
  0x01cbbc57: mov    %eax,-0x2000(%esp)
  0x01cbbc5e: mov    %eax,-0x3000(%esp)
  0x01cbbc65: mov    %eax,-0x4000(%esp)
  0x01cbbc6c: mov    %eax,-0x5000(%esp)
  0x01cbbc73: mov    %eax,-0x6000(%esp)
  0x01cbbc7a: mov    %eax,-0x7000(%esp)
  0x01cbbc81: mov    %eax,-0x8000(%esp)
  0x01cbbc88: mov    %eax,-0x9000(%esp)
  0x01cbbc8f: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbbc97: mov    -0xc(%eax),%eax
  0x01cbbc9a: movb   $0x0,0x1a1(%eax)
  0x01cbbca1: mov    0x14(%ebx),%eax
  0x01cbbca4: test   $0x20,%eax
  0x01cbbca9: je     0x01cbbcc0
  0x01cbbcaf: push   $0x55318bf4
  0x01cbbcb4: call   0x01cbbcb9
  0x01cbbcb9: pusha  
  0x01cbbcba: call   0x54dedbf0
  0x01cbbcbf: hlt    
  0x01cbbcc0: mov    -0x20(%ebp),%eax
  0x01cbbcc3: cmp    %esp,%eax
  0x01cbbcc5: je     0x01cbbcdc
  0x01cbbccb: push   $0x55318c14
  0x01cbbcd0: call   0x01cbbcd5
  0x01cbbcd5: pusha  
  0x01cbbcd6: call   0x54dedbf0
  0x01cbbcdb: hlt    
  0x01cbbcdc: cmpb   $0x0,0x55633e5f
  0x01cbbce3: je     0x01cbbd1f
  0x01cbbce9: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cbbcf1: mov    -0xc(%ecx),%ecx
  0x01cbbcf4: mov    -0xc(%ebp),%ebx
  0x01cbbcf7: push   %ebx
  0x01cbbcf8: push   %ecx
  0x01cbbcf9: cmpl   $0x0,-0x8(%ebp)
  0x01cbbd00: je     0x01cbbd17
  0x01cbbd06: push   $0x55310148
  0x01cbbd0b: call   0x01cbbd10
  0x01cbbd10: pusha  
  0x01cbbd11: call   0x54dedbf0
  0x01cbbd16: hlt    
  0x01cbbd17: call   0x552155e0
  0x01cbbd1c: add    $0x8,%esp
  0x01cbbd1f: movzbl (%esi),%ebx
  0x01cbbd22: jmp    *0x55629838(,%ebx,4)
  0x01cbbd29: mov    $0x0,%eax
  0x01cbbd2e: call   0x01cbbd38
  0x01cbbd33: jmp    0x01cbbdcc
  0x01cbbd38: push   %eax
  0x01cbbd39: lea    0x8(%esp),%eax
  0x01cbbd3d: cmpl   $0x0,-0x8(%ebp)
  0x01cbbd44: je     0x01cbbd5b
  0x01cbbd4a: push   $0x55310188
  0x01cbbd4f: call   0x01cbbd54
  0x01cbbd54: pusha  
  0x01cbbd55: call   0x54dedbf0
  0x01cbbd5a: hlt    
  0x01cbbd5b: mov    %esi,-0x1c(%ebp)
  0x01cbbd5e: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbbd66: mov    -0xc(%edi),%edi
  0x01cbbd69: push   %edi
  0x01cbbd6a: mov    %ebp,0x144(%edi)
  0x01cbbd70: mov    %eax,0x13c(%edi)
  0x01cbbd76: call   0x5505ce70
  0x01cbbd7b: add    $0x8,%esp
  0x01cbbd7e: push   %eax
  0x01cbbd7f: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbbd87: mov    -0xc(%eax),%eax
  0x01cbbd8a: cmp    %eax,%edi
  0x01cbbd8c: je     0x01cbbda3
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbbd92: push   $0x55312af0
  0x01cbbd97: call   0x01cbbd9c
  0x01cbbd9c: pusha  
  0x01cbbd9d: call   0x54dedbf0
  0x01cbbda2: hlt    
  0x01cbbda3: pop    %eax
  0x01cbbda4: movl   $0x0,0x13c(%edi)
  0x01cbbdae: movl   $0x0,0x144(%edi)
  0x01cbbdb8: cmpl   $0x0,0x4(%edi)
  0x01cbbdbf: jne    0x01cb0340
  0x01cbbdc5: mov    -0x1c(%ebp),%esi
  0x01cbbdc8: mov    -0x18(%ebp),%edi
  0x01cbbdcb: ret    
  0x01cbbdcc: mov    -0xc(%ebp),%ebx
  0x01cbbdcf: jmp    0x01cbbc50
  0x01cbbdd4: int3   
  0x01cbbdd5: int3   
  0x01cbbdd6: int3   
  0x01cbbdd7: int3   
  0x01cbbdd8: int3   
  0x01cbbdd9: int3   
  0x01cbbdda: int3   
  0x01cbbddb: int3   
  0x01cbbddc: int3   
  0x01cbbddd: int3   
  0x01cbbdde: int3   
  0x01cbbddf: int3   

----------------------------------------------------------------------
method entry point (kind = zerolocals_synchronized)  [0x01cbbdf0, 0x01cbc2f0]  1280 bytes

  0x01cbbdf0: mov    0x8(%ebx),%edx
  0x01cbbdf3: movzwl 0x22(%edx),%ecx
  0x01cbbdf7: movzwl 0x20(%edx),%edx
  0x01cbbdfb: sub    %ecx,%edx
  0x01cbbdfd: cmp    $0x3f6,%edx
  0x01cbbe03: jbe    0x01cbbe83
  0x01cbbe09: push   %esi
  0x01cbbe0a: mov    %fs:0x0(,%eiz,1),%esi
  0x01cbbe12: mov    -0xc(%esi),%esi
  0x01cbbe15: lea    0x28(,%edx,4),%eax
  0x01cbbe1c: cmpl   $0x0,0xd4(%esi)
  0x01cbbe26: jne    0x01cbbe3d
  0x01cbbe2c: push   $0x553191c4
  0x01cbbe31: call   0x01cbbe36
  0x01cbbe36: pusha  
  0x01cbbe37: call   0x54dedbf0
  0x01cbbe3c: hlt    
  0x01cbbe3d: cmpl   $0x0,0xd8(%esi)
  0x01cbbe47: jne    0x01cbbe5e
  0x01cbbe4d: push   $0x553191d8
  0x01cbbe52: call   0x01cbbe57
  0x01cbbe57: pusha  
  0x01cbbe58: call   0x54dedbf0
  0x01cbbe5d: hlt    
  0x01cbbe5e: add    0xd4(%esi),%eax
  0x01cbbe64: sub    0xd8(%esi),%eax
  0x01cbbe6a: add    $0x9000,%eax
  0x01cbbe70: cmp    %eax,%esp
  0x01cbbe72: ja     0x01cbbe82
  0x01cbbe78: pop    %esi
  0x01cbbe79: pop    %eax
  0x01cbbe7a: mov    %esi,%esp
  0x01cbbe7c: push   %eax
  0x01cbbe7d: jmp    0x01cb2890
  0x01cbbe82: pop    %esi
  0x01cbbe83: pop    %eax
  0x01cbbe84: lea    -0x4(%esp,%ecx,4),%edi
  0x01cbbe88: test   %edx,%edx
  0x01cbbe8a: jle    0x01cbbe98
  0x01cbbe90: push   $0x0
  0x01cbbe95: dec    %edx
  0x01cbbe96: jg     0x01cbbe90
  0x01cbbe98: push   %eax
  0x01cbbe99: push   %ebp
  0x01cbbe9a: mov    %esp,%ebp
  0x01cbbe9c: push   %esi
  0x01cbbe9d: push   $0x0
  0x01cbbea2: mov    0x8(%ebx),%esi
  0x01cbbea5: lea    0x28(%esi),%esi
  0x01cbbea8: push   %ebx
  0x01cbbea9: push   $0x0
  0x01cbbeae: mov    0x8(%ebx),%edx
  0x01cbbeb1: mov    0x8(%edx),%edx
  0x01cbbeb4: mov    0xc(%edx),%edx
  0x01cbbeb7: push   %edx
  0x01cbbeb8: push   %edi
  0x01cbbeb9: push   %esi
  0x01cbbeba: push   $0x0
  0x01cbbebf: mov    %esp,(%esp)
  0x01cbbec2: mov    0x14(%ebx),%eax
  0x01cbbec5: test   $0x100,%eax
  0x01cbbeca: je     0x01cbbee1
  0x01cbbed0: push   $0x55318b94
  0x01cbbed5: call   0x01cbbeda
  0x01cbbeda: pusha  
  0x01cbbedb: call   0x54dedbf0
  0x01cbbee0: hlt    
  0x01cbbee1: test   $0x400,%eax
  0x01cbbee6: je     0x01cbbefd
  0x01cbbeec: push   $0x55318bc4
  0x01cbbef1: call   0x01cbbef6
  0x01cbbef6: pusha  
  0x01cbbef7: call   0x54dedbf0
  0x01cbbefc: hlt    
  0x01cbbefd: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbbf05: mov    -0xc(%eax),%eax
  0x01cbbf08: movb   $0x1,0x1a1(%eax)
  0x01cbbf0f: mov    0x10(%ebx),%eax
  0x01cbbf12: test   %eax,%eax
  0x01cbbf14: jne    0x01cbbfc3
  0x01cbbf1a: call   0x01cbbf24
  0x01cbbf1f: jmp    0x01cbbfb8
  0x01cbbf24: push   %ebx
  0x01cbbf25: lea    0x8(%esp),%eax
  0x01cbbf29: cmpl   $0x0,-0x8(%ebp)
  0x01cbbf30: je     0x01cbbf47
  0x01cbbf36: push   $0x55310188
  0x01cbbf3b: call   0x01cbbf40
  0x01cbbf40: pusha  
  0x01cbbf41: call   0x54dedbf0
  0x01cbbf46: hlt    
  0x01cbbf47: mov    %esi,-0x1c(%ebp)
  0x01cbbf4a: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbbf52: mov    -0xc(%edi),%edi
  0x01cbbf55: push   %edi
  0x01cbbf56: mov    %ebp,0x144(%edi)
  0x01cbbf5c: mov    %eax,0x13c(%edi)
  0x01cbbf62: call   0x5505d720
  0x01cbbf67: add    $0x8,%esp
  0x01cbbf6a: push   %eax
  0x01cbbf6b: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbbf73: mov    -0xc(%eax),%eax
  0x01cbbf76: cmp    %eax,%edi
  0x01cbbf78: je     0x01cbbf8f
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbbf7e: push   $0x55312af0
  0x01cbbf83: call   0x01cbbf88
  0x01cbbf88: pusha  
  0x01cbbf89: call   0x54dedbf0
  0x01cbbf8e: hlt    
  0x01cbbf8f: pop    %eax
  0x01cbbf90: movl   $0x0,0x13c(%edi)
  0x01cbbf9a: movl   $0x0,0x144(%edi)
  0x01cbbfa4: cmpl   $0x0,0x4(%edi)
  0x01cbbfab: jne    0x01cb0340
  0x01cbbfb1: mov    -0x1c(%ebp),%esi
  0x01cbbfb4: mov    -0x18(%ebp),%edi
  0x01cbbfb7: ret    
  0x01cbbfb8: mov    0x10(%ebx),%eax
  0x01cbbfbb: test   %eax,%eax
  0x01cbbfbd: je     0x01cbbfe0
  0x01cbbfc3: mov    0x8(%eax),%ecx
  0x01cbbfc6: add    $0x8,%ecx
  0x01cbbfc9: mov    %ecx,0x8(%eax)
  0x01cbbfcc: mov    0xc(%eax),%eax
  0x01cbbfcf: and    $0xfffffff8,%eax
  0x01cbbfd2: add    %eax,%ecx
  0x01cbbfd4: cmp    0x55627784,%ecx
  0x01cbbfda: jae    0x01cbc245
  0x01cbbfe0: mov    %eax,-0x1000(%esp)
  0x01cbbfe7: mov    %eax,-0x2000(%esp)
  0x01cbbfee: mov    %eax,-0x3000(%esp)
  0x01cbbff5: mov    %eax,-0x4000(%esp)
  0x01cbbffc: mov    %eax,-0x5000(%esp)
  0x01cbc003: mov    %eax,-0x6000(%esp)
  0x01cbc00a: mov    %eax,-0x7000(%esp)
  0x01cbc011: mov    %eax,-0x8000(%esp)
  0x01cbc018: mov    %eax,-0x9000(%esp)
  0x01cbc01f: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbc027: mov    -0xc(%eax),%eax
  0x01cbc02a: movb   $0x0,0x1a1(%eax)
  0x01cbc031: mov    0x14(%ebx),%eax
  0x01cbc034: test   $0x20,%eax
  0x01cbc039: jne    0x01cbc050
  0x01cbc03f: push   $0x55319284
  0x01cbc044: call   0x01cbc049
  0x01cbc049: pusha  
  0x01cbc04a: call   0x54dedbf0
  0x01cbc04f: hlt    
  0x01cbc050: mov    0x14(%ebx),%eax
  0x01cbc053: test   $0x8,%eax
  0x01cbc058: mov    (%edi),%eax
  0x01cbc05a: je     0x01cbc06c
  0x01cbc060: mov    0x8(%ebx),%eax
  0x01cbc063: mov    0x8(%eax),%eax
  0x01cbc066: mov    0x10(%eax),%eax
  0x01cbc069: mov    0x3c(%eax),%eax
  0x01cbc06c: sub    $0x8,%esp
  0x01cbc06f: mov    %esp,-0x20(%ebp)
  0x01cbc072: mov    %eax,0x4(%esp)
  0x01cbc076: mov    %esp,%edx
  0x01cbc078: mov    0x4(%edx),%ecx
  0x01cbc07b: mov    (%ecx),%eax
  0x01cbc07d: push   %edx
  0x01cbc07e: mov    %eax,%edx
  0x01cbc080: and    $0x7,%edx
  0x01cbc083: cmp    $0x5,%edx
  0x01cbc086: pop    %edx
  0x01cbc087: jne    0x01cbc11b
  0x01cbc08d: mov    %eax,(%edx)
  0x01cbc08f: push   %edx
  0x01cbc090: mov    %fs:0x0(,%eiz,1),%edx
  0x01cbc098: mov    -0xc(%edx),%edx
  0x01cbc09b: xor    %edx,%eax
  0x01cbc09d: mov    0x4(%ecx),%edx
  0x01cbc0a0: xor    0x68(%edx),%eax
  0x01cbc0a3: and    $0xffffff87,%eax
  0x01cbc0a6: pop    %edx
  0x01cbc0a7: je     0x01cbc1dc
  0x01cbc0ad: test   $0x7,%eax
  0x01cbc0b2: jne    0x01cbc10d
  0x01cbc0b8: test   $0x180,%eax
  0x01cbc0bd: jne    0x01cbc0e9
  0x01cbc0c3: mov    (%edx),%eax
  0x01cbc0c5: and    $0x1ff,%eax
  0x01cbc0cb: push   %edx
  0x01cbc0cc: mov    %fs:0x0(,%eiz,1),%edx
  0x01cbc0d4: mov    -0xc(%edx),%edx
  0x01cbc0d7: or     %eax,%edx
  0x01cbc0d9: lock cmpxchg %edx,(%ecx)
  0x01cbc0dd: pop    %edx
  0x01cbc0de: jne    0x01cbc13e
  0x01cbc0e4: jmp    0x01cbc1dc
  0x01cbc0e9: push   %edx
  0x01cbc0ea: mov    %fs:0x0(,%eiz,1),%edx
  0x01cbc0f2: mov    -0xc(%edx),%edx
  0x01cbc0f5: mov    0x4(%ecx),%eax
  0x01cbc0f8: or     0x68(%eax),%edx
  0x01cbc0fb: mov    (%edx),%eax
  0x01cbc0fd: lock cmpxchg %edx,(%ecx)
  0x01cbc101: pop    %edx
  0x01cbc102: jne    0x01cbc13e
  0x01cbc108: jmp    0x01cbc1dc
  0x01cbc10d: mov    (%edx),%eax
  0x01cbc10f: push   %edx
  0x01cbc110: mov    0x4(%ecx),%edx
  0x01cbc113: mov    0x68(%edx),%edx
  0x01cbc116: lock cmpxchg %edx,(%ecx)
  0x01cbc11a: pop    %edx
  0x01cbc11b: mov    $0x1,%eax
  0x01cbc120: or     (%ecx),%eax
  0x01cbc122: mov    %eax,(%edx)
  0x01cbc124: lock cmpxchg %edx,(%ecx)
  0x01cbc128: je     0x01cbc1dc
  0x01cbc12e: sub    %esp,%eax
  0x01cbc130: and    $0xfffff003,%eax
  0x01cbc136: mov    %eax,(%edx)
  0x01cbc138: je     0x01cbc1dc
  0x01cbc13e: call   0x01cbc148
  0x01cbc143: jmp    0x01cbc1dc
  0x01cbc148: push   %edx
  0x01cbc149: lea    0x8(%esp),%eax
  0x01cbc14d: cmpl   $0x0,-0x8(%ebp)
  0x01cbc154: je     0x01cbc16b
  0x01cbc15a: push   $0x55310188
  0x01cbc15f: call   0x01cbc164
  0x01cbc164: pusha  
  0x01cbc165: call   0x54dedbf0
  0x01cbc16a: hlt    
  0x01cbc16b: mov    %esi,-0x1c(%ebp)
  0x01cbc16e: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbc176: mov    -0xc(%edi),%edi
  0x01cbc179: push   %edi
  0x01cbc17a: mov    %ebp,0x144(%edi)
  0x01cbc180: mov    %eax,0x13c(%edi)
  0x01cbc186: call   0x5505a930
  0x01cbc18b: add    $0x8,%esp
  0x01cbc18e: push   %eax
  0x01cbc18f: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbc197: mov    -0xc(%eax),%eax
  0x01cbc19a: cmp    %eax,%edi
  0x01cbc19c: je     0x01cbc1b3
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbc1a2: push   $0x55312af0
  0x01cbc1a7: call   0x01cbc1ac
  0x01cbc1ac: pusha  
  0x01cbc1ad: call   0x54dedbf0
  0x01cbc1b2: hlt    
  0x01cbc1b3: pop    %eax
  0x01cbc1b4: movl   $0x0,0x13c(%edi)
  0x01cbc1be: movl   $0x0,0x144(%edi)
  0x01cbc1c8: cmpl   $0x0,0x4(%edi)
  0x01cbc1cf: jne    0x01cb0340
  0x01cbc1d5: mov    -0x1c(%ebp),%esi
  0x01cbc1d8: mov    -0x18(%ebp),%edi
  0x01cbc1db: ret    
  0x01cbc1dc: mov    -0x20(%ebp),%eax
  0x01cbc1df: cmp    %esp,%eax
  0x01cbc1e1: je     0x01cbc1f8
  0x01cbc1e7: push   $0x55318c14
  0x01cbc1ec: call   0x01cbc1f1
  0x01cbc1f1: pusha  
  0x01cbc1f2: call   0x54dedbf0
  0x01cbc1f7: hlt    
  0x01cbc1f8: cmpb   $0x0,0x55633e5f
  0x01cbc1ff: je     0x01cbc23b
  0x01cbc205: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cbc20d: mov    -0xc(%ecx),%ecx
  0x01cbc210: mov    -0xc(%ebp),%ebx
  0x01cbc213: push   %ebx
  0x01cbc214: push   %ecx
  0x01cbc215: cmpl   $0x0,-0x8(%ebp)
  0x01cbc21c: je     0x01cbc233
  0x01cbc222: push   $0x55310148
  0x01cbc227: call   0x01cbc22c
  0x01cbc22c: pusha  
  0x01cbc22d: call   0x54dedbf0
  0x01cbc232: hlt    
  0x01cbc233: call   0x552155e0
  0x01cbc238: add    $0x8,%esp
  0x01cbc23b: movzbl (%esi),%ebx
  0x01cbc23e: jmp    *0x55629838(,%ebx,4)
  0x01cbc245: mov    $0x0,%eax
  0x01cbc24a: call   0x01cbc254
  0x01cbc24f: jmp    0x01cbc2e8
  0x01cbc254: push   %eax
  0x01cbc255: lea    0x8(%esp),%eax
  0x01cbc259: cmpl   $0x0,-0x8(%ebp)
  0x01cbc260: je     0x01cbc277
  0x01cbc266: push   $0x55310188
  0x01cbc26b: call   0x01cbc270
  0x01cbc270: pusha  
  0x01cbc271: call   0x54dedbf0
  0x01cbc276: hlt    
  0x01cbc277: mov    %esi,-0x1c(%ebp)
  0x01cbc27a: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbc282: mov    -0xc(%edi),%edi
  0x01cbc285: push   %edi
  0x01cbc286: mov    %ebp,0x144(%edi)
  0x01cbc28c: mov    %eax,0x13c(%edi)
  0x01cbc292: call   0x5505ce70
  0x01cbc297: add    $0x8,%esp
  0x01cbc29a: push   %eax
  0x01cbc29b: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbc2a3: mov    -0xc(%eax),%eax
  0x01cbc2a6: cmp    %eax,%edi
  0x01cbc2a8: je     0x01cbc2bf
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbc2ae: push   $0x55312af0
  0x01cbc2b3: call   0x01cbc2b8
  0x01cbc2b8: pusha  
  0x01cbc2b9: call   0x54dedbf0
  0x01cbc2be: hlt    
  0x01cbc2bf: pop    %eax
  0x01cbc2c0: movl   $0x0,0x13c(%edi)
  0x01cbc2ca: movl   $0x0,0x144(%edi)
  0x01cbc2d4: cmpl   $0x0,0x4(%edi)
  0x01cbc2db: jne    0x01cb0340
  0x01cbc2e1: mov    -0x1c(%ebp),%esi
  0x01cbc2e4: mov    -0x18(%ebp),%edi
  0x01cbc2e7: ret    
  0x01cbc2e8: mov    -0xc(%ebp),%ebx
  0x01cbc2eb: jmp    0x01cbbfe0

----------------------------------------------------------------------
method entry point (kind = empty)  [0x01cbc300, 0x01cbc680]  896 bytes

  0x01cbc300: mov    0x8(%ebx),%edx
  0x01cbc303: movzwl 0x22(%edx),%ecx
  0x01cbc307: movzwl 0x20(%edx),%edx
  0x01cbc30b: sub    %ecx,%edx
  0x01cbc30d: cmp    $0x3f6,%edx
  0x01cbc313: jbe    0x01cbc393
  0x01cbc319: push   %esi
  0x01cbc31a: mov    %fs:0x0(,%eiz,1),%esi
  0x01cbc322: mov    -0xc(%esi),%esi
  0x01cbc325: lea    0x28(,%edx,4),%eax
  0x01cbc32c: cmpl   $0x0,0xd4(%esi)
  0x01cbc336: jne    0x01cbc34d
  0x01cbc33c: push   $0x553191c4
  0x01cbc341: call   0x01cbc346
  0x01cbc346: pusha  
  0x01cbc347: call   0x54dedbf0
  0x01cbc34c: hlt    
  0x01cbc34d: cmpl   $0x0,0xd8(%esi)
  0x01cbc357: jne    0x01cbc36e
  0x01cbc35d: push   $0x553191d8
  0x01cbc362: call   0x01cbc367
  0x01cbc367: pusha  
  0x01cbc368: call   0x54dedbf0
  0x01cbc36d: hlt    
  0x01cbc36e: add    0xd4(%esi),%eax
  0x01cbc374: sub    0xd8(%esi),%eax
  0x01cbc37a: add    $0x9000,%eax
  0x01cbc380: cmp    %eax,%esp
  0x01cbc382: ja     0x01cbc392
  0x01cbc388: pop    %esi
  0x01cbc389: pop    %eax
  0x01cbc38a: mov    %esi,%esp
  0x01cbc38c: push   %eax
  0x01cbc38d: jmp    0x01cb2890
  0x01cbc392: pop    %esi
  0x01cbc393: pop    %eax
  0x01cbc394: lea    -0x4(%esp,%ecx,4),%edi
  0x01cbc398: test   %edx,%edx
  0x01cbc39a: jle    0x01cbc3a8
  0x01cbc3a0: push   $0x0
  0x01cbc3a5: dec    %edx
  0x01cbc3a6: jg     0x01cbc3a0
  0x01cbc3a8: push   %eax
  0x01cbc3a9: push   %ebp
  0x01cbc3aa: mov    %esp,%ebp
  0x01cbc3ac: push   %esi
  0x01cbc3ad: push   $0x0
  0x01cbc3b2: mov    0x8(%ebx),%esi
  0x01cbc3b5: lea    0x28(%esi),%esi
  0x01cbc3b8: push   %ebx
  0x01cbc3b9: push   $0x0
  0x01cbc3be: mov    0x8(%ebx),%edx
  0x01cbc3c1: mov    0x8(%edx),%edx
  0x01cbc3c4: mov    0xc(%edx),%edx
  0x01cbc3c7: push   %edx
  0x01cbc3c8: push   %edi
  0x01cbc3c9: push   %esi
  0x01cbc3ca: push   $0x0
  0x01cbc3cf: mov    %esp,(%esp)
  0x01cbc3d2: mov    0x14(%ebx),%eax
  0x01cbc3d5: test   $0x100,%eax
  0x01cbc3da: je     0x01cbc3f1
  0x01cbc3e0: push   $0x55318b94
  0x01cbc3e5: call   0x01cbc3ea
  0x01cbc3ea: pusha  
  0x01cbc3eb: call   0x54dedbf0
  0x01cbc3f0: hlt    
  0x01cbc3f1: test   $0x400,%eax
  0x01cbc3f6: je     0x01cbc40d
  0x01cbc3fc: push   $0x55318bc4
  0x01cbc401: call   0x01cbc406
  0x01cbc406: pusha  
  0x01cbc407: call   0x54dedbf0
  0x01cbc40c: hlt    
  0x01cbc40d: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbc415: mov    -0xc(%eax),%eax
  0x01cbc418: movb   $0x1,0x1a1(%eax)
  0x01cbc41f: mov    0x10(%ebx),%eax
  0x01cbc422: test   %eax,%eax
  0x01cbc424: jne    0x01cbc4d3
  0x01cbc42a: call   0x01cbc434
  0x01cbc42f: jmp    0x01cbc4c8
  0x01cbc434: push   %ebx
  0x01cbc435: lea    0x8(%esp),%eax
  0x01cbc439: cmpl   $0x0,-0x8(%ebp)
  0x01cbc440: je     0x01cbc457
  0x01cbc446: push   $0x55310188
  0x01cbc44b: call   0x01cbc450
  0x01cbc450: pusha  
  0x01cbc451: call   0x54dedbf0
  0x01cbc456: hlt    
  0x01cbc457: mov    %esi,-0x1c(%ebp)
  0x01cbc45a: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbc462: mov    -0xc(%edi),%edi
  0x01cbc465: push   %edi
  0x01cbc466: mov    %ebp,0x144(%edi)
  0x01cbc46c: mov    %eax,0x13c(%edi)
  0x01cbc472: call   0x5505d720
  0x01cbc477: add    $0x8,%esp
  0x01cbc47a: push   %eax
  0x01cbc47b: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbc483: mov    -0xc(%eax),%eax
  0x01cbc486: cmp    %eax,%edi
  0x01cbc488: je     0x01cbc49f
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbc48e: push   $0x55312af0
  0x01cbc493: call   0x01cbc498
  0x01cbc498: pusha  
  0x01cbc499: call   0x54dedbf0
  0x01cbc49e: hlt    
  0x01cbc49f: pop    %eax
  0x01cbc4a0: movl   $0x0,0x13c(%edi)
  0x01cbc4aa: movl   $0x0,0x144(%edi)
  0x01cbc4b4: cmpl   $0x0,0x4(%edi)
  0x01cbc4bb: jne    0x01cb0340
  0x01cbc4c1: mov    -0x1c(%ebp),%esi
  0x01cbc4c4: mov    -0x18(%ebp),%edi
  0x01cbc4c7: ret    
  0x01cbc4c8: mov    0x10(%ebx),%eax
  0x01cbc4cb: test   %eax,%eax
  0x01cbc4cd: je     0x01cbc4f0
  0x01cbc4d3: mov    0x8(%eax),%ecx
  0x01cbc4d6: add    $0x8,%ecx
  0x01cbc4d9: mov    %ecx,0x8(%eax)
  0x01cbc4dc: mov    0xc(%eax),%eax
  0x01cbc4df: and    $0xfffffff8,%eax
  0x01cbc4e2: add    %eax,%ecx
  0x01cbc4e4: cmp    0x55627784,%ecx
  0x01cbc4ea: jae    0x01cbc5c9
  0x01cbc4f0: mov    %eax,-0x1000(%esp)
  0x01cbc4f7: mov    %eax,-0x2000(%esp)
  0x01cbc4fe: mov    %eax,-0x3000(%esp)
  0x01cbc505: mov    %eax,-0x4000(%esp)
  0x01cbc50c: mov    %eax,-0x5000(%esp)
  0x01cbc513: mov    %eax,-0x6000(%esp)
  0x01cbc51a: mov    %eax,-0x7000(%esp)
  0x01cbc521: mov    %eax,-0x8000(%esp)
  0x01cbc528: mov    %eax,-0x9000(%esp)
  0x01cbc52f: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbc537: mov    -0xc(%eax),%eax
  0x01cbc53a: movb   $0x0,0x1a1(%eax)
  0x01cbc541: mov    0x14(%ebx),%eax
  0x01cbc544: test   $0x20,%eax
  0x01cbc549: je     0x01cbc560
  0x01cbc54f: push   $0x55318bf4
  0x01cbc554: call   0x01cbc559
  0x01cbc559: pusha  
  0x01cbc55a: call   0x54dedbf0
  0x01cbc55f: hlt    
  0x01cbc560: mov    -0x20(%ebp),%eax
  0x01cbc563: cmp    %esp,%eax
  0x01cbc565: je     0x01cbc57c
  0x01cbc56b: push   $0x55318c14
  0x01cbc570: call   0x01cbc575
  0x01cbc575: pusha  
  0x01cbc576: call   0x54dedbf0
  0x01cbc57b: hlt    
  0x01cbc57c: cmpb   $0x0,0x55633e5f
  0x01cbc583: je     0x01cbc5bf
  0x01cbc589: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cbc591: mov    -0xc(%ecx),%ecx
  0x01cbc594: mov    -0xc(%ebp),%ebx
  0x01cbc597: push   %ebx
  0x01cbc598: push   %ecx
  0x01cbc599: cmpl   $0x0,-0x8(%ebp)
  0x01cbc5a0: je     0x01cbc5b7
  0x01cbc5a6: push   $0x55310148
  0x01cbc5ab: call   0x01cbc5b0
  0x01cbc5b0: pusha  
  0x01cbc5b1: call   0x54dedbf0
  0x01cbc5b6: hlt    
  0x01cbc5b7: call   0x552155e0
  0x01cbc5bc: add    $0x8,%esp
  0x01cbc5bf: movzbl (%esi),%ebx
  0x01cbc5c2: jmp    *0x55629838(,%ebx,4)
  0x01cbc5c9: mov    $0x0,%eax
  0x01cbc5ce: call   0x01cbc5d8
  0x01cbc5d3: jmp    0x01cbc66c
  0x01cbc5d8: push   %eax
  0x01cbc5d9: lea    0x8(%esp),%eax
  0x01cbc5dd: cmpl   $0x0,-0x8(%ebp)
  0x01cbc5e4: je     0x01cbc5fb
  0x01cbc5ea: push   $0x55310188
  0x01cbc5ef: call   0x01cbc5f4
  0x01cbc5f4: pusha  
  0x01cbc5f5: call   0x54dedbf0
  0x01cbc5fa: hlt    
  0x01cbc5fb: mov    %esi,-0x1c(%ebp)
  0x01cbc5fe: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbc606: mov    -0xc(%edi),%edi
  0x01cbc609: push   %edi
  0x01cbc60a: mov    %ebp,0x144(%edi)
  0x01cbc610: mov    %eax,0x13c(%edi)
  0x01cbc616: call   0x5505ce70
  0x01cbc61b: add    $0x8,%esp
  0x01cbc61e: push   %eax
  0x01cbc61f: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbc627: mov    -0xc(%eax),%eax
  0x01cbc62a: cmp    %eax,%edi
  0x01cbc62c: je     0x01cbc643
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbc632: push   $0x55312af0
  0x01cbc637: call   0x01cbc63c
  0x01cbc63c: pusha  
  0x01cbc63d: call   0x54dedbf0
  0x01cbc642: hlt    
  0x01cbc643: pop    %eax
  0x01cbc644: movl   $0x0,0x13c(%edi)
  0x01cbc64e: movl   $0x0,0x144(%edi)
  0x01cbc658: cmpl   $0x0,0x4(%edi)
  0x01cbc65f: jne    0x01cb0340
  0x01cbc665: mov    -0x1c(%ebp),%esi
  0x01cbc668: mov    -0x18(%ebp),%edi
  0x01cbc66b: ret    
  0x01cbc66c: mov    -0xc(%ebp),%ebx
  0x01cbc66f: jmp    0x01cbc4f0
  0x01cbc674: int3   
  0x01cbc675: int3   
  0x01cbc676: int3   
  0x01cbc677: int3   
  0x01cbc678: int3   
  0x01cbc679: int3   
  0x01cbc67a: int3   
  0x01cbc67b: int3   
  0x01cbc67c: int3   
  0x01cbc67d: int3   
  0x01cbc67e: int3   
  0x01cbc67f: int3   

----------------------------------------------------------------------
method entry point (kind = accessor)  [0x01cbc690, 0x01cbca10]  896 bytes

  0x01cbc690: mov    0x8(%ebx),%edx
  0x01cbc693: movzwl 0x22(%edx),%ecx
  0x01cbc697: movzwl 0x20(%edx),%edx
  0x01cbc69b: sub    %ecx,%edx
  0x01cbc69d: cmp    $0x3f6,%edx
  0x01cbc6a3: jbe    0x01cbc723
  0x01cbc6a9: push   %esi
  0x01cbc6aa: mov    %fs:0x0(,%eiz,1),%esi
  0x01cbc6b2: mov    -0xc(%esi),%esi
  0x01cbc6b5: lea    0x28(,%edx,4),%eax
  0x01cbc6bc: cmpl   $0x0,0xd4(%esi)
  0x01cbc6c6: jne    0x01cbc6dd
  0x01cbc6cc: push   $0x553191c4
  0x01cbc6d1: call   0x01cbc6d6
  0x01cbc6d6: pusha  
  0x01cbc6d7: call   0x54dedbf0
  0x01cbc6dc: hlt    
  0x01cbc6dd: cmpl   $0x0,0xd8(%esi)
  0x01cbc6e7: jne    0x01cbc6fe
  0x01cbc6ed: push   $0x553191d8
  0x01cbc6f2: call   0x01cbc6f7
  0x01cbc6f7: pusha  
  0x01cbc6f8: call   0x54dedbf0
  0x01cbc6fd: hlt    
  0x01cbc6fe: add    0xd4(%esi),%eax
  0x01cbc704: sub    0xd8(%esi),%eax
  0x01cbc70a: add    $0x9000,%eax
  0x01cbc710: cmp    %eax,%esp
  0x01cbc712: ja     0x01cbc722
  0x01cbc718: pop    %esi
  0x01cbc719: pop    %eax
  0x01cbc71a: mov    %esi,%esp
  0x01cbc71c: push   %eax
  0x01cbc71d: jmp    0x01cb2890
  0x01cbc722: pop    %esi
  0x01cbc723: pop    %eax
  0x01cbc724: lea    -0x4(%esp,%ecx,4),%edi
  0x01cbc728: test   %edx,%edx
  0x01cbc72a: jle    0x01cbc738
  0x01cbc730: push   $0x0
  0x01cbc735: dec    %edx
  0x01cbc736: jg     0x01cbc730
  0x01cbc738: push   %eax
  0x01cbc739: push   %ebp
  0x01cbc73a: mov    %esp,%ebp
  0x01cbc73c: push   %esi
  0x01cbc73d: push   $0x0
  0x01cbc742: mov    0x8(%ebx),%esi
  0x01cbc745: lea    0x28(%esi),%esi
  0x01cbc748: push   %ebx
  0x01cbc749: push   $0x0
  0x01cbc74e: mov    0x8(%ebx),%edx
  0x01cbc751: mov    0x8(%edx),%edx
  0x01cbc754: mov    0xc(%edx),%edx
  0x01cbc757: push   %edx
  0x01cbc758: push   %edi
  0x01cbc759: push   %esi
  0x01cbc75a: push   $0x0
  0x01cbc75f: mov    %esp,(%esp)
  0x01cbc762: mov    0x14(%ebx),%eax
  0x01cbc765: test   $0x100,%eax
  0x01cbc76a: je     0x01cbc781
  0x01cbc770: push   $0x55318b94
  0x01cbc775: call   0x01cbc77a
  0x01cbc77a: pusha  
  0x01cbc77b: call   0x54dedbf0
  0x01cbc780: hlt    
  0x01cbc781: test   $0x400,%eax
  0x01cbc786: je     0x01cbc79d
  0x01cbc78c: push   $0x55318bc4
  0x01cbc791: call   0x01cbc796
  0x01cbc796: pusha  
  0x01cbc797: call   0x54dedbf0
  0x01cbc79c: hlt    
  0x01cbc79d: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbc7a5: mov    -0xc(%eax),%eax
  0x01cbc7a8: movb   $0x1,0x1a1(%eax)
  0x01cbc7af: mov    0x10(%ebx),%eax
  0x01cbc7b2: test   %eax,%eax
  0x01cbc7b4: jne    0x01cbc863
  0x01cbc7ba: call   0x01cbc7c4
  0x01cbc7bf: jmp    0x01cbc858
  0x01cbc7c4: push   %ebx
  0x01cbc7c5: lea    0x8(%esp),%eax
  0x01cbc7c9: cmpl   $0x0,-0x8(%ebp)
  0x01cbc7d0: je     0x01cbc7e7
  0x01cbc7d6: push   $0x55310188
  0x01cbc7db: call   0x01cbc7e0
  0x01cbc7e0: pusha  
  0x01cbc7e1: call   0x54dedbf0
  0x01cbc7e6: hlt    
  0x01cbc7e7: mov    %esi,-0x1c(%ebp)
  0x01cbc7ea: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbc7f2: mov    -0xc(%edi),%edi
  0x01cbc7f5: push   %edi
  0x01cbc7f6: mov    %ebp,0x144(%edi)
  0x01cbc7fc: mov    %eax,0x13c(%edi)
  0x01cbc802: call   0x5505d720
  0x01cbc807: add    $0x8,%esp
  0x01cbc80a: push   %eax
  0x01cbc80b: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbc813: mov    -0xc(%eax),%eax
  0x01cbc816: cmp    %eax,%edi
  0x01cbc818: je     0x01cbc82f
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbc81e: push   $0x55312af0
  0x01cbc823: call   0x01cbc828
  0x01cbc828: pusha  
  0x01cbc829: call   0x54dedbf0
  0x01cbc82e: hlt    
  0x01cbc82f: pop    %eax
  0x01cbc830: movl   $0x0,0x13c(%edi)
  0x01cbc83a: movl   $0x0,0x144(%edi)
  0x01cbc844: cmpl   $0x0,0x4(%edi)
  0x01cbc84b: jne    0x01cb0340
  0x01cbc851: mov    -0x1c(%ebp),%esi
  0x01cbc854: mov    -0x18(%ebp),%edi
  0x01cbc857: ret    
  0x01cbc858: mov    0x10(%ebx),%eax
  0x01cbc85b: test   %eax,%eax
  0x01cbc85d: je     0x01cbc880
  0x01cbc863: mov    0x8(%eax),%ecx
  0x01cbc866: add    $0x8,%ecx
  0x01cbc869: mov    %ecx,0x8(%eax)
  0x01cbc86c: mov    0xc(%eax),%eax
  0x01cbc86f: and    $0xfffffff8,%eax
  0x01cbc872: add    %eax,%ecx
  0x01cbc874: cmp    0x55627784,%ecx
  0x01cbc87a: jae    0x01cbc959
  0x01cbc880: mov    %eax,-0x1000(%esp)
  0x01cbc887: mov    %eax,-0x2000(%esp)
  0x01cbc88e: mov    %eax,-0x3000(%esp)
  0x01cbc895: mov    %eax,-0x4000(%esp)
  0x01cbc89c: mov    %eax,-0x5000(%esp)
  0x01cbc8a3: mov    %eax,-0x6000(%esp)
  0x01cbc8aa: mov    %eax,-0x7000(%esp)
  0x01cbc8b1: mov    %eax,-0x8000(%esp)
  0x01cbc8b8: mov    %eax,-0x9000(%esp)
  0x01cbc8bf: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbc8c7: mov    -0xc(%eax),%eax
  0x01cbc8ca: movb   $0x0,0x1a1(%eax)
  0x01cbc8d1: mov    0x14(%ebx),%eax
  0x01cbc8d4: test   $0x20,%eax
  0x01cbc8d9: je     0x01cbc8f0
  0x01cbc8df: push   $0x55318bf4
  0x01cbc8e4: call   0x01cbc8e9
  0x01cbc8e9: pusha  
  0x01cbc8ea: call   0x54dedbf0
  0x01cbc8ef: hlt    
  0x01cbc8f0: mov    -0x20(%ebp),%eax
  0x01cbc8f3: cmp    %esp,%eax
  0x01cbc8f5: je     0x01cbc90c
  0x01cbc8fb: push   $0x55318c14
  0x01cbc900: call   0x01cbc905
  0x01cbc905: pusha  
  0x01cbc906: call   0x54dedbf0
  0x01cbc90b: hlt    
  0x01cbc90c: cmpb   $0x0,0x55633e5f
  0x01cbc913: je     0x01cbc94f
  0x01cbc919: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cbc921: mov    -0xc(%ecx),%ecx
  0x01cbc924: mov    -0xc(%ebp),%ebx
  0x01cbc927: push   %ebx
  0x01cbc928: push   %ecx
  0x01cbc929: cmpl   $0x0,-0x8(%ebp)
  0x01cbc930: je     0x01cbc947
  0x01cbc936: push   $0x55310148
  0x01cbc93b: call   0x01cbc940
  0x01cbc940: pusha  
  0x01cbc941: call   0x54dedbf0
  0x01cbc946: hlt    
  0x01cbc947: call   0x552155e0
  0x01cbc94c: add    $0x8,%esp
  0x01cbc94f: movzbl (%esi),%ebx
  0x01cbc952: jmp    *0x55629838(,%ebx,4)
  0x01cbc959: mov    $0x0,%eax
  0x01cbc95e: call   0x01cbc968
  0x01cbc963: jmp    0x01cbc9fc
  0x01cbc968: push   %eax
  0x01cbc969: lea    0x8(%esp),%eax
  0x01cbc96d: cmpl   $0x0,-0x8(%ebp)
  0x01cbc974: je     0x01cbc98b
  0x01cbc97a: push   $0x55310188
  0x01cbc97f: call   0x01cbc984
  0x01cbc984: pusha  
  0x01cbc985: call   0x54dedbf0
  0x01cbc98a: hlt    
  0x01cbc98b: mov    %esi,-0x1c(%ebp)
  0x01cbc98e: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbc996: mov    -0xc(%edi),%edi
  0x01cbc999: push   %edi
  0x01cbc99a: mov    %ebp,0x144(%edi)
  0x01cbc9a0: mov    %eax,0x13c(%edi)
  0x01cbc9a6: call   0x5505ce70
  0x01cbc9ab: add    $0x8,%esp
  0x01cbc9ae: push   %eax
  0x01cbc9af: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbc9b7: mov    -0xc(%eax),%eax
  0x01cbc9ba: cmp    %eax,%edi
  0x01cbc9bc: je     0x01cbc9d3
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbc9c2: push   $0x55312af0
  0x01cbc9c7: call   0x01cbc9cc
  0x01cbc9cc: pusha  
  0x01cbc9cd: call   0x54dedbf0
  0x01cbc9d2: hlt    
  0x01cbc9d3: pop    %eax
  0x01cbc9d4: movl   $0x0,0x13c(%edi)
  0x01cbc9de: movl   $0x0,0x144(%edi)
  0x01cbc9e8: cmpl   $0x0,0x4(%edi)
  0x01cbc9ef: jne    0x01cb0340
  0x01cbc9f5: mov    -0x1c(%ebp),%esi
  0x01cbc9f8: mov    -0x18(%ebp),%edi
  0x01cbc9fb: ret    
  0x01cbc9fc: mov    -0xc(%ebp),%ebx
  0x01cbc9ff: jmp    0x01cbc880
  0x01cbca04: int3   
  0x01cbca05: int3   
  0x01cbca06: int3   
  0x01cbca07: int3   
  0x01cbca08: int3   
  0x01cbca09: int3   
  0x01cbca0a: int3   
  0x01cbca0b: int3   
  0x01cbca0c: int3   
  0x01cbca0d: int3   
  0x01cbca0e: int3   
  0x01cbca0f: int3   

----------------------------------------------------------------------
method entry point (kind = abstract)  [0x01cbca20, 0x01cbcae0]  192 bytes

  0x01cbca20: mov    -0x20(%ebp),%esp
  0x01cbca23: movl   $0x0,-0x8(%ebp)
  0x01cbca2a: mov    -0x1c(%ebp),%esi
  0x01cbca2d: mov    -0x18(%ebp),%edi
  0x01cbca30: call   0x01cbca3a
  0x01cbca35: jmp    0x01cbcacd
  0x01cbca3a: lea    0x4(%esp),%eax
  0x01cbca3e: cmpl   $0x0,-0x8(%ebp)
  0x01cbca45: je     0x01cbca5c
  0x01cbca4b: push   $0x55310188
  0x01cbca50: call   0x01cbca55
  0x01cbca55: pusha  
  0x01cbca56: call   0x54dedbf0
  0x01cbca5b: hlt    
  0x01cbca5c: mov    %esi,-0x1c(%ebp)
  0x01cbca5f: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbca67: mov    -0xc(%edi),%edi
  0x01cbca6a: push   %edi
  0x01cbca6b: mov    %ebp,0x144(%edi)
  0x01cbca71: mov    %eax,0x13c(%edi)
  0x01cbca77: call   0x55059200
  0x01cbca7c: add    $0x4,%esp
  0x01cbca7f: push   %eax
  0x01cbca80: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbca88: mov    -0xc(%eax),%eax
  0x01cbca8b: cmp    %eax,%edi
  0x01cbca8d: je     0x01cbcaa4
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbca93: push   $0x55312af0
  0x01cbca98: call   0x01cbca9d
  0x01cbca9d: pusha  
  0x01cbca9e: call   0x54dedbf0
  0x01cbcaa3: hlt    
  0x01cbcaa4: pop    %eax
  0x01cbcaa5: movl   $0x0,0x13c(%edi)
  0x01cbcaaf: movl   $0x0,0x144(%edi)
  0x01cbcab9: cmpl   $0x0,0x4(%edi)
  0x01cbcac0: jne    0x01cb0340
  0x01cbcac6: mov    -0x1c(%ebp),%esi
  0x01cbcac9: mov    -0x18(%ebp),%edi
  0x01cbcacc: ret    
  0x01cbcacd: push   $0x552fd97c
  0x01cbcad2: call   0x01cbcad7
  0x01cbcad7: pusha  
  0x01cbcad8: call   0x54dedbf0
  0x01cbcadd: hlt    
  0x01cbcade: nop    
  0x01cbcadf: nop    

----------------------------------------------------------------------
method entry point (kind = java_lang_math_sin)  [0x01cbcaf0, 0x01cbcba0]  176 bytes

  0x01cbcaf0: fldl   0x4(%esp)
  0x01cbcaf4: fldl   0x55311630
  0x01cbcafa: fld    %st(1)
  0x01cbcafc: fabs   
  0x01cbcafe: fucomip %st(1),%st
  0x01cbcb00: ffree  %st(0)
  0x01cbcb02: fincstp 
  0x01cbcb04: ja     0x01cbcb11
  0x01cbcb0a: fsin   
  0x01cbcb0c: jmp    0x01cbcb8b
  0x01cbcb11: pusha  
  0x01cbcb12: sub    $0x80,%esp
  0x01cbcb18: movdqu %xmm0,(%esp)
  0x01cbcb1d: movdqu %xmm1,0x10(%esp)
  0x01cbcb23: movdqu %xmm2,0x20(%esp)
  0x01cbcb29: movdqu %xmm3,0x30(%esp)
  0x01cbcb2f: movdqu %xmm4,0x40(%esp)
  0x01cbcb35: movdqu %xmm5,0x50(%esp)
  0x01cbcb3b: movdqu %xmm6,0x60(%esp)
  0x01cbcb41: movdqu %xmm7,0x70(%esp)
  0x01cbcb47: sub    $0x8,%esp
  0x01cbcb4a: fstpl  (%esp)
  0x01cbcb4d: call   0x5521da10
  0x01cbcb52: add    $0x8,%esp
  0x01cbcb55: movdqu (%esp),%xmm0
  0x01cbcb5a: movdqu 0x10(%esp),%xmm1
  0x01cbcb60: movdqu 0x20(%esp),%xmm2
  0x01cbcb66: movdqu 0x30(%esp),%xmm3
  0x01cbcb6c: movdqu 0x40(%esp),%xmm4
  0x01cbcb72: movdqu 0x50(%esp),%xmm5
  0x01cbcb78: movdqu 0x60(%esp),%xmm6
  0x01cbcb7e: movdqu 0x70(%esp),%xmm7
  0x01cbcb84: add    $0x80,%esp
  0x01cbcb8a: popa   
  0x01cbcb8b: sub    $0x8,%esp
  0x01cbcb8e: fstpl  (%esp)
  0x01cbcb91: movsd  (%esp),%xmm0
  0x01cbcb96: add    $0x8,%esp
  0x01cbcb99: pop    %edi
  0x01cbcb9a: mov    %esi,%esp
  0x01cbcb9c: jmp    *%edi
  0x01cbcb9e: nop    
  0x01cbcb9f: nop    

----------------------------------------------------------------------
method entry point (kind = java_lang_math_cos)  [0x01cbcbb0, 0x01cbcc60]  176 bytes

  0x01cbcbb0: fldl   0x4(%esp)
  0x01cbcbb4: fldl   0x55311630
  0x01cbcbba: fld    %st(1)
  0x01cbcbbc: fabs   
  0x01cbcbbe: fucomip %st(1),%st
  0x01cbcbc0: ffree  %st(0)
  0x01cbcbc2: fincstp 
  0x01cbcbc4: ja     0x01cbcbd1
  0x01cbcbca: fcos   
  0x01cbcbcc: jmp    0x01cbcc4b
  0x01cbcbd1: pusha  
  0x01cbcbd2: sub    $0x80,%esp
  0x01cbcbd8: movdqu %xmm0,(%esp)
  0x01cbcbdd: movdqu %xmm1,0x10(%esp)
  0x01cbcbe3: movdqu %xmm2,0x20(%esp)
  0x01cbcbe9: movdqu %xmm3,0x30(%esp)
  0x01cbcbef: movdqu %xmm4,0x40(%esp)
  0x01cbcbf5: movdqu %xmm5,0x50(%esp)
  0x01cbcbfb: movdqu %xmm6,0x60(%esp)
  0x01cbcc01: movdqu %xmm7,0x70(%esp)
  0x01cbcc07: sub    $0x8,%esp
  0x01cbcc0a: fstpl  (%esp)
  0x01cbcc0d: call   0x5521dd30
  0x01cbcc12: add    $0x8,%esp
  0x01cbcc15: movdqu (%esp),%xmm0
  0x01cbcc1a: movdqu 0x10(%esp),%xmm1
  0x01cbcc20: movdqu 0x20(%esp),%xmm2
  0x01cbcc26: movdqu 0x30(%esp),%xmm3
  0x01cbcc2c: movdqu 0x40(%esp),%xmm4
  0x01cbcc32: movdqu 0x50(%esp),%xmm5
  0x01cbcc38: movdqu 0x60(%esp),%xmm6
  0x01cbcc3e: movdqu 0x70(%esp),%xmm7
  0x01cbcc44: add    $0x80,%esp
  0x01cbcc4a: popa   
  0x01cbcc4b: sub    $0x8,%esp
  0x01cbcc4e: fstpl  (%esp)
  0x01cbcc51: movsd  (%esp),%xmm0
  0x01cbcc56: add    $0x8,%esp
  0x01cbcc59: pop    %edi
  0x01cbcc5a: mov    %esi,%esp
  0x01cbcc5c: jmp    *%edi
  0x01cbcc5e: nop    
  0x01cbcc5f: nop    

----------------------------------------------------------------------
method entry point (kind = java_lang_math_tan)  [0x01cbcc70, 0x01cbcd20]  176 bytes

  0x01cbcc70: fldl   0x4(%esp)
  0x01cbcc74: fldl   0x55311630
  0x01cbcc7a: fld    %st(1)
  0x01cbcc7c: fabs   
  0x01cbcc7e: fucomip %st(1),%st
  0x01cbcc80: ffree  %st(0)
  0x01cbcc82: fincstp 
  0x01cbcc84: ja     0x01cbcc93
  0x01cbcc8a: fptan  
  0x01cbcc8c: fstp   %st(0)
  0x01cbcc8e: jmp    0x01cbcd0d
  0x01cbcc93: pusha  
  0x01cbcc94: sub    $0x80,%esp
  0x01cbcc9a: movdqu %xmm0,(%esp)
  0x01cbcc9f: movdqu %xmm1,0x10(%esp)
  0x01cbcca5: movdqu %xmm2,0x20(%esp)
  0x01cbccab: movdqu %xmm3,0x30(%esp)
  0x01cbccb1: movdqu %xmm4,0x40(%esp)
  0x01cbccb7: movdqu %xmm5,0x50(%esp)
  0x01cbccbd: movdqu %xmm6,0x60(%esp)
  0x01cbccc3: movdqu %xmm7,0x70(%esp)
  0x01cbccc9: sub    $0x8,%esp
  0x01cbcccc: fstpl  (%esp)
  0x01cbcccf: call   0x5521e050
  0x01cbccd4: add    $0x8,%esp
  0x01cbccd7: movdqu (%esp),%xmm0
  0x01cbccdc: movdqu 0x10(%esp),%xmm1
  0x01cbcce2: movdqu 0x20(%esp),%xmm2
  0x01cbcce8: movdqu 0x30(%esp),%xmm3
  0x01cbccee: movdqu 0x40(%esp),%xmm4
  0x01cbccf4: movdqu 0x50(%esp),%xmm5
  0x01cbccfa: movdqu 0x60(%esp),%xmm6
  0x01cbcd00: movdqu 0x70(%esp),%xmm7
  0x01cbcd06: add    $0x80,%esp
  0x01cbcd0c: popa   
  0x01cbcd0d: sub    $0x8,%esp
  0x01cbcd10: fstpl  (%esp)
  0x01cbcd13: movsd  (%esp),%xmm0
  0x01cbcd18: add    $0x8,%esp
  0x01cbcd1b: pop    %edi
  0x01cbcd1c: mov    %esi,%esp
  0x01cbcd1e: jmp    *%edi

----------------------------------------------------------------------
method entry point (kind = java_lang_math_abs)  [0x01cbcd30, 0x01cbcd50]  32 bytes

  0x01cbcd30: fldl   0x4(%esp)
  0x01cbcd34: fabs   
  0x01cbcd36: sub    $0x8,%esp
  0x01cbcd39: fstpl  (%esp)
  0x01cbcd3c: movsd  (%esp),%xmm0
  0x01cbcd41: add    $0x8,%esp
  0x01cbcd44: pop    %edi
  0x01cbcd45: mov    %esi,%esp
  0x01cbcd47: jmp    *%edi
  0x01cbcd49: nop    
  0x01cbcd4a: nop    
  0x01cbcd4b: nop    
  0x01cbcd4c: int3   
  0x01cbcd4d: int3   
  0x01cbcd4e: int3   
  0x01cbcd4f: int3   

----------------------------------------------------------------------
method entry point (kind = java_lang_math_sqrt)  [0x01cbcd60, 0x01cbcd80]  32 bytes

  0x01cbcd60: fldl   0x4(%esp)
  0x01cbcd64: fsqrt  
  0x01cbcd66: sub    $0x8,%esp
  0x01cbcd69: fstpl  (%esp)
  0x01cbcd6c: movsd  (%esp),%xmm0
  0x01cbcd71: add    $0x8,%esp
  0x01cbcd74: pop    %edi
  0x01cbcd75: mov    %esi,%esp
  0x01cbcd77: jmp    *%edi
  0x01cbcd79: nop    
  0x01cbcd7a: nop    
  0x01cbcd7b: nop    
  0x01cbcd7c: int3   
  0x01cbcd7d: int3   
  0x01cbcd7e: int3   
  0x01cbcd7f: int3   

----------------------------------------------------------------------
method entry point (kind = java_lang_math_log)  [0x01cbcd90, 0x01cbcdc0]  48 bytes

  0x01cbcd90: fldl   0x4(%esp)
  0x01cbcd94: fldln2 
  0x01cbcd96: fxch   %st(1)
  0x01cbcd98: fyl2x  
  0x01cbcd9a: sub    $0x8,%esp
  0x01cbcd9d: fstpl  (%esp)
  0x01cbcda0: fldl   (%esp)
  0x01cbcda3: add    $0x8,%esp
  0x01cbcda6: sub    $0x8,%esp
  0x01cbcda9: fstpl  (%esp)
  0x01cbcdac: movsd  (%esp),%xmm0
  0x01cbcdb1: add    $0x8,%esp
  0x01cbcdb4: pop    %edi
  0x01cbcdb5: mov    %esi,%esp
  0x01cbcdb7: jmp    *%edi
  0x01cbcdb9: nop    
  0x01cbcdba: nop    
  0x01cbcdbb: nop    
  0x01cbcdbc: int3   
  0x01cbcdbd: int3   
  0x01cbcdbe: int3   
  0x01cbcdbf: int3   

----------------------------------------------------------------------
method entry point (kind = java_lang_math_log10)  [0x01cbcdd0, 0x01cbce00]  48 bytes

  0x01cbcdd0: fldl   0x4(%esp)
  0x01cbcdd4: fldlg2 
  0x01cbcdd6: fxch   %st(1)
  0x01cbcdd8: fyl2x  
  0x01cbcdda: sub    $0x8,%esp
  0x01cbcddd: fstpl  (%esp)
  0x01cbcde0: fldl   (%esp)
  0x01cbcde3: add    $0x8,%esp
  0x01cbcde6: sub    $0x8,%esp
  0x01cbcde9: fstpl  (%esp)
  0x01cbcdec: movsd  (%esp),%xmm0
  0x01cbcdf1: add    $0x8,%esp
  0x01cbcdf4: pop    %edi
  0x01cbcdf5: mov    %esi,%esp
  0x01cbcdf7: jmp    *%edi
  0x01cbcdf9: nop    
  0x01cbcdfa: nop    
  0x01cbcdfb: nop    
  0x01cbcdfc: int3   
  0x01cbcdfd: int3   
  0x01cbcdfe: int3   
  0x01cbcdff: int3   

----------------------------------------------------------------------
method entry point (kind = java_lang_math_exp)  [0x01cbce10, 0x01cbcf30]  288 bytes

  0x01cbce10: fldl   0x4(%esp)
  0x01cbce14: fld    %st(0)
  0x01cbce16: sub    $0x4,%esp
  0x01cbce19: fstcw  (%esp)
  0x01cbce1d: mov    (%esp),%eax
  0x01cbce20: or     $0x300,%eax
  0x01cbce26: push   %eax
  0x01cbce27: fldcw  (%esp)
  0x01cbce2a: pop    %eax
  0x01cbce2b: fldl2e 
  0x01cbce2d: fmulp  %st,%st(1)
  0x01cbce2f: sub    $0x8,%esp
  0x01cbce32: fld    %st(0)
  0x01cbce34: frndint 
  0x01cbce36: fsubr  %st,%st(1)
  0x01cbce38: fistpl (%esp)
  0x01cbce3b: f2xm1  
  0x01cbce3d: fld1   
  0x01cbce3f: faddp  %st,%st(1)
  0x01cbce41: mov    (%esp),%eax
  0x01cbce44: mov    $0xfffff800,%ecx
  0x01cbce49: add    $0x3ff,%eax
  0x01cbce4f: mov    %eax,%edx
  0x01cbce51: shl    $0x14,%eax
  0x01cbce54: add    $0x1,%edx
  0x01cbce57: cmove  %ecx,%eax
  0x01cbce5a: cmp    $0x1,%edx
  0x01cbce5d: cmove  %ecx,%eax
  0x01cbce60: test   %edx,%ecx
  0x01cbce62: cmovne %ecx,%eax
  0x01cbce65: mov    %eax,0x4(%esp)
  0x01cbce69: movl   $0x0,(%esp)
  0x01cbce70: fmull  (%esp)
  0x01cbce73: add    $0x8,%esp
  0x01cbce76: fldcw  (%esp)
  0x01cbce79: add    $0x4,%esp
  0x01cbce7c: fucomi %st(0),%st
  0x01cbce7e: jp     0x01cbce8b
  0x01cbce84: ffree  %st(1)
  0x01cbce86: jmp    0x01cbcf09
  0x01cbce8b: ffree  %st(0)
  0x01cbce8d: fincstp 
  0x01cbce8f: pusha  
  0x01cbce90: sub    $0x80,%esp
  0x01cbce96: movdqu %xmm0,(%esp)
  0x01cbce9b: movdqu %xmm1,0x10(%esp)
  0x01cbcea1: movdqu %xmm2,0x20(%esp)
  0x01cbcea7: movdqu %xmm3,0x30(%esp)
  0x01cbcead: movdqu %xmm4,0x40(%esp)
  0x01cbceb3: movdqu %xmm5,0x50(%esp)
  0x01cbceb9: movdqu %xmm6,0x60(%esp)
  0x01cbcebf: movdqu %xmm7,0x70(%esp)
  0x01cbcec5: sub    $0x8,%esp
  0x01cbcec8: fstpl  (%esp)
  0x01cbcecb: call   0x5521c000
  0x01cbced0: add    $0x8,%esp
  0x01cbced3: movdqu (%esp),%xmm0
  0x01cbced8: movdqu 0x10(%esp),%xmm1
  0x01cbcede: movdqu 0x20(%esp),%xmm2
  0x01cbcee4: movdqu 0x30(%esp),%xmm3
  0x01cbceea: movdqu 0x40(%esp),%xmm4
  0x01cbcef0: movdqu 0x50(%esp),%xmm5
  0x01cbcef6: movdqu 0x60(%esp),%xmm6
  0x01cbcefc: movdqu 0x70(%esp),%xmm7
  0x01cbcf02: add    $0x80,%esp
  0x01cbcf08: popa   
  0x01cbcf09: sub    $0x8,%esp
  0x01cbcf0c: fstpl  (%esp)
  0x01cbcf0f: fldl   (%esp)
  0x01cbcf12: add    $0x8,%esp
  0x01cbcf15: sub    $0x8,%esp
  0x01cbcf18: fstpl  (%esp)
  0x01cbcf1b: movsd  (%esp),%xmm0
  0x01cbcf20: add    $0x8,%esp
  0x01cbcf23: pop    %edi
  0x01cbcf24: mov    %esi,%esp
  0x01cbcf26: jmp    *%edi
  0x01cbcf28: int3   
  0x01cbcf29: int3   
  0x01cbcf2a: int3   
  0x01cbcf2b: int3   
  0x01cbcf2c: int3   
  0x01cbcf2d: int3   
  0x01cbcf2e: int3   
  0x01cbcf2f: int3   

----------------------------------------------------------------------
method entry point (kind = java_lang_math_pow)  [0x01cbcf40, 0x01cbd150]  528 bytes

  0x01cbcf40: fldl   0x4(%esp)
  0x01cbcf44: fldl   0xc(%esp)
  0x01cbcf48: fldz   
  0x01cbcf4a: fucomip %st(1),%st
  0x01cbcf4c: ja     0x01cbcfcb
  0x01cbcf52: fld    %st(1)
  0x01cbcf54: fld    %st(1)
  0x01cbcf56: sub    $0x4,%esp
  0x01cbcf59: fstcw  (%esp)
  0x01cbcf5d: mov    (%esp),%eax
  0x01cbcf60: or     $0x300,%eax
  0x01cbcf66: push   %eax
  0x01cbcf67: fldcw  (%esp)
  0x01cbcf6a: pop    %eax
  0x01cbcf6b: fyl2x  
  0x01cbcf6d: sub    $0x8,%esp
  0x01cbcf70: fld    %st(0)
  0x01cbcf72: frndint 
  0x01cbcf74: fsubr  %st,%st(1)
  0x01cbcf76: fistpl (%esp)
  0x01cbcf79: f2xm1  
  0x01cbcf7b: fld1   
  0x01cbcf7d: faddp  %st,%st(1)
  0x01cbcf7f: mov    (%esp),%eax
  0x01cbcf82: mov    $0xfffff800,%ecx
  0x01cbcf87: add    $0x3ff,%eax
  0x01cbcf8d: mov    %eax,%edx
  0x01cbcf8f: shl    $0x14,%eax
  0x01cbcf92: add    $0x1,%edx
  0x01cbcf95: cmove  %ecx,%eax
  0x01cbcf98: cmp    $0x1,%edx
  0x01cbcf9b: cmove  %ecx,%eax
  0x01cbcf9e: test   %edx,%ecx
  0x01cbcfa0: cmovne %ecx,%eax
  0x01cbcfa3: mov    %eax,0x4(%esp)
  0x01cbcfa7: movl   $0x0,(%esp)
  0x01cbcfae: fmull  (%esp)
  0x01cbcfb1: add    $0x8,%esp
  0x01cbcfb4: fldcw  (%esp)
  0x01cbcfb7: add    $0x4,%esp
  0x01cbcfba: fucomi %st(0),%st
  0x01cbcfbc: jp     0x01cbd0a7
  0x01cbcfc2: ffree  %st(2)
  0x01cbcfc4: ffree  %st(1)
  0x01cbcfc6: jmp    0x01cbd129
  0x01cbcfcb: fld    %st(1)
  0x01cbcfcd: frndint 
  0x01cbcfcf: fucomi %st(2),%st
  0x01cbcfd1: jne    0x01cbd0a7
  0x01cbcfd7: sub    $0x8,%esp
  0x01cbcfda: fld1   
  0x01cbcfdc: fadd   %st(1),%st
  0x01cbcfde: fucomip %st(1),%st
  0x01cbcfe0: fistpll (%esp)
  0x01cbcfe3: jne    0x01cbcff8
  0x01cbcfe9: movl   $0x0,(%esp)
  0x01cbcff0: movl   $0x0,0x4(%esp)
  0x01cbcff8: fld    %st(1)
  0x01cbcffa: fld    %st(1)
  0x01cbcffc: fabs   
  0x01cbcffe: sub    $0x4,%esp
  0x01cbd001: fstcw  (%esp)
  0x01cbd005: mov    (%esp),%eax
  0x01cbd008: or     $0x300,%eax
  0x01cbd00e: push   %eax
  0x01cbd00f: fldcw  (%esp)
  0x01cbd012: pop    %eax
  0x01cbd013: fyl2x  
  0x01cbd015: sub    $0x8,%esp
  0x01cbd018: fld    %st(0)
  0x01cbd01a: frndint 
  0x01cbd01c: fsubr  %st,%st(1)
  0x01cbd01e: fistpl (%esp)
  0x01cbd021: f2xm1  
  0x01cbd023: fld1   
  0x01cbd025: faddp  %st,%st(1)
  0x01cbd027: mov    (%esp),%eax
  0x01cbd02a: mov    $0xfffff800,%ecx
  0x01cbd02f: add    $0x3ff,%eax
  0x01cbd035: mov    %eax,%edx
  0x01cbd037: shl    $0x14,%eax
  0x01cbd03a: add    $0x1,%edx
  0x01cbd03d: cmove  %ecx,%eax
  0x01cbd040: cmp    $0x1,%edx
  0x01cbd043: cmove  %ecx,%eax
  0x01cbd046: test   %edx,%ecx
  0x01cbd048: cmovne %ecx,%eax
  0x01cbd04b: mov    %eax,0x4(%esp)
  0x01cbd04f: movl   $0x0,(%esp)
  0x01cbd056: fmull  (%esp)
  0x01cbd059: add    $0x8,%esp
  0x01cbd05c: fldcw  (%esp)
  0x01cbd05f: add    $0x4,%esp
  0x01cbd062: fucomi %st(0),%st
  0x01cbd064: pop    %eax
  0x01cbd065: pop    %ecx
  0x01cbd066: jp     0x01cbd0a7
  0x01cbd06c: test   %eax,%eax
  0x01cbd06e: jne    0x01cbd091
  0x01cbd074: cmp    $0x80000000,%ecx
  0x01cbd07a: jne    0x01cbd091
  ;; integer indefinite value shouldn't be seen here
  0x01cbd080: push   $0x55313a8c
  0x01cbd085: call   0x01cbd08a
  0x01cbd08a: pusha  
  0x01cbd08b: call   0x54dedbf0
  0x01cbd090: hlt    
  0x01cbd091: ffree  %st(2)
  0x01cbd093: ffree  %st(1)
  0x01cbd095: test   $0x1,%eax
  0x01cbd09a: je     0x01cbd129
  0x01cbd0a0: fchs   
  0x01cbd0a2: jmp    0x01cbd129
  0x01cbd0a7: ffree  %st(0)
  0x01cbd0a9: fincstp 
  0x01cbd0ab: pusha  
  0x01cbd0ac: sub    $0x80,%esp
  0x01cbd0b2: movdqu %xmm0,(%esp)
  0x01cbd0b7: movdqu %xmm1,0x10(%esp)
  0x01cbd0bd: movdqu %xmm2,0x20(%esp)
  0x01cbd0c3: movdqu %xmm3,0x30(%esp)
  0x01cbd0c9: movdqu %xmm4,0x40(%esp)
  0x01cbd0cf: movdqu %xmm5,0x50(%esp)
  0x01cbd0d5: movdqu %xmm6,0x60(%esp)
  0x01cbd0db: movdqu %xmm7,0x70(%esp)
  0x01cbd0e1: sub    $0x10,%esp
  0x01cbd0e4: fstpl  (%esp)
  0x01cbd0e7: fstpl  0x8(%esp)
  0x01cbd0eb: call   0x5521c0f0
  0x01cbd0f0: add    $0x10,%esp
  0x01cbd0f3: movdqu (%esp),%xmm0
  0x01cbd0f8: movdqu 0x10(%esp),%xmm1
  0x01cbd0fe: movdqu 0x20(%esp),%xmm2
  0x01cbd104: movdqu 0x30(%esp),%xmm3
  0x01cbd10a: movdqu 0x40(%esp),%xmm4
  0x01cbd110: movdqu 0x50(%esp),%xmm5
  0x01cbd116: movdqu 0x60(%esp),%xmm6
  0x01cbd11c: movdqu 0x70(%esp),%xmm7
  0x01cbd122: add    $0x80,%esp
  0x01cbd128: popa   
  0x01cbd129: sub    $0x8,%esp
  0x01cbd12c: fstpl  (%esp)
  0x01cbd12f: fldl   (%esp)
  0x01cbd132: add    $0x8,%esp
  0x01cbd135: sub    $0x8,%esp
  0x01cbd138: fstpl  (%esp)
  0x01cbd13b: movsd  (%esp),%xmm0
  0x01cbd140: add    $0x8,%esp
  0x01cbd143: pop    %edi
  0x01cbd144: mov    %esi,%esp
  0x01cbd146: jmp    *%edi
  0x01cbd148: int3   
  0x01cbd149: int3   
  0x01cbd14a: int3   
  0x01cbd14b: int3   
  0x01cbd14c: int3   
  0x01cbd14d: int3   
  0x01cbd14e: int3   
  0x01cbd14f: int3   

----------------------------------------------------------------------
method entry point (kind = java_lang_ref_reference_get)  [0x01cbd160, 0x01cbd4e0]  896 bytes

  0x01cbd160: mov    0x8(%ebx),%edx
  0x01cbd163: movzwl 0x22(%edx),%ecx
  0x01cbd167: movzwl 0x20(%edx),%edx
  0x01cbd16b: sub    %ecx,%edx
  0x01cbd16d: cmp    $0x3f6,%edx
  0x01cbd173: jbe    0x01cbd1f3
  0x01cbd179: push   %esi
  0x01cbd17a: mov    %fs:0x0(,%eiz,1),%esi
  0x01cbd182: mov    -0xc(%esi),%esi
  0x01cbd185: lea    0x28(,%edx,4),%eax
  0x01cbd18c: cmpl   $0x0,0xd4(%esi)
  0x01cbd196: jne    0x01cbd1ad
  0x01cbd19c: push   $0x553191c4
  0x01cbd1a1: call   0x01cbd1a6
  0x01cbd1a6: pusha  
  0x01cbd1a7: call   0x54dedbf0
  0x01cbd1ac: hlt    
  0x01cbd1ad: cmpl   $0x0,0xd8(%esi)
  0x01cbd1b7: jne    0x01cbd1ce
  0x01cbd1bd: push   $0x553191d8
  0x01cbd1c2: call   0x01cbd1c7
  0x01cbd1c7: pusha  
  0x01cbd1c8: call   0x54dedbf0
  0x01cbd1cd: hlt    
  0x01cbd1ce: add    0xd4(%esi),%eax
  0x01cbd1d4: sub    0xd8(%esi),%eax
  0x01cbd1da: add    $0x9000,%eax
  0x01cbd1e0: cmp    %eax,%esp
  0x01cbd1e2: ja     0x01cbd1f2
  0x01cbd1e8: pop    %esi
  0x01cbd1e9: pop    %eax
  0x01cbd1ea: mov    %esi,%esp
  0x01cbd1ec: push   %eax
  0x01cbd1ed: jmp    0x01cb2890
  0x01cbd1f2: pop    %esi
  0x01cbd1f3: pop    %eax
  0x01cbd1f4: lea    -0x4(%esp,%ecx,4),%edi
  0x01cbd1f8: test   %edx,%edx
  0x01cbd1fa: jle    0x01cbd208
  0x01cbd200: push   $0x0
  0x01cbd205: dec    %edx
  0x01cbd206: jg     0x01cbd200
  0x01cbd208: push   %eax
  0x01cbd209: push   %ebp
  0x01cbd20a: mov    %esp,%ebp
  0x01cbd20c: push   %esi
  0x01cbd20d: push   $0x0
  0x01cbd212: mov    0x8(%ebx),%esi
  0x01cbd215: lea    0x28(%esi),%esi
  0x01cbd218: push   %ebx
  0x01cbd219: push   $0x0
  0x01cbd21e: mov    0x8(%ebx),%edx
  0x01cbd221: mov    0x8(%edx),%edx
  0x01cbd224: mov    0xc(%edx),%edx
  0x01cbd227: push   %edx
  0x01cbd228: push   %edi
  0x01cbd229: push   %esi
  0x01cbd22a: push   $0x0
  0x01cbd22f: mov    %esp,(%esp)
  0x01cbd232: mov    0x14(%ebx),%eax
  0x01cbd235: test   $0x100,%eax
  0x01cbd23a: je     0x01cbd251
  0x01cbd240: push   $0x55318b94
  0x01cbd245: call   0x01cbd24a
  0x01cbd24a: pusha  
  0x01cbd24b: call   0x54dedbf0
  0x01cbd250: hlt    
  0x01cbd251: test   $0x400,%eax
  0x01cbd256: je     0x01cbd26d
  0x01cbd25c: push   $0x55318bc4
  0x01cbd261: call   0x01cbd266
  0x01cbd266: pusha  
  0x01cbd267: call   0x54dedbf0
  0x01cbd26c: hlt    
  0x01cbd26d: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbd275: mov    -0xc(%eax),%eax
  0x01cbd278: movb   $0x1,0x1a1(%eax)
  0x01cbd27f: mov    0x10(%ebx),%eax
  0x01cbd282: test   %eax,%eax
  0x01cbd284: jne    0x01cbd333
  0x01cbd28a: call   0x01cbd294
  0x01cbd28f: jmp    0x01cbd328
  0x01cbd294: push   %ebx
  0x01cbd295: lea    0x8(%esp),%eax
  0x01cbd299: cmpl   $0x0,-0x8(%ebp)
  0x01cbd2a0: je     0x01cbd2b7
  0x01cbd2a6: push   $0x55310188
  0x01cbd2ab: call   0x01cbd2b0
  0x01cbd2b0: pusha  
  0x01cbd2b1: call   0x54dedbf0
  0x01cbd2b6: hlt    
  0x01cbd2b7: mov    %esi,-0x1c(%ebp)
  0x01cbd2ba: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbd2c2: mov    -0xc(%edi),%edi
  0x01cbd2c5: push   %edi
  0x01cbd2c6: mov    %ebp,0x144(%edi)
  0x01cbd2cc: mov    %eax,0x13c(%edi)
  0x01cbd2d2: call   0x5505d720
  0x01cbd2d7: add    $0x8,%esp
  0x01cbd2da: push   %eax
  0x01cbd2db: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbd2e3: mov    -0xc(%eax),%eax
  0x01cbd2e6: cmp    %eax,%edi
  0x01cbd2e8: je     0x01cbd2ff
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbd2ee: push   $0x55312af0
  0x01cbd2f3: call   0x01cbd2f8
  0x01cbd2f8: pusha  
  0x01cbd2f9: call   0x54dedbf0
  0x01cbd2fe: hlt    
  0x01cbd2ff: pop    %eax
  0x01cbd300: movl   $0x0,0x13c(%edi)
  0x01cbd30a: movl   $0x0,0x144(%edi)
  0x01cbd314: cmpl   $0x0,0x4(%edi)
  0x01cbd31b: jne    0x01cb0340
  0x01cbd321: mov    -0x1c(%ebp),%esi
  0x01cbd324: mov    -0x18(%ebp),%edi
  0x01cbd327: ret    
  0x01cbd328: mov    0x10(%ebx),%eax
  0x01cbd32b: test   %eax,%eax
  0x01cbd32d: je     0x01cbd350
  0x01cbd333: mov    0x8(%eax),%ecx
  0x01cbd336: add    $0x8,%ecx
  0x01cbd339: mov    %ecx,0x8(%eax)
  0x01cbd33c: mov    0xc(%eax),%eax
  0x01cbd33f: and    $0xfffffff8,%eax
  0x01cbd342: add    %eax,%ecx
  0x01cbd344: cmp    0x55627784,%ecx
  0x01cbd34a: jae    0x01cbd429
  0x01cbd350: mov    %eax,-0x1000(%esp)
  0x01cbd357: mov    %eax,-0x2000(%esp)
  0x01cbd35e: mov    %eax,-0x3000(%esp)
  0x01cbd365: mov    %eax,-0x4000(%esp)
  0x01cbd36c: mov    %eax,-0x5000(%esp)
  0x01cbd373: mov    %eax,-0x6000(%esp)
  0x01cbd37a: mov    %eax,-0x7000(%esp)
  0x01cbd381: mov    %eax,-0x8000(%esp)
  0x01cbd388: mov    %eax,-0x9000(%esp)
  0x01cbd38f: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbd397: mov    -0xc(%eax),%eax
  0x01cbd39a: movb   $0x0,0x1a1(%eax)
  0x01cbd3a1: mov    0x14(%ebx),%eax
  0x01cbd3a4: test   $0x20,%eax
  0x01cbd3a9: je     0x01cbd3c0
  0x01cbd3af: push   $0x55318bf4
  0x01cbd3b4: call   0x01cbd3b9
  0x01cbd3b9: pusha  
  0x01cbd3ba: call   0x54dedbf0
  0x01cbd3bf: hlt    
  0x01cbd3c0: mov    -0x20(%ebp),%eax
  0x01cbd3c3: cmp    %esp,%eax
  0x01cbd3c5: je     0x01cbd3dc
  0x01cbd3cb: push   $0x55318c14
  0x01cbd3d0: call   0x01cbd3d5
  0x01cbd3d5: pusha  
  0x01cbd3d6: call   0x54dedbf0
  0x01cbd3db: hlt    
  0x01cbd3dc: cmpb   $0x0,0x55633e5f
  0x01cbd3e3: je     0x01cbd41f
  0x01cbd3e9: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cbd3f1: mov    -0xc(%ecx),%ecx
  0x01cbd3f4: mov    -0xc(%ebp),%ebx
  0x01cbd3f7: push   %ebx
  0x01cbd3f8: push   %ecx
  0x01cbd3f9: cmpl   $0x0,-0x8(%ebp)
  0x01cbd400: je     0x01cbd417
  0x01cbd406: push   $0x55310148
  0x01cbd40b: call   0x01cbd410
  0x01cbd410: pusha  
  0x01cbd411: call   0x54dedbf0
  0x01cbd416: hlt    
  0x01cbd417: call   0x552155e0
  0x01cbd41c: add    $0x8,%esp
  0x01cbd41f: movzbl (%esi),%ebx
  0x01cbd422: jmp    *0x55629838(,%ebx,4)
  0x01cbd429: mov    $0x0,%eax
  0x01cbd42e: call   0x01cbd438
  0x01cbd433: jmp    0x01cbd4cc
  0x01cbd438: push   %eax
  0x01cbd439: lea    0x8(%esp),%eax
  0x01cbd43d: cmpl   $0x0,-0x8(%ebp)
  0x01cbd444: je     0x01cbd45b
  0x01cbd44a: push   $0x55310188
  0x01cbd44f: call   0x01cbd454
  0x01cbd454: pusha  
  0x01cbd455: call   0x54dedbf0
  0x01cbd45a: hlt    
  0x01cbd45b: mov    %esi,-0x1c(%ebp)
  0x01cbd45e: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbd466: mov    -0xc(%edi),%edi
  0x01cbd469: push   %edi
  0x01cbd46a: mov    %ebp,0x144(%edi)
  0x01cbd470: mov    %eax,0x13c(%edi)
  0x01cbd476: call   0x5505ce70
  0x01cbd47b: add    $0x8,%esp
  0x01cbd47e: push   %eax
  0x01cbd47f: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbd487: mov    -0xc(%eax),%eax
  0x01cbd48a: cmp    %eax,%edi
  0x01cbd48c: je     0x01cbd4a3
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbd492: push   $0x55312af0
  0x01cbd497: call   0x01cbd49c
  0x01cbd49c: pusha  
  0x01cbd49d: call   0x54dedbf0
  0x01cbd4a2: hlt    
  0x01cbd4a3: pop    %eax
  0x01cbd4a4: movl   $0x0,0x13c(%edi)
  0x01cbd4ae: movl   $0x0,0x144(%edi)
  0x01cbd4b8: cmpl   $0x0,0x4(%edi)
  0x01cbd4bf: jne    0x01cb0340
  0x01cbd4c5: mov    -0x1c(%ebp),%esi
  0x01cbd4c8: mov    -0x18(%ebp),%edi
  0x01cbd4cb: ret    
  0x01cbd4cc: mov    -0xc(%ebp),%ebx
  0x01cbd4cf: jmp    0x01cbd350
  0x01cbd4d4: int3   
  0x01cbd4d5: int3   
  0x01cbd4d6: int3   
  0x01cbd4d7: int3   
  0x01cbd4d8: int3   
  0x01cbd4d9: int3   
  0x01cbd4da: int3   
  0x01cbd4db: int3   
  0x01cbd4dc: int3   
  0x01cbd4dd: int3   
  0x01cbd4de: int3   
  0x01cbd4df: int3   

----------------------------------------------------------------------
method entry point (kind = native)  [0x01cbd4f0, 0x01cbdd40]  2128 bytes

  0x01cbd4f0: mov    0x8(%ebx),%ecx
  0x01cbd4f3: movzwl 0x22(%ecx),%ecx
  0x01cbd4f7: pop    %eax
  0x01cbd4f8: lea    -0x4(%esp,%ecx,4),%edi
  0x01cbd4fc: push   $0x0
  0x01cbd501: push   $0x0
  0x01cbd506: push   %eax
  0x01cbd507: push   %ebp
  0x01cbd508: mov    %esp,%ebp
  0x01cbd50a: push   %esi
  0x01cbd50b: push   $0x0
  0x01cbd510: mov    0x8(%ebx),%esi
  0x01cbd513: lea    0x28(%esi),%esi
  0x01cbd516: push   %ebx
  0x01cbd517: push   $0x0
  0x01cbd51c: mov    0x8(%ebx),%edx
  0x01cbd51f: mov    0x8(%edx),%edx
  0x01cbd522: mov    0xc(%edx),%edx
  0x01cbd525: push   %edx
  0x01cbd526: push   %edi
  0x01cbd527: push   $0x0
  0x01cbd52c: push   $0x0
  0x01cbd531: mov    %esp,(%esp)
  0x01cbd534: mov    0x14(%ebx),%eax
  0x01cbd537: test   $0x100,%eax
  0x01cbd53c: jne    0x01cbd553
  0x01cbd542: push   $0x553193c0
  0x01cbd547: call   0x01cbd54c
  0x01cbd54c: pusha  
  0x01cbd54d: call   0x54dedbf0
  0x01cbd552: hlt    
  0x01cbd553: test   $0x400,%eax
  0x01cbd558: je     0x01cbd56f
  0x01cbd55e: push   $0x553193f0
  0x01cbd563: call   0x01cbd568
  0x01cbd568: pusha  
  0x01cbd569: call   0x54dedbf0
  0x01cbd56e: hlt    
  0x01cbd56f: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbd577: mov    -0xc(%eax),%eax
  0x01cbd57a: movb   $0x1,0x1a1(%eax)
  0x01cbd581: mov    0x10(%ebx),%eax
  0x01cbd584: test   %eax,%eax
  0x01cbd586: jne    0x01cbd635
  0x01cbd58c: call   0x01cbd596
  0x01cbd591: jmp    0x01cbd62a
  0x01cbd596: push   %ebx
  0x01cbd597: lea    0x8(%esp),%eax
  0x01cbd59b: cmpl   $0x0,-0x8(%ebp)
  0x01cbd5a2: je     0x01cbd5b9
  0x01cbd5a8: push   $0x55310188
  0x01cbd5ad: call   0x01cbd5b2
  0x01cbd5b2: pusha  
  0x01cbd5b3: call   0x54dedbf0
  0x01cbd5b8: hlt    
  0x01cbd5b9: mov    %esi,-0x1c(%ebp)
  0x01cbd5bc: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbd5c4: mov    -0xc(%edi),%edi
  0x01cbd5c7: push   %edi
  0x01cbd5c8: mov    %ebp,0x144(%edi)
  0x01cbd5ce: mov    %eax,0x13c(%edi)
  0x01cbd5d4: call   0x5505d720
  0x01cbd5d9: add    $0x8,%esp
  0x01cbd5dc: push   %eax
  0x01cbd5dd: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbd5e5: mov    -0xc(%eax),%eax
  0x01cbd5e8: cmp    %eax,%edi
  0x01cbd5ea: je     0x01cbd601
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbd5f0: push   $0x55312af0
  0x01cbd5f5: call   0x01cbd5fa
  0x01cbd5fa: pusha  
  0x01cbd5fb: call   0x54dedbf0
  0x01cbd600: hlt    
  0x01cbd601: pop    %eax
  0x01cbd602: movl   $0x0,0x13c(%edi)
  0x01cbd60c: movl   $0x0,0x144(%edi)
  0x01cbd616: cmpl   $0x0,0x4(%edi)
  0x01cbd61d: jne    0x01cb0340
  0x01cbd623: mov    -0x1c(%ebp),%esi
  0x01cbd626: mov    -0x18(%ebp),%edi
  0x01cbd629: ret    
  0x01cbd62a: mov    0x10(%ebx),%eax
  0x01cbd62d: test   %eax,%eax
  0x01cbd62f: je     0x01cbd652
  0x01cbd635: mov    0x8(%eax),%ecx
  0x01cbd638: add    $0x8,%ecx
  0x01cbd63b: mov    %ecx,0x8(%eax)
  0x01cbd63e: mov    0xc(%eax),%eax
  0x01cbd641: and    $0xfffffff8,%eax
  0x01cbd644: add    %eax,%ecx
  0x01cbd646: cmp    0x55627784,%ecx
  0x01cbd64c: jae    0x01cbdc87
  0x01cbd652: mov    %eax,-0x9000(%esp)
  0x01cbd659: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbd661: mov    -0xc(%eax),%eax
  0x01cbd664: movb   $0x0,0x1a1(%eax)
  0x01cbd66b: mov    0x14(%ebx),%eax
  0x01cbd66e: test   $0x20,%eax
  0x01cbd673: je     0x01cbd68a
  0x01cbd679: push   $0x55319420
  0x01cbd67e: call   0x01cbd683
  0x01cbd683: pusha  
  0x01cbd684: call   0x54dedbf0
  0x01cbd689: hlt    
  0x01cbd68a: mov    -0x20(%ebp),%eax
  0x01cbd68d: cmp    %esp,%eax
  0x01cbd68f: je     0x01cbd6a6
  0x01cbd695: push   $0x55319440
  0x01cbd69a: call   0x01cbd69f
  0x01cbd69f: pusha  
  0x01cbd6a0: call   0x54dedbf0
  0x01cbd6a5: hlt    
  0x01cbd6a6: cmpb   $0x0,0x55633e5f
  0x01cbd6ad: je     0x01cbd6e9
  0x01cbd6b3: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cbd6bb: mov    -0xc(%ecx),%ecx
  0x01cbd6be: mov    -0xc(%ebp),%ebx
  0x01cbd6c1: push   %ebx
  0x01cbd6c2: push   %ecx
  0x01cbd6c3: cmpl   $0x0,-0x8(%ebp)
  0x01cbd6ca: je     0x01cbd6e1
  0x01cbd6d0: push   $0x55310148
  0x01cbd6d5: call   0x01cbd6da
  0x01cbd6da: pusha  
  0x01cbd6db: call   0x54dedbf0
  0x01cbd6e0: hlt    
  0x01cbd6e1: call   0x552155e0
  0x01cbd6e6: add    $0x8,%esp
  0x01cbd6e9: mov    -0xc(%ebp),%ebx
  0x01cbd6ec: mov    0x8(%ebx),%ecx
  0x01cbd6ef: movzwl 0x22(%ecx),%ecx
  0x01cbd6f3: shl    $0x2,%ecx
  0x01cbd6f6: add    $0x8,%ecx
  0x01cbd6f9: sub    %ecx,%esp
  0x01cbd6fb: and    $0xfffffff0,%esp
  0x01cbd6fe: mov    0x3c(%ebx),%ecx
  0x01cbd701: test   %ecx,%ecx
  0x01cbd703: jne    0x01cbd7ad
  0x01cbd709: call   0x01cbd713
  0x01cbd70e: jmp    0x01cbd7a7
  0x01cbd713: push   %ebx
  0x01cbd714: lea    0x8(%esp),%eax
  0x01cbd718: cmpl   $0x0,-0x8(%ebp)
  0x01cbd71f: je     0x01cbd736
  0x01cbd725: push   $0x55310188
  0x01cbd72a: call   0x01cbd72f
  0x01cbd72f: pusha  
  0x01cbd730: call   0x54dedbf0
  0x01cbd735: hlt    
  0x01cbd736: mov    %esi,-0x1c(%ebp)
  0x01cbd739: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbd741: mov    -0xc(%edi),%edi
  0x01cbd744: push   %edi
  0x01cbd745: mov    %ebp,0x144(%edi)
  0x01cbd74b: mov    %eax,0x13c(%edi)
  0x01cbd751: call   0x5505ca90
  0x01cbd756: add    $0x8,%esp
  0x01cbd759: push   %eax
  0x01cbd75a: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbd762: mov    -0xc(%eax),%eax
  0x01cbd765: cmp    %eax,%edi
  0x01cbd767: je     0x01cbd77e
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbd76d: push   $0x55312af0
  0x01cbd772: call   0x01cbd777
  0x01cbd777: pusha  
  0x01cbd778: call   0x54dedbf0
  0x01cbd77d: hlt    
  0x01cbd77e: pop    %eax
  0x01cbd77f: movl   $0x0,0x13c(%edi)
  0x01cbd789: movl   $0x0,0x144(%edi)
  0x01cbd793: cmpl   $0x0,0x4(%edi)
  0x01cbd79a: jne    0x01cb0340
  0x01cbd7a0: mov    -0x1c(%ebp),%esi
  0x01cbd7a3: mov    -0x18(%ebp),%edi
  0x01cbd7a6: ret    
  0x01cbd7a7: mov    -0xc(%ebp),%ebx
  0x01cbd7aa: mov    0x3c(%ebx),%ecx
  0x01cbd7ad: call   *%ecx
  0x01cbd7af: mov    -0xc(%ebp),%ebx
  0x01cbd7b2: mov    %eax,0xc(%ebp)
  0x01cbd7b5: mov    0x14(%ebx),%ecx
  0x01cbd7b8: test   $0x8,%ecx
  0x01cbd7be: je     0x01cbd7da
  0x01cbd7c4: mov    0x8(%ebx),%ecx
  0x01cbd7c7: mov    0x8(%ecx),%ecx
  0x01cbd7ca: mov    0x10(%ecx),%ecx
  0x01cbd7cd: mov    0x3c(%ecx),%ecx
  0x01cbd7d0: mov    %ecx,0x8(%ebp)
  0x01cbd7d3: lea    0x8(%ebp),%ecx
  0x01cbd7d6: mov    %ecx,0x4(%esp)
  0x01cbd7da: mov    0x38(%ebx),%eax
  0x01cbd7dd: cmp    $0x5521a5a0,%eax
  0x01cbd7e3: jne    0x01cbd88d
  0x01cbd7e9: call   0x01cbd7f3
  0x01cbd7ee: jmp    0x01cbd887
  0x01cbd7f3: push   %ebx
  0x01cbd7f4: lea    0x8(%esp),%eax
  0x01cbd7f8: cmpl   $0x0,-0x8(%ebp)
  0x01cbd7ff: je     0x01cbd816
  0x01cbd805: push   $0x55310188
  0x01cbd80a: call   0x01cbd80f
  0x01cbd80f: pusha  
  0x01cbd810: call   0x54dedbf0
  0x01cbd815: hlt    
  0x01cbd816: mov    %esi,-0x1c(%ebp)
  0x01cbd819: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbd821: mov    -0xc(%edi),%edi
  0x01cbd824: push   %edi
  0x01cbd825: mov    %ebp,0x144(%edi)
  0x01cbd82b: mov    %eax,0x13c(%edi)
  0x01cbd831: call   0x5505ca90
  0x01cbd836: add    $0x8,%esp
  0x01cbd839: push   %eax
  0x01cbd83a: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbd842: mov    -0xc(%eax),%eax
  0x01cbd845: cmp    %eax,%edi
  0x01cbd847: je     0x01cbd85e
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbd84d: push   $0x55312af0
  0x01cbd852: call   0x01cbd857
  0x01cbd857: pusha  
  0x01cbd858: call   0x54dedbf0
  0x01cbd85d: hlt    
  0x01cbd85e: pop    %eax
  0x01cbd85f: movl   $0x0,0x13c(%edi)
  0x01cbd869: movl   $0x0,0x144(%edi)
  0x01cbd873: cmpl   $0x0,0x4(%edi)
  0x01cbd87a: jne    0x01cb0340
  0x01cbd880: mov    -0x1c(%ebp),%esi
  0x01cbd883: mov    -0x18(%ebp),%edi
  0x01cbd886: ret    
  0x01cbd887: mov    -0xc(%ebp),%ebx
  0x01cbd88a: mov    0x38(%ebx),%eax
  0x01cbd88d: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbd895: mov    -0xc(%edi),%edi
  0x01cbd898: lea    0x14c(%edi),%ecx
  0x01cbd89e: mov    %ecx,(%esp)
  0x01cbd8a1: mov    %ebp,0x144(%edi)
  0x01cbd8a7: movl   $0x1cbd8a1,0x140(%edi)
  0x01cbd8b1: mov    %esp,0x13c(%edi)
  0x01cbd8b7: mov    0x188(%edi),%ecx
  0x01cbd8bd: cmp    $0x8,%ecx
  0x01cbd8c0: je     0x01cbd8d7
  0x01cbd8c6: push   $0x55318b70
  0x01cbd8cb: call   0x01cbd8d0
  0x01cbd8d0: pusha  
  0x01cbd8d1: call   0x54dedbf0
  0x01cbd8d6: hlt    
  0x01cbd8d7: movl   $0x4,0x188(%edi)
  0x01cbd8e1: call   *%eax
  0x01cbd8e3: cmpl   $0x1cba37a,0xc(%ebp)
  0x01cbd8ea: je     0x01cbd8fd
  0x01cbd8f0: cmpl   $0x1cba38b,0xc(%ebp)
  0x01cbd8f7: jne    0x01cbd903
  0x01cbd8fd: sub    $0x8,%esp
  0x01cbd900: fstpl  (%esp)
  0x01cbd903: push   %edx
  0x01cbd904: push   %eax
  0x01cbd905: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbd90d: mov    -0xc(%edi),%edi
  0x01cbd910: movl   $0x5,0x188(%edi)
  0x01cbd91a: mov    %edi,%ecx
  0x01cbd91c: shr    $0x3,%ecx
  0x01cbd91f: and    $0xffc,%ecx
  0x01cbd925: mov    %ecx,0x150000(,%ecx,1)
  0x01cbd92c: cmpl   $0x0,0x55634734
  0x01cbd936: jne    0x01cbd949
  0x01cbd93c: cmpl   $0x0,0x18(%edi)
  0x01cbd943: je     0x01cbd95d
  0x01cbd949: push   %edi
  0x01cbd94a: call   0x5522f200
  0x01cbd94f: add    $0x4,%esp
  0x01cbd952: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbd95a: mov    -0xc(%edi),%edi
  0x01cbd95d: movl   $0x8,0x188(%edi)
  0x01cbd967: movl   $0x0,0x13c(%edi)
  0x01cbd971: movl   $0x0,0x144(%edi)
  0x01cbd97b: movl   $0x0,0x140(%edi)
  0x01cbd985: mov    0x20(%edi),%ecx
  0x01cbd988: movl   $0x0,0x84(%ecx)
  0x01cbd992: cmpl   $0x1cba396,0xc(%ebp)
  0x01cbd999: jne    0x01cbd9b7
  0x01cbd99f: cmpl   $0x0,(%esp)
  0x01cbd9a6: pop    %eax
  0x01cbd9a7: pop    %edx
  0x01cbd9a8: test   %eax,%eax
  0x01cbd9aa: je     0x01cbd9b2
  0x01cbd9b0: mov    (%eax),%eax
  0x01cbd9b2: mov    %eax,0x8(%ebp)
  0x01cbd9b5: push   %edx
  0x01cbd9b6: push   %eax
  0x01cbd9b7: cmpl   $0x1,0x1a8(%edi)
  0x01cbd9c1: jne    0x01cbd9ce
  0x01cbd9c7: pusha  
  0x01cbd9c8: call   0x552158a0
  0x01cbd9cd: popa   
  0x01cbd9ce: mov    -0xc(%ebp),%ebx
  0x01cbd9d1: mov    0x8(%ebx),%esi
  0x01cbd9d4: lea    0x28(%esi),%esi
  0x01cbd9d7: cmpl   $0x0,0x4(%edi)
  0x01cbd9de: je     0x01cbda92
  0x01cbd9e4: call   0x01cbd9ee
  0x01cbd9e9: jmp    0x01cbda81
  0x01cbd9ee: lea    0x4(%esp),%eax
  0x01cbd9f2: cmpl   $0x0,-0x8(%ebp)
  0x01cbd9f9: je     0x01cbda10
  0x01cbd9ff: push   $0x55310188
  0x01cbda04: call   0x01cbda09
  0x01cbda09: pusha  
  0x01cbda0a: call   0x54dedbf0
  0x01cbda0f: hlt    
  0x01cbda10: mov    %esi,-0x1c(%ebp)
  0x01cbda13: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbda1b: mov    -0xc(%edi),%edi
  0x01cbda1e: push   %edi
  0x01cbda1f: mov    %ebp,0x144(%edi)
  0x01cbda25: mov    %eax,0x13c(%edi)
  0x01cbda2b: call   0x5505a470
  0x01cbda30: add    $0x4,%esp
  0x01cbda33: push   %eax
  0x01cbda34: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbda3c: mov    -0xc(%eax),%eax
  0x01cbda3f: cmp    %eax,%edi
  0x01cbda41: je     0x01cbda58
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbda47: push   $0x55312af0
  0x01cbda4c: call   0x01cbda51
  0x01cbda51: pusha  
  0x01cbda52: call   0x54dedbf0
  0x01cbda57: hlt    
  0x01cbda58: pop    %eax
  0x01cbda59: movl   $0x0,0x13c(%edi)
  0x01cbda63: movl   $0x0,0x144(%edi)
  0x01cbda6d: cmpl   $0x0,0x4(%edi)
  0x01cbda74: jne    0x01cb0340
  0x01cbda7a: mov    -0x1c(%ebp),%esi
  0x01cbda7d: mov    -0x18(%ebp),%edi
  0x01cbda80: ret    
  0x01cbda81: push   $0x552fd97c
  0x01cbda86: call   0x01cbda8b
  0x01cbda8b: pusha  
  0x01cbda8c: call   0x54dedbf0
  0x01cbda91: hlt    
  0x01cbda92: mov    0x14(%ebx),%ecx
  0x01cbda95: test   $0x20,%ecx
  0x01cbda9b: je     0x01cbdc32
  0x01cbdaa1: lea    -0x28(%ebp),%edx
  0x01cbdaa4: mov    0x4(%edx),%ecx
  0x01cbdaa7: test   %ecx,%ecx
  0x01cbdaa9: jne    0x01cbdb5d
  0x01cbdaaf: call   0x01cbdab9
  0x01cbdab4: jmp    0x01cbdb4c
  0x01cbdab9: lea    0x4(%esp),%eax
  0x01cbdabd: cmpl   $0x0,-0x8(%ebp)
  0x01cbdac4: je     0x01cbdadb
  0x01cbdaca: push   $0x55310188
  0x01cbdacf: call   0x01cbdad4
  0x01cbdad4: pusha  
  0x01cbdad5: call   0x54dedbf0
  0x01cbdada: hlt    
  0x01cbdadb: mov    %esi,-0x1c(%ebp)
  0x01cbdade: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbdae6: mov    -0xc(%edi),%edi
  0x01cbdae9: push   %edi
  0x01cbdaea: mov    %ebp,0x144(%edi)
  0x01cbdaf0: mov    %eax,0x13c(%edi)
  0x01cbdaf6: call   0x5505ad80
  0x01cbdafb: add    $0x4,%esp
  0x01cbdafe: push   %eax
  0x01cbdaff: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbdb07: mov    -0xc(%eax),%eax
  0x01cbdb0a: cmp    %eax,%edi
  0x01cbdb0c: je     0x01cbdb23
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbdb12: push   $0x55312af0
  0x01cbdb17: call   0x01cbdb1c
  0x01cbdb1c: pusha  
  0x01cbdb1d: call   0x54dedbf0
  0x01cbdb22: hlt    
  0x01cbdb23: pop    %eax
  0x01cbdb24: movl   $0x0,0x13c(%edi)
  0x01cbdb2e: movl   $0x0,0x144(%edi)
  0x01cbdb38: cmpl   $0x0,0x4(%edi)
  0x01cbdb3f: jne    0x01cb0340
  0x01cbdb45: mov    -0x1c(%ebp),%esi
  0x01cbdb48: mov    -0x18(%ebp),%edi
  0x01cbdb4b: ret    
  0x01cbdb4c: push   $0x552fd97c
  0x01cbdb51: call   0x01cbdb56
  0x01cbdb56: pusha  
  0x01cbdb57: call   0x54dedbf0
  0x01cbdb5c: hlt    
  0x01cbdb5d: mov    %esi,-0x1c(%ebp)
  0x01cbdb60: lea    (%edx),%eax
  0x01cbdb62: mov    0x4(%edx),%ecx
  0x01cbdb65: movl   $0x0,0x4(%edx)
  0x01cbdb6c: mov    (%ecx),%ebx
  0x01cbdb6e: and    $0x7,%ebx
  0x01cbdb71: cmp    $0x5,%ebx
  0x01cbdb74: je     0x01cbdc2f
  0x01cbdb7a: mov    (%eax),%ebx
  0x01cbdb7c: test   %ebx,%ebx
  0x01cbdb7e: je     0x01cbdc2f
  0x01cbdb84: lock cmpxchg %ebx,(%ecx)
  0x01cbdb88: je     0x01cbdc2f
  0x01cbdb8e: mov    %ecx,0x4(%edx)
  0x01cbdb91: call   0x01cbdb9b
  0x01cbdb96: jmp    0x01cbdc2f
  0x01cbdb9b: push   %edx
  0x01cbdb9c: lea    0x8(%esp),%eax
  0x01cbdba0: cmpl   $0x0,-0x8(%ebp)
  0x01cbdba7: je     0x01cbdbbe
  0x01cbdbad: push   $0x55310188
  0x01cbdbb2: call   0x01cbdbb7
  0x01cbdbb7: pusha  
  0x01cbdbb8: call   0x54dedbf0
  0x01cbdbbd: hlt    
  0x01cbdbbe: mov    %esi,-0x1c(%ebp)
  0x01cbdbc1: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbdbc9: mov    -0xc(%edi),%edi
  0x01cbdbcc: push   %edi
  0x01cbdbcd: mov    %ebp,0x144(%edi)
  0x01cbdbd3: mov    %eax,0x13c(%edi)
  0x01cbdbd9: call   0x5505ab90
  0x01cbdbde: add    $0x8,%esp
  0x01cbdbe1: push   %eax
  0x01cbdbe2: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbdbea: mov    -0xc(%eax),%eax
  0x01cbdbed: cmp    %eax,%edi
  0x01cbdbef: je     0x01cbdc06
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbdbf5: push   $0x55312af0
  0x01cbdbfa: call   0x01cbdbff
  0x01cbdbff: pusha  
  0x01cbdc00: call   0x54dedbf0
  0x01cbdc05: hlt    
  0x01cbdc06: pop    %eax
  0x01cbdc07: movl   $0x0,0x13c(%edi)
  0x01cbdc11: movl   $0x0,0x144(%edi)
  0x01cbdc1b: cmpl   $0x0,0x4(%edi)
  0x01cbdc22: jne    0x01cb0340
  0x01cbdc28: mov    -0x1c(%ebp),%esi
  0x01cbdc2b: mov    -0x18(%ebp),%edi
  0x01cbdc2e: ret    
  0x01cbdc2f: mov    -0x1c(%ebp),%esi
  0x01cbdc32: cmpb   $0x0,0x55633e5f
  0x01cbdc39: je     0x01cbdc75
  0x01cbdc3f: mov    %fs:0x0(,%eiz,1),%ebx
  0x01cbdc47: mov    -0xc(%ebx),%ebx
  0x01cbdc4a: mov    -0xc(%ebp),%ecx
  0x01cbdc4d: push   %ecx
  0x01cbdc4e: push   %ebx
  0x01cbdc4f: cmpl   $0x0,-0x8(%ebp)
  0x01cbdc56: je     0x01cbdc6d
  0x01cbdc5c: push   $0x55310148
  0x01cbdc61: call   0x01cbdc66
  0x01cbdc66: pusha  
  0x01cbdc67: call   0x54dedbf0
  0x01cbdc6c: hlt    
  0x01cbdc6d: call   0x55215710
  0x01cbdc72: add    $0x8,%esp
  0x01cbdc75: pop    %eax
  0x01cbdc76: pop    %edx
  0x01cbdc77: mov    0xc(%ebp),%ecx
  0x01cbdc7a: call   *%ecx
  0x01cbdc7c: mov    -0x4(%ebp),%ecx
  0x01cbdc7f: mov    %ebp,%esp
  0x01cbdc81: pop    %ebp
  0x01cbdc82: pop    %edi
  0x01cbdc83: mov    %ecx,%esp
  0x01cbdc85: jmp    *%edi
  0x01cbdc87: mov    $0x0,%eax
  0x01cbdc8c: call   0x01cbdc96
  0x01cbdc91: jmp    0x01cbdd2a
  0x01cbdc96: push   %eax
  0x01cbdc97: lea    0x8(%esp),%eax
  0x01cbdc9b: cmpl   $0x0,-0x8(%ebp)
  0x01cbdca2: je     0x01cbdcb9
  0x01cbdca8: push   $0x55310188
  0x01cbdcad: call   0x01cbdcb2
  0x01cbdcb2: pusha  
  0x01cbdcb3: call   0x54dedbf0
  0x01cbdcb8: hlt    
  0x01cbdcb9: mov    %esi,-0x1c(%ebp)
  0x01cbdcbc: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbdcc4: mov    -0xc(%edi),%edi
  0x01cbdcc7: push   %edi
  0x01cbdcc8: mov    %ebp,0x144(%edi)
  0x01cbdcce: mov    %eax,0x13c(%edi)
  0x01cbdcd4: call   0x5505ce70
  0x01cbdcd9: add    $0x8,%esp
  0x01cbdcdc: push   %eax
  0x01cbdcdd: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbdce5: mov    -0xc(%eax),%eax
  0x01cbdce8: cmp    %eax,%edi
  0x01cbdcea: je     0x01cbdd01
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbdcf0: push   $0x55312af0
  0x01cbdcf5: call   0x01cbdcfa
  0x01cbdcfa: pusha  
  0x01cbdcfb: call   0x54dedbf0
  0x01cbdd00: hlt    
  0x01cbdd01: pop    %eax
  0x01cbdd02: movl   $0x0,0x13c(%edi)
  0x01cbdd0c: movl   $0x0,0x144(%edi)
  0x01cbdd16: cmpl   $0x0,0x4(%edi)
  0x01cbdd1d: jne    0x01cb0340
  0x01cbdd23: mov    -0x1c(%ebp),%esi
  0x01cbdd26: mov    -0x18(%ebp),%edi
  0x01cbdd29: ret    
  0x01cbdd2a: mov    -0xc(%ebp),%ebx
  0x01cbdd2d: jmp    0x01cbd652
  0x01cbdd32: nop    
  0x01cbdd33: nop    
  0x01cbdd34: int3   
  0x01cbdd35: int3   
  0x01cbdd36: int3   
  0x01cbdd37: int3   
  0x01cbdd38: int3   
  0x01cbdd39: int3   
  0x01cbdd3a: int3   
  0x01cbdd3b: int3   
  0x01cbdd3c: int3   
  0x01cbdd3d: int3   
  0x01cbdd3e: int3   
  0x01cbdd3f: int3   

----------------------------------------------------------------------
method entry point (kind = native_synchronized)  [0x01cbdd50, 0x01cbe720]  2512 bytes

  0x01cbdd50: mov    0x8(%ebx),%ecx
  0x01cbdd53: movzwl 0x22(%ecx),%ecx
  0x01cbdd57: pop    %eax
  0x01cbdd58: lea    -0x4(%esp,%ecx,4),%edi
  0x01cbdd5c: push   $0x0
  0x01cbdd61: push   $0x0
  0x01cbdd66: push   %eax
  0x01cbdd67: push   %ebp
  0x01cbdd68: mov    %esp,%ebp
  0x01cbdd6a: push   %esi
  0x01cbdd6b: push   $0x0
  0x01cbdd70: mov    0x8(%ebx),%esi
  0x01cbdd73: lea    0x28(%esi),%esi
  0x01cbdd76: push   %ebx
  0x01cbdd77: push   $0x0
  0x01cbdd7c: mov    0x8(%ebx),%edx
  0x01cbdd7f: mov    0x8(%edx),%edx
  0x01cbdd82: mov    0xc(%edx),%edx
  0x01cbdd85: push   %edx
  0x01cbdd86: push   %edi
  0x01cbdd87: push   $0x0
  0x01cbdd8c: push   $0x0
  0x01cbdd91: mov    %esp,(%esp)
  0x01cbdd94: mov    0x14(%ebx),%eax
  0x01cbdd97: test   $0x100,%eax
  0x01cbdd9c: jne    0x01cbddb3
  0x01cbdda2: push   $0x553193c0
  0x01cbdda7: call   0x01cbddac
  0x01cbddac: pusha  
  0x01cbddad: call   0x54dedbf0
  0x01cbddb2: hlt    
  0x01cbddb3: test   $0x400,%eax
  0x01cbddb8: je     0x01cbddcf
  0x01cbddbe: push   $0x553193f0
  0x01cbddc3: call   0x01cbddc8
  0x01cbddc8: pusha  
  0x01cbddc9: call   0x54dedbf0
  0x01cbddce: hlt    
  0x01cbddcf: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbddd7: mov    -0xc(%eax),%eax
  0x01cbddda: movb   $0x1,0x1a1(%eax)
  0x01cbdde1: mov    0x10(%ebx),%eax
  0x01cbdde4: test   %eax,%eax
  0x01cbdde6: jne    0x01cbde95
  0x01cbddec: call   0x01cbddf6
  0x01cbddf1: jmp    0x01cbde8a
  0x01cbddf6: push   %ebx
  0x01cbddf7: lea    0x8(%esp),%eax
  0x01cbddfb: cmpl   $0x0,-0x8(%ebp)
  0x01cbde02: je     0x01cbde19
  0x01cbde08: push   $0x55310188
  0x01cbde0d: call   0x01cbde12
  0x01cbde12: pusha  
  0x01cbde13: call   0x54dedbf0
  0x01cbde18: hlt    
  0x01cbde19: mov    %esi,-0x1c(%ebp)
  0x01cbde1c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbde24: mov    -0xc(%edi),%edi
  0x01cbde27: push   %edi
  0x01cbde28: mov    %ebp,0x144(%edi)
  0x01cbde2e: mov    %eax,0x13c(%edi)
  0x01cbde34: call   0x5505d720
  0x01cbde39: add    $0x8,%esp
  0x01cbde3c: push   %eax
  0x01cbde3d: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbde45: mov    -0xc(%eax),%eax
  0x01cbde48: cmp    %eax,%edi
  0x01cbde4a: je     0x01cbde61
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbde50: push   $0x55312af0
  0x01cbde55: call   0x01cbde5a
  0x01cbde5a: pusha  
  0x01cbde5b: call   0x54dedbf0
  0x01cbde60: hlt    
  0x01cbde61: pop    %eax
  0x01cbde62: movl   $0x0,0x13c(%edi)
  0x01cbde6c: movl   $0x0,0x144(%edi)
  0x01cbde76: cmpl   $0x0,0x4(%edi)
  0x01cbde7d: jne    0x01cb0340
  0x01cbde83: mov    -0x1c(%ebp),%esi
  0x01cbde86: mov    -0x18(%ebp),%edi
  0x01cbde89: ret    
  0x01cbde8a: mov    0x10(%ebx),%eax
  0x01cbde8d: test   %eax,%eax
  0x01cbde8f: je     0x01cbdeb2
  0x01cbde95: mov    0x8(%eax),%ecx
  0x01cbde98: add    $0x8,%ecx
  0x01cbde9b: mov    %ecx,0x8(%eax)
  0x01cbde9e: mov    0xc(%eax),%eax
  0x01cbdea1: and    $0xfffffff8,%eax
  0x01cbdea4: add    %eax,%ecx
  0x01cbdea6: cmp    0x55627784,%ecx
  0x01cbdeac: jae    0x01cbe673
  0x01cbdeb2: mov    %eax,-0x9000(%esp)
  0x01cbdeb9: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbdec1: mov    -0xc(%eax),%eax
  0x01cbdec4: movb   $0x0,0x1a1(%eax)
  0x01cbdecb: mov    0x14(%ebx),%eax
  0x01cbdece: test   $0x20,%eax
  0x01cbded3: jne    0x01cbdeea
  0x01cbded9: push   $0x55319284
  0x01cbdede: call   0x01cbdee3
  0x01cbdee3: pusha  
  0x01cbdee4: call   0x54dedbf0
  0x01cbdee9: hlt    
  0x01cbdeea: mov    0x14(%ebx),%eax
  0x01cbdeed: test   $0x8,%eax
  0x01cbdef2: mov    (%edi),%eax
  0x01cbdef4: je     0x01cbdf06
  0x01cbdefa: mov    0x8(%ebx),%eax
  0x01cbdefd: mov    0x8(%eax),%eax
  0x01cbdf00: mov    0x10(%eax),%eax
  0x01cbdf03: mov    0x3c(%eax),%eax
  0x01cbdf06: sub    $0x8,%esp
  0x01cbdf09: mov    %esp,-0x20(%ebp)
  0x01cbdf0c: mov    %eax,0x4(%esp)
  0x01cbdf10: mov    %esp,%edx
  0x01cbdf12: mov    0x4(%edx),%ecx
  0x01cbdf15: mov    (%ecx),%eax
  0x01cbdf17: push   %edx
  0x01cbdf18: mov    %eax,%edx
  0x01cbdf1a: and    $0x7,%edx
  0x01cbdf1d: cmp    $0x5,%edx
  0x01cbdf20: pop    %edx
  0x01cbdf21: jne    0x01cbdfb5
  0x01cbdf27: mov    %eax,(%edx)
  0x01cbdf29: push   %edx
  0x01cbdf2a: mov    %fs:0x0(,%eiz,1),%edx
  0x01cbdf32: mov    -0xc(%edx),%edx
  0x01cbdf35: xor    %edx,%eax
  0x01cbdf37: mov    0x4(%ecx),%edx
  0x01cbdf3a: xor    0x68(%edx),%eax
  0x01cbdf3d: and    $0xffffff87,%eax
  0x01cbdf40: pop    %edx
  0x01cbdf41: je     0x01cbe076
  0x01cbdf47: test   $0x7,%eax
  0x01cbdf4c: jne    0x01cbdfa7
  0x01cbdf52: test   $0x180,%eax
  0x01cbdf57: jne    0x01cbdf83
  0x01cbdf5d: mov    (%edx),%eax
  0x01cbdf5f: and    $0x1ff,%eax
  0x01cbdf65: push   %edx
  0x01cbdf66: mov    %fs:0x0(,%eiz,1),%edx
  0x01cbdf6e: mov    -0xc(%edx),%edx
  0x01cbdf71: or     %eax,%edx
  0x01cbdf73: lock cmpxchg %edx,(%ecx)
  0x01cbdf77: pop    %edx
  0x01cbdf78: jne    0x01cbdfd8
  0x01cbdf7e: jmp    0x01cbe076
  0x01cbdf83: push   %edx
  0x01cbdf84: mov    %fs:0x0(,%eiz,1),%edx
  0x01cbdf8c: mov    -0xc(%edx),%edx
  0x01cbdf8f: mov    0x4(%ecx),%eax
  0x01cbdf92: or     0x68(%eax),%edx
  0x01cbdf95: mov    (%edx),%eax
  0x01cbdf97: lock cmpxchg %edx,(%ecx)
  0x01cbdf9b: pop    %edx
  0x01cbdf9c: jne    0x01cbdfd8
  0x01cbdfa2: jmp    0x01cbe076
  0x01cbdfa7: mov    (%edx),%eax
  0x01cbdfa9: push   %edx
  0x01cbdfaa: mov    0x4(%ecx),%edx
  0x01cbdfad: mov    0x68(%edx),%edx
  0x01cbdfb0: lock cmpxchg %edx,(%ecx)
  0x01cbdfb4: pop    %edx
  0x01cbdfb5: mov    $0x1,%eax
  0x01cbdfba: or     (%ecx),%eax
  0x01cbdfbc: mov    %eax,(%edx)
  0x01cbdfbe: lock cmpxchg %edx,(%ecx)
  0x01cbdfc2: je     0x01cbe076
  0x01cbdfc8: sub    %esp,%eax
  0x01cbdfca: and    $0xfffff003,%eax
  0x01cbdfd0: mov    %eax,(%edx)
  0x01cbdfd2: je     0x01cbe076
  0x01cbdfd8: call   0x01cbdfe2
  0x01cbdfdd: jmp    0x01cbe076
  0x01cbdfe2: push   %edx
  0x01cbdfe3: lea    0x8(%esp),%eax
  0x01cbdfe7: cmpl   $0x0,-0x8(%ebp)
  0x01cbdfee: je     0x01cbe005
  0x01cbdff4: push   $0x55310188
  0x01cbdff9: call   0x01cbdffe
  0x01cbdffe: pusha  
  0x01cbdfff: call   0x54dedbf0
  0x01cbe004: hlt    
  0x01cbe005: mov    %esi,-0x1c(%ebp)
  0x01cbe008: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbe010: mov    -0xc(%edi),%edi
  0x01cbe013: push   %edi
  0x01cbe014: mov    %ebp,0x144(%edi)
  0x01cbe01a: mov    %eax,0x13c(%edi)
  0x01cbe020: call   0x5505a930
  0x01cbe025: add    $0x8,%esp
  0x01cbe028: push   %eax
  0x01cbe029: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbe031: mov    -0xc(%eax),%eax
  0x01cbe034: cmp    %eax,%edi
  0x01cbe036: je     0x01cbe04d
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbe03c: push   $0x55312af0
  0x01cbe041: call   0x01cbe046
  0x01cbe046: pusha  
  0x01cbe047: call   0x54dedbf0
  0x01cbe04c: hlt    
  0x01cbe04d: pop    %eax
  0x01cbe04e: movl   $0x0,0x13c(%edi)
  0x01cbe058: movl   $0x0,0x144(%edi)
  0x01cbe062: cmpl   $0x0,0x4(%edi)
  0x01cbe069: jne    0x01cb0340
  0x01cbe06f: mov    -0x1c(%ebp),%esi
  0x01cbe072: mov    -0x18(%ebp),%edi
  0x01cbe075: ret    
  0x01cbe076: mov    -0x20(%ebp),%eax
  0x01cbe079: cmp    %esp,%eax
  0x01cbe07b: je     0x01cbe092
  0x01cbe081: push   $0x55319440
  0x01cbe086: call   0x01cbe08b
  0x01cbe08b: pusha  
  0x01cbe08c: call   0x54dedbf0
  0x01cbe091: hlt    
  0x01cbe092: cmpb   $0x0,0x55633e5f
  0x01cbe099: je     0x01cbe0d5
  0x01cbe09f: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cbe0a7: mov    -0xc(%ecx),%ecx
  0x01cbe0aa: mov    -0xc(%ebp),%ebx
  0x01cbe0ad: push   %ebx
  0x01cbe0ae: push   %ecx
  0x01cbe0af: cmpl   $0x0,-0x8(%ebp)
  0x01cbe0b6: je     0x01cbe0cd
  0x01cbe0bc: push   $0x55310148
  0x01cbe0c1: call   0x01cbe0c6
  0x01cbe0c6: pusha  
  0x01cbe0c7: call   0x54dedbf0
  0x01cbe0cc: hlt    
  0x01cbe0cd: call   0x552155e0
  0x01cbe0d2: add    $0x8,%esp
  0x01cbe0d5: mov    -0xc(%ebp),%ebx
  0x01cbe0d8: mov    0x8(%ebx),%ecx
  0x01cbe0db: movzwl 0x22(%ecx),%ecx
  0x01cbe0df: shl    $0x2,%ecx
  0x01cbe0e2: add    $0x8,%ecx
  0x01cbe0e5: sub    %ecx,%esp
  0x01cbe0e7: and    $0xfffffff0,%esp
  0x01cbe0ea: mov    0x3c(%ebx),%ecx
  0x01cbe0ed: test   %ecx,%ecx
  0x01cbe0ef: jne    0x01cbe199
  0x01cbe0f5: call   0x01cbe0ff
  0x01cbe0fa: jmp    0x01cbe193
  0x01cbe0ff: push   %ebx
  0x01cbe100: lea    0x8(%esp),%eax
  0x01cbe104: cmpl   $0x0,-0x8(%ebp)
  0x01cbe10b: je     0x01cbe122
  0x01cbe111: push   $0x55310188
  0x01cbe116: call   0x01cbe11b
  0x01cbe11b: pusha  
  0x01cbe11c: call   0x54dedbf0
  0x01cbe121: hlt    
  0x01cbe122: mov    %esi,-0x1c(%ebp)
  0x01cbe125: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbe12d: mov    -0xc(%edi),%edi
  0x01cbe130: push   %edi
  0x01cbe131: mov    %ebp,0x144(%edi)
  0x01cbe137: mov    %eax,0x13c(%edi)
  0x01cbe13d: call   0x5505ca90
  0x01cbe142: add    $0x8,%esp
  0x01cbe145: push   %eax
  0x01cbe146: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbe14e: mov    -0xc(%eax),%eax
  0x01cbe151: cmp    %eax,%edi
  0x01cbe153: je     0x01cbe16a
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbe159: push   $0x55312af0
  0x01cbe15e: call   0x01cbe163
  0x01cbe163: pusha  
  0x01cbe164: call   0x54dedbf0
  0x01cbe169: hlt    
  0x01cbe16a: pop    %eax
  0x01cbe16b: movl   $0x0,0x13c(%edi)
  0x01cbe175: movl   $0x0,0x144(%edi)
  0x01cbe17f: cmpl   $0x0,0x4(%edi)
  0x01cbe186: jne    0x01cb0340
  0x01cbe18c: mov    -0x1c(%ebp),%esi
  0x01cbe18f: mov    -0x18(%ebp),%edi
  0x01cbe192: ret    
  0x01cbe193: mov    -0xc(%ebp),%ebx
  0x01cbe196: mov    0x3c(%ebx),%ecx
  0x01cbe199: call   *%ecx
  0x01cbe19b: mov    -0xc(%ebp),%ebx
  0x01cbe19e: mov    %eax,0xc(%ebp)
  0x01cbe1a1: mov    0x14(%ebx),%ecx
  0x01cbe1a4: test   $0x8,%ecx
  0x01cbe1aa: je     0x01cbe1c6
  0x01cbe1b0: mov    0x8(%ebx),%ecx
  0x01cbe1b3: mov    0x8(%ecx),%ecx
  0x01cbe1b6: mov    0x10(%ecx),%ecx
  0x01cbe1b9: mov    0x3c(%ecx),%ecx
  0x01cbe1bc: mov    %ecx,0x8(%ebp)
  0x01cbe1bf: lea    0x8(%ebp),%ecx
  0x01cbe1c2: mov    %ecx,0x4(%esp)
  0x01cbe1c6: mov    0x38(%ebx),%eax
  0x01cbe1c9: cmp    $0x5521a5a0,%eax
  0x01cbe1cf: jne    0x01cbe279
  0x01cbe1d5: call   0x01cbe1df
  0x01cbe1da: jmp    0x01cbe273
  0x01cbe1df: push   %ebx
  0x01cbe1e0: lea    0x8(%esp),%eax
  0x01cbe1e4: cmpl   $0x0,-0x8(%ebp)
  0x01cbe1eb: je     0x01cbe202
  0x01cbe1f1: push   $0x55310188
  0x01cbe1f6: call   0x01cbe1fb
  0x01cbe1fb: pusha  
  0x01cbe1fc: call   0x54dedbf0
  0x01cbe201: hlt    
  0x01cbe202: mov    %esi,-0x1c(%ebp)
  0x01cbe205: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbe20d: mov    -0xc(%edi),%edi
  0x01cbe210: push   %edi
  0x01cbe211: mov    %ebp,0x144(%edi)
  0x01cbe217: mov    %eax,0x13c(%edi)
  0x01cbe21d: call   0x5505ca90
  0x01cbe222: add    $0x8,%esp
  0x01cbe225: push   %eax
  0x01cbe226: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbe22e: mov    -0xc(%eax),%eax
  0x01cbe231: cmp    %eax,%edi
  0x01cbe233: je     0x01cbe24a
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbe239: push   $0x55312af0
  0x01cbe23e: call   0x01cbe243
  0x01cbe243: pusha  
  0x01cbe244: call   0x54dedbf0
  0x01cbe249: hlt    
  0x01cbe24a: pop    %eax
  0x01cbe24b: movl   $0x0,0x13c(%edi)
  0x01cbe255: movl   $0x0,0x144(%edi)
  0x01cbe25f: cmpl   $0x0,0x4(%edi)
  0x01cbe266: jne    0x01cb0340
  0x01cbe26c: mov    -0x1c(%ebp),%esi
  0x01cbe26f: mov    -0x18(%ebp),%edi
  0x01cbe272: ret    
  0x01cbe273: mov    -0xc(%ebp),%ebx
  0x01cbe276: mov    0x38(%ebx),%eax
  0x01cbe279: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbe281: mov    -0xc(%edi),%edi
  0x01cbe284: lea    0x14c(%edi),%ecx
  0x01cbe28a: mov    %ecx,(%esp)
  0x01cbe28d: mov    %ebp,0x144(%edi)
  0x01cbe293: movl   $0x1cbe28d,0x140(%edi)
  0x01cbe29d: mov    %esp,0x13c(%edi)
  0x01cbe2a3: mov    0x188(%edi),%ecx
  0x01cbe2a9: cmp    $0x8,%ecx
  0x01cbe2ac: je     0x01cbe2c3
  0x01cbe2b2: push   $0x55318b70
  0x01cbe2b7: call   0x01cbe2bc
  0x01cbe2bc: pusha  
  0x01cbe2bd: call   0x54dedbf0
  0x01cbe2c2: hlt    
  0x01cbe2c3: movl   $0x4,0x188(%edi)
  0x01cbe2cd: call   *%eax
  0x01cbe2cf: cmpl   $0x1cba37a,0xc(%ebp)
  0x01cbe2d6: je     0x01cbe2e9
  0x01cbe2dc: cmpl   $0x1cba38b,0xc(%ebp)
  0x01cbe2e3: jne    0x01cbe2ef
  0x01cbe2e9: sub    $0x8,%esp
  0x01cbe2ec: fstpl  (%esp)
  0x01cbe2ef: push   %edx
  0x01cbe2f0: push   %eax
  0x01cbe2f1: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbe2f9: mov    -0xc(%edi),%edi
  0x01cbe2fc: movl   $0x5,0x188(%edi)
  0x01cbe306: mov    %edi,%ecx
  0x01cbe308: shr    $0x3,%ecx
  0x01cbe30b: and    $0xffc,%ecx
  0x01cbe311: mov    %ecx,0x150000(,%ecx,1)
  0x01cbe318: cmpl   $0x0,0x55634734
  0x01cbe322: jne    0x01cbe335
  0x01cbe328: cmpl   $0x0,0x18(%edi)
  0x01cbe32f: je     0x01cbe349
  0x01cbe335: push   %edi
  0x01cbe336: call   0x5522f200
  0x01cbe33b: add    $0x4,%esp
  0x01cbe33e: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbe346: mov    -0xc(%edi),%edi
  0x01cbe349: movl   $0x8,0x188(%edi)
  0x01cbe353: movl   $0x0,0x13c(%edi)
  0x01cbe35d: movl   $0x0,0x144(%edi)
  0x01cbe367: movl   $0x0,0x140(%edi)
  0x01cbe371: mov    0x20(%edi),%ecx
  0x01cbe374: movl   $0x0,0x84(%ecx)
  0x01cbe37e: cmpl   $0x1cba396,0xc(%ebp)
  0x01cbe385: jne    0x01cbe3a3
  0x01cbe38b: cmpl   $0x0,(%esp)
  0x01cbe392: pop    %eax
  0x01cbe393: pop    %edx
  0x01cbe394: test   %eax,%eax
  0x01cbe396: je     0x01cbe39e
  0x01cbe39c: mov    (%eax),%eax
  0x01cbe39e: mov    %eax,0x8(%ebp)
  0x01cbe3a1: push   %edx
  0x01cbe3a2: push   %eax
  0x01cbe3a3: cmpl   $0x1,0x1a8(%edi)
  0x01cbe3ad: jne    0x01cbe3ba
  0x01cbe3b3: pusha  
  0x01cbe3b4: call   0x552158a0
  0x01cbe3b9: popa   
  0x01cbe3ba: mov    -0xc(%ebp),%ebx
  0x01cbe3bd: mov    0x8(%ebx),%esi
  0x01cbe3c0: lea    0x28(%esi),%esi
  0x01cbe3c3: cmpl   $0x0,0x4(%edi)
  0x01cbe3ca: je     0x01cbe47e
  0x01cbe3d0: call   0x01cbe3da
  0x01cbe3d5: jmp    0x01cbe46d
  0x01cbe3da: lea    0x4(%esp),%eax
  0x01cbe3de: cmpl   $0x0,-0x8(%ebp)
  0x01cbe3e5: je     0x01cbe3fc
  0x01cbe3eb: push   $0x55310188
  0x01cbe3f0: call   0x01cbe3f5
  0x01cbe3f5: pusha  
  0x01cbe3f6: call   0x54dedbf0
  0x01cbe3fb: hlt    
  0x01cbe3fc: mov    %esi,-0x1c(%ebp)
  0x01cbe3ff: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbe407: mov    -0xc(%edi),%edi
  0x01cbe40a: push   %edi
  0x01cbe40b: mov    %ebp,0x144(%edi)
  0x01cbe411: mov    %eax,0x13c(%edi)
  0x01cbe417: call   0x5505a470
  0x01cbe41c: add    $0x4,%esp
  0x01cbe41f: push   %eax
  0x01cbe420: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbe428: mov    -0xc(%eax),%eax
  0x01cbe42b: cmp    %eax,%edi
  0x01cbe42d: je     0x01cbe444
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbe433: push   $0x55312af0
  0x01cbe438: call   0x01cbe43d
  0x01cbe43d: pusha  
  0x01cbe43e: call   0x54dedbf0
  0x01cbe443: hlt    
  0x01cbe444: pop    %eax
  0x01cbe445: movl   $0x0,0x13c(%edi)
  0x01cbe44f: movl   $0x0,0x144(%edi)
  0x01cbe459: cmpl   $0x0,0x4(%edi)
  0x01cbe460: jne    0x01cb0340
  0x01cbe466: mov    -0x1c(%ebp),%esi
  0x01cbe469: mov    -0x18(%ebp),%edi
  0x01cbe46c: ret    
  0x01cbe46d: push   $0x552fd97c
  0x01cbe472: call   0x01cbe477
  0x01cbe477: pusha  
  0x01cbe478: call   0x54dedbf0
  0x01cbe47d: hlt    
  0x01cbe47e: mov    0x14(%ebx),%ecx
  0x01cbe481: test   $0x20,%ecx
  0x01cbe487: je     0x01cbe61e
  0x01cbe48d: lea    -0x28(%ebp),%edx
  0x01cbe490: mov    0x4(%edx),%ecx
  0x01cbe493: test   %ecx,%ecx
  0x01cbe495: jne    0x01cbe549
  0x01cbe49b: call   0x01cbe4a5
  0x01cbe4a0: jmp    0x01cbe538
  0x01cbe4a5: lea    0x4(%esp),%eax
  0x01cbe4a9: cmpl   $0x0,-0x8(%ebp)
  0x01cbe4b0: je     0x01cbe4c7
  0x01cbe4b6: push   $0x55310188
  0x01cbe4bb: call   0x01cbe4c0
  0x01cbe4c0: pusha  
  0x01cbe4c1: call   0x54dedbf0
  0x01cbe4c6: hlt    
  0x01cbe4c7: mov    %esi,-0x1c(%ebp)
  0x01cbe4ca: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbe4d2: mov    -0xc(%edi),%edi
  0x01cbe4d5: push   %edi
  0x01cbe4d6: mov    %ebp,0x144(%edi)
  0x01cbe4dc: mov    %eax,0x13c(%edi)
  0x01cbe4e2: call   0x5505ad80
  0x01cbe4e7: add    $0x4,%esp
  0x01cbe4ea: push   %eax
  0x01cbe4eb: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbe4f3: mov    -0xc(%eax),%eax
  0x01cbe4f6: cmp    %eax,%edi
  0x01cbe4f8: je     0x01cbe50f
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbe4fe: push   $0x55312af0
  0x01cbe503: call   0x01cbe508
  0x01cbe508: pusha  
  0x01cbe509: call   0x54dedbf0
  0x01cbe50e: hlt    
  0x01cbe50f: pop    %eax
  0x01cbe510: movl   $0x0,0x13c(%edi)
  0x01cbe51a: movl   $0x0,0x144(%edi)
  0x01cbe524: cmpl   $0x0,0x4(%edi)
  0x01cbe52b: jne    0x01cb0340
  0x01cbe531: mov    -0x1c(%ebp),%esi
  0x01cbe534: mov    -0x18(%ebp),%edi
  0x01cbe537: ret    
  0x01cbe538: push   $0x552fd97c
  0x01cbe53d: call   0x01cbe542
  0x01cbe542: pusha  
  0x01cbe543: call   0x54dedbf0
  0x01cbe548: hlt    
  0x01cbe549: mov    %esi,-0x1c(%ebp)
  0x01cbe54c: lea    (%edx),%eax
  0x01cbe54e: mov    0x4(%edx),%ecx
  0x01cbe551: movl   $0x0,0x4(%edx)
  0x01cbe558: mov    (%ecx),%ebx
  0x01cbe55a: and    $0x7,%ebx
  0x01cbe55d: cmp    $0x5,%ebx
  0x01cbe560: je     0x01cbe61b
  0x01cbe566: mov    (%eax),%ebx
  0x01cbe568: test   %ebx,%ebx
  0x01cbe56a: je     0x01cbe61b
  0x01cbe570: lock cmpxchg %ebx,(%ecx)
  0x01cbe574: je     0x01cbe61b
  0x01cbe57a: mov    %ecx,0x4(%edx)
  0x01cbe57d: call   0x01cbe587
  0x01cbe582: jmp    0x01cbe61b
  0x01cbe587: push   %edx
  0x01cbe588: lea    0x8(%esp),%eax
  0x01cbe58c: cmpl   $0x0,-0x8(%ebp)
  0x01cbe593: je     0x01cbe5aa
  0x01cbe599: push   $0x55310188
  0x01cbe59e: call   0x01cbe5a3
  0x01cbe5a3: pusha  
  0x01cbe5a4: call   0x54dedbf0
  0x01cbe5a9: hlt    
  0x01cbe5aa: mov    %esi,-0x1c(%ebp)
  0x01cbe5ad: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbe5b5: mov    -0xc(%edi),%edi
  0x01cbe5b8: push   %edi
  0x01cbe5b9: mov    %ebp,0x144(%edi)
  0x01cbe5bf: mov    %eax,0x13c(%edi)
  0x01cbe5c5: call   0x5505ab90
  0x01cbe5ca: add    $0x8,%esp
  0x01cbe5cd: push   %eax
  0x01cbe5ce: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbe5d6: mov    -0xc(%eax),%eax
  0x01cbe5d9: cmp    %eax,%edi
  0x01cbe5db: je     0x01cbe5f2
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbe5e1: push   $0x55312af0
  0x01cbe5e6: call   0x01cbe5eb
  0x01cbe5eb: pusha  
  0x01cbe5ec: call   0x54dedbf0
  0x01cbe5f1: hlt    
  0x01cbe5f2: pop    %eax
  0x01cbe5f3: movl   $0x0,0x13c(%edi)
  0x01cbe5fd: movl   $0x0,0x144(%edi)
  0x01cbe607: cmpl   $0x0,0x4(%edi)
  0x01cbe60e: jne    0x01cb0340
  0x01cbe614: mov    -0x1c(%ebp),%esi
  0x01cbe617: mov    -0x18(%ebp),%edi
  0x01cbe61a: ret    
  0x01cbe61b: mov    -0x1c(%ebp),%esi
  0x01cbe61e: cmpb   $0x0,0x55633e5f
  0x01cbe625: je     0x01cbe661
  0x01cbe62b: mov    %fs:0x0(,%eiz,1),%ebx
  0x01cbe633: mov    -0xc(%ebx),%ebx
  0x01cbe636: mov    -0xc(%ebp),%ecx
  0x01cbe639: push   %ecx
  0x01cbe63a: push   %ebx
  0x01cbe63b: cmpl   $0x0,-0x8(%ebp)
  0x01cbe642: je     0x01cbe659
  0x01cbe648: push   $0x55310148
  0x01cbe64d: call   0x01cbe652
  0x01cbe652: pusha  
  0x01cbe653: call   0x54dedbf0
  0x01cbe658: hlt    
  0x01cbe659: call   0x55215710
  0x01cbe65e: add    $0x8,%esp
  0x01cbe661: pop    %eax
  0x01cbe662: pop    %edx
  0x01cbe663: mov    0xc(%ebp),%ecx
  0x01cbe666: call   *%ecx
  0x01cbe668: mov    -0x4(%ebp),%ecx
  0x01cbe66b: mov    %ebp,%esp
  0x01cbe66d: pop    %ebp
  0x01cbe66e: pop    %edi
  0x01cbe66f: mov    %ecx,%esp
  0x01cbe671: jmp    *%edi
  0x01cbe673: mov    $0x0,%eax
  0x01cbe678: call   0x01cbe682
  0x01cbe67d: jmp    0x01cbe716
  0x01cbe682: push   %eax
  0x01cbe683: lea    0x8(%esp),%eax
  0x01cbe687: cmpl   $0x0,-0x8(%ebp)
  0x01cbe68e: je     0x01cbe6a5
  0x01cbe694: push   $0x55310188
  0x01cbe699: call   0x01cbe69e
  0x01cbe69e: pusha  
  0x01cbe69f: call   0x54dedbf0
  0x01cbe6a4: hlt    
  0x01cbe6a5: mov    %esi,-0x1c(%ebp)
  0x01cbe6a8: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbe6b0: mov    -0xc(%edi),%edi
  0x01cbe6b3: push   %edi
  0x01cbe6b4: mov    %ebp,0x144(%edi)
  0x01cbe6ba: mov    %eax,0x13c(%edi)
  0x01cbe6c0: call   0x5505ce70
  0x01cbe6c5: add    $0x8,%esp
  0x01cbe6c8: push   %eax
  0x01cbe6c9: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbe6d1: mov    -0xc(%eax),%eax
  0x01cbe6d4: cmp    %eax,%edi
  0x01cbe6d6: je     0x01cbe6ed
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbe6dc: push   $0x55312af0
  0x01cbe6e1: call   0x01cbe6e6
  0x01cbe6e6: pusha  
  0x01cbe6e7: call   0x54dedbf0
  0x01cbe6ec: hlt    
  0x01cbe6ed: pop    %eax
  0x01cbe6ee: movl   $0x0,0x13c(%edi)
  0x01cbe6f8: movl   $0x0,0x144(%edi)
  0x01cbe702: cmpl   $0x0,0x4(%edi)
  0x01cbe709: jne    0x01cb0340
  0x01cbe70f: mov    -0x1c(%ebp),%esi
  0x01cbe712: mov    -0x18(%ebp),%edi
  0x01cbe715: ret    
  0x01cbe716: mov    -0xc(%ebp),%ebx
  0x01cbe719: jmp    0x01cbdeb2
  0x01cbe71e: nop    
  0x01cbe71f: nop    

----------------------------------------------------------------------
nop  0 nop  [0x01cbe730, 0x01cbe760]  48 bytes

  0x01cbe730: sub    $0x4,%esp
  0x01cbe733: fstps  (%esp)
  0x01cbe736: jmp    0x01cbe754
  0x01cbe73b: sub    $0x8,%esp
  0x01cbe73e: fstpl  (%esp)
  0x01cbe741: jmp    0x01cbe754
  0x01cbe746: push   %edx
  0x01cbe747: push   %eax
  0x01cbe748: jmp    0x01cbe754
  0x01cbe74d: push   %eax
  0x01cbe74e: jmp    0x01cbe754
  0x01cbe753: push   %eax
  0x01cbe754: movzbl 0x1(%esi),%ebx
  0x01cbe758: inc    %esi
  0x01cbe759: jmp    *0x55629838(,%ebx,4)

----------------------------------------------------------------------
aconst_null  1 aconst_null  [0x01cbe770, 0x01cbe7b0]  64 bytes

  0x01cbe770: sub    $0x4,%esp
  0x01cbe773: fstps  (%esp)
  0x01cbe776: jmp    0x01cbe794
  0x01cbe77b: sub    $0x8,%esp
  0x01cbe77e: fstpl  (%esp)
  0x01cbe781: jmp    0x01cbe794
  0x01cbe786: push   %edx
  0x01cbe787: push   %eax
  0x01cbe788: jmp    0x01cbe794
  0x01cbe78d: push   %eax
  0x01cbe78e: jmp    0x01cbe794
  0x01cbe793: push   %eax
  0x01cbe794: xor    %eax,%eax
  0x01cbe796: movzbl 0x1(%esi),%ebx
  0x01cbe79a: inc    %esi
  0x01cbe79b: jmp    *0x55629438(,%ebx,4)
  0x01cbe7a2: nop    
  0x01cbe7a3: nop    
  0x01cbe7a4: int3   
  0x01cbe7a5: int3   
  0x01cbe7a6: int3   
  0x01cbe7a7: int3   
  0x01cbe7a8: int3   
  0x01cbe7a9: int3   
  0x01cbe7aa: int3   
  0x01cbe7ab: int3   
  0x01cbe7ac: int3   
  0x01cbe7ad: int3   
  0x01cbe7ae: int3   
  0x01cbe7af: int3   

----------------------------------------------------------------------
iconst_m1  2 iconst_m1  [0x01cbe7c0, 0x01cbe800]  64 bytes

  0x01cbe7c0: sub    $0x4,%esp
  0x01cbe7c3: fstps  (%esp)
  0x01cbe7c6: jmp    0x01cbe7e4
  0x01cbe7cb: sub    $0x8,%esp
  0x01cbe7ce: fstpl  (%esp)
  0x01cbe7d1: jmp    0x01cbe7e4
  0x01cbe7d6: push   %edx
  0x01cbe7d7: push   %eax
  0x01cbe7d8: jmp    0x01cbe7e4
  0x01cbe7dd: push   %eax
  0x01cbe7de: jmp    0x01cbe7e4
  0x01cbe7e3: push   %eax
  0x01cbe7e4: mov    $0xffffffff,%eax
  0x01cbe7e9: movzbl 0x1(%esi),%ebx
  0x01cbe7ed: inc    %esi
  0x01cbe7ee: jmp    *0x55628438(,%ebx,4)
  0x01cbe7f5: nop    
  0x01cbe7f6: nop    
  0x01cbe7f7: nop    
  0x01cbe7f8: int3   
  0x01cbe7f9: int3   
  0x01cbe7fa: int3   
  0x01cbe7fb: int3   
  0x01cbe7fc: int3   
  0x01cbe7fd: int3   
  0x01cbe7fe: int3   
  0x01cbe7ff: int3   

----------------------------------------------------------------------
iconst_0  3 iconst_0  [0x01cbe810, 0x01cbe850]  64 bytes

  0x01cbe810: sub    $0x4,%esp
  0x01cbe813: fstps  (%esp)
  0x01cbe816: jmp    0x01cbe834
  0x01cbe81b: sub    $0x8,%esp
  0x01cbe81e: fstpl  (%esp)
  0x01cbe821: jmp    0x01cbe834
  0x01cbe826: push   %edx
  0x01cbe827: push   %eax
  0x01cbe828: jmp    0x01cbe834
  0x01cbe82d: push   %eax
  0x01cbe82e: jmp    0x01cbe834
  0x01cbe833: push   %eax
  0x01cbe834: xor    %eax,%eax
  0x01cbe836: movzbl 0x1(%esi),%ebx
  0x01cbe83a: inc    %esi
  0x01cbe83b: jmp    *0x55628438(,%ebx,4)
  0x01cbe842: nop    
  0x01cbe843: nop    
  0x01cbe844: int3   
  0x01cbe845: int3   
  0x01cbe846: int3   
  0x01cbe847: int3   
  0x01cbe848: int3   
  0x01cbe849: int3   
  0x01cbe84a: int3   
  0x01cbe84b: int3   
  0x01cbe84c: int3   
  0x01cbe84d: int3   
  0x01cbe84e: int3   
  0x01cbe84f: int3   

----------------------------------------------------------------------
iconst_1  4 iconst_1  [0x01cbe860, 0x01cbe8a0]  64 bytes

  0x01cbe860: sub    $0x4,%esp
  0x01cbe863: fstps  (%esp)
  0x01cbe866: jmp    0x01cbe884
  0x01cbe86b: sub    $0x8,%esp
  0x01cbe86e: fstpl  (%esp)
  0x01cbe871: jmp    0x01cbe884
  0x01cbe876: push   %edx
  0x01cbe877: push   %eax
  0x01cbe878: jmp    0x01cbe884
  0x01cbe87d: push   %eax
  0x01cbe87e: jmp    0x01cbe884
  0x01cbe883: push   %eax
  0x01cbe884: mov    $0x1,%eax
  0x01cbe889: movzbl 0x1(%esi),%ebx
  0x01cbe88d: inc    %esi
  0x01cbe88e: jmp    *0x55628438(,%ebx,4)
  0x01cbe895: nop    
  0x01cbe896: nop    
  0x01cbe897: nop    
  0x01cbe898: int3   
  0x01cbe899: int3   
  0x01cbe89a: int3   
  0x01cbe89b: int3   
  0x01cbe89c: int3   
  0x01cbe89d: int3   
  0x01cbe89e: int3   
  0x01cbe89f: int3   

----------------------------------------------------------------------
iconst_2  5 iconst_2  [0x01cbe8b0, 0x01cbe8f0]  64 bytes

  0x01cbe8b0: sub    $0x4,%esp
  0x01cbe8b3: fstps  (%esp)
  0x01cbe8b6: jmp    0x01cbe8d4
  0x01cbe8bb: sub    $0x8,%esp
  0x01cbe8be: fstpl  (%esp)
  0x01cbe8c1: jmp    0x01cbe8d4
  0x01cbe8c6: push   %edx
  0x01cbe8c7: push   %eax
  0x01cbe8c8: jmp    0x01cbe8d4
  0x01cbe8cd: push   %eax
  0x01cbe8ce: jmp    0x01cbe8d4
  0x01cbe8d3: push   %eax
  0x01cbe8d4: mov    $0x2,%eax
  0x01cbe8d9: movzbl 0x1(%esi),%ebx
  0x01cbe8dd: inc    %esi
  0x01cbe8de: jmp    *0x55628438(,%ebx,4)
  0x01cbe8e5: nop    
  0x01cbe8e6: nop    
  0x01cbe8e7: nop    
  0x01cbe8e8: int3   
  0x01cbe8e9: int3   
  0x01cbe8ea: int3   
  0x01cbe8eb: int3   
  0x01cbe8ec: int3   
  0x01cbe8ed: int3   
  0x01cbe8ee: int3   
  0x01cbe8ef: int3   

----------------------------------------------------------------------
iconst_3  6 iconst_3  [0x01cbe900, 0x01cbe940]  64 bytes

  0x01cbe900: sub    $0x4,%esp
  0x01cbe903: fstps  (%esp)
  0x01cbe906: jmp    0x01cbe924
  0x01cbe90b: sub    $0x8,%esp
  0x01cbe90e: fstpl  (%esp)
  0x01cbe911: jmp    0x01cbe924
  0x01cbe916: push   %edx
  0x01cbe917: push   %eax
  0x01cbe918: jmp    0x01cbe924
  0x01cbe91d: push   %eax
  0x01cbe91e: jmp    0x01cbe924
  0x01cbe923: push   %eax
  0x01cbe924: mov    $0x3,%eax
  0x01cbe929: movzbl 0x1(%esi),%ebx
  0x01cbe92d: inc    %esi
  0x01cbe92e: jmp    *0x55628438(,%ebx,4)
  0x01cbe935: nop    
  0x01cbe936: nop    
  0x01cbe937: nop    
  0x01cbe938: int3   
  0x01cbe939: int3   
  0x01cbe93a: int3   
  0x01cbe93b: int3   
  0x01cbe93c: int3   
  0x01cbe93d: int3   
  0x01cbe93e: int3   
  0x01cbe93f: int3   

----------------------------------------------------------------------
iconst_4  7 iconst_4  [0x01cbe950, 0x01cbe990]  64 bytes

  0x01cbe950: sub    $0x4,%esp
  0x01cbe953: fstps  (%esp)
  0x01cbe956: jmp    0x01cbe974
  0x01cbe95b: sub    $0x8,%esp
  0x01cbe95e: fstpl  (%esp)
  0x01cbe961: jmp    0x01cbe974
  0x01cbe966: push   %edx
  0x01cbe967: push   %eax
  0x01cbe968: jmp    0x01cbe974
  0x01cbe96d: push   %eax
  0x01cbe96e: jmp    0x01cbe974
  0x01cbe973: push   %eax
  0x01cbe974: mov    $0x4,%eax
  0x01cbe979: movzbl 0x1(%esi),%ebx
  0x01cbe97d: inc    %esi
  0x01cbe97e: jmp    *0x55628438(,%ebx,4)
  0x01cbe985: nop    
  0x01cbe986: nop    
  0x01cbe987: nop    
  0x01cbe988: int3   
  0x01cbe989: int3   
  0x01cbe98a: int3   
  0x01cbe98b: int3   
  0x01cbe98c: int3   
  0x01cbe98d: int3   
  0x01cbe98e: int3   
  0x01cbe98f: int3   

----------------------------------------------------------------------
iconst_5  8 iconst_5  [0x01cbe9a0, 0x01cbe9e0]  64 bytes

  0x01cbe9a0: sub    $0x4,%esp
  0x01cbe9a3: fstps  (%esp)
  0x01cbe9a6: jmp    0x01cbe9c4
  0x01cbe9ab: sub    $0x8,%esp
  0x01cbe9ae: fstpl  (%esp)
  0x01cbe9b1: jmp    0x01cbe9c4
  0x01cbe9b6: push   %edx
  0x01cbe9b7: push   %eax
  0x01cbe9b8: jmp    0x01cbe9c4
  0x01cbe9bd: push   %eax
  0x01cbe9be: jmp    0x01cbe9c4
  0x01cbe9c3: push   %eax
  0x01cbe9c4: mov    $0x5,%eax
  0x01cbe9c9: movzbl 0x1(%esi),%ebx
  0x01cbe9cd: inc    %esi
  0x01cbe9ce: jmp    *0x55628438(,%ebx,4)
  0x01cbe9d5: nop    
  0x01cbe9d6: nop    
  0x01cbe9d7: nop    
  0x01cbe9d8: int3   
  0x01cbe9d9: int3   
  0x01cbe9da: int3   
  0x01cbe9db: int3   
  0x01cbe9dc: int3   
  0x01cbe9dd: int3   
  0x01cbe9de: int3   
  0x01cbe9df: int3   

----------------------------------------------------------------------
lconst_0  9 lconst_0  [0x01cbe9f0, 0x01cbea30]  64 bytes

  0x01cbe9f0: sub    $0x4,%esp
  0x01cbe9f3: fstps  (%esp)
  0x01cbe9f6: jmp    0x01cbea14
  0x01cbe9fb: sub    $0x8,%esp
  0x01cbe9fe: fstpl  (%esp)
  0x01cbea01: jmp    0x01cbea14
  0x01cbea06: push   %edx
  0x01cbea07: push   %eax
  0x01cbea08: jmp    0x01cbea14
  0x01cbea0d: push   %eax
  0x01cbea0e: jmp    0x01cbea14
  0x01cbea13: push   %eax
  0x01cbea14: xor    %eax,%eax
  0x01cbea16: xor    %edx,%edx
  0x01cbea18: movzbl 0x1(%esi),%ebx
  0x01cbea1c: inc    %esi
  0x01cbea1d: jmp    *0x55628838(,%ebx,4)
  0x01cbea24: int3   
  0x01cbea25: int3   
  0x01cbea26: int3   
  0x01cbea27: int3   
  0x01cbea28: int3   
  0x01cbea29: int3   
  0x01cbea2a: int3   
  0x01cbea2b: int3   
  0x01cbea2c: int3   
  0x01cbea2d: int3   
  0x01cbea2e: int3   
  0x01cbea2f: int3   

----------------------------------------------------------------------
lconst_1  10 lconst_1  [0x01cbea40, 0x01cbea80]  64 bytes

  0x01cbea40: sub    $0x4,%esp
  0x01cbea43: fstps  (%esp)
  0x01cbea46: jmp    0x01cbea64
  0x01cbea4b: sub    $0x8,%esp
  0x01cbea4e: fstpl  (%esp)
  0x01cbea51: jmp    0x01cbea64
  0x01cbea56: push   %edx
  0x01cbea57: push   %eax
  0x01cbea58: jmp    0x01cbea64
  0x01cbea5d: push   %eax
  0x01cbea5e: jmp    0x01cbea64
  0x01cbea63: push   %eax
  0x01cbea64: mov    $0x1,%eax
  0x01cbea69: xor    %edx,%edx
  0x01cbea6b: movzbl 0x1(%esi),%ebx
  0x01cbea6f: inc    %esi
  0x01cbea70: jmp    *0x55628838(,%ebx,4)
  0x01cbea77: nop    
  0x01cbea78: int3   
  0x01cbea79: int3   
  0x01cbea7a: int3   
  0x01cbea7b: int3   
  0x01cbea7c: int3   
  0x01cbea7d: int3   
  0x01cbea7e: int3   
  0x01cbea7f: int3   

----------------------------------------------------------------------
fconst_0  11 fconst_0  [0x01cbea90, 0x01cbead0]  64 bytes

  0x01cbea90: sub    $0x4,%esp
  0x01cbea93: fstps  (%esp)
  0x01cbea96: jmp    0x01cbeab4
  0x01cbea9b: sub    $0x8,%esp
  0x01cbea9e: fstpl  (%esp)
  0x01cbeaa1: jmp    0x01cbeab4
  0x01cbeaa6: push   %edx
  0x01cbeaa7: push   %eax
  0x01cbeaa8: jmp    0x01cbeab4
  0x01cbeaad: push   %eax
  0x01cbeaae: jmp    0x01cbeab4
  0x01cbeab3: push   %eax
  0x01cbeab4: fldz   
  0x01cbeab6: movzbl 0x1(%esi),%ebx
  0x01cbeaba: inc    %esi
  0x01cbeabb: jmp    *0x55628c38(,%ebx,4)
  0x01cbeac2: nop    
  0x01cbeac3: nop    
  0x01cbeac4: int3   
  0x01cbeac5: int3   
  0x01cbeac6: int3   
  0x01cbeac7: int3   
  0x01cbeac8: int3   
  0x01cbeac9: int3   
  0x01cbeaca: int3   
  0x01cbeacb: int3   
  0x01cbeacc: int3   
  0x01cbeacd: int3   
  0x01cbeace: int3   
  0x01cbeacf: int3   

----------------------------------------------------------------------
fconst_1  12 fconst_1  [0x01cbeae0, 0x01cbeb20]  64 bytes

  0x01cbeae0: sub    $0x4,%esp
  0x01cbeae3: fstps  (%esp)
  0x01cbeae6: jmp    0x01cbeb04
  0x01cbeaeb: sub    $0x8,%esp
  0x01cbeaee: fstpl  (%esp)
  0x01cbeaf1: jmp    0x01cbeb04
  0x01cbeaf6: push   %edx
  0x01cbeaf7: push   %eax
  0x01cbeaf8: jmp    0x01cbeb04
  0x01cbeafd: push   %eax
  0x01cbeafe: jmp    0x01cbeb04
  0x01cbeb03: push   %eax
  0x01cbeb04: fld1   
  0x01cbeb06: movzbl 0x1(%esi),%ebx
  0x01cbeb0a: inc    %esi
  0x01cbeb0b: jmp    *0x55628c38(,%ebx,4)
  0x01cbeb12: nop    
  0x01cbeb13: nop    
  0x01cbeb14: int3   
  0x01cbeb15: int3   
  0x01cbeb16: int3   
  0x01cbeb17: int3   
  0x01cbeb18: int3   
  0x01cbeb19: int3   
  0x01cbeb1a: int3   
  0x01cbeb1b: int3   
  0x01cbeb1c: int3   
  0x01cbeb1d: int3   
  0x01cbeb1e: int3   
  0x01cbeb1f: int3   

----------------------------------------------------------------------
fconst_2  13 fconst_2  [0x01cbeb30, 0x01cbeb70]  64 bytes

  0x01cbeb30: sub    $0x4,%esp
  0x01cbeb33: fstps  (%esp)
  0x01cbeb36: jmp    0x01cbeb54
  0x01cbeb3b: sub    $0x8,%esp
  0x01cbeb3e: fstpl  (%esp)
  0x01cbeb41: jmp    0x01cbeb54
  0x01cbeb46: push   %edx
  0x01cbeb47: push   %eax
  0x01cbeb48: jmp    0x01cbeb54
  0x01cbeb4d: push   %eax
  0x01cbeb4e: jmp    0x01cbeb54
  0x01cbeb53: push   %eax
  0x01cbeb54: fld1   
  0x01cbeb56: fld1   
  0x01cbeb58: faddp  %st,%st(1)
  0x01cbeb5a: movzbl 0x1(%esi),%ebx
  0x01cbeb5e: inc    %esi
  0x01cbeb5f: jmp    *0x55628c38(,%ebx,4)
  0x01cbeb66: nop    
  0x01cbeb67: nop    
  0x01cbeb68: int3   
  0x01cbeb69: int3   
  0x01cbeb6a: int3   
  0x01cbeb6b: int3   
  0x01cbeb6c: int3   
  0x01cbeb6d: int3   
  0x01cbeb6e: int3   
  0x01cbeb6f: int3   

----------------------------------------------------------------------
dconst_0  14 dconst_0  [0x01cbeb80, 0x01cbebc0]  64 bytes

  0x01cbeb80: sub    $0x4,%esp
  0x01cbeb83: fstps  (%esp)
  0x01cbeb86: jmp    0x01cbeba4
  0x01cbeb8b: sub    $0x8,%esp
  0x01cbeb8e: fstpl  (%esp)
  0x01cbeb91: jmp    0x01cbeba4
  0x01cbeb96: push   %edx
  0x01cbeb97: push   %eax
  0x01cbeb98: jmp    0x01cbeba4
  0x01cbeb9d: push   %eax
  0x01cbeb9e: jmp    0x01cbeba4
  0x01cbeba3: push   %eax
  0x01cbeba4: fldz   
  0x01cbeba6: movzbl 0x1(%esi),%ebx
  0x01cbebaa: inc    %esi
  0x01cbebab: jmp    *0x55629038(,%ebx,4)
  0x01cbebb2: nop    
  0x01cbebb3: nop    
  0x01cbebb4: int3   
  0x01cbebb5: int3   
  0x01cbebb6: int3   
  0x01cbebb7: int3   
  0x01cbebb8: int3   
  0x01cbebb9: int3   
  0x01cbebba: int3   
  0x01cbebbb: int3   
  0x01cbebbc: int3   
  0x01cbebbd: int3   
  0x01cbebbe: int3   
  0x01cbebbf: int3   

----------------------------------------------------------------------
dconst_1  15 dconst_1  [0x01cbebd0, 0x01cbec10]  64 bytes

  0x01cbebd0: sub    $0x4,%esp
  0x01cbebd3: fstps  (%esp)
  0x01cbebd6: jmp    0x01cbebf4
  0x01cbebdb: sub    $0x8,%esp
  0x01cbebde: fstpl  (%esp)
  0x01cbebe1: jmp    0x01cbebf4
  0x01cbebe6: push   %edx
  0x01cbebe7: push   %eax
  0x01cbebe8: jmp    0x01cbebf4
  0x01cbebed: push   %eax
  0x01cbebee: jmp    0x01cbebf4
  0x01cbebf3: push   %eax
  0x01cbebf4: fld1   
  0x01cbebf6: movzbl 0x1(%esi),%ebx
  0x01cbebfa: inc    %esi
  0x01cbebfb: jmp    *0x55629038(,%ebx,4)
  0x01cbec02: nop    
  0x01cbec03: nop    
  0x01cbec04: int3   
  0x01cbec05: int3   
  0x01cbec06: int3   
  0x01cbec07: int3   
  0x01cbec08: int3   
  0x01cbec09: int3   
  0x01cbec0a: int3   
  0x01cbec0b: int3   
  0x01cbec0c: int3   
  0x01cbec0d: int3   
  0x01cbec0e: int3   
  0x01cbec0f: int3   

----------------------------------------------------------------------
bipush  16 bipush  [0x01cbec20, 0x01cbec60]  64 bytes

  0x01cbec20: sub    $0x4,%esp
  0x01cbec23: fstps  (%esp)
  0x01cbec26: jmp    0x01cbec44
  0x01cbec2b: sub    $0x8,%esp
  0x01cbec2e: fstpl  (%esp)
  0x01cbec31: jmp    0x01cbec44
  0x01cbec36: push   %edx
  0x01cbec37: push   %eax
  0x01cbec38: jmp    0x01cbec44
  0x01cbec3d: push   %eax
  0x01cbec3e: jmp    0x01cbec44
  0x01cbec43: push   %eax
  0x01cbec44: movsbl 0x1(%esi),%eax
  0x01cbec48: movzbl 0x2(%esi),%ebx
  0x01cbec4c: add    $0x2,%esi
  0x01cbec4f: jmp    *0x55628438(,%ebx,4)
  0x01cbec56: nop    
  0x01cbec57: nop    
  0x01cbec58: int3   
  0x01cbec59: int3   
  0x01cbec5a: int3   
  0x01cbec5b: int3   
  0x01cbec5c: int3   
  0x01cbec5d: int3   
  0x01cbec5e: int3   
  0x01cbec5f: int3   

----------------------------------------------------------------------
sipush  17 sipush  [0x01cbec70, 0x01cbecb0]  64 bytes

  0x01cbec70: sub    $0x4,%esp
  0x01cbec73: fstps  (%esp)
  0x01cbec76: jmp    0x01cbec94
  0x01cbec7b: sub    $0x8,%esp
  0x01cbec7e: fstpl  (%esp)
  0x01cbec81: jmp    0x01cbec94
  0x01cbec86: push   %edx
  0x01cbec87: push   %eax
  0x01cbec88: jmp    0x01cbec94
  0x01cbec8d: push   %eax
  0x01cbec8e: jmp    0x01cbec94
  0x01cbec93: push   %eax
  0x01cbec94: movzwl 0x1(%esi),%eax
  0x01cbec98: bswap  %eax
  0x01cbec9a: sar    $0x10,%eax
  0x01cbec9d: movzbl 0x3(%esi),%ebx
  0x01cbeca1: add    $0x3,%esi
  0x01cbeca4: jmp    *0x55628438(,%ebx,4)
  0x01cbecab: nop    
  0x01cbecac: int3   
  0x01cbecad: int3   
  0x01cbecae: int3   
  0x01cbecaf: int3   

----------------------------------------------------------------------
ldc  18 ldc  [0x01cbecc0, 0x01cbee10]  336 bytes

  0x01cbecc0: sub    $0x4,%esp
  0x01cbecc3: fstps  (%esp)
  0x01cbecc6: jmp    0x01cbece4
  0x01cbeccb: sub    $0x8,%esp
  0x01cbecce: fstpl  (%esp)
  0x01cbecd1: jmp    0x01cbece4
  0x01cbecd6: push   %edx
  0x01cbecd7: push   %eax
  0x01cbecd8: jmp    0x01cbece4
  0x01cbecdd: push   %eax
  0x01cbecde: jmp    0x01cbece4
  0x01cbece3: push   %eax
  0x01cbece4: movzbl 0x1(%esi),%ebx
  0x01cbece8: mov    -0xc(%ebp),%ecx
  0x01cbeceb: mov    0x8(%ecx),%ecx
  0x01cbecee: mov    0x8(%ecx),%ecx
  0x01cbecf1: mov    0x8(%ecx),%eax
  0x01cbecf4: xor    %edx,%edx
  0x01cbecf6: mov    0x4(%eax,%ebx,1),%dl
  0x01cbecfa: cmp    $0x64,%edx
  0x01cbecfd: je     0x01cbed0d
  0x01cbecff: cmp    $0x67,%edx
  0x01cbed02: je     0x01cbed0d
  0x01cbed04: cmp    $0x7,%edx
  0x01cbed07: jne    0x01cbedc6
  0x01cbed0d: mov    $0x0,%ecx
  0x01cbed12: call   0x01cbed1c
  0x01cbed17: jmp    0x01cbedc0
  0x01cbed1c: push   %ecx
  0x01cbed1d: lea    0x8(%esp),%eax
  0x01cbed21: cmpl   $0x0,-0x8(%ebp)
  0x01cbed28: je     0x01cbed3f
  0x01cbed2e: push   $0x55310188
  0x01cbed33: call   0x01cbed38
  0x01cbed38: pusha  
  0x01cbed39: call   0x54dedbf0
  0x01cbed3e: hlt    
  0x01cbed3f: mov    %esi,-0x1c(%ebp)
  0x01cbed42: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbed4a: mov    -0xc(%edi),%edi
  0x01cbed4d: push   %edi
  0x01cbed4e: mov    %ebp,0x144(%edi)
  0x01cbed54: mov    %eax,0x13c(%edi)
  0x01cbed5a: call   0x55058300
  0x01cbed5f: add    $0x8,%esp
  0x01cbed62: push   %eax
  0x01cbed63: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbed6b: mov    -0xc(%eax),%eax
  0x01cbed6e: cmp    %eax,%edi
  0x01cbed70: je     0x01cbed87
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbed76: push   $0x55312af0
  0x01cbed7b: call   0x01cbed80
  0x01cbed80: pusha  
  0x01cbed81: call   0x54dedbf0
  0x01cbed86: hlt    
  0x01cbed87: pop    %eax
  0x01cbed88: movl   $0x0,0x13c(%edi)
  0x01cbed92: movl   $0x0,0x144(%edi)
  0x01cbed9c: cmpl   $0x0,0x4(%edi)
  0x01cbeda3: jne    0x01cb0340
  0x01cbeda9: mov    0x16c(%edi),%eax
  0x01cbedaf: movl   $0x0,0x16c(%edi)
  0x01cbedb9: mov    -0x1c(%ebp),%esi
  0x01cbedbc: mov    -0x18(%ebp),%edi
  0x01cbedbf: ret    
  0x01cbedc0: push   %eax
  0x01cbedc1: jmp    0x01cbedf9
  0x01cbedc6: cmp    $0x4,%edx
  0x01cbedc9: jne    0x01cbedda
  0x01cbedcb: flds   0x30(%ecx,%ebx,4)
  0x01cbedcf: sub    $0x4,%esp
  0x01cbedd2: fstps  (%esp)
  0x01cbedd5: jmp    0x01cbedf9
  0x01cbedda: cmp    $0x3,%edx
  0x01cbeddd: je     0x01cbedf4
  0x01cbede3: push   $0x5531aa00
  0x01cbede8: call   0x01cbeded
  0x01cbeded: pusha  
  0x01cbedee: call   0x54dedbf0
  0x01cbedf3: hlt    
  0x01cbedf4: mov    0x30(%ecx,%ebx,4),%eax
  0x01cbedf8: push   %eax
  0x01cbedf9: movzbl 0x2(%esi),%ebx
  0x01cbedfd: add    $0x2,%esi
  0x01cbee00: jmp    *0x55629838(,%ebx,4)
  0x01cbee07: nop    
  0x01cbee08: int3   
  0x01cbee09: int3   
  0x01cbee0a: int3   
  0x01cbee0b: int3   
  0x01cbee0c: int3   
  0x01cbee0d: int3   
  0x01cbee0e: int3   
  0x01cbee0f: int3   

----------------------------------------------------------------------
ldc_w  19 ldc_w  [0x01cbee20, 0x01cbef70]  336 bytes

  0x01cbee20: sub    $0x4,%esp
  0x01cbee23: fstps  (%esp)
  0x01cbee26: jmp    0x01cbee44
  0x01cbee2b: sub    $0x8,%esp
  0x01cbee2e: fstpl  (%esp)
  0x01cbee31: jmp    0x01cbee44
  0x01cbee36: push   %edx
  0x01cbee37: push   %eax
  0x01cbee38: jmp    0x01cbee44
  0x01cbee3d: push   %eax
  0x01cbee3e: jmp    0x01cbee44
  0x01cbee43: push   %eax
  0x01cbee44: movzwl 0x1(%esi),%ebx
  0x01cbee48: bswap  %ebx
  0x01cbee4a: shr    $0x10,%ebx
  0x01cbee4d: mov    -0xc(%ebp),%ecx
  0x01cbee50: mov    0x8(%ecx),%ecx
  0x01cbee53: mov    0x8(%ecx),%ecx
  0x01cbee56: mov    0x8(%ecx),%eax
  0x01cbee59: xor    %edx,%edx
  0x01cbee5b: mov    0x4(%eax,%ebx,1),%dl
  0x01cbee5f: cmp    $0x64,%edx
  0x01cbee62: je     0x01cbee72
  0x01cbee64: cmp    $0x67,%edx
  0x01cbee67: je     0x01cbee72
  0x01cbee69: cmp    $0x7,%edx
  0x01cbee6c: jne    0x01cbef2b
  0x01cbee72: mov    $0x1,%ecx
  0x01cbee77: call   0x01cbee81
  0x01cbee7c: jmp    0x01cbef25
  0x01cbee81: push   %ecx
  0x01cbee82: lea    0x8(%esp),%eax
  0x01cbee86: cmpl   $0x0,-0x8(%ebp)
  0x01cbee8d: je     0x01cbeea4
  0x01cbee93: push   $0x55310188
  0x01cbee98: call   0x01cbee9d
  0x01cbee9d: pusha  
  0x01cbee9e: call   0x54dedbf0
  0x01cbeea3: hlt    
  0x01cbeea4: mov    %esi,-0x1c(%ebp)
  0x01cbeea7: mov    %fs:0x0(,%eiz,1),%edi
  0x01cbeeaf: mov    -0xc(%edi),%edi
  0x01cbeeb2: push   %edi
  0x01cbeeb3: mov    %ebp,0x144(%edi)
  0x01cbeeb9: mov    %eax,0x13c(%edi)
  0x01cbeebf: call   0x55058300
  0x01cbeec4: add    $0x8,%esp
  0x01cbeec7: push   %eax
  0x01cbeec8: mov    %fs:0x0(,%eiz,1),%eax
  0x01cbeed0: mov    -0xc(%eax),%eax
  0x01cbeed3: cmp    %eax,%edi
  0x01cbeed5: je     0x01cbeeec
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cbeedb: push   $0x55312af0
  0x01cbeee0: call   0x01cbeee5
  0x01cbeee5: pusha  
  0x01cbeee6: call   0x54dedbf0
  0x01cbeeeb: hlt    
  0x01cbeeec: pop    %eax
  0x01cbeeed: movl   $0x0,0x13c(%edi)
  0x01cbeef7: movl   $0x0,0x144(%edi)
  0x01cbef01: cmpl   $0x0,0x4(%edi)
  0x01cbef08: jne    0x01cb0340
  0x01cbef0e: mov    0x16c(%edi),%eax
  0x01cbef14: movl   $0x0,0x16c(%edi)
  0x01cbef1e: mov    -0x1c(%ebp),%esi
  0x01cbef21: mov    -0x18(%ebp),%edi
  0x01cbef24: ret    
  0x01cbef25: push   %eax
  0x01cbef26: jmp    0x01cbef5e
  0x01cbef2b: cmp    $0x4,%edx
  0x01cbef2e: jne    0x01cbef3f
  0x01cbef30: flds   0x30(%ecx,%ebx,4)
  0x01cbef34: sub    $0x4,%esp
  0x01cbef37: fstps  (%esp)
  0x01cbef3a: jmp    0x01cbef5e
  0x01cbef3f: cmp    $0x3,%edx
  0x01cbef42: je     0x01cbef59
  0x01cbef48: push   $0x5531aa00
  0x01cbef4d: call   0x01cbef52
  0x01cbef52: pusha  
  0x01cbef53: call   0x54dedbf0
  0x01cbef58: hlt    
  0x01cbef59: mov    0x30(%ecx,%ebx,4),%eax
  0x01cbef5d: push   %eax
  0x01cbef5e: movzbl 0x3(%esi),%ebx
  0x01cbef62: add    $0x3,%esi
  0x01cbef65: jmp    *0x55629838(,%ebx,4)
  0x01cbef6c: int3   
  0x01cbef6d: int3   
  0x01cbef6e: int3   
  0x01cbef6f: int3   

----------------------------------------------------------------------
ldc2_w  20 ldc2_w  [0x01cbef80, 0x01cbeff0]  112 bytes

  0x01cbef80: sub    $0x4,%esp
  0x01cbef83: fstps  (%esp)
  0x01cbef86: jmp    0x01cbefa4
  0x01cbef8b: sub    $0x8,%esp
  0x01cbef8e: fstpl  (%esp)
  0x01cbef91: jmp    0x01cbefa4
  0x01cbef96: push   %edx
  0x01cbef97: push   %eax
  0x01cbef98: jmp    0x01cbefa4
  0x01cbef9d: push   %eax
  0x01cbef9e: jmp    0x01cbefa4
  0x01cbefa3: push   %eax
  0x01cbefa4: movzwl 0x1(%esi),%ebx
  0x01cbefa8: bswap  %ebx
  0x01cbefaa: shr    $0x10,%ebx
  0x01cbefad: mov    -0xc(%ebp),%ecx
  0x01cbefb0: mov    0x8(%ecx),%ecx
  0x01cbefb3: mov    0x8(%ecx),%ecx
  0x01cbefb6: mov    0x8(%ecx),%eax
  0x01cbefb9: cmpb   $0x6,0x4(%eax,%ebx,1)
  0x01cbefbe: jne    0x01cbefcc
  0x01cbefc0: fldl   0x30(%ecx,%ebx,4)
  0x01cbefc4: sub    $0x8,%esp
  0x01cbefc7: fstpl  (%esp)
  0x01cbefca: jmp    0x01cbefd6
  0x01cbefcc: mov    0x30(%ecx,%ebx,4),%eax
  0x01cbefd0: mov    0x34(%ecx,%ebx,4),%edx
  0x01cbefd4: push   %edx
  0x01cbefd5: push   %eax
  0x01cbefd6: movzbl 0x3(%esi),%ebx
  0x01cbefda: add    $0x3,%esi
  0x01cbefdd: jmp    *0x55629838(,%ebx,4)
  0x01cbefe4: int3   
  0x01cbefe5: int3   
  0x01cbefe6: int3   
  0x01cbefe7: int3   
  0x01cbefe8: int3   
  0x01cbefe9: int3   
  0x01cbefea: int3   
  0x01cbefeb: int3   
  0x01cbefec: int3   
  0x01cbefed: int3   
  0x01cbefee: int3   
  0x01cbefef: int3   

----------------------------------------------------------------------
iload  21 iload  [0x01cbf000, 0x01cbf060]  96 bytes

  0x01cbf000: sub    $0x4,%esp
  0x01cbf003: fstps  (%esp)
  0x01cbf006: jmp    0x01cbf024
  0x01cbf00b: sub    $0x8,%esp
  0x01cbf00e: fstpl  (%esp)
  0x01cbf011: jmp    0x01cbf024
  0x01cbf016: push   %edx
  0x01cbf017: push   %eax
  0x01cbf018: jmp    0x01cbf024
  0x01cbf01d: push   %eax
  0x01cbf01e: jmp    0x01cbf024
  0x01cbf023: push   %eax
  0x01cbf024: movzbl 0x1(%esi),%ebx
  0x01cbf028: neg    %ebx
  0x01cbf02a: mov    (%edi,%ebx,4),%eax
  0x01cbf02d: movzbl 0x2(%esi),%ebx
  0x01cbf031: add    $0x2,%esi
  0x01cbf034: jmp    *0x55628438(,%ebx,4)
  0x01cbf03b: movzwl 0x2(%esi),%ebx
  0x01cbf03f: bswap  %ebx
  0x01cbf041: shr    $0x10,%ebx
  0x01cbf044: neg    %ebx
  0x01cbf046: mov    (%edi,%ebx,4),%eax
  0x01cbf049: movzbl 0x4(%esi),%ebx
  0x01cbf04d: add    $0x4,%esi
  0x01cbf050: jmp    *0x55628438(,%ebx,4)
  0x01cbf057: nop    
  0x01cbf058: int3   
  0x01cbf059: int3   
  0x01cbf05a: int3   
  0x01cbf05b: int3   
  0x01cbf05c: int3   
  0x01cbf05d: int3   
  0x01cbf05e: int3   
  0x01cbf05f: int3   

----------------------------------------------------------------------
lload  22 lload  [0x01cbf070, 0x01cbf0d0]  96 bytes

  0x01cbf070: sub    $0x4,%esp
  0x01cbf073: fstps  (%esp)
  0x01cbf076: jmp    0x01cbf094
  0x01cbf07b: sub    $0x8,%esp
  0x01cbf07e: fstpl  (%esp)
  0x01cbf081: jmp    0x01cbf094
  0x01cbf086: push   %edx
  0x01cbf087: push   %eax
  0x01cbf088: jmp    0x01cbf094
  0x01cbf08d: push   %eax
  0x01cbf08e: jmp    0x01cbf094
  0x01cbf093: push   %eax
  0x01cbf094: movzbl 0x1(%esi),%ebx
  0x01cbf098: neg    %ebx
  0x01cbf09a: mov    -0x4(%edi,%ebx,4),%eax
  0x01cbf09e: mov    (%edi,%ebx,4),%edx
  0x01cbf0a1: movzbl 0x2(%esi),%ebx
  0x01cbf0a5: add    $0x2,%esi
  0x01cbf0a8: jmp    *0x55628838(,%ebx,4)
  0x01cbf0af: movzwl 0x2(%esi),%ebx
  0x01cbf0b3: bswap  %ebx
  0x01cbf0b5: shr    $0x10,%ebx
  0x01cbf0b8: neg    %ebx
  0x01cbf0ba: mov    -0x4(%edi,%ebx,4),%eax
  0x01cbf0be: mov    (%edi,%ebx,4),%edx
  0x01cbf0c1: movzbl 0x4(%esi),%ebx
  0x01cbf0c5: add    $0x4,%esi
  0x01cbf0c8: jmp    *0x55628838(,%ebx,4)
  0x01cbf0cf: nop    

----------------------------------------------------------------------
fload  23 fload  [0x01cbf0e0, 0x01cbf140]  96 bytes

  0x01cbf0e0: sub    $0x4,%esp
  0x01cbf0e3: fstps  (%esp)
  0x01cbf0e6: jmp    0x01cbf104
  0x01cbf0eb: sub    $0x8,%esp
  0x01cbf0ee: fstpl  (%esp)
  0x01cbf0f1: jmp    0x01cbf104
  0x01cbf0f6: push   %edx
  0x01cbf0f7: push   %eax
  0x01cbf0f8: jmp    0x01cbf104
  0x01cbf0fd: push   %eax
  0x01cbf0fe: jmp    0x01cbf104
  0x01cbf103: push   %eax
  0x01cbf104: movzbl 0x1(%esi),%ebx
  0x01cbf108: neg    %ebx
  0x01cbf10a: flds   (%edi,%ebx,4)
  0x01cbf10d: movzbl 0x2(%esi),%ebx
  0x01cbf111: add    $0x2,%esi
  0x01cbf114: jmp    *0x55628c38(,%ebx,4)
  0x01cbf11b: movzwl 0x2(%esi),%ebx
  0x01cbf11f: bswap  %ebx
  0x01cbf121: shr    $0x10,%ebx
  0x01cbf124: neg    %ebx
  0x01cbf126: flds   (%edi,%ebx,4)
  0x01cbf129: movzbl 0x4(%esi),%ebx
  0x01cbf12d: add    $0x4,%esi
  0x01cbf130: jmp    *0x55628c38(,%ebx,4)
  0x01cbf137: nop    
  0x01cbf138: int3   
  0x01cbf139: int3   
  0x01cbf13a: int3   
  0x01cbf13b: int3   
  0x01cbf13c: int3   
  0x01cbf13d: int3   
  0x01cbf13e: int3   
  0x01cbf13f: int3   

----------------------------------------------------------------------
dload  24 dload  [0x01cbf150, 0x01cbf1b0]  96 bytes

  0x01cbf150: sub    $0x4,%esp
  0x01cbf153: fstps  (%esp)
  0x01cbf156: jmp    0x01cbf174
  0x01cbf15b: sub    $0x8,%esp
  0x01cbf15e: fstpl  (%esp)
  0x01cbf161: jmp    0x01cbf174
  0x01cbf166: push   %edx
  0x01cbf167: push   %eax
  0x01cbf168: jmp    0x01cbf174
  0x01cbf16d: push   %eax
  0x01cbf16e: jmp    0x01cbf174
  0x01cbf173: push   %eax
  0x01cbf174: movzbl 0x1(%esi),%ebx
  0x01cbf178: neg    %ebx
  0x01cbf17a: fldl   -0x4(%edi,%ebx,4)
  0x01cbf17e: movzbl 0x2(%esi),%ebx
  0x01cbf182: add    $0x2,%esi
  0x01cbf185: jmp    *0x55629038(,%ebx,4)
  0x01cbf18c: movzwl 0x2(%esi),%ebx
  0x01cbf190: bswap  %ebx
  0x01cbf192: shr    $0x10,%ebx
  0x01cbf195: neg    %ebx
  0x01cbf197: fldl   -0x4(%edi,%ebx,4)
  0x01cbf19b: movzbl 0x4(%esi),%ebx
  0x01cbf19f: add    $0x4,%esi
  0x01cbf1a2: jmp    *0x55629038(,%ebx,4)
  0x01cbf1a9: nop    
  0x01cbf1aa: nop    
  0x01cbf1ab: nop    
  0x01cbf1ac: int3   
  0x01cbf1ad: int3   
  0x01cbf1ae: int3   
  0x01cbf1af: int3   

----------------------------------------------------------------------
aload  25 aload  [0x01cbf1c0, 0x01cbf220]  96 bytes

  0x01cbf1c0: sub    $0x4,%esp
  0x01cbf1c3: fstps  (%esp)
  0x01cbf1c6: jmp    0x01cbf1e4
  0x01cbf1cb: sub    $0x8,%esp
  0x01cbf1ce: fstpl  (%esp)
  0x01cbf1d1: jmp    0x01cbf1e4
  0x01cbf1d6: push   %edx
  0x01cbf1d7: push   %eax
  0x01cbf1d8: jmp    0x01cbf1e4
  0x01cbf1dd: push   %eax
  0x01cbf1de: jmp    0x01cbf1e4
  0x01cbf1e3: push   %eax
  0x01cbf1e4: movzbl 0x1(%esi),%ebx
  0x01cbf1e8: neg    %ebx
  0x01cbf1ea: mov    (%edi,%ebx,4),%eax
  0x01cbf1ed: movzbl 0x2(%esi),%ebx
  0x01cbf1f1: add    $0x2,%esi
  0x01cbf1f4: jmp    *0x55629438(,%ebx,4)
  0x01cbf1fb: movzwl 0x2(%esi),%ebx
  0x01cbf1ff: bswap  %ebx
  0x01cbf201: shr    $0x10,%ebx
  0x01cbf204: neg    %ebx
  0x01cbf206: mov    (%edi,%ebx,4),%eax
  0x01cbf209: movzbl 0x4(%esi),%ebx
  0x01cbf20d: add    $0x4,%esi
  0x01cbf210: jmp    *0x55629438(,%ebx,4)
  0x01cbf217: nop    
  0x01cbf218: int3   
  0x01cbf219: int3   
  0x01cbf21a: int3   
  0x01cbf21b: int3   
  0x01cbf21c: int3   
  0x01cbf21d: int3   
  0x01cbf21e: int3   
  0x01cbf21f: int3   

----------------------------------------------------------------------
iload_0  26 iload_0  [0x01cbf230, 0x01cbf270]  64 bytes

  0x01cbf230: sub    $0x4,%esp
  0x01cbf233: fstps  (%esp)
  0x01cbf236: jmp    0x01cbf254
  0x01cbf23b: sub    $0x8,%esp
  0x01cbf23e: fstpl  (%esp)
  0x01cbf241: jmp    0x01cbf254
  0x01cbf246: push   %edx
  0x01cbf247: push   %eax
  0x01cbf248: jmp    0x01cbf254
  0x01cbf24d: push   %eax
  0x01cbf24e: jmp    0x01cbf254
  0x01cbf253: push   %eax
  0x01cbf254: mov    (%edi),%eax
  0x01cbf256: movzbl 0x1(%esi),%ebx
  0x01cbf25a: inc    %esi
  0x01cbf25b: jmp    *0x55628438(,%ebx,4)
  0x01cbf262: nop    
  0x01cbf263: nop    
  0x01cbf264: int3   
  0x01cbf265: int3   
  0x01cbf266: int3   
  0x01cbf267: int3   
  0x01cbf268: int3   
  0x01cbf269: int3   
  0x01cbf26a: int3   
  0x01cbf26b: int3   
  0x01cbf26c: int3   
  0x01cbf26d: int3   
  0x01cbf26e: int3   
  0x01cbf26f: int3   

----------------------------------------------------------------------
iload_1  27 iload_1  [0x01cbf280, 0x01cbf2c0]  64 bytes

  0x01cbf280: sub    $0x4,%esp
  0x01cbf283: fstps  (%esp)
  0x01cbf286: jmp    0x01cbf2a4
  0x01cbf28b: sub    $0x8,%esp
  0x01cbf28e: fstpl  (%esp)
  0x01cbf291: jmp    0x01cbf2a4
  0x01cbf296: push   %edx
  0x01cbf297: push   %eax
  0x01cbf298: jmp    0x01cbf2a4
  0x01cbf29d: push   %eax
  0x01cbf29e: jmp    0x01cbf2a4
  0x01cbf2a3: push   %eax
  0x01cbf2a4: mov    -0x4(%edi),%eax
  0x01cbf2a7: movzbl 0x1(%esi),%ebx
  0x01cbf2ab: inc    %esi
  0x01cbf2ac: jmp    *0x55628438(,%ebx,4)
  0x01cbf2b3: nop    
  0x01cbf2b4: int3   
  0x01cbf2b5: int3   
  0x01cbf2b6: int3   
  0x01cbf2b7: int3   
  0x01cbf2b8: int3   
  0x01cbf2b9: int3   
  0x01cbf2ba: int3   
  0x01cbf2bb: int3   
  0x01cbf2bc: int3   
  0x01cbf2bd: int3   
  0x01cbf2be: int3   
  0x01cbf2bf: int3   

----------------------------------------------------------------------
iload_2  28 iload_2  [0x01cbf2d0, 0x01cbf310]  64 bytes

  0x01cbf2d0: sub    $0x4,%esp
  0x01cbf2d3: fstps  (%esp)
  0x01cbf2d6: jmp    0x01cbf2f4
  0x01cbf2db: sub    $0x8,%esp
  0x01cbf2de: fstpl  (%esp)
  0x01cbf2e1: jmp    0x01cbf2f4
  0x01cbf2e6: push   %edx
  0x01cbf2e7: push   %eax
  0x01cbf2e8: jmp    0x01cbf2f4
  0x01cbf2ed: push   %eax
  0x01cbf2ee: jmp    0x01cbf2f4
  0x01cbf2f3: push   %eax
  0x01cbf2f4: mov    -0x8(%edi),%eax
  0x01cbf2f7: movzbl 0x1(%esi),%ebx
  0x01cbf2fb: inc    %esi
  0x01cbf2fc: jmp    *0x55628438(,%ebx,4)
  0x01cbf303: nop    
  0x01cbf304: int3   
  0x01cbf305: int3   
  0x01cbf306: int3   
  0x01cbf307: int3   
  0x01cbf308: int3   
  0x01cbf309: int3   
  0x01cbf30a: int3   
  0x01cbf30b: int3   
  0x01cbf30c: int3   
  0x01cbf30d: int3   
  0x01cbf30e: int3   
  0x01cbf30f: int3   

----------------------------------------------------------------------
iload_3  29 iload_3  [0x01cbf320, 0x01cbf360]  64 bytes

  0x01cbf320: sub    $0x4,%esp
  0x01cbf323: fstps  (%esp)
  0x01cbf326: jmp    0x01cbf344
  0x01cbf32b: sub    $0x8,%esp
  0x01cbf32e: fstpl  (%esp)
  0x01cbf331: jmp    0x01cbf344
  0x01cbf336: push   %edx
  0x01cbf337: push   %eax
  0x01cbf338: jmp    0x01cbf344
  0x01cbf33d: push   %eax
  0x01cbf33e: jmp    0x01cbf344
  0x01cbf343: push   %eax
  0x01cbf344: mov    -0xc(%edi),%eax
  0x01cbf347: movzbl 0x1(%esi),%ebx
  0x01cbf34b: inc    %esi
  0x01cbf34c: jmp    *0x55628438(,%ebx,4)
  0x01cbf353: nop    
  0x01cbf354: int3   
  0x01cbf355: int3   
  0x01cbf356: int3   
  0x01cbf357: int3   
  0x01cbf358: int3   
  0x01cbf359: int3   
  0x01cbf35a: int3   
  0x01cbf35b: int3   
  0x01cbf35c: int3   
  0x01cbf35d: int3   
  0x01cbf35e: int3   
  0x01cbf35f: int3   

----------------------------------------------------------------------
lload_0  30 lload_0  [0x01cbf370, 0x01cbf3b0]  64 bytes

  0x01cbf370: sub    $0x4,%esp
  0x01cbf373: fstps  (%esp)
  0x01cbf376: jmp    0x01cbf394
  0x01cbf37b: sub    $0x8,%esp
  0x01cbf37e: fstpl  (%esp)
  0x01cbf381: jmp    0x01cbf394
  0x01cbf386: push   %edx
  0x01cbf387: push   %eax
  0x01cbf388: jmp    0x01cbf394
  0x01cbf38d: push   %eax
  0x01cbf38e: jmp    0x01cbf394
  0x01cbf393: push   %eax
  0x01cbf394: mov    -0x4(%edi),%eax
  0x01cbf397: mov    (%edi),%edx
  0x01cbf399: movzbl 0x1(%esi),%ebx
  0x01cbf39d: inc    %esi
  0x01cbf39e: jmp    *0x55628838(,%ebx,4)
  0x01cbf3a5: nop    
  0x01cbf3a6: nop    
  0x01cbf3a7: nop    
  0x01cbf3a8: int3   
  0x01cbf3a9: int3   
  0x01cbf3aa: int3   
  0x01cbf3ab: int3   
  0x01cbf3ac: int3   
  0x01cbf3ad: int3   
  0x01cbf3ae: int3   
  0x01cbf3af: int3   

----------------------------------------------------------------------
lload_1  31 lload_1  [0x01cbf3c0, 0x01cbf400]  64 bytes

  0x01cbf3c0: sub    $0x4,%esp
  0x01cbf3c3: fstps  (%esp)
  0x01cbf3c6: jmp    0x01cbf3e4
  0x01cbf3cb: sub    $0x8,%esp
  0x01cbf3ce: fstpl  (%esp)
  0x01cbf3d1: jmp    0x01cbf3e4
  0x01cbf3d6: push   %edx
  0x01cbf3d7: push   %eax
  0x01cbf3d8: jmp    0x01cbf3e4
  0x01cbf3dd: push   %eax
  0x01cbf3de: jmp    0x01cbf3e4
  0x01cbf3e3: push   %eax
  0x01cbf3e4: mov    -0x8(%edi),%eax
  0x01cbf3e7: mov    -0x4(%edi),%edx
  0x01cbf3ea: movzbl 0x1(%esi),%ebx
  0x01cbf3ee: inc    %esi
  0x01cbf3ef: jmp    *0x55628838(,%ebx,4)
  0x01cbf3f6: nop    
  0x01cbf3f7: nop    
  0x01cbf3f8: int3   
  0x01cbf3f9: int3   
  0x01cbf3fa: int3   
  0x01cbf3fb: int3   
  0x01cbf3fc: int3   
  0x01cbf3fd: int3   
  0x01cbf3fe: int3   
  0x01cbf3ff: int3   

----------------------------------------------------------------------
lload_2  32 lload_2  [0x01cbf410, 0x01cbf450]  64 bytes

  0x01cbf410: sub    $0x4,%esp
  0x01cbf413: fstps  (%esp)
  0x01cbf416: jmp    0x01cbf434
  0x01cbf41b: sub    $0x8,%esp
  0x01cbf41e: fstpl  (%esp)
  0x01cbf421: jmp    0x01cbf434
  0x01cbf426: push   %edx
  0x01cbf427: push   %eax
  0x01cbf428: jmp    0x01cbf434
  0x01cbf42d: push   %eax
  0x01cbf42e: jmp    0x01cbf434
  0x01cbf433: push   %eax
  0x01cbf434: mov    -0xc(%edi),%eax
  0x01cbf437: mov    -0x8(%edi),%edx
  0x01cbf43a: movzbl 0x1(%esi),%ebx
  0x01cbf43e: inc    %esi
  0x01cbf43f: jmp    *0x55628838(,%ebx,4)
  0x01cbf446: nop    
  0x01cbf447: nop    
  0x01cbf448: int3   
  0x01cbf449: int3   
  0x01cbf44a: int3   
  0x01cbf44b: int3   
  0x01cbf44c: int3   
  0x01cbf44d: int3   
  0x01cbf44e: int3   
  0x01cbf44f: int3   

----------------------------------------------------------------------
lload_3  33 lload_3  [0x01cbf460, 0x01cbf4a0]  64 bytes

  0x01cbf460: sub    $0x4,%esp
  0x01cbf463: fstps  (%esp)
  0x01cbf466: jmp    0x01cbf484
  0x01cbf46b: sub    $0x8,%esp
  0x01cbf46e: fstpl  (%esp)
  0x01cbf471: jmp    0x01cbf484
  0x01cbf476: push   %edx
  0x01cbf477: push   %eax
  0x01cbf478: jmp    0x01cbf484
  0x01cbf47d: push   %eax
  0x01cbf47e: jmp    0x01cbf484
  0x01cbf483: push   %eax
  0x01cbf484: mov    -0x10(%edi),%eax
  0x01cbf487: mov    -0xc(%edi),%edx
  0x01cbf48a: movzbl 0x1(%esi),%ebx
  0x01cbf48e: inc    %esi
  0x01cbf48f: jmp    *0x55628838(,%ebx,4)
  0x01cbf496: nop    
  0x01cbf497: nop    
  0x01cbf498: int3   
  0x01cbf499: int3   
  0x01cbf49a: int3   
  0x01cbf49b: int3   
  0x01cbf49c: int3   
  0x01cbf49d: int3   
  0x01cbf49e: int3   
  0x01cbf49f: int3   

----------------------------------------------------------------------
fload_0  34 fload_0  [0x01cbf4b0, 0x01cbf4f0]  64 bytes

  0x01cbf4b0: sub    $0x4,%esp
  0x01cbf4b3: fstps  (%esp)
  0x01cbf4b6: jmp    0x01cbf4d4
  0x01cbf4bb: sub    $0x8,%esp
  0x01cbf4be: fstpl  (%esp)
  0x01cbf4c1: jmp    0x01cbf4d4
  0x01cbf4c6: push   %edx
  0x01cbf4c7: push   %eax
  0x01cbf4c8: jmp    0x01cbf4d4
  0x01cbf4cd: push   %eax
  0x01cbf4ce: jmp    0x01cbf4d4
  0x01cbf4d3: push   %eax
  0x01cbf4d4: flds   (%edi)
  0x01cbf4d6: movzbl 0x1(%esi),%ebx
  0x01cbf4da: inc    %esi
  0x01cbf4db: jmp    *0x55628c38(,%ebx,4)
  0x01cbf4e2: nop    
  0x01cbf4e3: nop    
  0x01cbf4e4: int3   
  0x01cbf4e5: int3   
  0x01cbf4e6: int3   
  0x01cbf4e7: int3   
  0x01cbf4e8: int3   
  0x01cbf4e9: int3   
  0x01cbf4ea: int3   
  0x01cbf4eb: int3   
  0x01cbf4ec: int3   
  0x01cbf4ed: int3   
  0x01cbf4ee: int3   
  0x01cbf4ef: int3   

----------------------------------------------------------------------
fload_1  35 fload_1  [0x01cbf500, 0x01cbf540]  64 bytes

  0x01cbf500: sub    $0x4,%esp
  0x01cbf503: fstps  (%esp)
  0x01cbf506: jmp    0x01cbf524
  0x01cbf50b: sub    $0x8,%esp
  0x01cbf50e: fstpl  (%esp)
  0x01cbf511: jmp    0x01cbf524
  0x01cbf516: push   %edx
  0x01cbf517: push   %eax
  0x01cbf518: jmp    0x01cbf524
  0x01cbf51d: push   %eax
  0x01cbf51e: jmp    0x01cbf524
  0x01cbf523: push   %eax
  0x01cbf524: flds   -0x4(%edi)
  0x01cbf527: movzbl 0x1(%esi),%ebx
  0x01cbf52b: inc    %esi
  0x01cbf52c: jmp    *0x55628c38(,%ebx,4)
  0x01cbf533: nop    
  0x01cbf534: int3   
  0x01cbf535: int3   
  0x01cbf536: int3   
  0x01cbf537: int3   
  0x01cbf538: int3   
  0x01cbf539: int3   
  0x01cbf53a: int3   
  0x01cbf53b: int3   
  0x01cbf53c: int3   
  0x01cbf53d: int3   
  0x01cbf53e: int3   
  0x01cbf53f: int3   

----------------------------------------------------------------------
fload_2  36 fload_2  [0x01cbf550, 0x01cbf590]  64 bytes

  0x01cbf550: sub    $0x4,%esp
  0x01cbf553: fstps  (%esp)
  0x01cbf556: jmp    0x01cbf574
  0x01cbf55b: sub    $0x8,%esp
  0x01cbf55e: fstpl  (%esp)
  0x01cbf561: jmp    0x01cbf574
  0x01cbf566: push   %edx
  0x01cbf567: push   %eax
  0x01cbf568: jmp    0x01cbf574
  0x01cbf56d: push   %eax
  0x01cbf56e: jmp    0x01cbf574
  0x01cbf573: push   %eax
  0x01cbf574: flds   -0x8(%edi)
  0x01cbf577: movzbl 0x1(%esi),%ebx
  0x01cbf57b: inc    %esi
  0x01cbf57c: jmp    *0x55628c38(,%ebx,4)
  0x01cbf583: nop    
  0x01cbf584: int3   
  0x01cbf585: int3   
  0x01cbf586: int3   
  0x01cbf587: int3   
  0x01cbf588: int3   
  0x01cbf589: int3   
  0x01cbf58a: int3   
  0x01cbf58b: int3   
  0x01cbf58c: int3   
  0x01cbf58d: int3   
  0x01cbf58e: int3   
  0x01cbf58f: int3   

----------------------------------------------------------------------
fload_3  37 fload_3  [0x01cbf5a0, 0x01cbf5e0]  64 bytes

  0x01cbf5a0: sub    $0x4,%esp
  0x01cbf5a3: fstps  (%esp)
  0x01cbf5a6: jmp    0x01cbf5c4
  0x01cbf5ab: sub    $0x8,%esp
  0x01cbf5ae: fstpl  (%esp)
  0x01cbf5b1: jmp    0x01cbf5c4
  0x01cbf5b6: push   %edx
  0x01cbf5b7: push   %eax
  0x01cbf5b8: jmp    0x01cbf5c4
  0x01cbf5bd: push   %eax
  0x01cbf5be: jmp    0x01cbf5c4
  0x01cbf5c3: push   %eax
  0x01cbf5c4: flds   -0xc(%edi)
  0x01cbf5c7: movzbl 0x1(%esi),%ebx
  0x01cbf5cb: inc    %esi
  0x01cbf5cc: jmp    *0x55628c38(,%ebx,4)
  0x01cbf5d3: nop    
  0x01cbf5d4: int3   
  0x01cbf5d5: int3   
  0x01cbf5d6: int3   
  0x01cbf5d7: int3   
  0x01cbf5d8: int3   
  0x01cbf5d9: int3   
  0x01cbf5da: int3   
  0x01cbf5db: int3   
  0x01cbf5dc: int3   
  0x01cbf5dd: int3   
  0x01cbf5de: int3   
  0x01cbf5df: int3   

----------------------------------------------------------------------
dload_0  38 dload_0  [0x01cbf5f0, 0x01cbf630]  64 bytes

  0x01cbf5f0: sub    $0x4,%esp
  0x01cbf5f3: fstps  (%esp)
  0x01cbf5f6: jmp    0x01cbf614
  0x01cbf5fb: sub    $0x8,%esp
  0x01cbf5fe: fstpl  (%esp)
  0x01cbf601: jmp    0x01cbf614
  0x01cbf606: push   %edx
  0x01cbf607: push   %eax
  0x01cbf608: jmp    0x01cbf614
  0x01cbf60d: push   %eax
  0x01cbf60e: jmp    0x01cbf614
  0x01cbf613: push   %eax
  0x01cbf614: fldl   -0x4(%edi)
  0x01cbf617: movzbl 0x1(%esi),%ebx
  0x01cbf61b: inc    %esi
  0x01cbf61c: jmp    *0x55629038(,%ebx,4)
  0x01cbf623: nop    
  0x01cbf624: int3   
  0x01cbf625: int3   
  0x01cbf626: int3   
  0x01cbf627: int3   
  0x01cbf628: int3   
  0x01cbf629: int3   
  0x01cbf62a: int3   
  0x01cbf62b: int3   
  0x01cbf62c: int3   
  0x01cbf62d: int3   
  0x01cbf62e: int3   
  0x01cbf62f: int3   

----------------------------------------------------------------------
dload_1  39 dload_1  [0x01cbf640, 0x01cbf680]  64 bytes

  0x01cbf640: sub    $0x4,%esp
  0x01cbf643: fstps  (%esp)
  0x01cbf646: jmp    0x01cbf664
  0x01cbf64b: sub    $0x8,%esp
  0x01cbf64e: fstpl  (%esp)
  0x01cbf651: jmp    0x01cbf664
  0x01cbf656: push   %edx
  0x01cbf657: push   %eax
  0x01cbf658: jmp    0x01cbf664
  0x01cbf65d: push   %eax
  0x01cbf65e: jmp    0x01cbf664
  0x01cbf663: push   %eax
  0x01cbf664: fldl   -0x8(%edi)
  0x01cbf667: movzbl 0x1(%esi),%ebx
  0x01cbf66b: inc    %esi
  0x01cbf66c: jmp    *0x55629038(,%ebx,4)
  0x01cbf673: nop    
  0x01cbf674: int3   
  0x01cbf675: int3   
  0x01cbf676: int3   
  0x01cbf677: int3   
  0x01cbf678: int3   
  0x01cbf679: int3   
  0x01cbf67a: int3   
  0x01cbf67b: int3   
  0x01cbf67c: int3   
  0x01cbf67d: int3   
  0x01cbf67e: int3   
  0x01cbf67f: int3   

----------------------------------------------------------------------
dload_2  40 dload_2  [0x01cbf690, 0x01cbf6d0]  64 bytes

  0x01cbf690: sub    $0x4,%esp
  0x01cbf693: fstps  (%esp)
  0x01cbf696: jmp    0x01cbf6b4
  0x01cbf69b: sub    $0x8,%esp
  0x01cbf69e: fstpl  (%esp)
  0x01cbf6a1: jmp    0x01cbf6b4
  0x01cbf6a6: push   %edx
  0x01cbf6a7: push   %eax
  0x01cbf6a8: jmp    0x01cbf6b4
  0x01cbf6ad: push   %eax
  0x01cbf6ae: jmp    0x01cbf6b4
  0x01cbf6b3: push   %eax
  0x01cbf6b4: fldl   -0xc(%edi)
  0x01cbf6b7: movzbl 0x1(%esi),%ebx
  0x01cbf6bb: inc    %esi
  0x01cbf6bc: jmp    *0x55629038(,%ebx,4)
  0x01cbf6c3: nop    
  0x01cbf6c4: int3   
  0x01cbf6c5: int3   
  0x01cbf6c6: int3   
  0x01cbf6c7: int3   
  0x01cbf6c8: int3   
  0x01cbf6c9: int3   
  0x01cbf6ca: int3   
  0x01cbf6cb: int3   
  0x01cbf6cc: int3   
  0x01cbf6cd: int3   
  0x01cbf6ce: int3   
  0x01cbf6cf: int3   

----------------------------------------------------------------------
dload_3  41 dload_3  [0x01cbf6e0, 0x01cbf720]  64 bytes

  0x01cbf6e0: sub    $0x4,%esp
  0x01cbf6e3: fstps  (%esp)
  0x01cbf6e6: jmp    0x01cbf704
  0x01cbf6eb: sub    $0x8,%esp
  0x01cbf6ee: fstpl  (%esp)
  0x01cbf6f1: jmp    0x01cbf704
  0x01cbf6f6: push   %edx
  0x01cbf6f7: push   %eax
  0x01cbf6f8: jmp    0x01cbf704
  0x01cbf6fd: push   %eax
  0x01cbf6fe: jmp    0x01cbf704
  0x01cbf703: push   %eax
  0x01cbf704: fldl   -0x10(%edi)
  0x01cbf707: movzbl 0x1(%esi),%ebx
  0x01cbf70b: inc    %esi
  0x01cbf70c: jmp    *0x55629038(,%ebx,4)
  0x01cbf713: nop    
  0x01cbf714: int3   
  0x01cbf715: int3   
  0x01cbf716: int3   
  0x01cbf717: int3   
  0x01cbf718: int3   
  0x01cbf719: int3   
  0x01cbf71a: int3   
  0x01cbf71b: int3   
  0x01cbf71c: int3   
  0x01cbf71d: int3   
  0x01cbf71e: int3   
  0x01cbf71f: int3   

----------------------------------------------------------------------
aload_0  42 aload_0  [0x01cbf730, 0x01cbf770]  64 bytes

  0x01cbf730: sub    $0x4,%esp
  0x01cbf733: fstps  (%esp)
  0x01cbf736: jmp    0x01cbf754
  0x01cbf73b: sub    $0x8,%esp
  0x01cbf73e: fstpl  (%esp)
  0x01cbf741: jmp    0x01cbf754
  0x01cbf746: push   %edx
  0x01cbf747: push   %eax
  0x01cbf748: jmp    0x01cbf754
  0x01cbf74d: push   %eax
  0x01cbf74e: jmp    0x01cbf754
  0x01cbf753: push   %eax
  0x01cbf754: mov    (%edi),%eax
  0x01cbf756: movzbl 0x1(%esi),%ebx
  0x01cbf75a: inc    %esi
  0x01cbf75b: jmp    *0x55629438(,%ebx,4)
  0x01cbf762: nop    
  0x01cbf763: nop    
  0x01cbf764: int3   
  0x01cbf765: int3   
  0x01cbf766: int3   
  0x01cbf767: int3   
  0x01cbf768: int3   
  0x01cbf769: int3   
  0x01cbf76a: int3   
  0x01cbf76b: int3   
  0x01cbf76c: int3   
  0x01cbf76d: int3   
  0x01cbf76e: int3   
  0x01cbf76f: int3   

----------------------------------------------------------------------
aload_1  43 aload_1  [0x01cbf780, 0x01cbf7c0]  64 bytes

  0x01cbf780: sub    $0x4,%esp
  0x01cbf783: fstps  (%esp)
  0x01cbf786: jmp    0x01cbf7a4
  0x01cbf78b: sub    $0x8,%esp
  0x01cbf78e: fstpl  (%esp)
  0x01cbf791: jmp    0x01cbf7a4
  0x01cbf796: push   %edx
  0x01cbf797: push   %eax
  0x01cbf798: jmp    0x01cbf7a4
  0x01cbf79d: push   %eax
  0x01cbf79e: jmp    0x01cbf7a4
  0x01cbf7a3: push   %eax
  0x01cbf7a4: mov    -0x4(%edi),%eax
  0x01cbf7a7: movzbl 0x1(%esi),%ebx
  0x01cbf7ab: inc    %esi
  0x01cbf7ac: jmp    *0x55629438(,%ebx,4)
  0x01cbf7b3: nop    
  0x01cbf7b4: int3   
  0x01cbf7b5: int3   
  0x01cbf7b6: int3   
  0x01cbf7b7: int3   
  0x01cbf7b8: int3   
  0x01cbf7b9: int3   
  0x01cbf7ba: int3   
  0x01cbf7bb: int3   
  0x01cbf7bc: int3   
  0x01cbf7bd: int3   
  0x01cbf7be: int3   
  0x01cbf7bf: int3   

----------------------------------------------------------------------
aload_2  44 aload_2  [0x01cbf7d0, 0x01cbf810]  64 bytes

  0x01cbf7d0: sub    $0x4,%esp
  0x01cbf7d3: fstps  (%esp)
  0x01cbf7d6: jmp    0x01cbf7f4
  0x01cbf7db: sub    $0x8,%esp
  0x01cbf7de: fstpl  (%esp)
  0x01cbf7e1: jmp    0x01cbf7f4
  0x01cbf7e6: push   %edx
  0x01cbf7e7: push   %eax
  0x01cbf7e8: jmp    0x01cbf7f4
  0x01cbf7ed: push   %eax
  0x01cbf7ee: jmp    0x01cbf7f4
  0x01cbf7f3: push   %eax
  0x01cbf7f4: mov    -0x8(%edi),%eax
  0x01cbf7f7: movzbl 0x1(%esi),%ebx
  0x01cbf7fb: inc    %esi
  0x01cbf7fc: jmp    *0x55629438(,%ebx,4)
  0x01cbf803: nop    
  0x01cbf804: int3   
  0x01cbf805: int3   
  0x01cbf806: int3   
  0x01cbf807: int3   
  0x01cbf808: int3   
  0x01cbf809: int3   
  0x01cbf80a: int3   
  0x01cbf80b: int3   
  0x01cbf80c: int3   
  0x01cbf80d: int3   
  0x01cbf80e: int3   
  0x01cbf80f: int3   

----------------------------------------------------------------------
aload_3  45 aload_3  [0x01cbf820, 0x01cbf860]  64 bytes

  0x01cbf820: sub    $0x4,%esp
  0x01cbf823: fstps  (%esp)
  0x01cbf826: jmp    0x01cbf844
  0x01cbf82b: sub    $0x8,%esp
  0x01cbf82e: fstpl  (%esp)
  0x01cbf831: jmp    0x01cbf844
  0x01cbf836: push   %edx
  0x01cbf837: push   %eax
  0x01cbf838: jmp    0x01cbf844
  0x01cbf83d: push   %eax
  0x01cbf83e: jmp    0x01cbf844
  0x01cbf843: push   %eax
  0x01cbf844: mov    -0xc(%edi),%eax
  0x01cbf847: movzbl 0x1(%esi),%ebx
  0x01cbf84b: inc    %esi
  0x01cbf84c: jmp    *0x55629438(,%ebx,4)
  0x01cbf853: nop    
  0x01cbf854: int3   
  0x01cbf855: int3   
  0x01cbf856: int3   
  0x01cbf857: int3   
  0x01cbf858: int3   
  0x01cbf859: int3   
  0x01cbf85a: int3   
  0x01cbf85b: int3   
  0x01cbf85c: int3   
  0x01cbf85d: int3   
  0x01cbf85e: int3   
  0x01cbf85f: int3   

----------------------------------------------------------------------
iaload  46 iaload  [0x01cbf870, 0x01cbf890]  32 bytes

  0x01cbf870: pop    %eax
  0x01cbf871: pop    %edx
  0x01cbf872: cmp    0x8(%edx),%eax
  0x01cbf875: mov    %eax,%ebx
  0x01cbf877: jae    0x01cbb5d0
  0x01cbf87d: mov    0xc(%edx,%eax,4),%eax
  0x01cbf881: movzbl 0x1(%esi),%ebx
  0x01cbf885: inc    %esi
  0x01cbf886: jmp    *0x55628438(,%ebx,4)
  0x01cbf88d: nop    
  0x01cbf88e: nop    
  0x01cbf88f: nop    

----------------------------------------------------------------------
laload  47 laload  [0x01cbf8a0, 0x01cbf8d0]  48 bytes

  0x01cbf8a0: pop    %eax
  0x01cbf8a1: pop    %edx
  0x01cbf8a2: cmp    0x8(%edx),%eax
  0x01cbf8a5: mov    %eax,%ebx
  0x01cbf8a7: jae    0x01cbb5d0
  0x01cbf8ad: mov    %eax,%ebx
  0x01cbf8af: mov    0x10(%edx,%ebx,8),%eax
  0x01cbf8b3: mov    0x14(%edx,%ebx,8),%edx
  0x01cbf8b7: movzbl 0x1(%esi),%ebx
  0x01cbf8bb: inc    %esi
  0x01cbf8bc: jmp    *0x55628838(,%ebx,4)
  0x01cbf8c3: nop    
  0x01cbf8c4: int3   
  0x01cbf8c5: int3   
  0x01cbf8c6: int3   
  0x01cbf8c7: int3   
  0x01cbf8c8: int3   
  0x01cbf8c9: int3   
  0x01cbf8ca: int3   
  0x01cbf8cb: int3   
  0x01cbf8cc: int3   
  0x01cbf8cd: int3   
  0x01cbf8ce: int3   
  0x01cbf8cf: int3   

----------------------------------------------------------------------
faload  48 faload  [0x01cbf8e0, 0x01cbf900]  32 bytes

  0x01cbf8e0: pop    %eax
  0x01cbf8e1: pop    %edx
  0x01cbf8e2: cmp    0x8(%edx),%eax
  0x01cbf8e5: mov    %eax,%ebx
  0x01cbf8e7: jae    0x01cbb5d0
  0x01cbf8ed: flds   0xc(%edx,%eax,4)
  0x01cbf8f1: movzbl 0x1(%esi),%ebx
  0x01cbf8f5: inc    %esi
  0x01cbf8f6: jmp    *0x55628c38(,%ebx,4)
  0x01cbf8fd: nop    
  0x01cbf8fe: nop    
  0x01cbf8ff: nop    

----------------------------------------------------------------------
daload  49 daload  [0x01cbf910, 0x01cbf930]  32 bytes

  0x01cbf910: pop    %eax
  0x01cbf911: pop    %edx
  0x01cbf912: cmp    0x8(%edx),%eax
  0x01cbf915: mov    %eax,%ebx
  0x01cbf917: jae    0x01cbb5d0
  0x01cbf91d: fldl   0x10(%edx,%eax,8)
  0x01cbf921: movzbl 0x1(%esi),%ebx
  0x01cbf925: inc    %esi
  0x01cbf926: jmp    *0x55629038(,%ebx,4)
  0x01cbf92d: nop    
  0x01cbf92e: nop    
  0x01cbf92f: nop    

----------------------------------------------------------------------
aaload  50 aaload  [0x01cbf940, 0x01cbf960]  32 bytes

  0x01cbf940: pop    %eax
  0x01cbf941: pop    %edx
  0x01cbf942: cmp    0x8(%edx),%eax
  0x01cbf945: mov    %eax,%ebx
  0x01cbf947: jae    0x01cbb5d0
  0x01cbf94d: mov    0xc(%edx,%eax,4),%eax
  0x01cbf951: movzbl 0x1(%esi),%ebx
  0x01cbf955: inc    %esi
  0x01cbf956: jmp    *0x55629438(,%ebx,4)
  0x01cbf95d: nop    
  0x01cbf95e: nop    
  0x01cbf95f: nop    

----------------------------------------------------------------------
baload  51 baload  [0x01cbf970, 0x01cbf990]  32 bytes

  0x01cbf970: pop    %eax
  0x01cbf971: pop    %edx
  0x01cbf972: cmp    0x8(%edx),%eax
  0x01cbf975: mov    %eax,%ebx
  0x01cbf977: jae    0x01cbb5d0
  0x01cbf97d: movsbl 0xc(%edx,%eax,1),%ebx
  0x01cbf982: mov    %ebx,%eax
  0x01cbf984: movzbl 0x1(%esi),%ebx
  0x01cbf988: inc    %esi
  0x01cbf989: jmp    *0x55628438(,%ebx,4)

----------------------------------------------------------------------
caload  52 caload  [0x01cbf9a0, 0x01cbf9c0]  32 bytes

  0x01cbf9a0: pop    %eax
  0x01cbf9a1: pop    %edx
  0x01cbf9a2: cmp    0x8(%edx),%eax
  0x01cbf9a5: mov    %eax,%ebx
  0x01cbf9a7: jae    0x01cbb5d0
  0x01cbf9ad: movzwl 0xc(%edx,%eax,2),%ebx
  0x01cbf9b2: mov    %ebx,%eax
  0x01cbf9b4: movzbl 0x1(%esi),%ebx
  0x01cbf9b8: inc    %esi
  0x01cbf9b9: jmp    *0x55628438(,%ebx,4)

----------------------------------------------------------------------
saload  53 saload  [0x01cbf9d0, 0x01cbf9f0]  32 bytes

  0x01cbf9d0: pop    %eax
  0x01cbf9d1: pop    %edx
  0x01cbf9d2: cmp    0x8(%edx),%eax
  0x01cbf9d5: mov    %eax,%ebx
  0x01cbf9d7: jae    0x01cbb5d0
  0x01cbf9dd: movswl 0xc(%edx,%eax,2),%ebx
  0x01cbf9e2: mov    %ebx,%eax
  0x01cbf9e4: movzbl 0x1(%esi),%ebx
  0x01cbf9e8: inc    %esi
  0x01cbf9e9: jmp    *0x55628438(,%ebx,4)

----------------------------------------------------------------------
istore  54 istore  [0x01cbfa00, 0x01cbfa40]  64 bytes

  0x01cbfa00: pop    %eax
  0x01cbfa01: movzbl 0x1(%esi),%ebx
  0x01cbfa05: neg    %ebx
  0x01cbfa07: mov    %eax,(%edi,%ebx,4)
  0x01cbfa0a: movzbl 0x2(%esi),%ebx
  0x01cbfa0e: add    $0x2,%esi
  0x01cbfa11: jmp    *0x55629838(,%ebx,4)
  0x01cbfa18: pop    %eax
  0x01cbfa19: movzwl 0x2(%esi),%ebx
  0x01cbfa1d: bswap  %ebx
  0x01cbfa1f: shr    $0x10,%ebx
  0x01cbfa22: neg    %ebx
  0x01cbfa24: mov    %eax,(%edi,%ebx,4)
  0x01cbfa27: movzbl 0x4(%esi),%ebx
  0x01cbfa2b: add    $0x4,%esi
  0x01cbfa2e: jmp    *0x55629838(,%ebx,4)
  0x01cbfa35: nop    
  0x01cbfa36: nop    
  0x01cbfa37: nop    
  0x01cbfa38: int3   
  0x01cbfa39: int3   
  0x01cbfa3a: int3   
  0x01cbfa3b: int3   
  0x01cbfa3c: int3   
  0x01cbfa3d: int3   
  0x01cbfa3e: int3   
  0x01cbfa3f: int3   

----------------------------------------------------------------------
lstore  55 lstore  [0x01cbfa50, 0x01cbfa90]  64 bytes

  0x01cbfa50: pop    %eax
  0x01cbfa51: pop    %edx
  0x01cbfa52: movzbl 0x1(%esi),%ebx
  0x01cbfa56: neg    %ebx
  0x01cbfa58: mov    %eax,-0x4(%edi,%ebx,4)
  0x01cbfa5c: mov    %edx,(%edi,%ebx,4)
  0x01cbfa5f: movzbl 0x2(%esi),%ebx
  0x01cbfa63: add    $0x2,%esi
  0x01cbfa66: jmp    *0x55629838(,%ebx,4)
  0x01cbfa6d: pop    %eax
  0x01cbfa6e: pop    %edx
  0x01cbfa6f: movzwl 0x2(%esi),%ebx
  0x01cbfa73: bswap  %ebx
  0x01cbfa75: shr    $0x10,%ebx
  0x01cbfa78: neg    %ebx
  0x01cbfa7a: mov    %eax,-0x4(%edi,%ebx,4)
  0x01cbfa7e: mov    %edx,(%edi,%ebx,4)
  0x01cbfa81: movzbl 0x4(%esi),%ebx
  0x01cbfa85: add    $0x4,%esi
  0x01cbfa88: jmp    *0x55629838(,%ebx,4)
  0x01cbfa8f: nop    

----------------------------------------------------------------------
fstore  56 fstore  [0x01cbfaa0, 0x01cbfae0]  64 bytes

  0x01cbfaa0: flds   (%esp)
  0x01cbfaa3: add    $0x4,%esp
  0x01cbfaa6: movzbl 0x1(%esi),%ebx
  0x01cbfaaa: neg    %ebx
  0x01cbfaac: fstps  (%edi,%ebx,4)
  0x01cbfaaf: movzbl 0x2(%esi),%ebx
  0x01cbfab3: add    $0x2,%esi
  0x01cbfab6: jmp    *0x55629838(,%ebx,4)
  0x01cbfabd: pop    %eax
  0x01cbfabe: movzwl 0x2(%esi),%ebx
  0x01cbfac2: bswap  %ebx
  0x01cbfac4: shr    $0x10,%ebx
  0x01cbfac7: neg    %ebx
  0x01cbfac9: mov    %eax,(%edi,%ebx,4)
  0x01cbfacc: movzbl 0x4(%esi),%ebx
  0x01cbfad0: add    $0x4,%esi
  0x01cbfad3: jmp    *0x55629838(,%ebx,4)
  0x01cbfada: nop    
  0x01cbfadb: nop    
  0x01cbfadc: int3   
  0x01cbfadd: int3   
  0x01cbfade: int3   
  0x01cbfadf: int3   

----------------------------------------------------------------------
dstore  57 dstore  [0x01cbfaf0, 0x01cbfb30]  64 bytes

  0x01cbfaf0: fldl   (%esp)
  0x01cbfaf3: add    $0x8,%esp
  0x01cbfaf6: movzbl 0x1(%esi),%ebx
  0x01cbfafa: neg    %ebx
  0x01cbfafc: fstpl  -0x4(%edi,%ebx,4)
  0x01cbfb00: movzbl 0x2(%esi),%ebx
  0x01cbfb04: add    $0x2,%esi
  0x01cbfb07: jmp    *0x55629838(,%ebx,4)
  0x01cbfb0e: pop    %eax
  0x01cbfb0f: pop    %edx
  0x01cbfb10: movzwl 0x2(%esi),%ebx
  0x01cbfb14: bswap  %ebx
  0x01cbfb16: shr    $0x10,%ebx
  0x01cbfb19: neg    %ebx
  0x01cbfb1b: mov    %eax,-0x4(%edi,%ebx,4)
  0x01cbfb1f: mov    %edx,(%edi,%ebx,4)
  0x01cbfb22: movzbl 0x4(%esi),%ebx
  0x01cbfb26: add    $0x4,%esi
  0x01cbfb29: jmp    *0x55629838(,%ebx,4)

----------------------------------------------------------------------
astore  58 astore  [0x01cbfb40, 0x01cbfba0]  96 bytes

  0x01cbfb40: sub    $0x4,%esp
  0x01cbfb43: fstps  (%esp)
  0x01cbfb46: jmp    0x01cbfb64
  0x01cbfb4b: sub    $0x8,%esp
  0x01cbfb4e: fstpl  (%esp)
  0x01cbfb51: jmp    0x01cbfb64
  0x01cbfb56: push   %edx
  0x01cbfb57: push   %eax
  0x01cbfb58: jmp    0x01cbfb64
  0x01cbfb5d: push   %eax
  0x01cbfb5e: jmp    0x01cbfb64
  0x01cbfb63: push   %eax
  0x01cbfb64: pop    %eax
  0x01cbfb65: movzbl 0x1(%esi),%ebx
  0x01cbfb69: neg    %ebx
  0x01cbfb6b: mov    %eax,(%edi,%ebx,4)
  0x01cbfb6e: movzbl 0x2(%esi),%ebx
  0x01cbfb72: add    $0x2,%esi
  0x01cbfb75: jmp    *0x55629838(,%ebx,4)
  0x01cbfb7c: pop    %eax
  0x01cbfb7d: movzwl 0x2(%esi),%ebx
  0x01cbfb81: bswap  %ebx
  0x01cbfb83: shr    $0x10,%ebx
  0x01cbfb86: neg    %ebx
  0x01cbfb88: mov    %eax,(%edi,%ebx,4)
  0x01cbfb8b: movzbl 0x4(%esi),%ebx
  0x01cbfb8f: add    $0x4,%esi
  0x01cbfb92: jmp    *0x55629838(,%ebx,4)
  0x01cbfb99: nop    
  0x01cbfb9a: nop    
  0x01cbfb9b: nop    
  0x01cbfb9c: int3   
  0x01cbfb9d: int3   
  0x01cbfb9e: int3   
  0x01cbfb9f: int3   

----------------------------------------------------------------------
istore_0  59 istore_0  [0x01cbfbb0, 0x01cbfbc0]  16 bytes

  0x01cbfbb0: pop    %eax
  0x01cbfbb1: mov    %eax,(%edi)
  0x01cbfbb3: movzbl 0x1(%esi),%ebx
  0x01cbfbb7: inc    %esi
  0x01cbfbb8: jmp    *0x55629838(,%ebx,4)
  0x01cbfbbf: nop    

----------------------------------------------------------------------
istore_1  60 istore_1  [0x01cbfbd0, 0x01cbfbe0]  16 bytes

  0x01cbfbd0: pop    %eax
  0x01cbfbd1: mov    %eax,-0x4(%edi)
  0x01cbfbd4: movzbl 0x1(%esi),%ebx
  0x01cbfbd8: inc    %esi
  0x01cbfbd9: jmp    *0x55629838(,%ebx,4)

----------------------------------------------------------------------
istore_2  61 istore_2  [0x01cbfbf0, 0x01cbfc00]  16 bytes

  0x01cbfbf0: pop    %eax
  0x01cbfbf1: mov    %eax,-0x8(%edi)
  0x01cbfbf4: movzbl 0x1(%esi),%ebx
  0x01cbfbf8: inc    %esi
  0x01cbfbf9: jmp    *0x55629838(,%ebx,4)

----------------------------------------------------------------------
istore_3  62 istore_3  [0x01cbfc10, 0x01cbfc20]  16 bytes

  0x01cbfc10: pop    %eax
  0x01cbfc11: mov    %eax,-0xc(%edi)
  0x01cbfc14: movzbl 0x1(%esi),%ebx
  0x01cbfc18: inc    %esi
  0x01cbfc19: jmp    *0x55629838(,%ebx,4)

----------------------------------------------------------------------
lstore_0  63 lstore_0  [0x01cbfc30, 0x01cbfc50]  32 bytes

  0x01cbfc30: pop    %eax
  0x01cbfc31: pop    %edx
  0x01cbfc32: mov    %eax,-0x4(%edi)
  0x01cbfc35: mov    %edx,(%edi)
  0x01cbfc37: movzbl 0x1(%esi),%ebx
  0x01cbfc3b: inc    %esi
  0x01cbfc3c: jmp    *0x55629838(,%ebx,4)
  0x01cbfc43: nop    
  0x01cbfc44: int3   
  0x01cbfc45: int3   
  0x01cbfc46: int3   
  0x01cbfc47: int3   
  0x01cbfc48: int3   
  0x01cbfc49: int3   
  0x01cbfc4a: int3   
  0x01cbfc4b: int3   
  0x01cbfc4c: int3   
  0x01cbfc4d: int3   
  0x01cbfc4e: int3   
  0x01cbfc4f: int3   

----------------------------------------------------------------------
lstore_1  64 lstore_1  [0x01cbfc60, 0x01cbfc80]  32 bytes

  0x01cbfc60: pop    %eax
  0x01cbfc61: pop    %edx
  0x01cbfc62: mov    %eax,-0x8(%edi)
  0x01cbfc65: mov    %edx,-0x4(%edi)
  0x01cbfc68: movzbl 0x1(%esi),%ebx
  0x01cbfc6c: inc    %esi
  0x01cbfc6d: jmp    *0x55629838(,%ebx,4)
  0x01cbfc74: int3   
  0x01cbfc75: int3   
  0x01cbfc76: int3   
  0x01cbfc77: int3   
  0x01cbfc78: int3   
  0x01cbfc79: int3   
  0x01cbfc7a: int3   
  0x01cbfc7b: int3   
  0x01cbfc7c: int3   
  0x01cbfc7d: int3   
  0x01cbfc7e: int3   
  0x01cbfc7f: int3   

----------------------------------------------------------------------
lstore_2  65 lstore_2  [0x01cbfc90, 0x01cbfcb0]  32 bytes

  0x01cbfc90: pop    %eax
  0x01cbfc91: pop    %edx
  0x01cbfc92: mov    %eax,-0xc(%edi)
  0x01cbfc95: mov    %edx,-0x8(%edi)
  0x01cbfc98: movzbl 0x1(%esi),%ebx
  0x01cbfc9c: inc    %esi
  0x01cbfc9d: jmp    *0x55629838(,%ebx,4)
  0x01cbfca4: int3   
  0x01cbfca5: int3   
  0x01cbfca6: int3   
  0x01cbfca7: int3   
  0x01cbfca8: int3   
  0x01cbfca9: int3   
  0x01cbfcaa: int3   
  0x01cbfcab: int3   
  0x01cbfcac: int3   
  0x01cbfcad: int3   
  0x01cbfcae: int3   
  0x01cbfcaf: int3   

----------------------------------------------------------------------
lstore_3  66 lstore_3  [0x01cbfcc0, 0x01cbfce0]  32 bytes

  0x01cbfcc0: pop    %eax
  0x01cbfcc1: pop    %edx
  0x01cbfcc2: mov    %eax,-0x10(%edi)
  0x01cbfcc5: mov    %edx,-0xc(%edi)
  0x01cbfcc8: movzbl 0x1(%esi),%ebx
  0x01cbfccc: inc    %esi
  0x01cbfccd: jmp    *0x55629838(,%ebx,4)
  0x01cbfcd4: int3   
  0x01cbfcd5: int3   
  0x01cbfcd6: int3   
  0x01cbfcd7: int3   
  0x01cbfcd8: int3   
  0x01cbfcd9: int3   
  0x01cbfcda: int3   
  0x01cbfcdb: int3   
  0x01cbfcdc: int3   
  0x01cbfcdd: int3   
  0x01cbfcde: int3   
  0x01cbfcdf: int3   

----------------------------------------------------------------------
fstore_0  67 fstore_0  [0x01cbfcf0, 0x01cbfd10]  32 bytes

  0x01cbfcf0: flds   (%esp)
  0x01cbfcf3: add    $0x4,%esp
  0x01cbfcf6: fstps  (%edi)
  0x01cbfcf8: movzbl 0x1(%esi),%ebx
  0x01cbfcfc: inc    %esi
  0x01cbfcfd: jmp    *0x55629838(,%ebx,4)
  0x01cbfd04: int3   
  0x01cbfd05: int3   
  0x01cbfd06: int3   
  0x01cbfd07: int3   
  0x01cbfd08: int3   
  0x01cbfd09: int3   
  0x01cbfd0a: int3   
  0x01cbfd0b: int3   
  0x01cbfd0c: int3   
  0x01cbfd0d: int3   
  0x01cbfd0e: int3   
  0x01cbfd0f: int3   

----------------------------------------------------------------------
fstore_1  68 fstore_1  [0x01cbfd20, 0x01cbfd40]  32 bytes

  0x01cbfd20: flds   (%esp)
  0x01cbfd23: add    $0x4,%esp
  0x01cbfd26: fstps  -0x4(%edi)
  0x01cbfd29: movzbl 0x1(%esi),%ebx
  0x01cbfd2d: inc    %esi
  0x01cbfd2e: jmp    *0x55629838(,%ebx,4)
  0x01cbfd35: nop    
  0x01cbfd36: nop    
  0x01cbfd37: nop    
  0x01cbfd38: int3   
  0x01cbfd39: int3   
  0x01cbfd3a: int3   
  0x01cbfd3b: int3   
  0x01cbfd3c: int3   
  0x01cbfd3d: int3   
  0x01cbfd3e: int3   
  0x01cbfd3f: int3   

----------------------------------------------------------------------
fstore_2  69 fstore_2  [0x01cbfd50, 0x01cbfd70]  32 bytes

  0x01cbfd50: flds   (%esp)
  0x01cbfd53: add    $0x4,%esp
  0x01cbfd56: fstps  -0x8(%edi)
  0x01cbfd59: movzbl 0x1(%esi),%ebx
  0x01cbfd5d: inc    %esi
  0x01cbfd5e: jmp    *0x55629838(,%ebx,4)
  0x01cbfd65: nop    
  0x01cbfd66: nop    
  0x01cbfd67: nop    
  0x01cbfd68: int3   
  0x01cbfd69: int3   
  0x01cbfd6a: int3   
  0x01cbfd6b: int3   
  0x01cbfd6c: int3   
  0x01cbfd6d: int3   
  0x01cbfd6e: int3   
  0x01cbfd6f: int3   

----------------------------------------------------------------------
fstore_3  70 fstore_3  [0x01cbfd80, 0x01cbfda0]  32 bytes

  0x01cbfd80: flds   (%esp)
  0x01cbfd83: add    $0x4,%esp
  0x01cbfd86: fstps  -0xc(%edi)
  0x01cbfd89: movzbl 0x1(%esi),%ebx
  0x01cbfd8d: inc    %esi
  0x01cbfd8e: jmp    *0x55629838(,%ebx,4)
  0x01cbfd95: nop    
  0x01cbfd96: nop    
  0x01cbfd97: nop    
  0x01cbfd98: int3   
  0x01cbfd99: int3   
  0x01cbfd9a: int3   
  0x01cbfd9b: int3   
  0x01cbfd9c: int3   
  0x01cbfd9d: int3   
  0x01cbfd9e: int3   
  0x01cbfd9f: int3   

----------------------------------------------------------------------
dstore_0  71 dstore_0  [0x01cbfdb0, 0x01cbfdd0]  32 bytes

  0x01cbfdb0: fldl   (%esp)
  0x01cbfdb3: add    $0x8,%esp
  0x01cbfdb6: fstpl  -0x4(%edi)
  0x01cbfdb9: movzbl 0x1(%esi),%ebx
  0x01cbfdbd: inc    %esi
  0x01cbfdbe: jmp    *0x55629838(,%ebx,4)
  0x01cbfdc5: nop    
  0x01cbfdc6: nop    
  0x01cbfdc7: nop    
  0x01cbfdc8: int3   
  0x01cbfdc9: int3   
  0x01cbfdca: int3   
  0x01cbfdcb: int3   
  0x01cbfdcc: int3   
  0x01cbfdcd: int3   
  0x01cbfdce: int3   
  0x01cbfdcf: int3   

----------------------------------------------------------------------
dstore_1  72 dstore_1  [0x01cbfde0, 0x01cbfe00]  32 bytes

  0x01cbfde0: fldl   (%esp)
  0x01cbfde3: add    $0x8,%esp
  0x01cbfde6: fstpl  -0x8(%edi)
  0x01cbfde9: movzbl 0x1(%esi),%ebx
  0x01cbfded: inc    %esi
  0x01cbfdee: jmp    *0x55629838(,%ebx,4)
  0x01cbfdf5: nop    
  0x01cbfdf6: nop    
  0x01cbfdf7: nop    
  0x01cbfdf8: int3   
  0x01cbfdf9: int3   
  0x01cbfdfa: int3   
  0x01cbfdfb: int3   
  0x01cbfdfc: int3   
  0x01cbfdfd: int3   
  0x01cbfdfe: int3   
  0x01cbfdff: int3   

----------------------------------------------------------------------
dstore_2  73 dstore_2  [0x01cbfe10, 0x01cbfe30]  32 bytes

  0x01cbfe10: fldl   (%esp)
  0x01cbfe13: add    $0x8,%esp
  0x01cbfe16: fstpl  -0xc(%edi)
  0x01cbfe19: movzbl 0x1(%esi),%ebx
  0x01cbfe1d: inc    %esi
  0x01cbfe1e: jmp    *0x55629838(,%ebx,4)
  0x01cbfe25: nop    
  0x01cbfe26: nop    
  0x01cbfe27: nop    
  0x01cbfe28: int3   
  0x01cbfe29: int3   
  0x01cbfe2a: int3   
  0x01cbfe2b: int3   
  0x01cbfe2c: int3   
  0x01cbfe2d: int3   
  0x01cbfe2e: int3   
  0x01cbfe2f: int3   

----------------------------------------------------------------------
dstore_3  74 dstore_3  [0x01cbfe40, 0x01cbfe60]  32 bytes

  0x01cbfe40: fldl   (%esp)
  0x01cbfe43: add    $0x8,%esp
  0x01cbfe46: fstpl  -0x10(%edi)
  0x01cbfe49: movzbl 0x1(%esi),%ebx
  0x01cbfe4d: inc    %esi
  0x01cbfe4e: jmp    *0x55629838(,%ebx,4)
  0x01cbfe55: nop    
  0x01cbfe56: nop    
  0x01cbfe57: nop    
  0x01cbfe58: int3   
  0x01cbfe59: int3   
  0x01cbfe5a: int3   
  0x01cbfe5b: int3   
  0x01cbfe5c: int3   
  0x01cbfe5d: int3   
  0x01cbfe5e: int3   
  0x01cbfe5f: int3   

----------------------------------------------------------------------
astore_0  75 astore_0  [0x01cbfe70, 0x01cbfeb0]  64 bytes

  0x01cbfe70: sub    $0x4,%esp
  0x01cbfe73: fstps  (%esp)
  0x01cbfe76: jmp    0x01cbfe94
  0x01cbfe7b: sub    $0x8,%esp
  0x01cbfe7e: fstpl  (%esp)
  0x01cbfe81: jmp    0x01cbfe94
  0x01cbfe86: push   %edx
  0x01cbfe87: push   %eax
  0x01cbfe88: jmp    0x01cbfe94
  0x01cbfe8d: push   %eax
  0x01cbfe8e: jmp    0x01cbfe94
  0x01cbfe93: push   %eax
  0x01cbfe94: pop    %eax
  0x01cbfe95: mov    %eax,(%edi)
  0x01cbfe97: movzbl 0x1(%esi),%ebx
  0x01cbfe9b: inc    %esi
  0x01cbfe9c: jmp    *0x55629838(,%ebx,4)
  0x01cbfea3: nop    
  0x01cbfea4: int3   
  0x01cbfea5: int3   
  0x01cbfea6: int3   
  0x01cbfea7: int3   
  0x01cbfea8: int3   
  0x01cbfea9: int3   
  0x01cbfeaa: int3   
  0x01cbfeab: int3   
  0x01cbfeac: int3   
  0x01cbfead: int3   
  0x01cbfeae: int3   
  0x01cbfeaf: int3   

----------------------------------------------------------------------
astore_1  76 astore_1  [0x01cbfec0, 0x01cbff00]  64 bytes

  0x01cbfec0: sub    $0x4,%esp
  0x01cbfec3: fstps  (%esp)
  0x01cbfec6: jmp    0x01cbfee4
  0x01cbfecb: sub    $0x8,%esp
  0x01cbfece: fstpl  (%esp)
  0x01cbfed1: jmp    0x01cbfee4
  0x01cbfed6: push   %edx
  0x01cbfed7: push   %eax
  0x01cbfed8: jmp    0x01cbfee4
  0x01cbfedd: push   %eax
  0x01cbfede: jmp    0x01cbfee4
  0x01cbfee3: push   %eax
  0x01cbfee4: pop    %eax
  0x01cbfee5: mov    %eax,-0x4(%edi)
  0x01cbfee8: movzbl 0x1(%esi),%ebx
  0x01cbfeec: inc    %esi
  0x01cbfeed: jmp    *0x55629838(,%ebx,4)
  0x01cbfef4: int3   
  0x01cbfef5: int3   
  0x01cbfef6: int3   
  0x01cbfef7: int3   
  0x01cbfef8: int3   
  0x01cbfef9: int3   
  0x01cbfefa: int3   
  0x01cbfefb: int3   
  0x01cbfefc: int3   
  0x01cbfefd: int3   
  0x01cbfefe: int3   
  0x01cbfeff: int3   

----------------------------------------------------------------------
astore_2  77 astore_2  [0x01cbff10, 0x01cbff50]  64 bytes

  0x01cbff10: sub    $0x4,%esp
  0x01cbff13: fstps  (%esp)
  0x01cbff16: jmp    0x01cbff34
  0x01cbff1b: sub    $0x8,%esp
  0x01cbff1e: fstpl  (%esp)
  0x01cbff21: jmp    0x01cbff34
  0x01cbff26: push   %edx
  0x01cbff27: push   %eax
  0x01cbff28: jmp    0x01cbff34
  0x01cbff2d: push   %eax
  0x01cbff2e: jmp    0x01cbff34
  0x01cbff33: push   %eax
  0x01cbff34: pop    %eax
  0x01cbff35: mov    %eax,-0x8(%edi)
  0x01cbff38: movzbl 0x1(%esi),%ebx
  0x01cbff3c: inc    %esi
  0x01cbff3d: jmp    *0x55629838(,%ebx,4)
  0x01cbff44: int3   
  0x01cbff45: int3   
  0x01cbff46: int3   
  0x01cbff47: int3   
  0x01cbff48: int3   
  0x01cbff49: int3   
  0x01cbff4a: int3   
  0x01cbff4b: int3   
  0x01cbff4c: int3   
  0x01cbff4d: int3   
  0x01cbff4e: int3   
  0x01cbff4f: int3   

----------------------------------------------------------------------
astore_3  78 astore_3  [0x01cbff60, 0x01cbffa0]  64 bytes

  0x01cbff60: sub    $0x4,%esp
  0x01cbff63: fstps  (%esp)
  0x01cbff66: jmp    0x01cbff84
  0x01cbff6b: sub    $0x8,%esp
  0x01cbff6e: fstpl  (%esp)
  0x01cbff71: jmp    0x01cbff84
  0x01cbff76: push   %edx
  0x01cbff77: push   %eax
  0x01cbff78: jmp    0x01cbff84
  0x01cbff7d: push   %eax
  0x01cbff7e: jmp    0x01cbff84
  0x01cbff83: push   %eax
  0x01cbff84: pop    %eax
  0x01cbff85: mov    %eax,-0xc(%edi)
  0x01cbff88: movzbl 0x1(%esi),%ebx
  0x01cbff8c: inc    %esi
  0x01cbff8d: jmp    *0x55629838(,%ebx,4)
  0x01cbff94: int3   
  0x01cbff95: int3   
  0x01cbff96: int3   
  0x01cbff97: int3   
  0x01cbff98: int3   
  0x01cbff99: int3   
  0x01cbff9a: int3   
  0x01cbff9b: int3   
  0x01cbff9c: int3   
  0x01cbff9d: int3   
  0x01cbff9e: int3   
  0x01cbff9f: int3   

----------------------------------------------------------------------
iastore  79 iastore  [0x01cbffb0, 0x01cbffd0]  32 bytes

  0x01cbffb0: pop    %eax
  0x01cbffb1: pop    %ebx
  0x01cbffb2: pop    %edx
  0x01cbffb3: cmp    0x8(%edx),%ebx
  0x01cbffb6: jae    0x01cbb5d0
  0x01cbffbc: mov    %eax,0xc(%edx,%ebx,4)
  0x01cbffc0: movzbl 0x1(%esi),%ebx
  0x01cbffc4: inc    %esi
  0x01cbffc5: jmp    *0x55629838(,%ebx,4)
  0x01cbffcc: int3   
  0x01cbffcd: int3   
  0x01cbffce: int3   
  0x01cbffcf: int3   

----------------------------------------------------------------------
lastore  80 lastore  [0x01cbffe0, 0x01cc0010]  48 bytes

  0x01cbffe0: pop    %eax
  0x01cbffe1: pop    %edx
  0x01cbffe2: pop    %ebx
  0x01cbffe3: pop    %ecx
  0x01cbffe4: cmp    0x8(%ecx),%ebx
  0x01cbffe7: jae    0x01cbb5d0
  0x01cbffed: mov    %eax,0x10(%ecx,%ebx,8)
  0x01cbfff1: mov    %edx,0x14(%ecx,%ebx,8)
  0x01cbfff5: movzbl 0x1(%esi),%ebx
  0x01cbfff9: inc    %esi
  0x01cbfffa: jmp    *0x55629838(,%ebx,4)
  0x01cc0001: nop    
  0x01cc0002: nop    
  0x01cc0003: nop    
  0x01cc0004: int3   
  0x01cc0005: int3   
  0x01cc0006: int3   
  0x01cc0007: int3   
  0x01cc0008: int3   
  0x01cc0009: int3   
  0x01cc000a: int3   
  0x01cc000b: int3   
  0x01cc000c: int3   
  0x01cc000d: int3   
  0x01cc000e: int3   
  0x01cc000f: int3   

----------------------------------------------------------------------
fastore  81 fastore  [0x01cc0020, 0x01cc0050]  48 bytes

  0x01cc0020: flds   (%esp)
  0x01cc0023: add    $0x4,%esp
  0x01cc0026: pop    %ebx
  0x01cc0027: pop    %edx
  0x01cc0028: cmp    0x8(%edx),%ebx
  0x01cc002b: jae    0x01cbb5d0
  0x01cc0031: fstps  0xc(%edx,%ebx,4)
  0x01cc0035: movzbl 0x1(%esi),%ebx
  0x01cc0039: inc    %esi
  0x01cc003a: jmp    *0x55629838(,%ebx,4)
  0x01cc0041: nop    
  0x01cc0042: nop    
  0x01cc0043: nop    
  0x01cc0044: int3   
  0x01cc0045: int3   
  0x01cc0046: int3   
  0x01cc0047: int3   
  0x01cc0048: int3   
  0x01cc0049: int3   
  0x01cc004a: int3   
  0x01cc004b: int3   
  0x01cc004c: int3   
  0x01cc004d: int3   
  0x01cc004e: int3   
  0x01cc004f: int3   

----------------------------------------------------------------------
dastore  82 dastore  [0x01cc0060, 0x01cc0090]  48 bytes

  0x01cc0060: fldl   (%esp)
  0x01cc0063: add    $0x8,%esp
  0x01cc0066: pop    %ebx
  0x01cc0067: pop    %edx
  0x01cc0068: cmp    0x8(%edx),%ebx
  0x01cc006b: jae    0x01cbb5d0
  0x01cc0071: fstpl  0x10(%edx,%ebx,8)
  0x01cc0075: movzbl 0x1(%esi),%ebx
  0x01cc0079: inc    %esi
  0x01cc007a: jmp    *0x55629838(,%ebx,4)
  0x01cc0081: nop    
  0x01cc0082: nop    
  0x01cc0083: nop    
  0x01cc0084: int3   
  0x01cc0085: int3   
  0x01cc0086: int3   
  0x01cc0087: int3   
  0x01cc0088: int3   
  0x01cc0089: int3   
  0x01cc008a: int3   
  0x01cc008b: int3   
  0x01cc008c: int3   
  0x01cc008d: int3   
  0x01cc008e: int3   
  0x01cc008f: int3   

----------------------------------------------------------------------
aastore  83 aastore  [0x01cc00a0, 0x01cc0160]  192 bytes

  0x01cc00a0: sub    $0x4,%esp
  0x01cc00a3: fstps  (%esp)
  0x01cc00a6: jmp    0x01cc00c4
  0x01cc00ab: sub    $0x8,%esp
  0x01cc00ae: fstpl  (%esp)
  0x01cc00b1: jmp    0x01cc00c4
  0x01cc00b6: push   %edx
  0x01cc00b7: push   %eax
  0x01cc00b8: jmp    0x01cc00c4
  0x01cc00bd: push   %eax
  0x01cc00be: jmp    0x01cc00c4
  0x01cc00c3: push   %eax
  0x01cc00c4: mov    (%esp),%eax
  0x01cc00c7: mov    0x4(%esp),%ecx
  0x01cc00cb: mov    0x8(%esp),%edx
  0x01cc00cf: cmp    0x8(%edx),%ecx
  0x01cc00d2: mov    %ecx,%ebx
  0x01cc00d4: jae    0x01cbb5d0
  0x01cc00da: test   %eax,%eax
  0x01cc00dc: je     0x01cc0147
  0x01cc00e2: mov    0x4(%eax),%ebx
  0x01cc00e5: mov    0x4(%edx),%eax
  0x01cc00e8: mov    0x90(%eax),%eax
  0x01cc00ee: lea    0xc(%edx,%ecx,4),%edx
  0x01cc00f2: cmp    %eax,%ebx
  0x01cc00f4: je     0x01cc0132
  0x01cc00fa: mov    0xc(%eax),%ecx
  0x01cc00fd: cmp    (%ebx,%ecx,1),%eax
  0x01cc0100: je     0x01cc0132
  0x01cc0106: cmp    $0x14,%ecx
  0x01cc0109: jne    0x01cc012d
  0x01cc010f: push   %edi
  0x01cc0110: incl   0x556349a0
  0x01cc0116: mov    0x18(%ebx),%edi
  0x01cc0119: mov    (%edi),%ecx
  0x01cc011b: add    $0x4,%edi
  0x01cc011e: test   %eax,%eax
  0x01cc0120: repnz scas %es:(%edi),%eax
  0x01cc0122: pop    %edi
  0x01cc0123: jne    0x01cc012d
  0x01cc0125: mov    %eax,0x14(%ebx)
  0x01cc0128: jmp    0x01cc0132
  0x01cc012d: jmp    0x01cbb680
  0x01cc0132: mov    (%esp),%eax
  0x01cc0135: mov    %eax,(%edx)
  0x01cc0137: shr    $0x9,%edx
  0x01cc013a: movb   $0x0,0x12c7000(,%edx,1)
  0x01cc0142: jmp    0x01cc014f
  0x01cc0147: movl   $0x0,0xc(%edx,%ecx,4)
  0x01cc014f: add    $0xc,%esp
  0x01cc0152: movzbl 0x1(%esi),%ebx
  0x01cc0156: inc    %esi
  0x01cc0157: jmp    *0x55629838(,%ebx,4)
  0x01cc015e: nop    
  0x01cc015f: nop    

----------------------------------------------------------------------
bastore  84 bastore  [0x01cc0170, 0x01cc0190]  32 bytes

  0x01cc0170: pop    %eax
  0x01cc0171: pop    %ebx
  0x01cc0172: pop    %edx
  0x01cc0173: cmp    0x8(%edx),%ebx
  0x01cc0176: jae    0x01cbb5d0
  0x01cc017c: mov    %al,0xc(%edx,%ebx,1)
  0x01cc0180: movzbl 0x1(%esi),%ebx
  0x01cc0184: inc    %esi
  0x01cc0185: jmp    *0x55629838(,%ebx,4)
  0x01cc018c: int3   
  0x01cc018d: int3   
  0x01cc018e: int3   
  0x01cc018f: int3   

----------------------------------------------------------------------
castore  85 castore  [0x01cc01a0, 0x01cc01c0]  32 bytes

  0x01cc01a0: pop    %eax
  0x01cc01a1: pop    %ebx
  0x01cc01a2: pop    %edx
  0x01cc01a3: cmp    0x8(%edx),%ebx
  0x01cc01a6: jae    0x01cbb5d0
  0x01cc01ac: mov    %ax,0xc(%edx,%ebx,2)
  0x01cc01b1: movzbl 0x1(%esi),%ebx
  0x01cc01b5: inc    %esi
  0x01cc01b6: jmp    *0x55629838(,%ebx,4)
  0x01cc01bd: nop    
  0x01cc01be: nop    
  0x01cc01bf: nop    

----------------------------------------------------------------------
sastore  86 sastore  [0x01cc01d0, 0x01cc01f0]  32 bytes

  0x01cc01d0: pop    %eax
  0x01cc01d1: pop    %ebx
  0x01cc01d2: pop    %edx
  0x01cc01d3: cmp    0x8(%edx),%ebx
  0x01cc01d6: jae    0x01cbb5d0
  0x01cc01dc: mov    %ax,0xc(%edx,%ebx,2)
  0x01cc01e1: movzbl 0x1(%esi),%ebx
  0x01cc01e5: inc    %esi
  0x01cc01e6: jmp    *0x55629838(,%ebx,4)
  0x01cc01ed: nop    
  0x01cc01ee: nop    
  0x01cc01ef: nop    

----------------------------------------------------------------------
pop  87 pop  [0x01cc0200, 0x01cc0240]  64 bytes

  0x01cc0200: sub    $0x4,%esp
  0x01cc0203: fstps  (%esp)
  0x01cc0206: jmp    0x01cc0224
  0x01cc020b: sub    $0x8,%esp
  0x01cc020e: fstpl  (%esp)
  0x01cc0211: jmp    0x01cc0224
  0x01cc0216: push   %edx
  0x01cc0217: push   %eax
  0x01cc0218: jmp    0x01cc0224
  0x01cc021d: push   %eax
  0x01cc021e: jmp    0x01cc0224
  0x01cc0223: push   %eax
  0x01cc0224: add    $0x4,%esp
  0x01cc0227: movzbl 0x1(%esi),%ebx
  0x01cc022b: inc    %esi
  0x01cc022c: jmp    *0x55629838(,%ebx,4)
  0x01cc0233: nop    
  0x01cc0234: int3   
  0x01cc0235: int3   
  0x01cc0236: int3   
  0x01cc0237: int3   
  0x01cc0238: int3   
  0x01cc0239: int3   
  0x01cc023a: int3   
  0x01cc023b: int3   
  0x01cc023c: int3   
  0x01cc023d: int3   
  0x01cc023e: int3   
  0x01cc023f: int3   

----------------------------------------------------------------------
pop2  88 pop2  [0x01cc0250, 0x01cc0290]  64 bytes

  0x01cc0250: sub    $0x4,%esp
  0x01cc0253: fstps  (%esp)
  0x01cc0256: jmp    0x01cc0274
  0x01cc025b: sub    $0x8,%esp
  0x01cc025e: fstpl  (%esp)
  0x01cc0261: jmp    0x01cc0274
  0x01cc0266: push   %edx
  0x01cc0267: push   %eax
  0x01cc0268: jmp    0x01cc0274
  0x01cc026d: push   %eax
  0x01cc026e: jmp    0x01cc0274
  0x01cc0273: push   %eax
  0x01cc0274: add    $0x8,%esp
  0x01cc0277: movzbl 0x1(%esi),%ebx
  0x01cc027b: inc    %esi
  0x01cc027c: jmp    *0x55629838(,%ebx,4)
  0x01cc0283: nop    
  0x01cc0284: int3   
  0x01cc0285: int3   
  0x01cc0286: int3   
  0x01cc0287: int3   
  0x01cc0288: int3   
  0x01cc0289: int3   
  0x01cc028a: int3   
  0x01cc028b: int3   
  0x01cc028c: int3   
  0x01cc028d: int3   
  0x01cc028e: int3   
  0x01cc028f: int3   

----------------------------------------------------------------------
dup  89 dup  [0x01cc02a0, 0x01cc02e0]  64 bytes

  0x01cc02a0: sub    $0x4,%esp
  0x01cc02a3: fstps  (%esp)
  0x01cc02a6: jmp    0x01cc02c4
  0x01cc02ab: sub    $0x8,%esp
  0x01cc02ae: fstpl  (%esp)
  0x01cc02b1: jmp    0x01cc02c4
  0x01cc02b6: push   %edx
  0x01cc02b7: push   %eax
  0x01cc02b8: jmp    0x01cc02c4
  0x01cc02bd: push   %eax
  0x01cc02be: jmp    0x01cc02c4
  0x01cc02c3: push   %eax
  0x01cc02c4: mov    (%esp),%eax
  0x01cc02c7: push   %eax
  0x01cc02c8: movzbl 0x1(%esi),%ebx
  0x01cc02cc: inc    %esi
  0x01cc02cd: jmp    *0x55629838(,%ebx,4)
  0x01cc02d4: int3   
  0x01cc02d5: int3   
  0x01cc02d6: int3   
  0x01cc02d7: int3   
  0x01cc02d8: int3   
  0x01cc02d9: int3   
  0x01cc02da: int3   
  0x01cc02db: int3   
  0x01cc02dc: int3   
  0x01cc02dd: int3   
  0x01cc02de: int3   
  0x01cc02df: int3   

----------------------------------------------------------------------
dup_x1  90 dup_x1  [0x01cc02f0, 0x01cc0330]  64 bytes

  0x01cc02f0: sub    $0x4,%esp
  0x01cc02f3: fstps  (%esp)
  0x01cc02f6: jmp    0x01cc0314
  0x01cc02fb: sub    $0x8,%esp
  0x01cc02fe: fstpl  (%esp)
  0x01cc0301: jmp    0x01cc0314
  0x01cc0306: push   %edx
  0x01cc0307: push   %eax
  0x01cc0308: jmp    0x01cc0314
  0x01cc030d: push   %eax
  0x01cc030e: jmp    0x01cc0314
  0x01cc0313: push   %eax
  0x01cc0314: mov    (%esp),%eax
  0x01cc0317: mov    0x4(%esp),%ecx
  0x01cc031b: mov    %eax,0x4(%esp)
  0x01cc031f: mov    %ecx,(%esp)
  0x01cc0322: push   %eax
  0x01cc0323: movzbl 0x1(%esi),%ebx
  0x01cc0327: inc    %esi
  0x01cc0328: jmp    *0x55629838(,%ebx,4)
  0x01cc032f: nop    

----------------------------------------------------------------------
dup_x2  91 dup_x2  [0x01cc0340, 0x01cc0390]  80 bytes

  0x01cc0340: sub    $0x4,%esp
  0x01cc0343: fstps  (%esp)
  0x01cc0346: jmp    0x01cc0364
  0x01cc034b: sub    $0x8,%esp
  0x01cc034e: fstpl  (%esp)
  0x01cc0351: jmp    0x01cc0364
  0x01cc0356: push   %edx
  0x01cc0357: push   %eax
  0x01cc0358: jmp    0x01cc0364
  0x01cc035d: push   %eax
  0x01cc035e: jmp    0x01cc0364
  0x01cc0363: push   %eax
  0x01cc0364: mov    (%esp),%eax
  0x01cc0367: mov    0x8(%esp),%ecx
  0x01cc036b: mov    %eax,0x8(%esp)
  0x01cc036f: push   %eax
  0x01cc0370: mov    0x8(%esp),%eax
  0x01cc0374: mov    %ecx,0x8(%esp)
  0x01cc0378: mov    %eax,0x4(%esp)
  0x01cc037c: movzbl 0x1(%esi),%ebx
  0x01cc0380: inc    %esi
  0x01cc0381: jmp    *0x55629838(,%ebx,4)
  0x01cc0388: int3   
  0x01cc0389: int3   
  0x01cc038a: int3   
  0x01cc038b: int3   
  0x01cc038c: int3   
  0x01cc038d: int3   
  0x01cc038e: int3   
  0x01cc038f: int3   

----------------------------------------------------------------------
dup2  92 dup2  [0x01cc03a0, 0x01cc03e0]  64 bytes

  0x01cc03a0: sub    $0x4,%esp
  0x01cc03a3: fstps  (%esp)
  0x01cc03a6: jmp    0x01cc03c4
  0x01cc03ab: sub    $0x8,%esp
  0x01cc03ae: fstpl  (%esp)
  0x01cc03b1: jmp    0x01cc03c4
  0x01cc03b6: push   %edx
  0x01cc03b7: push   %eax
  0x01cc03b8: jmp    0x01cc03c4
  0x01cc03bd: push   %eax
  0x01cc03be: jmp    0x01cc03c4
  0x01cc03c3: push   %eax
  0x01cc03c4: mov    0x4(%esp),%eax
  0x01cc03c8: push   %eax
  0x01cc03c9: mov    0x4(%esp),%eax
  0x01cc03cd: push   %eax
  0x01cc03ce: movzbl 0x1(%esi),%ebx
  0x01cc03d2: inc    %esi
  0x01cc03d3: jmp    *0x55629838(,%ebx,4)
  0x01cc03da: nop    
  0x01cc03db: nop    
  0x01cc03dc: int3   
  0x01cc03dd: int3   
  0x01cc03de: int3   
  0x01cc03df: int3   

----------------------------------------------------------------------
dup2_x1  93 dup2_x1  [0x01cc03f0, 0x01cc0440]  80 bytes

  0x01cc03f0: sub    $0x4,%esp
  0x01cc03f3: fstps  (%esp)
  0x01cc03f6: jmp    0x01cc0414
  0x01cc03fb: sub    $0x8,%esp
  0x01cc03fe: fstpl  (%esp)
  0x01cc0401: jmp    0x01cc0414
  0x01cc0406: push   %edx
  0x01cc0407: push   %eax
  0x01cc0408: jmp    0x01cc0414
  0x01cc040d: push   %eax
  0x01cc040e: jmp    0x01cc0414
  0x01cc0413: push   %eax
  0x01cc0414: mov    (%esp),%ecx
  0x01cc0417: mov    0x4(%esp),%eax
  0x01cc041b: push   %eax
  0x01cc041c: push   %ecx
  0x01cc041d: mov    %ecx,0xc(%esp)
  0x01cc0421: mov    0x10(%esp),%ecx
  0x01cc0425: mov    %ecx,0x8(%esp)
  0x01cc0429: mov    %eax,0x10(%esp)
  0x01cc042d: movzbl 0x1(%esi),%ebx
  0x01cc0431: inc    %esi
  0x01cc0432: jmp    *0x55629838(,%ebx,4)
  0x01cc0439: nop    
  0x01cc043a: nop    
  0x01cc043b: nop    
  0x01cc043c: int3   
  0x01cc043d: int3   
  0x01cc043e: int3   
  0x01cc043f: int3   

----------------------------------------------------------------------
dup2_x2  94 dup2_x2  [0x01cc0450, 0x01cc04b0]  96 bytes

  0x01cc0450: sub    $0x4,%esp
  0x01cc0453: fstps  (%esp)
  0x01cc0456: jmp    0x01cc0474
  0x01cc045b: sub    $0x8,%esp
  0x01cc045e: fstpl  (%esp)
  0x01cc0461: jmp    0x01cc0474
  0x01cc0466: push   %edx
  0x01cc0467: push   %eax
  0x01cc0468: jmp    0x01cc0474
  0x01cc046d: push   %eax
  0x01cc046e: jmp    0x01cc0474
  0x01cc0473: push   %eax
  0x01cc0474: mov    (%esp),%ecx
  0x01cc0477: mov    0x4(%esp),%eax
  0x01cc047b: push   %eax
  0x01cc047c: push   %ecx
  0x01cc047d: mov    0x10(%esp),%eax
  0x01cc0481: mov    %eax,0x8(%esp)
  0x01cc0485: mov    %ecx,0x10(%esp)
  0x01cc0489: mov    0x14(%esp),%ecx
  0x01cc048d: mov    0xc(%esp),%eax
  0x01cc0491: mov    %ecx,0xc(%esp)
  0x01cc0495: mov    %eax,0x14(%esp)
  0x01cc0499: movzbl 0x1(%esi),%ebx
  0x01cc049d: inc    %esi
  0x01cc049e: jmp    *0x55629838(,%ebx,4)
  0x01cc04a5: nop    
  0x01cc04a6: nop    
  0x01cc04a7: nop    
  0x01cc04a8: int3   
  0x01cc04a9: int3   
  0x01cc04aa: int3   
  0x01cc04ab: int3   
  0x01cc04ac: int3   
  0x01cc04ad: int3   
  0x01cc04ae: int3   
  0x01cc04af: int3   

----------------------------------------------------------------------
swap  95 swap  [0x01cc04c0, 0x01cc0500]  64 bytes

  0x01cc04c0: sub    $0x4,%esp
  0x01cc04c3: fstps  (%esp)
  0x01cc04c6: jmp    0x01cc04e4
  0x01cc04cb: sub    $0x8,%esp
  0x01cc04ce: fstpl  (%esp)
  0x01cc04d1: jmp    0x01cc04e4
  0x01cc04d6: push   %edx
  0x01cc04d7: push   %eax
  0x01cc04d8: jmp    0x01cc04e4
  0x01cc04dd: push   %eax
  0x01cc04de: jmp    0x01cc04e4
  0x01cc04e3: push   %eax
  0x01cc04e4: mov    0x4(%esp),%ecx
  0x01cc04e8: mov    (%esp),%eax
  0x01cc04eb: mov    %ecx,(%esp)
  0x01cc04ee: mov    %eax,0x4(%esp)
  0x01cc04f2: movzbl 0x1(%esi),%ebx
  0x01cc04f6: inc    %esi
  0x01cc04f7: jmp    *0x55629838(,%ebx,4)
  0x01cc04fe: nop    
  0x01cc04ff: nop    

----------------------------------------------------------------------
iadd  96 iadd  [0x01cc0510, 0x01cc0520]  16 bytes

  0x01cc0510: pop    %eax
  0x01cc0511: pop    %edx
  0x01cc0512: add    %edx,%eax
  0x01cc0514: movzbl 0x1(%esi),%ebx
  0x01cc0518: inc    %esi
  0x01cc0519: jmp    *0x55628438(,%ebx,4)

----------------------------------------------------------------------
ladd  97 ladd  [0x01cc0530, 0x01cc0550]  32 bytes

  0x01cc0530: pop    %eax
  0x01cc0531: pop    %edx
  0x01cc0532: pop    %ebx
  0x01cc0533: pop    %ecx
  0x01cc0534: add    %ebx,%eax
  0x01cc0536: adc    %ecx,%edx
  0x01cc0538: movzbl 0x1(%esi),%ebx
  0x01cc053c: inc    %esi
  0x01cc053d: jmp    *0x55628838(,%ebx,4)
  0x01cc0544: int3   
  0x01cc0545: int3   
  0x01cc0546: int3   
  0x01cc0547: int3   
  0x01cc0548: int3   
  0x01cc0549: int3   
  0x01cc054a: int3   
  0x01cc054b: int3   
  0x01cc054c: int3   
  0x01cc054d: int3   
  0x01cc054e: int3   
  0x01cc054f: int3   

----------------------------------------------------------------------
fadd  98 fadd  [0x01cc0560, 0x01cc0580]  32 bytes

  0x01cc0560: flds   (%esp)
  0x01cc0563: add    $0x4,%esp
  0x01cc0566: fadds  (%esp)
  0x01cc0569: fstps  (%esp)
  0x01cc056c: flds   (%esp)
  0x01cc056f: pop    %eax
  0x01cc0570: movzbl 0x1(%esi),%ebx
  0x01cc0574: inc    %esi
  0x01cc0575: jmp    *0x55628c38(,%ebx,4)
  0x01cc057c: int3   
  0x01cc057d: int3   
  0x01cc057e: int3   
  0x01cc057f: int3   

----------------------------------------------------------------------
dadd  99 dadd  [0x01cc0590, 0x01cc05b0]  32 bytes

  0x01cc0590: fldl   (%esp)
  0x01cc0593: add    $0x8,%esp
  0x01cc0596: faddl  (%esp)
  0x01cc0599: fstpl  (%esp)
  0x01cc059c: fldl   (%esp)
  0x01cc059f: pop    %eax
  0x01cc05a0: pop    %edx
  0x01cc05a1: movzbl 0x1(%esi),%ebx
  0x01cc05a5: inc    %esi
  0x01cc05a6: jmp    *0x55629038(,%ebx,4)
  0x01cc05ad: nop    
  0x01cc05ae: nop    
  0x01cc05af: nop    

----------------------------------------------------------------------
isub  100 isub  [0x01cc05c0, 0x01cc05e0]  32 bytes

  0x01cc05c0: pop    %eax
  0x01cc05c1: mov    %eax,%edx
  0x01cc05c3: pop    %eax
  0x01cc05c4: sub    %edx,%eax
  0x01cc05c6: movzbl 0x1(%esi),%ebx
  0x01cc05ca: inc    %esi
  0x01cc05cb: jmp    *0x55628438(,%ebx,4)
  0x01cc05d2: nop    
  0x01cc05d3: nop    
  0x01cc05d4: int3   
  0x01cc05d5: int3   
  0x01cc05d6: int3   
  0x01cc05d7: int3   
  0x01cc05d8: int3   
  0x01cc05d9: int3   
  0x01cc05da: int3   
  0x01cc05db: int3   
  0x01cc05dc: int3   
  0x01cc05dd: int3   
  0x01cc05de: int3   
  0x01cc05df: int3   

----------------------------------------------------------------------
lsub  101 lsub  [0x01cc05f0, 0x01cc0610]  32 bytes

  0x01cc05f0: pop    %eax
  0x01cc05f1: pop    %edx
  0x01cc05f2: pop    %ebx
  0x01cc05f3: pop    %ecx
  0x01cc05f4: sub    %eax,%ebx
  0x01cc05f6: sbb    %edx,%ecx
  0x01cc05f8: mov    %ebx,%eax
  0x01cc05fa: mov    %ecx,%edx
  0x01cc05fc: movzbl 0x1(%esi),%ebx
  0x01cc0600: inc    %esi
  0x01cc0601: jmp    *0x55628838(,%ebx,4)
  0x01cc0608: int3   
  0x01cc0609: int3   
  0x01cc060a: int3   
  0x01cc060b: int3   
  0x01cc060c: int3   
  0x01cc060d: int3   
  0x01cc060e: int3   
  0x01cc060f: int3   

----------------------------------------------------------------------
fsub  102 fsub  [0x01cc0620, 0x01cc0640]  32 bytes

  0x01cc0620: flds   (%esp)
  0x01cc0623: add    $0x4,%esp
  0x01cc0626: fsubrs (%esp)
  0x01cc0629: fstps  (%esp)
  0x01cc062c: flds   (%esp)
  0x01cc062f: pop    %eax
  0x01cc0630: movzbl 0x1(%esi),%ebx
  0x01cc0634: inc    %esi
  0x01cc0635: jmp    *0x55628c38(,%ebx,4)
  0x01cc063c: int3   
  0x01cc063d: int3   
  0x01cc063e: int3   
  0x01cc063f: int3   

----------------------------------------------------------------------
dsub  103 dsub  [0x01cc0650, 0x01cc0670]  32 bytes

  0x01cc0650: fldl   (%esp)
  0x01cc0653: add    $0x8,%esp
  0x01cc0656: fsubrl (%esp)
  0x01cc0659: fstpl  (%esp)
  0x01cc065c: fldl   (%esp)
  0x01cc065f: pop    %eax
  0x01cc0660: pop    %edx
  0x01cc0661: movzbl 0x1(%esi),%ebx
  0x01cc0665: inc    %esi
  0x01cc0666: jmp    *0x55629038(,%ebx,4)
  0x01cc066d: nop    
  0x01cc066e: nop    
  0x01cc066f: nop    

----------------------------------------------------------------------
imul  104 imul  [0x01cc0680, 0x01cc06a0]  32 bytes

  0x01cc0680: pop    %eax
  0x01cc0681: pop    %edx
  0x01cc0682: imul   %edx,%eax
  0x01cc0685: movzbl 0x1(%esi),%ebx
  0x01cc0689: inc    %esi
  0x01cc068a: jmp    *0x55628438(,%ebx,4)
  0x01cc0691: nop    
  0x01cc0692: nop    
  0x01cc0693: nop    
  0x01cc0694: int3   
  0x01cc0695: int3   
  0x01cc0696: int3   
  0x01cc0697: int3   
  0x01cc0698: int3   
  0x01cc0699: int3   
  0x01cc069a: int3   
  0x01cc069b: int3   
  0x01cc069c: int3   
  0x01cc069d: int3   
  0x01cc069e: int3   
  0x01cc069f: int3   

----------------------------------------------------------------------
lmul  105 lmul  [0x01cc06b0, 0x01cc06f0]  64 bytes

  0x01cc06b0: pop    %eax
  0x01cc06b1: pop    %edx
  0x01cc06b2: pop    %ebx
  0x01cc06b3: pop    %ecx
  0x01cc06b4: push   %ecx
  0x01cc06b5: push   %ebx
  0x01cc06b6: push   %edx
  0x01cc06b7: push   %eax
  0x01cc06b8: mov    0xc(%esp),%ebx
  0x01cc06bc: mov    0x4(%esp),%ecx
  0x01cc06c0: mov    %ebx,%eax
  0x01cc06c2: or     %ecx,%ebx
  0x01cc06c4: je     0x01cc06d7
  0x01cc06ca: mull   (%esp)
  0x01cc06cd: mov    %eax,%ebx
  0x01cc06cf: mov    0x8(%esp),%eax
  0x01cc06d3: mul    %ecx
  0x01cc06d5: add    %eax,%ebx
  0x01cc06d7: mov    0x8(%esp),%eax
  0x01cc06db: mull   (%esp)
  0x01cc06de: add    %ebx,%edx
  0x01cc06e0: add    $0x10,%esp
  0x01cc06e3: movzbl 0x1(%esi),%ebx
  0x01cc06e7: inc    %esi
  0x01cc06e8: jmp    *0x55628838(,%ebx,4)
  0x01cc06ef: nop    

----------------------------------------------------------------------
fmul  106 fmul  [0x01cc0700, 0x01cc0720]  32 bytes

  0x01cc0700: flds   (%esp)
  0x01cc0703: add    $0x4,%esp
  0x01cc0706: fmuls  (%esp)
  0x01cc0709: fstps  (%esp)
  0x01cc070c: flds   (%esp)
  0x01cc070f: pop    %eax
  0x01cc0710: movzbl 0x1(%esi),%ebx
  0x01cc0714: inc    %esi
  0x01cc0715: jmp    *0x55628c38(,%ebx,4)
  0x01cc071c: int3   
  0x01cc071d: int3   
  0x01cc071e: int3   
  0x01cc071f: int3   

----------------------------------------------------------------------
dmul  107 dmul  [0x01cc0730, 0x01cc0770]  64 bytes

  0x01cc0730: fldl   (%esp)
  0x01cc0733: add    $0x8,%esp
  0x01cc0736: mov    -0xc(%ebp),%ecx
  0x01cc0739: mov    0x14(%ecx),%ecx
  0x01cc073c: test   $0x800,%ecx
  0x01cc0742: jne    0x01cc0749
  0x01cc0744: fmull  (%esp)
  0x01cc0747: jmp    0x01cc075c
  0x01cc0749: fldt   0x5563577c
  0x01cc074f: fmulp  %st,%st(1)
  0x01cc0751: fmull  (%esp)
  0x01cc0754: fldt   0x55635788
  0x01cc075a: fmulp  %st,%st(1)
  0x01cc075c: fstpl  (%esp)
  0x01cc075f: fldl   (%esp)
  0x01cc0762: pop    %eax
  0x01cc0763: pop    %edx
  0x01cc0764: movzbl 0x1(%esi),%ebx
  0x01cc0768: inc    %esi
  0x01cc0769: jmp    *0x55629038(,%ebx,4)

----------------------------------------------------------------------
idiv  108 idiv  [0x01cc0780, 0x01cc07b0]  48 bytes

  0x01cc0780: pop    %eax
  0x01cc0781: mov    %eax,%ecx
  0x01cc0783: pop    %eax
  0x01cc0784: cmp    $0x80000000,%eax
  0x01cc078a: jne    0x01cc079b
  0x01cc0790: xor    %edx,%edx
  0x01cc0792: cmp    $0xffffffff,%ecx
  0x01cc0795: je     0x01cc079e
  0x01cc079b: cltd   
  0x01cc079c: idiv   %ecx
  0x01cc079e: movzbl 0x1(%esi),%ebx
  0x01cc07a2: inc    %esi
  0x01cc07a3: jmp    *0x55628438(,%ebx,4)
  0x01cc07aa: nop    
  0x01cc07ab: nop    
  0x01cc07ac: int3   
  0x01cc07ad: int3   
  0x01cc07ae: int3   
  0x01cc07af: int3   

----------------------------------------------------------------------
ldiv  109 ldiv  [0x01cc07c0, 0x01cc0810]  80 bytes

  0x01cc07c0: pop    %eax
  0x01cc07c1: pop    %edx
  0x01cc07c2: pop    %ebx
  0x01cc07c3: pop    %ecx
  0x01cc07c4: push   %ecx
  0x01cc07c5: push   %ebx
  0x01cc07c6: push   %edx
  0x01cc07c7: push   %eax
  0x01cc07c8: or     %edx,%eax
  0x01cc07ca: je     0x01cbb746
  0x01cc07d0: cmpl   $0x0,-0x8(%ebp)
  0x01cc07d7: je     0x01cc07ee
  0x01cc07dd: push   $0x55310148
  0x01cc07e2: call   0x01cc07e7
  0x01cc07e7: pusha  
  0x01cc07e8: call   0x54dedbf0
  0x01cc07ed: hlt    
  0x01cc07ee: call   0x55212a00
  0x01cc07f3: add    $0x10,%esp
  0x01cc07f6: movzbl 0x1(%esi),%ebx
  0x01cc07fa: inc    %esi
  0x01cc07fb: jmp    *0x55628838(,%ebx,4)
  0x01cc0802: nop    
  0x01cc0803: nop    
  0x01cc0804: int3   
  0x01cc0805: int3   
  0x01cc0806: int3   
  0x01cc0807: int3   
  0x01cc0808: int3   
  0x01cc0809: int3   
  0x01cc080a: int3   
  0x01cc080b: int3   
  0x01cc080c: int3   
  0x01cc080d: int3   
  0x01cc080e: int3   
  0x01cc080f: int3   

----------------------------------------------------------------------
fdiv  110 fdiv  [0x01cc0820, 0x01cc0840]  32 bytes

  0x01cc0820: flds   (%esp)
  0x01cc0823: add    $0x4,%esp
  0x01cc0826: fdivrs (%esp)
  0x01cc0829: fstps  (%esp)
  0x01cc082c: flds   (%esp)
  0x01cc082f: pop    %eax
  0x01cc0830: movzbl 0x1(%esi),%ebx
  0x01cc0834: inc    %esi
  0x01cc0835: jmp    *0x55628c38(,%ebx,4)
  0x01cc083c: int3   
  0x01cc083d: int3   
  0x01cc083e: int3   
  0x01cc083f: int3   

----------------------------------------------------------------------
ddiv  111 ddiv  [0x01cc0850, 0x01cc08a0]  80 bytes

  0x01cc0850: fldl   (%esp)
  0x01cc0853: add    $0x8,%esp
  0x01cc0856: mov    -0xc(%ebp),%ecx
  0x01cc0859: mov    0x14(%ecx),%ecx
  0x01cc085c: test   $0x800,%ecx
  0x01cc0862: jne    0x01cc086c
  0x01cc0864: fdivrl (%esp)
  0x01cc0867: jmp    0x01cc087f
  0x01cc086c: fldt   0x5563577c
  0x01cc0872: fmull  (%esp)
  0x01cc0875: fdivp  %st,%st(1)
  0x01cc0877: fldt   0x55635788
  0x01cc087d: fmulp  %st,%st(1)
  0x01cc087f: fstpl  (%esp)
  0x01cc0882: fldl   (%esp)
  0x01cc0885: pop    %eax
  0x01cc0886: pop    %edx
  0x01cc0887: movzbl 0x1(%esi),%ebx
  0x01cc088b: inc    %esi
  0x01cc088c: jmp    *0x55629038(,%ebx,4)
  0x01cc0893: nop    
  0x01cc0894: int3   
  0x01cc0895: int3   
  0x01cc0896: int3   
  0x01cc0897: int3   
  0x01cc0898: int3   
  0x01cc0899: int3   
  0x01cc089a: int3   
  0x01cc089b: int3   
  0x01cc089c: int3   
  0x01cc089d: int3   
  0x01cc089e: int3   
  0x01cc089f: int3   

----------------------------------------------------------------------
irem  112 irem  [0x01cc08b0, 0x01cc08e0]  48 bytes

  0x01cc08b0: pop    %eax
  0x01cc08b1: mov    %eax,%ecx
  0x01cc08b3: pop    %eax
  0x01cc08b4: cmp    $0x80000000,%eax
  0x01cc08ba: jne    0x01cc08cb
  0x01cc08c0: xor    %edx,%edx
  0x01cc08c2: cmp    $0xffffffff,%ecx
  0x01cc08c5: je     0x01cc08ce
  0x01cc08cb: cltd   
  0x01cc08cc: idiv   %ecx
  0x01cc08ce: mov    %edx,%eax
  0x01cc08d0: movzbl 0x1(%esi),%ebx
  0x01cc08d4: inc    %esi
  0x01cc08d5: jmp    *0x55628438(,%ebx,4)
  0x01cc08dc: int3   
  0x01cc08dd: int3   
  0x01cc08de: int3   
  0x01cc08df: int3   

----------------------------------------------------------------------
lrem  113 lrem  [0x01cc08f0, 0x01cc0940]  80 bytes

  0x01cc08f0: pop    %eax
  0x01cc08f1: pop    %edx
  0x01cc08f2: pop    %ebx
  0x01cc08f3: pop    %ecx
  0x01cc08f4: push   %ecx
  0x01cc08f5: push   %ebx
  0x01cc08f6: push   %edx
  0x01cc08f7: push   %eax
  0x01cc08f8: or     %edx,%eax
  0x01cc08fa: je     0x01cbb746
  0x01cc0900: cmpl   $0x0,-0x8(%ebp)
  0x01cc0907: je     0x01cc091e
  0x01cc090d: push   $0x55310148
  0x01cc0912: call   0x01cc0917
  0x01cc0917: pusha  
  0x01cc0918: call   0x54dedbf0
  0x01cc091d: hlt    
  0x01cc091e: call   0x55212b50
  0x01cc0923: add    $0x10,%esp
  0x01cc0926: movzbl 0x1(%esi),%ebx
  0x01cc092a: inc    %esi
  0x01cc092b: jmp    *0x55628838(,%ebx,4)
  0x01cc0932: nop    
  0x01cc0933: nop    
  0x01cc0934: int3   
  0x01cc0935: int3   
  0x01cc0936: int3   
  0x01cc0937: int3   
  0x01cc0938: int3   
  0x01cc0939: int3   
  0x01cc093a: int3   
  0x01cc093b: int3   
  0x01cc093c: int3   
  0x01cc093d: int3   
  0x01cc093e: int3   
  0x01cc093f: int3   

----------------------------------------------------------------------
frem  114 frem  [0x01cc0950, 0x01cc0980]  48 bytes

  0x01cc0950: flds   (%esp)
  0x01cc0953: add    $0x4,%esp
  0x01cc0956: flds   (%esp)
  0x01cc0959: fprem  
  0x01cc095b: fstsw  %ax
  0x01cc095e: sahf   
  0x01cc095f: jp     0x01cc0959
  0x01cc0961: fxch   %st(1)
  0x01cc0963: ffree  %st(0)
  0x01cc0965: fincstp 
  0x01cc0967: fstps  (%esp)
  0x01cc096a: flds   (%esp)
  0x01cc096d: pop    %eax
  0x01cc096e: movzbl 0x1(%esi),%ebx
  0x01cc0972: inc    %esi
  0x01cc0973: jmp    *0x55628c38(,%ebx,4)
  0x01cc097a: nop    
  0x01cc097b: nop    
  0x01cc097c: int3   
  0x01cc097d: int3   
  0x01cc097e: int3   
  0x01cc097f: int3   

----------------------------------------------------------------------
drem  115 drem  [0x01cc0990, 0x01cc09c0]  48 bytes

  0x01cc0990: fldl   (%esp)
  0x01cc0993: add    $0x8,%esp
  0x01cc0996: fldl   (%esp)
  0x01cc0999: fprem  
  0x01cc099b: fstsw  %ax
  0x01cc099e: sahf   
  0x01cc099f: jp     0x01cc0999
  0x01cc09a1: fxch   %st(1)
  0x01cc09a3: ffree  %st(0)
  0x01cc09a5: fincstp 
  0x01cc09a7: fstpl  (%esp)
  0x01cc09aa: fldl   (%esp)
  0x01cc09ad: pop    %eax
  0x01cc09ae: pop    %edx
  0x01cc09af: movzbl 0x1(%esi),%ebx
  0x01cc09b3: inc    %esi
  0x01cc09b4: jmp    *0x55629038(,%ebx,4)
  0x01cc09bb: nop    
  0x01cc09bc: int3   
  0x01cc09bd: int3   
  0x01cc09be: int3   
  0x01cc09bf: int3   

----------------------------------------------------------------------
ineg  116 ineg  [0x01cc09d0, 0x01cc09e0]  16 bytes

  0x01cc09d0: pop    %eax
  0x01cc09d1: neg    %eax
  0x01cc09d3: movzbl 0x1(%esi),%ebx
  0x01cc09d7: inc    %esi
  0x01cc09d8: jmp    *0x55628438(,%ebx,4)
  0x01cc09df: nop    

----------------------------------------------------------------------
lneg  117 lneg  [0x01cc09f0, 0x01cc0a10]  32 bytes

  0x01cc09f0: pop    %eax
  0x01cc09f1: pop    %edx
  0x01cc09f2: neg    %eax
  0x01cc09f4: adc    $0x0,%edx
  0x01cc09f7: neg    %edx
  0x01cc09f9: movzbl 0x1(%esi),%ebx
  0x01cc09fd: inc    %esi
  0x01cc09fe: jmp    *0x55628838(,%ebx,4)
  0x01cc0a05: nop    
  0x01cc0a06: nop    
  0x01cc0a07: nop    
  0x01cc0a08: int3   
  0x01cc0a09: int3   
  0x01cc0a0a: int3   
  0x01cc0a0b: int3   
  0x01cc0a0c: int3   
  0x01cc0a0d: int3   
  0x01cc0a0e: int3   
  0x01cc0a0f: int3   

----------------------------------------------------------------------
fneg  118 fneg  [0x01cc0a20, 0x01cc0a40]  32 bytes

  0x01cc0a20: flds   (%esp)
  0x01cc0a23: add    $0x4,%esp
  0x01cc0a26: fchs   
  0x01cc0a28: movzbl 0x1(%esi),%ebx
  0x01cc0a2c: inc    %esi
  0x01cc0a2d: jmp    *0x55628c38(,%ebx,4)
  0x01cc0a34: int3   
  0x01cc0a35: int3   
  0x01cc0a36: int3   
  0x01cc0a37: int3   
  0x01cc0a38: int3   
  0x01cc0a39: int3   
  0x01cc0a3a: int3   
  0x01cc0a3b: int3   
  0x01cc0a3c: int3   
  0x01cc0a3d: int3   
  0x01cc0a3e: int3   
  0x01cc0a3f: int3   

----------------------------------------------------------------------
dneg  119 dneg  [0x01cc0a50, 0x01cc0a70]  32 bytes

  0x01cc0a50: fldl   (%esp)
  0x01cc0a53: add    $0x8,%esp
  0x01cc0a56: fchs   
  0x01cc0a58: movzbl 0x1(%esi),%ebx
  0x01cc0a5c: inc    %esi
  0x01cc0a5d: jmp    *0x55629038(,%ebx,4)
  0x01cc0a64: int3   
  0x01cc0a65: int3   
  0x01cc0a66: int3   
  0x01cc0a67: int3   
  0x01cc0a68: int3   
  0x01cc0a69: int3   
  0x01cc0a6a: int3   
  0x01cc0a6b: int3   
  0x01cc0a6c: int3   
  0x01cc0a6d: int3   
  0x01cc0a6e: int3   
  0x01cc0a6f: int3   

----------------------------------------------------------------------
ishl  120 ishl  [0x01cc0a80, 0x01cc0aa0]  32 bytes

  0x01cc0a80: pop    %eax
  0x01cc0a81: mov    %eax,%ecx
  0x01cc0a83: pop    %eax
  0x01cc0a84: shl    %cl,%eax
  0x01cc0a86: movzbl 0x1(%esi),%ebx
  0x01cc0a8a: inc    %esi
  0x01cc0a8b: jmp    *0x55628438(,%ebx,4)
  0x01cc0a92: nop    
  0x01cc0a93: nop    
  0x01cc0a94: int3   
  0x01cc0a95: int3   
  0x01cc0a96: int3   
  0x01cc0a97: int3   
  0x01cc0a98: int3   
  0x01cc0a99: int3   
  0x01cc0a9a: int3   
  0x01cc0a9b: int3   
  0x01cc0a9c: int3   
  0x01cc0a9d: int3   
  0x01cc0a9e: int3   
  0x01cc0a9f: int3   

----------------------------------------------------------------------
lshl  121 lshl  [0x01cc0ab0, 0x01cc0ae0]  48 bytes

  0x01cc0ab0: pop    %eax
  0x01cc0ab1: mov    %eax,%ecx
  0x01cc0ab3: pop    %eax
  0x01cc0ab4: pop    %edx
  0x01cc0ab5: and    $0x3f,%ecx
  0x01cc0ab8: cmp    $0x20,%ecx
  0x01cc0abb: jl     0x01cc0ac5
  0x01cc0ac1: mov    %eax,%edx
  0x01cc0ac3: xor    %eax,%eax
  0x01cc0ac5: shld   %cl,%eax,%edx
  0x01cc0ac8: shl    %cl,%eax
  0x01cc0aca: movzbl 0x1(%esi),%ebx
  0x01cc0ace: inc    %esi
  0x01cc0acf: jmp    *0x55628838(,%ebx,4)
  0x01cc0ad6: nop    
  0x01cc0ad7: nop    
  0x01cc0ad8: int3   
  0x01cc0ad9: int3   
  0x01cc0ada: int3   
  0x01cc0adb: int3   
  0x01cc0adc: int3   
  0x01cc0add: int3   
  0x01cc0ade: int3   
  0x01cc0adf: int3   

----------------------------------------------------------------------
ishr  122 ishr  [0x01cc0af0, 0x01cc0b10]  32 bytes

  0x01cc0af0: pop    %eax
  0x01cc0af1: mov    %eax,%ecx
  0x01cc0af3: pop    %eax
  0x01cc0af4: sar    %cl,%eax
  0x01cc0af6: movzbl 0x1(%esi),%ebx
  0x01cc0afa: inc    %esi
  0x01cc0afb: jmp    *0x55628438(,%ebx,4)
  0x01cc0b02: nop    
  0x01cc0b03: nop    
  0x01cc0b04: int3   
  0x01cc0b05: int3   
  0x01cc0b06: int3   
  0x01cc0b07: int3   
  0x01cc0b08: int3   
  0x01cc0b09: int3   
  0x01cc0b0a: int3   
  0x01cc0b0b: int3   
  0x01cc0b0c: int3   
  0x01cc0b0d: int3   
  0x01cc0b0e: int3   
  0x01cc0b0f: int3   

----------------------------------------------------------------------
lshr  123 lshr  [0x01cc0b20, 0x01cc0b50]  48 bytes

  0x01cc0b20: pop    %eax
  0x01cc0b21: mov    %eax,%ecx
  0x01cc0b23: pop    %eax
  0x01cc0b24: pop    %edx
  0x01cc0b25: and    $0x3f,%ecx
  0x01cc0b28: cmp    $0x20,%ecx
  0x01cc0b2b: jl     0x01cc0b36
  0x01cc0b31: mov    %edx,%eax
  0x01cc0b33: sar    $0x1f,%edx
  0x01cc0b36: shrd   %cl,%edx,%eax
  0x01cc0b39: sar    %cl,%edx
  0x01cc0b3b: movzbl 0x1(%esi),%ebx
  0x01cc0b3f: inc    %esi
  0x01cc0b40: jmp    *0x55628838(,%ebx,4)
  0x01cc0b47: nop    
  0x01cc0b48: int3   
  0x01cc0b49: int3   
  0x01cc0b4a: int3   
  0x01cc0b4b: int3   
  0x01cc0b4c: int3   
  0x01cc0b4d: int3   
  0x01cc0b4e: int3   
  0x01cc0b4f: int3   

----------------------------------------------------------------------
iushr  124 iushr  [0x01cc0b60, 0x01cc0b80]  32 bytes

  0x01cc0b60: pop    %eax
  0x01cc0b61: mov    %eax,%ecx
  0x01cc0b63: pop    %eax
  0x01cc0b64: shr    %cl,%eax
  0x01cc0b66: movzbl 0x1(%esi),%ebx
  0x01cc0b6a: inc    %esi
  0x01cc0b6b: jmp    *0x55628438(,%ebx,4)
  0x01cc0b72: nop    
  0x01cc0b73: nop    
  0x01cc0b74: int3   
  0x01cc0b75: int3   
  0x01cc0b76: int3   
  0x01cc0b77: int3   
  0x01cc0b78: int3   
  0x01cc0b79: int3   
  0x01cc0b7a: int3   
  0x01cc0b7b: int3   
  0x01cc0b7c: int3   
  0x01cc0b7d: int3   
  0x01cc0b7e: int3   
  0x01cc0b7f: int3   

----------------------------------------------------------------------
lushr  125 lushr  [0x01cc0b90, 0x01cc0bc0]  48 bytes

  0x01cc0b90: pop    %eax
  0x01cc0b91: mov    %eax,%ecx
  0x01cc0b93: pop    %eax
  0x01cc0b94: pop    %edx
  0x01cc0b95: and    $0x3f,%ecx
  0x01cc0b98: cmp    $0x20,%ecx
  0x01cc0b9b: jl     0x01cc0ba5
  0x01cc0ba1: mov    %edx,%eax
  0x01cc0ba3: xor    %edx,%edx
  0x01cc0ba5: shrd   %cl,%edx,%eax
  0x01cc0ba8: shr    %cl,%edx
  0x01cc0baa: movzbl 0x1(%esi),%ebx
  0x01cc0bae: inc    %esi
  0x01cc0baf: jmp    *0x55628838(,%ebx,4)
  0x01cc0bb6: nop    
  0x01cc0bb7: nop    
  0x01cc0bb8: int3   
  0x01cc0bb9: int3   
  0x01cc0bba: int3   
  0x01cc0bbb: int3   
  0x01cc0bbc: int3   
  0x01cc0bbd: int3   
  0x01cc0bbe: int3   
  0x01cc0bbf: int3   

----------------------------------------------------------------------
iand  126 iand  [0x01cc0bd0, 0x01cc0be0]  16 bytes

  0x01cc0bd0: pop    %eax
  0x01cc0bd1: pop    %edx
  0x01cc0bd2: and    %edx,%eax
  0x01cc0bd4: movzbl 0x1(%esi),%ebx
  0x01cc0bd8: inc    %esi
  0x01cc0bd9: jmp    *0x55628438(,%ebx,4)

----------------------------------------------------------------------
land  127 land  [0x01cc0bf0, 0x01cc0c10]  32 bytes

  0x01cc0bf0: pop    %eax
  0x01cc0bf1: pop    %edx
  0x01cc0bf2: pop    %ebx
  0x01cc0bf3: pop    %ecx
  0x01cc0bf4: and    %ebx,%eax
  0x01cc0bf6: and    %ecx,%edx
  0x01cc0bf8: movzbl 0x1(%esi),%ebx
  0x01cc0bfc: inc    %esi
  0x01cc0bfd: jmp    *0x55628838(,%ebx,4)
  0x01cc0c04: int3   
  0x01cc0c05: int3   
  0x01cc0c06: int3   
  0x01cc0c07: int3   
  0x01cc0c08: int3   
  0x01cc0c09: int3   
  0x01cc0c0a: int3   
  0x01cc0c0b: int3   
  0x01cc0c0c: int3   
  0x01cc0c0d: int3   
  0x01cc0c0e: int3   
  0x01cc0c0f: int3   

----------------------------------------------------------------------
ior  128 ior  [0x01cc0c20, 0x01cc0c30]  16 bytes

  0x01cc0c20: pop    %eax
  0x01cc0c21: pop    %edx
  0x01cc0c22: or     %edx,%eax
  0x01cc0c24: movzbl 0x1(%esi),%ebx
  0x01cc0c28: inc    %esi
  0x01cc0c29: jmp    *0x55628438(,%ebx,4)

----------------------------------------------------------------------
lor  129 lor  [0x01cc0c40, 0x01cc0c60]  32 bytes

  0x01cc0c40: pop    %eax
  0x01cc0c41: pop    %edx
  0x01cc0c42: pop    %ebx
  0x01cc0c43: pop    %ecx
  0x01cc0c44: or     %ebx,%eax
  0x01cc0c46: or     %ecx,%edx
  0x01cc0c48: movzbl 0x1(%esi),%ebx
  0x01cc0c4c: inc    %esi
  0x01cc0c4d: jmp    *0x55628838(,%ebx,4)
  0x01cc0c54: int3   
  0x01cc0c55: int3   
  0x01cc0c56: int3   
  0x01cc0c57: int3   
  0x01cc0c58: int3   
  0x01cc0c59: int3   
  0x01cc0c5a: int3   
  0x01cc0c5b: int3   
  0x01cc0c5c: int3   
  0x01cc0c5d: int3   
  0x01cc0c5e: int3   
  0x01cc0c5f: int3   

----------------------------------------------------------------------
ixor  130 ixor  [0x01cc0c70, 0x01cc0c80]  16 bytes

  0x01cc0c70: pop    %eax
  0x01cc0c71: pop    %edx
  0x01cc0c72: xor    %edx,%eax
  0x01cc0c74: movzbl 0x1(%esi),%ebx
  0x01cc0c78: inc    %esi
  0x01cc0c79: jmp    *0x55628438(,%ebx,4)

----------------------------------------------------------------------
lxor  131 lxor  [0x01cc0c90, 0x01cc0cb0]  32 bytes

  0x01cc0c90: pop    %eax
  0x01cc0c91: pop    %edx
  0x01cc0c92: pop    %ebx
  0x01cc0c93: pop    %ecx
  0x01cc0c94: xor    %ebx,%eax
  0x01cc0c96: xor    %ecx,%edx
  0x01cc0c98: movzbl 0x1(%esi),%ebx
  0x01cc0c9c: inc    %esi
  0x01cc0c9d: jmp    *0x55628838(,%ebx,4)
  0x01cc0ca4: int3   
  0x01cc0ca5: int3   
  0x01cc0ca6: int3   
  0x01cc0ca7: int3   
  0x01cc0ca8: int3   
  0x01cc0ca9: int3   
  0x01cc0caa: int3   
  0x01cc0cab: int3   
  0x01cc0cac: int3   
  0x01cc0cad: int3   
  0x01cc0cae: int3   
  0x01cc0caf: int3   

----------------------------------------------------------------------
iinc  132 iinc  [0x01cc0cc0, 0x01cc0d30]  112 bytes

  0x01cc0cc0: sub    $0x4,%esp
  0x01cc0cc3: fstps  (%esp)
  0x01cc0cc6: jmp    0x01cc0ce4
  0x01cc0ccb: sub    $0x8,%esp
  0x01cc0cce: fstpl  (%esp)
  0x01cc0cd1: jmp    0x01cc0ce4
  0x01cc0cd6: push   %edx
  0x01cc0cd7: push   %eax
  0x01cc0cd8: jmp    0x01cc0ce4
  0x01cc0cdd: push   %eax
  0x01cc0cde: jmp    0x01cc0ce4
  0x01cc0ce3: push   %eax
  0x01cc0ce4: movsbl 0x2(%esi),%edx
  0x01cc0ce8: movzbl 0x1(%esi),%ebx
  0x01cc0cec: neg    %ebx
  0x01cc0cee: add    %edx,(%edi,%ebx,4)
  0x01cc0cf1: movzbl 0x3(%esi),%ebx
  0x01cc0cf5: add    $0x3,%esi
  0x01cc0cf8: jmp    *0x55629838(,%ebx,4)
  0x01cc0cff: mov    0x4(%esi),%edx
  0x01cc0d02: movzwl 0x2(%esi),%ebx
  0x01cc0d06: bswap  %ebx
  0x01cc0d08: shr    $0x10,%ebx
  0x01cc0d0b: neg    %ebx
  0x01cc0d0d: bswap  %edx
  0x01cc0d0f: sar    $0x10,%edx
  0x01cc0d12: add    %edx,(%edi,%ebx,4)
  0x01cc0d15: movzbl 0x6(%esi),%ebx
  0x01cc0d19: add    $0x6,%esi
  0x01cc0d1c: jmp    *0x55629838(,%ebx,4)
  0x01cc0d23: nop    
  0x01cc0d24: int3   
  0x01cc0d25: int3   
  0x01cc0d26: int3   
  0x01cc0d27: int3   
  0x01cc0d28: int3   
  0x01cc0d29: int3   
  0x01cc0d2a: int3   
  0x01cc0d2b: int3   
  0x01cc0d2c: int3   
  0x01cc0d2d: int3   
  0x01cc0d2e: int3   
  0x01cc0d2f: int3   

----------------------------------------------------------------------
i2l  133 i2l  [0x01cc0d40, 0x01cc0d50]  16 bytes

  0x01cc0d40: pop    %eax
  0x01cc0d41: cltd   
  0x01cc0d42: movzbl 0x1(%esi),%ebx
  0x01cc0d46: inc    %esi
  0x01cc0d47: jmp    *0x55628838(,%ebx,4)
  0x01cc0d4e: nop    
  0x01cc0d4f: nop    

----------------------------------------------------------------------
i2f  134 i2f  [0x01cc0d60, 0x01cc0d80]  32 bytes

  0x01cc0d60: pop    %eax
  0x01cc0d61: push   %eax
  0x01cc0d62: fildl  (%esp)
  0x01cc0d65: fstps  (%esp)
  0x01cc0d68: flds   (%esp)
  0x01cc0d6b: pop    %ecx
  0x01cc0d6c: movzbl 0x1(%esi),%ebx
  0x01cc0d70: inc    %esi
  0x01cc0d71: jmp    *0x55628c38(,%ebx,4)
  0x01cc0d78: int3   
  0x01cc0d79: int3   
  0x01cc0d7a: int3   
  0x01cc0d7b: int3   
  0x01cc0d7c: int3   
  0x01cc0d7d: int3   
  0x01cc0d7e: int3   
  0x01cc0d7f: int3   

----------------------------------------------------------------------
i2d  135 i2d  [0x01cc0d90, 0x01cc0db0]  32 bytes

  0x01cc0d90: pop    %eax
  0x01cc0d91: push   %eax
  0x01cc0d92: push   %eax
  0x01cc0d93: fildl  (%esp)
  0x01cc0d96: fstpl  (%esp)
  0x01cc0d99: fldl   (%esp)
  0x01cc0d9c: pop    %ecx
  0x01cc0d9d: pop    %ecx
  0x01cc0d9e: movzbl 0x1(%esi),%ebx
  0x01cc0da2: inc    %esi
  0x01cc0da3: jmp    *0x55629038(,%ebx,4)
  0x01cc0daa: nop    
  0x01cc0dab: nop    
  0x01cc0dac: int3   
  0x01cc0dad: int3   
  0x01cc0dae: int3   
  0x01cc0daf: int3   

----------------------------------------------------------------------
l2i  136 l2i  [0x01cc0dc0, 0x01cc0dd0]  16 bytes

  0x01cc0dc0: pop    %eax
  0x01cc0dc1: pop    %edx
  0x01cc0dc2: movzbl 0x1(%esi),%ebx
  0x01cc0dc6: inc    %esi
  0x01cc0dc7: jmp    *0x55628438(,%ebx,4)
  0x01cc0dce: nop    
  0x01cc0dcf: nop    

----------------------------------------------------------------------
l2f  137 l2f  [0x01cc0de0, 0x01cc0e00]  32 bytes

  0x01cc0de0: pop    %eax
  0x01cc0de1: pop    %edx
  0x01cc0de2: push   %edx
  0x01cc0de3: push   %eax
  0x01cc0de4: fildll (%esp)
  0x01cc0de7: fstps  (%esp)
  0x01cc0dea: flds   (%esp)
  0x01cc0ded: pop    %ecx
  0x01cc0dee: pop    %ecx
  0x01cc0def: movzbl 0x1(%esi),%ebx
  0x01cc0df3: inc    %esi
  0x01cc0df4: jmp    *0x55628c38(,%ebx,4)
  0x01cc0dfb: nop    
  0x01cc0dfc: int3   
  0x01cc0dfd: int3   
  0x01cc0dfe: int3   
  0x01cc0dff: int3   

----------------------------------------------------------------------
l2d  138 l2d  [0x01cc0e10, 0x01cc0e30]  32 bytes

  0x01cc0e10: pop    %eax
  0x01cc0e11: pop    %edx
  0x01cc0e12: push   %edx
  0x01cc0e13: push   %eax
  0x01cc0e14: fildll (%esp)
  0x01cc0e17: fstpl  (%esp)
  0x01cc0e1a: fldl   (%esp)
  0x01cc0e1d: pop    %ecx
  0x01cc0e1e: pop    %ecx
  0x01cc0e1f: movzbl 0x1(%esi),%ebx
  0x01cc0e23: inc    %esi
  0x01cc0e24: jmp    *0x55629038(,%ebx,4)
  0x01cc0e2b: nop    
  0x01cc0e2c: int3   
  0x01cc0e2d: int3   
  0x01cc0e2e: int3   
  0x01cc0e2f: int3   

----------------------------------------------------------------------
f2i  139 f2i  [0x01cc0e40, 0x01cc0e80]  64 bytes

  0x01cc0e40: flds   (%esp)
  0x01cc0e43: add    $0x4,%esp
  0x01cc0e46: push   %ecx
  0x01cc0e47: fstps  (%esp)
  0x01cc0e4a: cmpl   $0x0,-0x8(%ebp)
  0x01cc0e51: je     0x01cc0e68
  0x01cc0e57: push   $0x55310148
  0x01cc0e5c: call   0x01cc0e61
  0x01cc0e61: pusha  
  0x01cc0e62: call   0x54dedbf0
  0x01cc0e67: hlt    
  0x01cc0e68: call   0x55212ea0
  0x01cc0e6d: add    $0x4,%esp
  0x01cc0e70: movzbl 0x1(%esi),%ebx
  0x01cc0e74: inc    %esi
  0x01cc0e75: jmp    *0x55628438(,%ebx,4)
  0x01cc0e7c: int3   
  0x01cc0e7d: int3   
  0x01cc0e7e: int3   
  0x01cc0e7f: int3   

----------------------------------------------------------------------
f2l  140 f2l  [0x01cc0e90, 0x01cc0ed0]  64 bytes

  0x01cc0e90: flds   (%esp)
  0x01cc0e93: add    $0x4,%esp
  0x01cc0e96: push   %ecx
  0x01cc0e97: fstps  (%esp)
  0x01cc0e9a: cmpl   $0x0,-0x8(%ebp)
  0x01cc0ea1: je     0x01cc0eb8
  0x01cc0ea7: push   $0x55310148
  0x01cc0eac: call   0x01cc0eb1
  0x01cc0eb1: pusha  
  0x01cc0eb2: call   0x54dedbf0
  0x01cc0eb7: hlt    
  0x01cc0eb8: call   0x55213010
  0x01cc0ebd: add    $0x4,%esp
  0x01cc0ec0: movzbl 0x1(%esi),%ebx
  0x01cc0ec4: inc    %esi
  0x01cc0ec5: jmp    *0x55628838(,%ebx,4)
  0x01cc0ecc: int3   
  0x01cc0ecd: int3   
  0x01cc0ece: int3   
  0x01cc0ecf: int3   

----------------------------------------------------------------------
f2d  141 f2d  [0x01cc0ee0, 0x01cc0f00]  32 bytes

  0x01cc0ee0: flds   (%esp)
  0x01cc0ee3: add    $0x4,%esp
  0x01cc0ee6: movzbl 0x1(%esi),%ebx
  0x01cc0eea: inc    %esi
  0x01cc0eeb: jmp    *0x55629038(,%ebx,4)
  0x01cc0ef2: nop    
  0x01cc0ef3: nop    
  0x01cc0ef4: int3   
  0x01cc0ef5: int3   
  0x01cc0ef6: int3   
  0x01cc0ef7: int3   
  0x01cc0ef8: int3   
  0x01cc0ef9: int3   
  0x01cc0efa: int3   
  0x01cc0efb: int3   
  0x01cc0efc: int3   
  0x01cc0efd: int3   
  0x01cc0efe: int3   
  0x01cc0eff: int3   

----------------------------------------------------------------------
d2i  142 d2i  [0x01cc0f10, 0x01cc0f50]  64 bytes

  0x01cc0f10: fldl   (%esp)
  0x01cc0f13: add    $0x8,%esp
  0x01cc0f16: push   %ecx
  0x01cc0f17: push   %ecx
  0x01cc0f18: fstpl  (%esp)
  0x01cc0f1b: cmpl   $0x0,-0x8(%ebp)
  0x01cc0f22: je     0x01cc0f39
  0x01cc0f28: push   $0x55310148
  0x01cc0f2d: call   0x01cc0f32
  0x01cc0f32: pusha  
  0x01cc0f33: call   0x54dedbf0
  0x01cc0f38: hlt    
  0x01cc0f39: call   0x552131d0
  0x01cc0f3e: add    $0x8,%esp
  0x01cc0f41: movzbl 0x1(%esi),%ebx
  0x01cc0f45: inc    %esi
  0x01cc0f46: jmp    *0x55628438(,%ebx,4)
  0x01cc0f4d: nop    
  0x01cc0f4e: nop    
  0x01cc0f4f: nop    

----------------------------------------------------------------------
d2l  143 d2l  [0x01cc0f60, 0x01cc0fa0]  64 bytes

  0x01cc0f60: fldl   (%esp)
  0x01cc0f63: add    $0x8,%esp
  0x01cc0f66: push   %ecx
  0x01cc0f67: push   %ecx
  0x01cc0f68: fstpl  (%esp)
  0x01cc0f6b: cmpl   $0x0,-0x8(%ebp)
  0x01cc0f72: je     0x01cc0f89
  0x01cc0f78: push   $0x55310148
  0x01cc0f7d: call   0x01cc0f82
  0x01cc0f82: pusha  
  0x01cc0f83: call   0x54dedbf0
  0x01cc0f88: hlt    
  0x01cc0f89: call   0x55213340
  0x01cc0f8e: add    $0x8,%esp
  0x01cc0f91: movzbl 0x1(%esi),%ebx
  0x01cc0f95: inc    %esi
  0x01cc0f96: jmp    *0x55628838(,%ebx,4)
  0x01cc0f9d: nop    
  0x01cc0f9e: nop    
  0x01cc0f9f: nop    

----------------------------------------------------------------------
d2f  144 d2f  [0x01cc0fb0, 0x01cc0fd0]  32 bytes

  0x01cc0fb0: fldl   (%esp)
  0x01cc0fb3: add    $0x8,%esp
  0x01cc0fb6: push   %ecx
  0x01cc0fb7: fstps  (%esp)
  0x01cc0fba: flds   (%esp)
  0x01cc0fbd: pop    %ecx
  0x01cc0fbe: movzbl 0x1(%esi),%ebx
  0x01cc0fc2: inc    %esi
  0x01cc0fc3: jmp    *0x55628c38(,%ebx,4)
  0x01cc0fca: nop    
  0x01cc0fcb: nop    
  0x01cc0fcc: int3   
  0x01cc0fcd: int3   
  0x01cc0fce: int3   
  0x01cc0fcf: int3   

----------------------------------------------------------------------
i2b  145 i2b  [0x01cc0fe0, 0x01cc1000]  32 bytes

  0x01cc0fe0: pop    %eax
  0x01cc0fe1: shl    $0x18,%eax
  0x01cc0fe4: sar    $0x18,%eax
  0x01cc0fe7: movzbl 0x1(%esi),%ebx
  0x01cc0feb: inc    %esi
  0x01cc0fec: jmp    *0x55628438(,%ebx,4)
  0x01cc0ff3: nop    
  0x01cc0ff4: int3   
  0x01cc0ff5: int3   
  0x01cc0ff6: int3   
  0x01cc0ff7: int3   
  0x01cc0ff8: int3   
  0x01cc0ff9: int3   
  0x01cc0ffa: int3   
  0x01cc0ffb: int3   
  0x01cc0ffc: int3   
  0x01cc0ffd: int3   
  0x01cc0ffe: int3   
  0x01cc0fff: int3   

----------------------------------------------------------------------
i2c  146 i2c  [0x01cc1010, 0x01cc1030]  32 bytes

  0x01cc1010: pop    %eax
  0x01cc1011: and    $0xffff,%eax
  0x01cc1017: movzbl 0x1(%esi),%ebx
  0x01cc101b: inc    %esi
  0x01cc101c: jmp    *0x55628438(,%ebx,4)
  0x01cc1023: nop    
  0x01cc1024: int3   
  0x01cc1025: int3   
  0x01cc1026: int3   
  0x01cc1027: int3   
  0x01cc1028: int3   
  0x01cc1029: int3   
  0x01cc102a: int3   
  0x01cc102b: int3   
  0x01cc102c: int3   
  0x01cc102d: int3   
  0x01cc102e: int3   
  0x01cc102f: int3   

----------------------------------------------------------------------
i2s  147 i2s  [0x01cc1040, 0x01cc1060]  32 bytes

  0x01cc1040: pop    %eax
  0x01cc1041: shl    $0x10,%eax
  0x01cc1044: sar    $0x10,%eax
  0x01cc1047: movzbl 0x1(%esi),%ebx
  0x01cc104b: inc    %esi
  0x01cc104c: jmp    *0x55628438(,%ebx,4)
  0x01cc1053: nop    
  0x01cc1054: int3   
  0x01cc1055: int3   
  0x01cc1056: int3   
  0x01cc1057: int3   
  0x01cc1058: int3   
  0x01cc1059: int3   
  0x01cc105a: int3   
  0x01cc105b: int3   
  0x01cc105c: int3   
  0x01cc105d: int3   
  0x01cc105e: int3   
  0x01cc105f: int3   

----------------------------------------------------------------------
lcmp  148 lcmp  [0x01cc1070, 0x01cc10b0]  64 bytes

  0x01cc1070: pop    %eax
  0x01cc1071: pop    %edx
  0x01cc1072: pop    %ebx
  0x01cc1073: pop    %ecx
  0x01cc1074: cmp    %edx,%ecx
  0x01cc1076: jl     0x01cc109a
  0x01cc107c: jg     0x01cc1092
  0x01cc1082: xor    %ecx,%ecx
  0x01cc1084: cmp    %eax,%ebx
  0x01cc1086: jb     0x01cc109a
  0x01cc108c: je     0x01cc109d
  0x01cc1092: xor    %ecx,%ecx
  0x01cc1094: inc    %ecx
  0x01cc1095: jmp    0x01cc109d
  0x01cc109a: xor    %ecx,%ecx
  0x01cc109c: dec    %ecx
  0x01cc109d: mov    %ecx,%eax
  0x01cc109f: movzbl 0x1(%esi),%ebx
  0x01cc10a3: inc    %esi
  0x01cc10a4: jmp    *0x55628438(,%ebx,4)
  0x01cc10ab: nop    
  0x01cc10ac: int3   
  0x01cc10ad: int3   
  0x01cc10ae: int3   
  0x01cc10af: int3   

----------------------------------------------------------------------
fcmpl  149 fcmpl  [0x01cc10c0, 0x01cc1100]  64 bytes

  0x01cc10c0: flds   (%esp)
  0x01cc10c3: add    $0x4,%esp
  0x01cc10c6: flds   (%esp)
  0x01cc10c9: pop    %ecx
  0x01cc10ca: fucomip %st(1),%st
  0x01cc10cc: ffree  %st(0)
  0x01cc10ce: fincstp 
  0x01cc10d0: mov    $0xffffffff,%eax
  0x01cc10d5: jp     0x01cc10ed
  0x01cc10db: jb     0x01cc10ed
  0x01cc10e1: mov    $0x0,%eax
  0x01cc10e6: je     0x01cc10ed
  0x01cc10ec: inc    %eax
  0x01cc10ed: movzbl 0x1(%esi),%ebx
  0x01cc10f1: inc    %esi
  0x01cc10f2: jmp    *0x55628438(,%ebx,4)
  0x01cc10f9: nop    
  0x01cc10fa: nop    
  0x01cc10fb: nop    
  0x01cc10fc: int3   
  0x01cc10fd: int3   
  0x01cc10fe: int3   
  0x01cc10ff: int3   

----------------------------------------------------------------------
fcmpg  150 fcmpg  [0x01cc1110, 0x01cc1150]  64 bytes

  0x01cc1110: flds   (%esp)
  0x01cc1113: add    $0x4,%esp
  0x01cc1116: flds   (%esp)
  0x01cc1119: pop    %ecx
  0x01cc111a: fucomip %st(1),%st
  0x01cc111c: ffree  %st(0)
  0x01cc111e: fincstp 
  0x01cc1120: mov    $0x1,%eax
  0x01cc1125: jp     0x01cc113d
  0x01cc112b: ja     0x01cc113d
  0x01cc1131: mov    $0x0,%eax
  0x01cc1136: je     0x01cc113d
  0x01cc113c: dec    %eax
  0x01cc113d: movzbl 0x1(%esi),%ebx
  0x01cc1141: inc    %esi
  0x01cc1142: jmp    *0x55628438(,%ebx,4)
  0x01cc1149: nop    
  0x01cc114a: nop    
  0x01cc114b: nop    
  0x01cc114c: int3   
  0x01cc114d: int3   
  0x01cc114e: int3   
  0x01cc114f: int3   

----------------------------------------------------------------------
dcmpl  151 dcmpl  [0x01cc1160, 0x01cc11a0]  64 bytes

  0x01cc1160: fldl   (%esp)
  0x01cc1163: add    $0x8,%esp
  0x01cc1166: fldl   (%esp)
  0x01cc1169: pop    %edx
  0x01cc116a: pop    %ecx
  0x01cc116b: fucomip %st(1),%st
  0x01cc116d: ffree  %st(0)
  0x01cc116f: fincstp 
  0x01cc1171: mov    $0xffffffff,%eax
  0x01cc1176: jp     0x01cc118e
  0x01cc117c: jb     0x01cc118e
  0x01cc1182: mov    $0x0,%eax
  0x01cc1187: je     0x01cc118e
  0x01cc118d: inc    %eax
  0x01cc118e: movzbl 0x1(%esi),%ebx
  0x01cc1192: inc    %esi
  0x01cc1193: jmp    *0x55628438(,%ebx,4)
  0x01cc119a: nop    
  0x01cc119b: nop    
  0x01cc119c: int3   
  0x01cc119d: int3   
  0x01cc119e: int3   
  0x01cc119f: int3   

----------------------------------------------------------------------
dcmpg  152 dcmpg  [0x01cc11b0, 0x01cc11f0]  64 bytes

  0x01cc11b0: fldl   (%esp)
  0x01cc11b3: add    $0x8,%esp
  0x01cc11b6: fldl   (%esp)
  0x01cc11b9: pop    %edx
  0x01cc11ba: pop    %ecx
  0x01cc11bb: fucomip %st(1),%st
  0x01cc11bd: ffree  %st(0)
  0x01cc11bf: fincstp 
  0x01cc11c1: mov    $0x1,%eax
  0x01cc11c6: jp     0x01cc11de
  0x01cc11cc: ja     0x01cc11de
  0x01cc11d2: mov    $0x0,%eax
  0x01cc11d7: je     0x01cc11de
  0x01cc11dd: dec    %eax
  0x01cc11de: movzbl 0x1(%esi),%ebx
  0x01cc11e2: inc    %esi
  0x01cc11e3: jmp    *0x55628438(,%ebx,4)
  0x01cc11ea: nop    
  0x01cc11eb: nop    
  0x01cc11ec: int3   
  0x01cc11ed: int3   
  0x01cc11ee: int3   
  0x01cc11ef: int3   

----------------------------------------------------------------------
ifeq  153 ifeq  [0x01cc1200, 0x01cc1490]  656 bytes

  0x01cc1200: pop    %eax
  0x01cc1201: test   %eax,%eax
  0x01cc1203: jne    0x01cc1477
  0x01cc1209: mov    -0xc(%ebp),%ecx
  0x01cc120c: movswl 0x1(%esi),%edx
  0x01cc1210: bswap  %edx
  0x01cc1212: sar    $0x10,%edx
  0x01cc1215: add    %edx,%esi
  0x01cc1217: test   %edx,%edx
  0x01cc1219: jns    0x01cc12f8
  0x01cc121f: mov    0x10(%ecx),%eax
  0x01cc1222: test   %eax,%eax
  0x01cc1224: jne    0x01cc12d7
  0x01cc122a: push   %edx
  0x01cc122b: push   %ecx
  0x01cc122c: call   0x01cc1236
  0x01cc1231: jmp    0x01cc12ca
  0x01cc1236: push   %ecx
  0x01cc1237: lea    0x8(%esp),%eax
  0x01cc123b: cmpl   $0x0,-0x8(%ebp)
  0x01cc1242: je     0x01cc1259
  0x01cc1248: push   $0x55310188
  0x01cc124d: call   0x01cc1252
  0x01cc1252: pusha  
  0x01cc1253: call   0x54dedbf0
  0x01cc1258: hlt    
  0x01cc1259: mov    %esi,-0x1c(%ebp)
  0x01cc125c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc1264: mov    -0xc(%edi),%edi
  0x01cc1267: push   %edi
  0x01cc1268: mov    %ebp,0x144(%edi)
  0x01cc126e: mov    %eax,0x13c(%edi)
  0x01cc1274: call   0x5505d720
  0x01cc1279: add    $0x8,%esp
  0x01cc127c: push   %eax
  0x01cc127d: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc1285: mov    -0xc(%eax),%eax
  0x01cc1288: cmp    %eax,%edi
  0x01cc128a: je     0x01cc12a1
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc1290: push   $0x55312af0
  0x01cc1295: call   0x01cc129a
  0x01cc129a: pusha  
  0x01cc129b: call   0x54dedbf0
  0x01cc12a0: hlt    
  0x01cc12a1: pop    %eax
  0x01cc12a2: movl   $0x0,0x13c(%edi)
  0x01cc12ac: movl   $0x0,0x144(%edi)
  0x01cc12b6: cmpl   $0x0,0x4(%edi)
  0x01cc12bd: jne    0x01cb0340
  0x01cc12c3: mov    -0x1c(%ebp),%esi
  0x01cc12c6: mov    -0x18(%ebp),%edi
  0x01cc12c9: ret    
  0x01cc12ca: pop    %ecx
  0x01cc12cb: pop    %edx
  0x01cc12cc: mov    0x10(%ecx),%eax
  0x01cc12cf: test   %eax,%eax
  0x01cc12d1: je     0x01cc12f8
  0x01cc12d7: mov    0x10(%ecx),%ecx
  0x01cc12da: mov    0xc(%ecx),%eax
  0x01cc12dd: add    $0x8,%eax
  0x01cc12e0: mov    %eax,0xc(%ecx)
  0x01cc12e3: mov    0x8(%ecx),%eax
  0x01cc12e6: and    $0xfffffff8,%eax
  0x01cc12e9: add    0xc(%ecx),%eax
  0x01cc12ec: cmp    0x55627788,%eax
  0x01cc12f2: jae    0x01cc1302
  0x01cc12f8: movzbl (%esi),%ebx
  0x01cc12fb: jmp    *0x55629838(,%ebx,4)
  0x01cc1302: neg    %edx
  0x01cc1304: add    %esi,%edx
  0x01cc1306: call   0x01cc1310
  0x01cc130b: jmp    0x01cc13a4
  0x01cc1310: push   %edx
  0x01cc1311: lea    0x8(%esp),%eax
  0x01cc1315: cmpl   $0x0,-0x8(%ebp)
  0x01cc131c: je     0x01cc1333
  0x01cc1322: push   $0x55310188
  0x01cc1327: call   0x01cc132c
  0x01cc132c: pusha  
  0x01cc132d: call   0x54dedbf0
  0x01cc1332: hlt    
  0x01cc1333: mov    %esi,-0x1c(%ebp)
  0x01cc1336: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc133e: mov    -0xc(%edi),%edi
  0x01cc1341: push   %edi
  0x01cc1342: mov    %ebp,0x144(%edi)
  0x01cc1348: mov    %eax,0x13c(%edi)
  0x01cc134e: call   0x5505ce70
  0x01cc1353: add    $0x8,%esp
  0x01cc1356: push   %eax
  0x01cc1357: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc135f: mov    -0xc(%eax),%eax
  0x01cc1362: cmp    %eax,%edi
  0x01cc1364: je     0x01cc137b
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc136a: push   $0x55312af0
  0x01cc136f: call   0x01cc1374
  0x01cc1374: pusha  
  0x01cc1375: call   0x54dedbf0
  0x01cc137a: hlt    
  0x01cc137b: pop    %eax
  0x01cc137c: movl   $0x0,0x13c(%edi)
  0x01cc1386: movl   $0x0,0x144(%edi)
  0x01cc1390: cmpl   $0x0,0x4(%edi)
  0x01cc1397: jne    0x01cb0340
  0x01cc139d: mov    -0x1c(%ebp),%esi
  0x01cc13a0: mov    -0x18(%ebp),%edi
  0x01cc13a3: ret    
  0x01cc13a4: movzbl (%esi),%ebx
  0x01cc13a7: test   %eax,%eax
  0x01cc13a9: je     0x01cc12f8
  0x01cc13af: mov    0x34(%eax),%ecx
  0x01cc13b2: cmp    $0xfffffffe,%ecx
  0x01cc13b5: je     0x01cc12f8
  0x01cc13bb: mov    %eax,%ebx
  0x01cc13bd: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc13c5: mov    -0xc(%ecx),%ecx
  0x01cc13c8: call   0x01cc13d2
  0x01cc13cd: jmp    0x01cc1465
  0x01cc13d2: lea    0x4(%esp),%eax
  0x01cc13d6: cmpl   $0x0,-0x8(%ebp)
  0x01cc13dd: je     0x01cc13f4
  0x01cc13e3: push   $0x55310188
  0x01cc13e8: call   0x01cc13ed
  0x01cc13ed: pusha  
  0x01cc13ee: call   0x54dedbf0
  0x01cc13f3: hlt    
  0x01cc13f4: mov    %esi,-0x1c(%ebp)
  0x01cc13f7: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc13ff: mov    -0xc(%edi),%edi
  0x01cc1402: push   %edi
  0x01cc1403: mov    %ebp,0x144(%edi)
  0x01cc1409: mov    %eax,0x13c(%edi)
  0x01cc140f: call   0x55217020
  0x01cc1414: add    $0x4,%esp
  0x01cc1417: push   %eax
  0x01cc1418: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc1420: mov    -0xc(%eax),%eax
  0x01cc1423: cmp    %eax,%edi
  0x01cc1425: je     0x01cc143c
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc142b: push   $0x55312af0
  0x01cc1430: call   0x01cc1435
  0x01cc1435: pusha  
  0x01cc1436: call   0x54dedbf0
  0x01cc143b: hlt    
  0x01cc143c: pop    %eax
  0x01cc143d: movl   $0x0,0x13c(%edi)
  0x01cc1447: movl   $0x0,0x144(%edi)
  0x01cc1451: cmpl   $0x0,0x4(%edi)
  0x01cc1458: jne    0x01cb0340
  0x01cc145e: mov    -0x1c(%ebp),%esi
  0x01cc1461: mov    -0x18(%ebp),%edi
  0x01cc1464: ret    
  0x01cc1465: mov    %eax,%ecx
  0x01cc1467: mov    -0x4(%ebp),%edx
  0x01cc146a: mov    %ebp,%esp
  0x01cc146c: pop    %ebp
  0x01cc146d: pop    %edi
  0x01cc146e: mov    %edx,%esp
  0x01cc1470: and    $0xfffffff0,%esp
  0x01cc1473: push   %edi
  0x01cc1474: jmp    *0x54(%ebx)
  0x01cc1477: movzbl 0x3(%esi),%ebx
  0x01cc147b: add    $0x3,%esi
  0x01cc147e: jmp    *0x55629838(,%ebx,4)
  0x01cc1485: nop    
  0x01cc1486: nop    
  0x01cc1487: nop    
  0x01cc1488: int3   
  0x01cc1489: int3   
  0x01cc148a: int3   
  0x01cc148b: int3   
  0x01cc148c: int3   
  0x01cc148d: int3   
  0x01cc148e: int3   
  0x01cc148f: int3   

----------------------------------------------------------------------
ifne  154 ifne  [0x01cc14a0, 0x01cc1730]  656 bytes

  0x01cc14a0: pop    %eax
  0x01cc14a1: test   %eax,%eax
  0x01cc14a3: je     0x01cc1717
  0x01cc14a9: mov    -0xc(%ebp),%ecx
  0x01cc14ac: movswl 0x1(%esi),%edx
  0x01cc14b0: bswap  %edx
  0x01cc14b2: sar    $0x10,%edx
  0x01cc14b5: add    %edx,%esi
  0x01cc14b7: test   %edx,%edx
  0x01cc14b9: jns    0x01cc1598
  0x01cc14bf: mov    0x10(%ecx),%eax
  0x01cc14c2: test   %eax,%eax
  0x01cc14c4: jne    0x01cc1577
  0x01cc14ca: push   %edx
  0x01cc14cb: push   %ecx
  0x01cc14cc: call   0x01cc14d6
  0x01cc14d1: jmp    0x01cc156a
  0x01cc14d6: push   %ecx
  0x01cc14d7: lea    0x8(%esp),%eax
  0x01cc14db: cmpl   $0x0,-0x8(%ebp)
  0x01cc14e2: je     0x01cc14f9
  0x01cc14e8: push   $0x55310188
  0x01cc14ed: call   0x01cc14f2
  0x01cc14f2: pusha  
  0x01cc14f3: call   0x54dedbf0
  0x01cc14f8: hlt    
  0x01cc14f9: mov    %esi,-0x1c(%ebp)
  0x01cc14fc: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc1504: mov    -0xc(%edi),%edi
  0x01cc1507: push   %edi
  0x01cc1508: mov    %ebp,0x144(%edi)
  0x01cc150e: mov    %eax,0x13c(%edi)
  0x01cc1514: call   0x5505d720
  0x01cc1519: add    $0x8,%esp
  0x01cc151c: push   %eax
  0x01cc151d: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc1525: mov    -0xc(%eax),%eax
  0x01cc1528: cmp    %eax,%edi
  0x01cc152a: je     0x01cc1541
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc1530: push   $0x55312af0
  0x01cc1535: call   0x01cc153a
  0x01cc153a: pusha  
  0x01cc153b: call   0x54dedbf0
  0x01cc1540: hlt    
  0x01cc1541: pop    %eax
  0x01cc1542: movl   $0x0,0x13c(%edi)
  0x01cc154c: movl   $0x0,0x144(%edi)
  0x01cc1556: cmpl   $0x0,0x4(%edi)
  0x01cc155d: jne    0x01cb0340
  0x01cc1563: mov    -0x1c(%ebp),%esi
  0x01cc1566: mov    -0x18(%ebp),%edi
  0x01cc1569: ret    
  0x01cc156a: pop    %ecx
  0x01cc156b: pop    %edx
  0x01cc156c: mov    0x10(%ecx),%eax
  0x01cc156f: test   %eax,%eax
  0x01cc1571: je     0x01cc1598
  0x01cc1577: mov    0x10(%ecx),%ecx
  0x01cc157a: mov    0xc(%ecx),%eax
  0x01cc157d: add    $0x8,%eax
  0x01cc1580: mov    %eax,0xc(%ecx)
  0x01cc1583: mov    0x8(%ecx),%eax
  0x01cc1586: and    $0xfffffff8,%eax
  0x01cc1589: add    0xc(%ecx),%eax
  0x01cc158c: cmp    0x55627788,%eax
  0x01cc1592: jae    0x01cc15a2
  0x01cc1598: movzbl (%esi),%ebx
  0x01cc159b: jmp    *0x55629838(,%ebx,4)
  0x01cc15a2: neg    %edx
  0x01cc15a4: add    %esi,%edx
  0x01cc15a6: call   0x01cc15b0
  0x01cc15ab: jmp    0x01cc1644
  0x01cc15b0: push   %edx
  0x01cc15b1: lea    0x8(%esp),%eax
  0x01cc15b5: cmpl   $0x0,-0x8(%ebp)
  0x01cc15bc: je     0x01cc15d3
  0x01cc15c2: push   $0x55310188
  0x01cc15c7: call   0x01cc15cc
  0x01cc15cc: pusha  
  0x01cc15cd: call   0x54dedbf0
  0x01cc15d2: hlt    
  0x01cc15d3: mov    %esi,-0x1c(%ebp)
  0x01cc15d6: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc15de: mov    -0xc(%edi),%edi
  0x01cc15e1: push   %edi
  0x01cc15e2: mov    %ebp,0x144(%edi)
  0x01cc15e8: mov    %eax,0x13c(%edi)
  0x01cc15ee: call   0x5505ce70
  0x01cc15f3: add    $0x8,%esp
  0x01cc15f6: push   %eax
  0x01cc15f7: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc15ff: mov    -0xc(%eax),%eax
  0x01cc1602: cmp    %eax,%edi
  0x01cc1604: je     0x01cc161b
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc160a: push   $0x55312af0
  0x01cc160f: call   0x01cc1614
  0x01cc1614: pusha  
  0x01cc1615: call   0x54dedbf0
  0x01cc161a: hlt    
  0x01cc161b: pop    %eax
  0x01cc161c: movl   $0x0,0x13c(%edi)
  0x01cc1626: movl   $0x0,0x144(%edi)
  0x01cc1630: cmpl   $0x0,0x4(%edi)
  0x01cc1637: jne    0x01cb0340
  0x01cc163d: mov    -0x1c(%ebp),%esi
  0x01cc1640: mov    -0x18(%ebp),%edi
  0x01cc1643: ret    
  0x01cc1644: movzbl (%esi),%ebx
  0x01cc1647: test   %eax,%eax
  0x01cc1649: je     0x01cc1598
  0x01cc164f: mov    0x34(%eax),%ecx
  0x01cc1652: cmp    $0xfffffffe,%ecx
  0x01cc1655: je     0x01cc1598
  0x01cc165b: mov    %eax,%ebx
  0x01cc165d: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc1665: mov    -0xc(%ecx),%ecx
  0x01cc1668: call   0x01cc1672
  0x01cc166d: jmp    0x01cc1705
  0x01cc1672: lea    0x4(%esp),%eax
  0x01cc1676: cmpl   $0x0,-0x8(%ebp)
  0x01cc167d: je     0x01cc1694
  0x01cc1683: push   $0x55310188
  0x01cc1688: call   0x01cc168d
  0x01cc168d: pusha  
  0x01cc168e: call   0x54dedbf0
  0x01cc1693: hlt    
  0x01cc1694: mov    %esi,-0x1c(%ebp)
  0x01cc1697: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc169f: mov    -0xc(%edi),%edi
  0x01cc16a2: push   %edi
  0x01cc16a3: mov    %ebp,0x144(%edi)
  0x01cc16a9: mov    %eax,0x13c(%edi)
  0x01cc16af: call   0x55217020
  0x01cc16b4: add    $0x4,%esp
  0x01cc16b7: push   %eax
  0x01cc16b8: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc16c0: mov    -0xc(%eax),%eax
  0x01cc16c3: cmp    %eax,%edi
  0x01cc16c5: je     0x01cc16dc
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc16cb: push   $0x55312af0
  0x01cc16d0: call   0x01cc16d5
  0x01cc16d5: pusha  
  0x01cc16d6: call   0x54dedbf0
  0x01cc16db: hlt    
  0x01cc16dc: pop    %eax
  0x01cc16dd: movl   $0x0,0x13c(%edi)
  0x01cc16e7: movl   $0x0,0x144(%edi)
  0x01cc16f1: cmpl   $0x0,0x4(%edi)
  0x01cc16f8: jne    0x01cb0340
  0x01cc16fe: mov    -0x1c(%ebp),%esi
  0x01cc1701: mov    -0x18(%ebp),%edi
  0x01cc1704: ret    
  0x01cc1705: mov    %eax,%ecx
  0x01cc1707: mov    -0x4(%ebp),%edx
  0x01cc170a: mov    %ebp,%esp
  0x01cc170c: pop    %ebp
  0x01cc170d: pop    %edi
  0x01cc170e: mov    %edx,%esp
  0x01cc1710: and    $0xfffffff0,%esp
  0x01cc1713: push   %edi
  0x01cc1714: jmp    *0x54(%ebx)
  0x01cc1717: movzbl 0x3(%esi),%ebx
  0x01cc171b: add    $0x3,%esi
  0x01cc171e: jmp    *0x55629838(,%ebx,4)
  0x01cc1725: nop    
  0x01cc1726: nop    
  0x01cc1727: nop    
  0x01cc1728: int3   
  0x01cc1729: int3   
  0x01cc172a: int3   
  0x01cc172b: int3   
  0x01cc172c: int3   
  0x01cc172d: int3   
  0x01cc172e: int3   
  0x01cc172f: int3   

----------------------------------------------------------------------
iflt  155 iflt  [0x01cc1740, 0x01cc19d0]  656 bytes

  0x01cc1740: pop    %eax
  0x01cc1741: test   %eax,%eax
  0x01cc1743: jge    0x01cc19b7
  0x01cc1749: mov    -0xc(%ebp),%ecx
  0x01cc174c: movswl 0x1(%esi),%edx
  0x01cc1750: bswap  %edx
  0x01cc1752: sar    $0x10,%edx
  0x01cc1755: add    %edx,%esi
  0x01cc1757: test   %edx,%edx
  0x01cc1759: jns    0x01cc1838
  0x01cc175f: mov    0x10(%ecx),%eax
  0x01cc1762: test   %eax,%eax
  0x01cc1764: jne    0x01cc1817
  0x01cc176a: push   %edx
  0x01cc176b: push   %ecx
  0x01cc176c: call   0x01cc1776
  0x01cc1771: jmp    0x01cc180a
  0x01cc1776: push   %ecx
  0x01cc1777: lea    0x8(%esp),%eax
  0x01cc177b: cmpl   $0x0,-0x8(%ebp)
  0x01cc1782: je     0x01cc1799
  0x01cc1788: push   $0x55310188
  0x01cc178d: call   0x01cc1792
  0x01cc1792: pusha  
  0x01cc1793: call   0x54dedbf0
  0x01cc1798: hlt    
  0x01cc1799: mov    %esi,-0x1c(%ebp)
  0x01cc179c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc17a4: mov    -0xc(%edi),%edi
  0x01cc17a7: push   %edi
  0x01cc17a8: mov    %ebp,0x144(%edi)
  0x01cc17ae: mov    %eax,0x13c(%edi)
  0x01cc17b4: call   0x5505d720
  0x01cc17b9: add    $0x8,%esp
  0x01cc17bc: push   %eax
  0x01cc17bd: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc17c5: mov    -0xc(%eax),%eax
  0x01cc17c8: cmp    %eax,%edi
  0x01cc17ca: je     0x01cc17e1
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc17d0: push   $0x55312af0
  0x01cc17d5: call   0x01cc17da
  0x01cc17da: pusha  
  0x01cc17db: call   0x54dedbf0
  0x01cc17e0: hlt    
  0x01cc17e1: pop    %eax
  0x01cc17e2: movl   $0x0,0x13c(%edi)
  0x01cc17ec: movl   $0x0,0x144(%edi)
  0x01cc17f6: cmpl   $0x0,0x4(%edi)
  0x01cc17fd: jne    0x01cb0340
  0x01cc1803: mov    -0x1c(%ebp),%esi
  0x01cc1806: mov    -0x18(%ebp),%edi
  0x01cc1809: ret    
  0x01cc180a: pop    %ecx
  0x01cc180b: pop    %edx
  0x01cc180c: mov    0x10(%ecx),%eax
  0x01cc180f: test   %eax,%eax
  0x01cc1811: je     0x01cc1838
  0x01cc1817: mov    0x10(%ecx),%ecx
  0x01cc181a: mov    0xc(%ecx),%eax
  0x01cc181d: add    $0x8,%eax
  0x01cc1820: mov    %eax,0xc(%ecx)
  0x01cc1823: mov    0x8(%ecx),%eax
  0x01cc1826: and    $0xfffffff8,%eax
  0x01cc1829: add    0xc(%ecx),%eax
  0x01cc182c: cmp    0x55627788,%eax
  0x01cc1832: jae    0x01cc1842
  0x01cc1838: movzbl (%esi),%ebx
  0x01cc183b: jmp    *0x55629838(,%ebx,4)
  0x01cc1842: neg    %edx
  0x01cc1844: add    %esi,%edx
  0x01cc1846: call   0x01cc1850
  0x01cc184b: jmp    0x01cc18e4
  0x01cc1850: push   %edx
  0x01cc1851: lea    0x8(%esp),%eax
  0x01cc1855: cmpl   $0x0,-0x8(%ebp)
  0x01cc185c: je     0x01cc1873
  0x01cc1862: push   $0x55310188
  0x01cc1867: call   0x01cc186c
  0x01cc186c: pusha  
  0x01cc186d: call   0x54dedbf0
  0x01cc1872: hlt    
  0x01cc1873: mov    %esi,-0x1c(%ebp)
  0x01cc1876: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc187e: mov    -0xc(%edi),%edi
  0x01cc1881: push   %edi
  0x01cc1882: mov    %ebp,0x144(%edi)
  0x01cc1888: mov    %eax,0x13c(%edi)
  0x01cc188e: call   0x5505ce70
  0x01cc1893: add    $0x8,%esp
  0x01cc1896: push   %eax
  0x01cc1897: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc189f: mov    -0xc(%eax),%eax
  0x01cc18a2: cmp    %eax,%edi
  0x01cc18a4: je     0x01cc18bb
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc18aa: push   $0x55312af0
  0x01cc18af: call   0x01cc18b4
  0x01cc18b4: pusha  
  0x01cc18b5: call   0x54dedbf0
  0x01cc18ba: hlt    
  0x01cc18bb: pop    %eax
  0x01cc18bc: movl   $0x0,0x13c(%edi)
  0x01cc18c6: movl   $0x0,0x144(%edi)
  0x01cc18d0: cmpl   $0x0,0x4(%edi)
  0x01cc18d7: jne    0x01cb0340
  0x01cc18dd: mov    -0x1c(%ebp),%esi
  0x01cc18e0: mov    -0x18(%ebp),%edi
  0x01cc18e3: ret    
  0x01cc18e4: movzbl (%esi),%ebx
  0x01cc18e7: test   %eax,%eax
  0x01cc18e9: je     0x01cc1838
  0x01cc18ef: mov    0x34(%eax),%ecx
  0x01cc18f2: cmp    $0xfffffffe,%ecx
  0x01cc18f5: je     0x01cc1838
  0x01cc18fb: mov    %eax,%ebx
  0x01cc18fd: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc1905: mov    -0xc(%ecx),%ecx
  0x01cc1908: call   0x01cc1912
  0x01cc190d: jmp    0x01cc19a5
  0x01cc1912: lea    0x4(%esp),%eax
  0x01cc1916: cmpl   $0x0,-0x8(%ebp)
  0x01cc191d: je     0x01cc1934
  0x01cc1923: push   $0x55310188
  0x01cc1928: call   0x01cc192d
  0x01cc192d: pusha  
  0x01cc192e: call   0x54dedbf0
  0x01cc1933: hlt    
  0x01cc1934: mov    %esi,-0x1c(%ebp)
  0x01cc1937: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc193f: mov    -0xc(%edi),%edi
  0x01cc1942: push   %edi
  0x01cc1943: mov    %ebp,0x144(%edi)
  0x01cc1949: mov    %eax,0x13c(%edi)
  0x01cc194f: call   0x55217020
  0x01cc1954: add    $0x4,%esp
  0x01cc1957: push   %eax
  0x01cc1958: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc1960: mov    -0xc(%eax),%eax
  0x01cc1963: cmp    %eax,%edi
  0x01cc1965: je     0x01cc197c
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc196b: push   $0x55312af0
  0x01cc1970: call   0x01cc1975
  0x01cc1975: pusha  
  0x01cc1976: call   0x54dedbf0
  0x01cc197b: hlt    
  0x01cc197c: pop    %eax
  0x01cc197d: movl   $0x0,0x13c(%edi)
  0x01cc1987: movl   $0x0,0x144(%edi)
  0x01cc1991: cmpl   $0x0,0x4(%edi)
  0x01cc1998: jne    0x01cb0340
  0x01cc199e: mov    -0x1c(%ebp),%esi
  0x01cc19a1: mov    -0x18(%ebp),%edi
  0x01cc19a4: ret    
  0x01cc19a5: mov    %eax,%ecx
  0x01cc19a7: mov    -0x4(%ebp),%edx
  0x01cc19aa: mov    %ebp,%esp
  0x01cc19ac: pop    %ebp
  0x01cc19ad: pop    %edi
  0x01cc19ae: mov    %edx,%esp
  0x01cc19b0: and    $0xfffffff0,%esp
  0x01cc19b3: push   %edi
  0x01cc19b4: jmp    *0x54(%ebx)
  0x01cc19b7: movzbl 0x3(%esi),%ebx
  0x01cc19bb: add    $0x3,%esi
  0x01cc19be: jmp    *0x55629838(,%ebx,4)
  0x01cc19c5: nop    
  0x01cc19c6: nop    
  0x01cc19c7: nop    
  0x01cc19c8: int3   
  0x01cc19c9: int3   
  0x01cc19ca: int3   
  0x01cc19cb: int3   
  0x01cc19cc: int3   
  0x01cc19cd: int3   
  0x01cc19ce: int3   
  0x01cc19cf: int3   

----------------------------------------------------------------------
ifge  156 ifge  [0x01cc19e0, 0x01cc1c70]  656 bytes

  0x01cc19e0: pop    %eax
  0x01cc19e1: test   %eax,%eax
  0x01cc19e3: jl     0x01cc1c57
  0x01cc19e9: mov    -0xc(%ebp),%ecx
  0x01cc19ec: movswl 0x1(%esi),%edx
  0x01cc19f0: bswap  %edx
  0x01cc19f2: sar    $0x10,%edx
  0x01cc19f5: add    %edx,%esi
  0x01cc19f7: test   %edx,%edx
  0x01cc19f9: jns    0x01cc1ad8
  0x01cc19ff: mov    0x10(%ecx),%eax
  0x01cc1a02: test   %eax,%eax
  0x01cc1a04: jne    0x01cc1ab7
  0x01cc1a0a: push   %edx
  0x01cc1a0b: push   %ecx
  0x01cc1a0c: call   0x01cc1a16
  0x01cc1a11: jmp    0x01cc1aaa
  0x01cc1a16: push   %ecx
  0x01cc1a17: lea    0x8(%esp),%eax
  0x01cc1a1b: cmpl   $0x0,-0x8(%ebp)
  0x01cc1a22: je     0x01cc1a39
  0x01cc1a28: push   $0x55310188
  0x01cc1a2d: call   0x01cc1a32
  0x01cc1a32: pusha  
  0x01cc1a33: call   0x54dedbf0
  0x01cc1a38: hlt    
  0x01cc1a39: mov    %esi,-0x1c(%ebp)
  0x01cc1a3c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc1a44: mov    -0xc(%edi),%edi
  0x01cc1a47: push   %edi
  0x01cc1a48: mov    %ebp,0x144(%edi)
  0x01cc1a4e: mov    %eax,0x13c(%edi)
  0x01cc1a54: call   0x5505d720
  0x01cc1a59: add    $0x8,%esp
  0x01cc1a5c: push   %eax
  0x01cc1a5d: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc1a65: mov    -0xc(%eax),%eax
  0x01cc1a68: cmp    %eax,%edi
  0x01cc1a6a: je     0x01cc1a81
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc1a70: push   $0x55312af0
  0x01cc1a75: call   0x01cc1a7a
  0x01cc1a7a: pusha  
  0x01cc1a7b: call   0x54dedbf0
  0x01cc1a80: hlt    
  0x01cc1a81: pop    %eax
  0x01cc1a82: movl   $0x0,0x13c(%edi)
  0x01cc1a8c: movl   $0x0,0x144(%edi)
  0x01cc1a96: cmpl   $0x0,0x4(%edi)
  0x01cc1a9d: jne    0x01cb0340
  0x01cc1aa3: mov    -0x1c(%ebp),%esi
  0x01cc1aa6: mov    -0x18(%ebp),%edi
  0x01cc1aa9: ret    
  0x01cc1aaa: pop    %ecx
  0x01cc1aab: pop    %edx
  0x01cc1aac: mov    0x10(%ecx),%eax
  0x01cc1aaf: test   %eax,%eax
  0x01cc1ab1: je     0x01cc1ad8
  0x01cc1ab7: mov    0x10(%ecx),%ecx
  0x01cc1aba: mov    0xc(%ecx),%eax
  0x01cc1abd: add    $0x8,%eax
  0x01cc1ac0: mov    %eax,0xc(%ecx)
  0x01cc1ac3: mov    0x8(%ecx),%eax
  0x01cc1ac6: and    $0xfffffff8,%eax
  0x01cc1ac9: add    0xc(%ecx),%eax
  0x01cc1acc: cmp    0x55627788,%eax
  0x01cc1ad2: jae    0x01cc1ae2
  0x01cc1ad8: movzbl (%esi),%ebx
  0x01cc1adb: jmp    *0x55629838(,%ebx,4)
  0x01cc1ae2: neg    %edx
  0x01cc1ae4: add    %esi,%edx
  0x01cc1ae6: call   0x01cc1af0
  0x01cc1aeb: jmp    0x01cc1b84
  0x01cc1af0: push   %edx
  0x01cc1af1: lea    0x8(%esp),%eax
  0x01cc1af5: cmpl   $0x0,-0x8(%ebp)
  0x01cc1afc: je     0x01cc1b13
  0x01cc1b02: push   $0x55310188
  0x01cc1b07: call   0x01cc1b0c
  0x01cc1b0c: pusha  
  0x01cc1b0d: call   0x54dedbf0
  0x01cc1b12: hlt    
  0x01cc1b13: mov    %esi,-0x1c(%ebp)
  0x01cc1b16: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc1b1e: mov    -0xc(%edi),%edi
  0x01cc1b21: push   %edi
  0x01cc1b22: mov    %ebp,0x144(%edi)
  0x01cc1b28: mov    %eax,0x13c(%edi)
  0x01cc1b2e: call   0x5505ce70
  0x01cc1b33: add    $0x8,%esp
  0x01cc1b36: push   %eax
  0x01cc1b37: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc1b3f: mov    -0xc(%eax),%eax
  0x01cc1b42: cmp    %eax,%edi
  0x01cc1b44: je     0x01cc1b5b
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc1b4a: push   $0x55312af0
  0x01cc1b4f: call   0x01cc1b54
  0x01cc1b54: pusha  
  0x01cc1b55: call   0x54dedbf0
  0x01cc1b5a: hlt    
  0x01cc1b5b: pop    %eax
  0x01cc1b5c: movl   $0x0,0x13c(%edi)
  0x01cc1b66: movl   $0x0,0x144(%edi)
  0x01cc1b70: cmpl   $0x0,0x4(%edi)
  0x01cc1b77: jne    0x01cb0340
  0x01cc1b7d: mov    -0x1c(%ebp),%esi
  0x01cc1b80: mov    -0x18(%ebp),%edi
  0x01cc1b83: ret    
  0x01cc1b84: movzbl (%esi),%ebx
  0x01cc1b87: test   %eax,%eax
  0x01cc1b89: je     0x01cc1ad8
  0x01cc1b8f: mov    0x34(%eax),%ecx
  0x01cc1b92: cmp    $0xfffffffe,%ecx
  0x01cc1b95: je     0x01cc1ad8
  0x01cc1b9b: mov    %eax,%ebx
  0x01cc1b9d: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc1ba5: mov    -0xc(%ecx),%ecx
  0x01cc1ba8: call   0x01cc1bb2
  0x01cc1bad: jmp    0x01cc1c45
  0x01cc1bb2: lea    0x4(%esp),%eax
  0x01cc1bb6: cmpl   $0x0,-0x8(%ebp)
  0x01cc1bbd: je     0x01cc1bd4
  0x01cc1bc3: push   $0x55310188
  0x01cc1bc8: call   0x01cc1bcd
  0x01cc1bcd: pusha  
  0x01cc1bce: call   0x54dedbf0
  0x01cc1bd3: hlt    
  0x01cc1bd4: mov    %esi,-0x1c(%ebp)
  0x01cc1bd7: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc1bdf: mov    -0xc(%edi),%edi
  0x01cc1be2: push   %edi
  0x01cc1be3: mov    %ebp,0x144(%edi)
  0x01cc1be9: mov    %eax,0x13c(%edi)
  0x01cc1bef: call   0x55217020
  0x01cc1bf4: add    $0x4,%esp
  0x01cc1bf7: push   %eax
  0x01cc1bf8: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc1c00: mov    -0xc(%eax),%eax
  0x01cc1c03: cmp    %eax,%edi
  0x01cc1c05: je     0x01cc1c1c
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc1c0b: push   $0x55312af0
  0x01cc1c10: call   0x01cc1c15
  0x01cc1c15: pusha  
  0x01cc1c16: call   0x54dedbf0
  0x01cc1c1b: hlt    
  0x01cc1c1c: pop    %eax
  0x01cc1c1d: movl   $0x0,0x13c(%edi)
  0x01cc1c27: movl   $0x0,0x144(%edi)
  0x01cc1c31: cmpl   $0x0,0x4(%edi)
  0x01cc1c38: jne    0x01cb0340
  0x01cc1c3e: mov    -0x1c(%ebp),%esi
  0x01cc1c41: mov    -0x18(%ebp),%edi
  0x01cc1c44: ret    
  0x01cc1c45: mov    %eax,%ecx
  0x01cc1c47: mov    -0x4(%ebp),%edx
  0x01cc1c4a: mov    %ebp,%esp
  0x01cc1c4c: pop    %ebp
  0x01cc1c4d: pop    %edi
  0x01cc1c4e: mov    %edx,%esp
  0x01cc1c50: and    $0xfffffff0,%esp
  0x01cc1c53: push   %edi
  0x01cc1c54: jmp    *0x54(%ebx)
  0x01cc1c57: movzbl 0x3(%esi),%ebx
  0x01cc1c5b: add    $0x3,%esi
  0x01cc1c5e: jmp    *0x55629838(,%ebx,4)
  0x01cc1c65: nop    
  0x01cc1c66: nop    
  0x01cc1c67: nop    
  0x01cc1c68: int3   
  0x01cc1c69: int3   
  0x01cc1c6a: int3   
  0x01cc1c6b: int3   
  0x01cc1c6c: int3   
  0x01cc1c6d: int3   
  0x01cc1c6e: int3   
  0x01cc1c6f: int3   

----------------------------------------------------------------------
ifgt  157 ifgt  [0x01cc1c80, 0x01cc1f10]  656 bytes

  0x01cc1c80: pop    %eax
  0x01cc1c81: test   %eax,%eax
  0x01cc1c83: jle    0x01cc1ef7
  0x01cc1c89: mov    -0xc(%ebp),%ecx
  0x01cc1c8c: movswl 0x1(%esi),%edx
  0x01cc1c90: bswap  %edx
  0x01cc1c92: sar    $0x10,%edx
  0x01cc1c95: add    %edx,%esi
  0x01cc1c97: test   %edx,%edx
  0x01cc1c99: jns    0x01cc1d78
  0x01cc1c9f: mov    0x10(%ecx),%eax
  0x01cc1ca2: test   %eax,%eax
  0x01cc1ca4: jne    0x01cc1d57
  0x01cc1caa: push   %edx
  0x01cc1cab: push   %ecx
  0x01cc1cac: call   0x01cc1cb6
  0x01cc1cb1: jmp    0x01cc1d4a
  0x01cc1cb6: push   %ecx
  0x01cc1cb7: lea    0x8(%esp),%eax
  0x01cc1cbb: cmpl   $0x0,-0x8(%ebp)
  0x01cc1cc2: je     0x01cc1cd9
  0x01cc1cc8: push   $0x55310188
  0x01cc1ccd: call   0x01cc1cd2
  0x01cc1cd2: pusha  
  0x01cc1cd3: call   0x54dedbf0
  0x01cc1cd8: hlt    
  0x01cc1cd9: mov    %esi,-0x1c(%ebp)
  0x01cc1cdc: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc1ce4: mov    -0xc(%edi),%edi
  0x01cc1ce7: push   %edi
  0x01cc1ce8: mov    %ebp,0x144(%edi)
  0x01cc1cee: mov    %eax,0x13c(%edi)
  0x01cc1cf4: call   0x5505d720
  0x01cc1cf9: add    $0x8,%esp
  0x01cc1cfc: push   %eax
  0x01cc1cfd: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc1d05: mov    -0xc(%eax),%eax
  0x01cc1d08: cmp    %eax,%edi
  0x01cc1d0a: je     0x01cc1d21
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc1d10: push   $0x55312af0
  0x01cc1d15: call   0x01cc1d1a
  0x01cc1d1a: pusha  
  0x01cc1d1b: call   0x54dedbf0
  0x01cc1d20: hlt    
  0x01cc1d21: pop    %eax
  0x01cc1d22: movl   $0x0,0x13c(%edi)
  0x01cc1d2c: movl   $0x0,0x144(%edi)
  0x01cc1d36: cmpl   $0x0,0x4(%edi)
  0x01cc1d3d: jne    0x01cb0340
  0x01cc1d43: mov    -0x1c(%ebp),%esi
  0x01cc1d46: mov    -0x18(%ebp),%edi
  0x01cc1d49: ret    
  0x01cc1d4a: pop    %ecx
  0x01cc1d4b: pop    %edx
  0x01cc1d4c: mov    0x10(%ecx),%eax
  0x01cc1d4f: test   %eax,%eax
  0x01cc1d51: je     0x01cc1d78
  0x01cc1d57: mov    0x10(%ecx),%ecx
  0x01cc1d5a: mov    0xc(%ecx),%eax
  0x01cc1d5d: add    $0x8,%eax
  0x01cc1d60: mov    %eax,0xc(%ecx)
  0x01cc1d63: mov    0x8(%ecx),%eax
  0x01cc1d66: and    $0xfffffff8,%eax
  0x01cc1d69: add    0xc(%ecx),%eax
  0x01cc1d6c: cmp    0x55627788,%eax
  0x01cc1d72: jae    0x01cc1d82
  0x01cc1d78: movzbl (%esi),%ebx
  0x01cc1d7b: jmp    *0x55629838(,%ebx,4)
  0x01cc1d82: neg    %edx
  0x01cc1d84: add    %esi,%edx
  0x01cc1d86: call   0x01cc1d90
  0x01cc1d8b: jmp    0x01cc1e24
  0x01cc1d90: push   %edx
  0x01cc1d91: lea    0x8(%esp),%eax
  0x01cc1d95: cmpl   $0x0,-0x8(%ebp)
  0x01cc1d9c: je     0x01cc1db3
  0x01cc1da2: push   $0x55310188
  0x01cc1da7: call   0x01cc1dac
  0x01cc1dac: pusha  
  0x01cc1dad: call   0x54dedbf0
  0x01cc1db2: hlt    
  0x01cc1db3: mov    %esi,-0x1c(%ebp)
  0x01cc1db6: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc1dbe: mov    -0xc(%edi),%edi
  0x01cc1dc1: push   %edi
  0x01cc1dc2: mov    %ebp,0x144(%edi)
  0x01cc1dc8: mov    %eax,0x13c(%edi)
  0x01cc1dce: call   0x5505ce70
  0x01cc1dd3: add    $0x8,%esp
  0x01cc1dd6: push   %eax
  0x01cc1dd7: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc1ddf: mov    -0xc(%eax),%eax
  0x01cc1de2: cmp    %eax,%edi
  0x01cc1de4: je     0x01cc1dfb
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc1dea: push   $0x55312af0
  0x01cc1def: call   0x01cc1df4
  0x01cc1df4: pusha  
  0x01cc1df5: call   0x54dedbf0
  0x01cc1dfa: hlt    
  0x01cc1dfb: pop    %eax
  0x01cc1dfc: movl   $0x0,0x13c(%edi)
  0x01cc1e06: movl   $0x0,0x144(%edi)
  0x01cc1e10: cmpl   $0x0,0x4(%edi)
  0x01cc1e17: jne    0x01cb0340
  0x01cc1e1d: mov    -0x1c(%ebp),%esi
  0x01cc1e20: mov    -0x18(%ebp),%edi
  0x01cc1e23: ret    
  0x01cc1e24: movzbl (%esi),%ebx
  0x01cc1e27: test   %eax,%eax
  0x01cc1e29: je     0x01cc1d78
  0x01cc1e2f: mov    0x34(%eax),%ecx
  0x01cc1e32: cmp    $0xfffffffe,%ecx
  0x01cc1e35: je     0x01cc1d78
  0x01cc1e3b: mov    %eax,%ebx
  0x01cc1e3d: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc1e45: mov    -0xc(%ecx),%ecx
  0x01cc1e48: call   0x01cc1e52
  0x01cc1e4d: jmp    0x01cc1ee5
  0x01cc1e52: lea    0x4(%esp),%eax
  0x01cc1e56: cmpl   $0x0,-0x8(%ebp)
  0x01cc1e5d: je     0x01cc1e74
  0x01cc1e63: push   $0x55310188
  0x01cc1e68: call   0x01cc1e6d
  0x01cc1e6d: pusha  
  0x01cc1e6e: call   0x54dedbf0
  0x01cc1e73: hlt    
  0x01cc1e74: mov    %esi,-0x1c(%ebp)
  0x01cc1e77: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc1e7f: mov    -0xc(%edi),%edi
  0x01cc1e82: push   %edi
  0x01cc1e83: mov    %ebp,0x144(%edi)
  0x01cc1e89: mov    %eax,0x13c(%edi)
  0x01cc1e8f: call   0x55217020
  0x01cc1e94: add    $0x4,%esp
  0x01cc1e97: push   %eax
  0x01cc1e98: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc1ea0: mov    -0xc(%eax),%eax
  0x01cc1ea3: cmp    %eax,%edi
  0x01cc1ea5: je     0x01cc1ebc
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc1eab: push   $0x55312af0
  0x01cc1eb0: call   0x01cc1eb5
  0x01cc1eb5: pusha  
  0x01cc1eb6: call   0x54dedbf0
  0x01cc1ebb: hlt    
  0x01cc1ebc: pop    %eax
  0x01cc1ebd: movl   $0x0,0x13c(%edi)
  0x01cc1ec7: movl   $0x0,0x144(%edi)
  0x01cc1ed1: cmpl   $0x0,0x4(%edi)
  0x01cc1ed8: jne    0x01cb0340
  0x01cc1ede: mov    -0x1c(%ebp),%esi
  0x01cc1ee1: mov    -0x18(%ebp),%edi
  0x01cc1ee4: ret    
  0x01cc1ee5: mov    %eax,%ecx
  0x01cc1ee7: mov    -0x4(%ebp),%edx
  0x01cc1eea: mov    %ebp,%esp
  0x01cc1eec: pop    %ebp
  0x01cc1eed: pop    %edi
  0x01cc1eee: mov    %edx,%esp
  0x01cc1ef0: and    $0xfffffff0,%esp
  0x01cc1ef3: push   %edi
  0x01cc1ef4: jmp    *0x54(%ebx)
  0x01cc1ef7: movzbl 0x3(%esi),%ebx
  0x01cc1efb: add    $0x3,%esi
  0x01cc1efe: jmp    *0x55629838(,%ebx,4)
  0x01cc1f05: nop    
  0x01cc1f06: nop    
  0x01cc1f07: nop    
  0x01cc1f08: int3   
  0x01cc1f09: int3   
  0x01cc1f0a: int3   
  0x01cc1f0b: int3   
  0x01cc1f0c: int3   
  0x01cc1f0d: int3   
  0x01cc1f0e: int3   
  0x01cc1f0f: int3   

----------------------------------------------------------------------
ifle  158 ifle  [0x01cc1f20, 0x01cc21b0]  656 bytes

  0x01cc1f20: pop    %eax
  0x01cc1f21: test   %eax,%eax
  0x01cc1f23: jg     0x01cc2197
  0x01cc1f29: mov    -0xc(%ebp),%ecx
  0x01cc1f2c: movswl 0x1(%esi),%edx
  0x01cc1f30: bswap  %edx
  0x01cc1f32: sar    $0x10,%edx
  0x01cc1f35: add    %edx,%esi
  0x01cc1f37: test   %edx,%edx
  0x01cc1f39: jns    0x01cc2018
  0x01cc1f3f: mov    0x10(%ecx),%eax
  0x01cc1f42: test   %eax,%eax
  0x01cc1f44: jne    0x01cc1ff7
  0x01cc1f4a: push   %edx
  0x01cc1f4b: push   %ecx
  0x01cc1f4c: call   0x01cc1f56
  0x01cc1f51: jmp    0x01cc1fea
  0x01cc1f56: push   %ecx
  0x01cc1f57: lea    0x8(%esp),%eax
  0x01cc1f5b: cmpl   $0x0,-0x8(%ebp)
  0x01cc1f62: je     0x01cc1f79
  0x01cc1f68: push   $0x55310188
  0x01cc1f6d: call   0x01cc1f72
  0x01cc1f72: pusha  
  0x01cc1f73: call   0x54dedbf0
  0x01cc1f78: hlt    
  0x01cc1f79: mov    %esi,-0x1c(%ebp)
  0x01cc1f7c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc1f84: mov    -0xc(%edi),%edi
  0x01cc1f87: push   %edi
  0x01cc1f88: mov    %ebp,0x144(%edi)
  0x01cc1f8e: mov    %eax,0x13c(%edi)
  0x01cc1f94: call   0x5505d720
  0x01cc1f99: add    $0x8,%esp
  0x01cc1f9c: push   %eax
  0x01cc1f9d: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc1fa5: mov    -0xc(%eax),%eax
  0x01cc1fa8: cmp    %eax,%edi
  0x01cc1faa: je     0x01cc1fc1
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc1fb0: push   $0x55312af0
  0x01cc1fb5: call   0x01cc1fba
  0x01cc1fba: pusha  
  0x01cc1fbb: call   0x54dedbf0
  0x01cc1fc0: hlt    
  0x01cc1fc1: pop    %eax
  0x01cc1fc2: movl   $0x0,0x13c(%edi)
  0x01cc1fcc: movl   $0x0,0x144(%edi)
  0x01cc1fd6: cmpl   $0x0,0x4(%edi)
  0x01cc1fdd: jne    0x01cb0340
  0x01cc1fe3: mov    -0x1c(%ebp),%esi
  0x01cc1fe6: mov    -0x18(%ebp),%edi
  0x01cc1fe9: ret    
  0x01cc1fea: pop    %ecx
  0x01cc1feb: pop    %edx
  0x01cc1fec: mov    0x10(%ecx),%eax
  0x01cc1fef: test   %eax,%eax
  0x01cc1ff1: je     0x01cc2018
  0x01cc1ff7: mov    0x10(%ecx),%ecx
  0x01cc1ffa: mov    0xc(%ecx),%eax
  0x01cc1ffd: add    $0x8,%eax
  0x01cc2000: mov    %eax,0xc(%ecx)
  0x01cc2003: mov    0x8(%ecx),%eax
  0x01cc2006: and    $0xfffffff8,%eax
  0x01cc2009: add    0xc(%ecx),%eax
  0x01cc200c: cmp    0x55627788,%eax
  0x01cc2012: jae    0x01cc2022
  0x01cc2018: movzbl (%esi),%ebx
  0x01cc201b: jmp    *0x55629838(,%ebx,4)
  0x01cc2022: neg    %edx
  0x01cc2024: add    %esi,%edx
  0x01cc2026: call   0x01cc2030
  0x01cc202b: jmp    0x01cc20c4
  0x01cc2030: push   %edx
  0x01cc2031: lea    0x8(%esp),%eax
  0x01cc2035: cmpl   $0x0,-0x8(%ebp)
  0x01cc203c: je     0x01cc2053
  0x01cc2042: push   $0x55310188
  0x01cc2047: call   0x01cc204c
  0x01cc204c: pusha  
  0x01cc204d: call   0x54dedbf0
  0x01cc2052: hlt    
  0x01cc2053: mov    %esi,-0x1c(%ebp)
  0x01cc2056: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc205e: mov    -0xc(%edi),%edi
  0x01cc2061: push   %edi
  0x01cc2062: mov    %ebp,0x144(%edi)
  0x01cc2068: mov    %eax,0x13c(%edi)
  0x01cc206e: call   0x5505ce70
  0x01cc2073: add    $0x8,%esp
  0x01cc2076: push   %eax
  0x01cc2077: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc207f: mov    -0xc(%eax),%eax
  0x01cc2082: cmp    %eax,%edi
  0x01cc2084: je     0x01cc209b
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc208a: push   $0x55312af0
  0x01cc208f: call   0x01cc2094
  0x01cc2094: pusha  
  0x01cc2095: call   0x54dedbf0
  0x01cc209a: hlt    
  0x01cc209b: pop    %eax
  0x01cc209c: movl   $0x0,0x13c(%edi)
  0x01cc20a6: movl   $0x0,0x144(%edi)
  0x01cc20b0: cmpl   $0x0,0x4(%edi)
  0x01cc20b7: jne    0x01cb0340
  0x01cc20bd: mov    -0x1c(%ebp),%esi
  0x01cc20c0: mov    -0x18(%ebp),%edi
  0x01cc20c3: ret    
  0x01cc20c4: movzbl (%esi),%ebx
  0x01cc20c7: test   %eax,%eax
  0x01cc20c9: je     0x01cc2018
  0x01cc20cf: mov    0x34(%eax),%ecx
  0x01cc20d2: cmp    $0xfffffffe,%ecx
  0x01cc20d5: je     0x01cc2018
  0x01cc20db: mov    %eax,%ebx
  0x01cc20dd: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc20e5: mov    -0xc(%ecx),%ecx
  0x01cc20e8: call   0x01cc20f2
  0x01cc20ed: jmp    0x01cc2185
  0x01cc20f2: lea    0x4(%esp),%eax
  0x01cc20f6: cmpl   $0x0,-0x8(%ebp)
  0x01cc20fd: je     0x01cc2114
  0x01cc2103: push   $0x55310188
  0x01cc2108: call   0x01cc210d
  0x01cc210d: pusha  
  0x01cc210e: call   0x54dedbf0
  0x01cc2113: hlt    
  0x01cc2114: mov    %esi,-0x1c(%ebp)
  0x01cc2117: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc211f: mov    -0xc(%edi),%edi
  0x01cc2122: push   %edi
  0x01cc2123: mov    %ebp,0x144(%edi)
  0x01cc2129: mov    %eax,0x13c(%edi)
  0x01cc212f: call   0x55217020
  0x01cc2134: add    $0x4,%esp
  0x01cc2137: push   %eax
  0x01cc2138: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc2140: mov    -0xc(%eax),%eax
  0x01cc2143: cmp    %eax,%edi
  0x01cc2145: je     0x01cc215c
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc214b: push   $0x55312af0
  0x01cc2150: call   0x01cc2155
  0x01cc2155: pusha  
  0x01cc2156: call   0x54dedbf0
  0x01cc215b: hlt    
  0x01cc215c: pop    %eax
  0x01cc215d: movl   $0x0,0x13c(%edi)
  0x01cc2167: movl   $0x0,0x144(%edi)
  0x01cc2171: cmpl   $0x0,0x4(%edi)
  0x01cc2178: jne    0x01cb0340
  0x01cc217e: mov    -0x1c(%ebp),%esi
  0x01cc2181: mov    -0x18(%ebp),%edi
  0x01cc2184: ret    
  0x01cc2185: mov    %eax,%ecx
  0x01cc2187: mov    -0x4(%ebp),%edx
  0x01cc218a: mov    %ebp,%esp
  0x01cc218c: pop    %ebp
  0x01cc218d: pop    %edi
  0x01cc218e: mov    %edx,%esp
  0x01cc2190: and    $0xfffffff0,%esp
  0x01cc2193: push   %edi
  0x01cc2194: jmp    *0x54(%ebx)
  0x01cc2197: movzbl 0x3(%esi),%ebx
  0x01cc219b: add    $0x3,%esi
  0x01cc219e: jmp    *0x55629838(,%ebx,4)
  0x01cc21a5: nop    
  0x01cc21a6: nop    
  0x01cc21a7: nop    
  0x01cc21a8: int3   
  0x01cc21a9: int3   
  0x01cc21aa: int3   
  0x01cc21ab: int3   
  0x01cc21ac: int3   
  0x01cc21ad: int3   
  0x01cc21ae: int3   
  0x01cc21af: int3   

----------------------------------------------------------------------
if_icmpeq  159 if_icmpeq  [0x01cc21c0, 0x01cc2450]  656 bytes

  0x01cc21c0: pop    %eax
  0x01cc21c1: pop    %edx
  0x01cc21c2: cmp    %eax,%edx
  0x01cc21c4: jne    0x01cc2438
  0x01cc21ca: mov    -0xc(%ebp),%ecx
  0x01cc21cd: movswl 0x1(%esi),%edx
  0x01cc21d1: bswap  %edx
  0x01cc21d3: sar    $0x10,%edx
  0x01cc21d6: add    %edx,%esi
  0x01cc21d8: test   %edx,%edx
  0x01cc21da: jns    0x01cc22b9
  0x01cc21e0: mov    0x10(%ecx),%eax
  0x01cc21e3: test   %eax,%eax
  0x01cc21e5: jne    0x01cc2298
  0x01cc21eb: push   %edx
  0x01cc21ec: push   %ecx
  0x01cc21ed: call   0x01cc21f7
  0x01cc21f2: jmp    0x01cc228b
  0x01cc21f7: push   %ecx
  0x01cc21f8: lea    0x8(%esp),%eax
  0x01cc21fc: cmpl   $0x0,-0x8(%ebp)
  0x01cc2203: je     0x01cc221a
  0x01cc2209: push   $0x55310188
  0x01cc220e: call   0x01cc2213
  0x01cc2213: pusha  
  0x01cc2214: call   0x54dedbf0
  0x01cc2219: hlt    
  0x01cc221a: mov    %esi,-0x1c(%ebp)
  0x01cc221d: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc2225: mov    -0xc(%edi),%edi
  0x01cc2228: push   %edi
  0x01cc2229: mov    %ebp,0x144(%edi)
  0x01cc222f: mov    %eax,0x13c(%edi)
  0x01cc2235: call   0x5505d720
  0x01cc223a: add    $0x8,%esp
  0x01cc223d: push   %eax
  0x01cc223e: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc2246: mov    -0xc(%eax),%eax
  0x01cc2249: cmp    %eax,%edi
  0x01cc224b: je     0x01cc2262
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc2251: push   $0x55312af0
  0x01cc2256: call   0x01cc225b
  0x01cc225b: pusha  
  0x01cc225c: call   0x54dedbf0
  0x01cc2261: hlt    
  0x01cc2262: pop    %eax
  0x01cc2263: movl   $0x0,0x13c(%edi)
  0x01cc226d: movl   $0x0,0x144(%edi)
  0x01cc2277: cmpl   $0x0,0x4(%edi)
  0x01cc227e: jne    0x01cb0340
  0x01cc2284: mov    -0x1c(%ebp),%esi
  0x01cc2287: mov    -0x18(%ebp),%edi
  0x01cc228a: ret    
  0x01cc228b: pop    %ecx
  0x01cc228c: pop    %edx
  0x01cc228d: mov    0x10(%ecx),%eax
  0x01cc2290: test   %eax,%eax
  0x01cc2292: je     0x01cc22b9
  0x01cc2298: mov    0x10(%ecx),%ecx
  0x01cc229b: mov    0xc(%ecx),%eax
  0x01cc229e: add    $0x8,%eax
  0x01cc22a1: mov    %eax,0xc(%ecx)
  0x01cc22a4: mov    0x8(%ecx),%eax
  0x01cc22a7: and    $0xfffffff8,%eax
  0x01cc22aa: add    0xc(%ecx),%eax
  0x01cc22ad: cmp    0x55627788,%eax
  0x01cc22b3: jae    0x01cc22c3
  0x01cc22b9: movzbl (%esi),%ebx
  0x01cc22bc: jmp    *0x55629838(,%ebx,4)
  0x01cc22c3: neg    %edx
  0x01cc22c5: add    %esi,%edx
  0x01cc22c7: call   0x01cc22d1
  0x01cc22cc: jmp    0x01cc2365
  0x01cc22d1: push   %edx
  0x01cc22d2: lea    0x8(%esp),%eax
  0x01cc22d6: cmpl   $0x0,-0x8(%ebp)
  0x01cc22dd: je     0x01cc22f4
  0x01cc22e3: push   $0x55310188
  0x01cc22e8: call   0x01cc22ed
  0x01cc22ed: pusha  
  0x01cc22ee: call   0x54dedbf0
  0x01cc22f3: hlt    
  0x01cc22f4: mov    %esi,-0x1c(%ebp)
  0x01cc22f7: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc22ff: mov    -0xc(%edi),%edi
  0x01cc2302: push   %edi
  0x01cc2303: mov    %ebp,0x144(%edi)
  0x01cc2309: mov    %eax,0x13c(%edi)
  0x01cc230f: call   0x5505ce70
  0x01cc2314: add    $0x8,%esp
  0x01cc2317: push   %eax
  0x01cc2318: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc2320: mov    -0xc(%eax),%eax
  0x01cc2323: cmp    %eax,%edi
  0x01cc2325: je     0x01cc233c
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc232b: push   $0x55312af0
  0x01cc2330: call   0x01cc2335
  0x01cc2335: pusha  
  0x01cc2336: call   0x54dedbf0
  0x01cc233b: hlt    
  0x01cc233c: pop    %eax
  0x01cc233d: movl   $0x0,0x13c(%edi)
  0x01cc2347: movl   $0x0,0x144(%edi)
  0x01cc2351: cmpl   $0x0,0x4(%edi)
  0x01cc2358: jne    0x01cb0340
  0x01cc235e: mov    -0x1c(%ebp),%esi
  0x01cc2361: mov    -0x18(%ebp),%edi
  0x01cc2364: ret    
  0x01cc2365: movzbl (%esi),%ebx
  0x01cc2368: test   %eax,%eax
  0x01cc236a: je     0x01cc22b9
  0x01cc2370: mov    0x34(%eax),%ecx
  0x01cc2373: cmp    $0xfffffffe,%ecx
  0x01cc2376: je     0x01cc22b9
  0x01cc237c: mov    %eax,%ebx
  0x01cc237e: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc2386: mov    -0xc(%ecx),%ecx
  0x01cc2389: call   0x01cc2393
  0x01cc238e: jmp    0x01cc2426
  0x01cc2393: lea    0x4(%esp),%eax
  0x01cc2397: cmpl   $0x0,-0x8(%ebp)
  0x01cc239e: je     0x01cc23b5
  0x01cc23a4: push   $0x55310188
  0x01cc23a9: call   0x01cc23ae
  0x01cc23ae: pusha  
  0x01cc23af: call   0x54dedbf0
  0x01cc23b4: hlt    
  0x01cc23b5: mov    %esi,-0x1c(%ebp)
  0x01cc23b8: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc23c0: mov    -0xc(%edi),%edi
  0x01cc23c3: push   %edi
  0x01cc23c4: mov    %ebp,0x144(%edi)
  0x01cc23ca: mov    %eax,0x13c(%edi)
  0x01cc23d0: call   0x55217020
  0x01cc23d5: add    $0x4,%esp
  0x01cc23d8: push   %eax
  0x01cc23d9: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc23e1: mov    -0xc(%eax),%eax
  0x01cc23e4: cmp    %eax,%edi
  0x01cc23e6: je     0x01cc23fd
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc23ec: push   $0x55312af0
  0x01cc23f1: call   0x01cc23f6
  0x01cc23f6: pusha  
  0x01cc23f7: call   0x54dedbf0
  0x01cc23fc: hlt    
  0x01cc23fd: pop    %eax
  0x01cc23fe: movl   $0x0,0x13c(%edi)
  0x01cc2408: movl   $0x0,0x144(%edi)
  0x01cc2412: cmpl   $0x0,0x4(%edi)
  0x01cc2419: jne    0x01cb0340
  0x01cc241f: mov    -0x1c(%ebp),%esi
  0x01cc2422: mov    -0x18(%ebp),%edi
  0x01cc2425: ret    
  0x01cc2426: mov    %eax,%ecx
  0x01cc2428: mov    -0x4(%ebp),%edx
  0x01cc242b: mov    %ebp,%esp
  0x01cc242d: pop    %ebp
  0x01cc242e: pop    %edi
  0x01cc242f: mov    %edx,%esp
  0x01cc2431: and    $0xfffffff0,%esp
  0x01cc2434: push   %edi
  0x01cc2435: jmp    *0x54(%ebx)
  0x01cc2438: movzbl 0x3(%esi),%ebx
  0x01cc243c: add    $0x3,%esi
  0x01cc243f: jmp    *0x55629838(,%ebx,4)
  0x01cc2446: nop    
  0x01cc2447: nop    
  0x01cc2448: int3   
  0x01cc2449: int3   
  0x01cc244a: int3   
  0x01cc244b: int3   
  0x01cc244c: int3   
  0x01cc244d: int3   
  0x01cc244e: int3   
  0x01cc244f: int3   

----------------------------------------------------------------------
if_icmpne  160 if_icmpne  [0x01cc2460, 0x01cc26f0]  656 bytes

  0x01cc2460: pop    %eax
  0x01cc2461: pop    %edx
  0x01cc2462: cmp    %eax,%edx
  0x01cc2464: je     0x01cc26d8
  0x01cc246a: mov    -0xc(%ebp),%ecx
  0x01cc246d: movswl 0x1(%esi),%edx
  0x01cc2471: bswap  %edx
  0x01cc2473: sar    $0x10,%edx
  0x01cc2476: add    %edx,%esi
  0x01cc2478: test   %edx,%edx
  0x01cc247a: jns    0x01cc2559
  0x01cc2480: mov    0x10(%ecx),%eax
  0x01cc2483: test   %eax,%eax
  0x01cc2485: jne    0x01cc2538
  0x01cc248b: push   %edx
  0x01cc248c: push   %ecx
  0x01cc248d: call   0x01cc2497
  0x01cc2492: jmp    0x01cc252b
  0x01cc2497: push   %ecx
  0x01cc2498: lea    0x8(%esp),%eax
  0x01cc249c: cmpl   $0x0,-0x8(%ebp)
  0x01cc24a3: je     0x01cc24ba
  0x01cc24a9: push   $0x55310188
  0x01cc24ae: call   0x01cc24b3
  0x01cc24b3: pusha  
  0x01cc24b4: call   0x54dedbf0
  0x01cc24b9: hlt    
  0x01cc24ba: mov    %esi,-0x1c(%ebp)
  0x01cc24bd: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc24c5: mov    -0xc(%edi),%edi
  0x01cc24c8: push   %edi
  0x01cc24c9: mov    %ebp,0x144(%edi)
  0x01cc24cf: mov    %eax,0x13c(%edi)
  0x01cc24d5: call   0x5505d720
  0x01cc24da: add    $0x8,%esp
  0x01cc24dd: push   %eax
  0x01cc24de: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc24e6: mov    -0xc(%eax),%eax
  0x01cc24e9: cmp    %eax,%edi
  0x01cc24eb: je     0x01cc2502
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc24f1: push   $0x55312af0
  0x01cc24f6: call   0x01cc24fb
  0x01cc24fb: pusha  
  0x01cc24fc: call   0x54dedbf0
  0x01cc2501: hlt    
  0x01cc2502: pop    %eax
  0x01cc2503: movl   $0x0,0x13c(%edi)
  0x01cc250d: movl   $0x0,0x144(%edi)
  0x01cc2517: cmpl   $0x0,0x4(%edi)
  0x01cc251e: jne    0x01cb0340
  0x01cc2524: mov    -0x1c(%ebp),%esi
  0x01cc2527: mov    -0x18(%ebp),%edi
  0x01cc252a: ret    
  0x01cc252b: pop    %ecx
  0x01cc252c: pop    %edx
  0x01cc252d: mov    0x10(%ecx),%eax
  0x01cc2530: test   %eax,%eax
  0x01cc2532: je     0x01cc2559
  0x01cc2538: mov    0x10(%ecx),%ecx
  0x01cc253b: mov    0xc(%ecx),%eax
  0x01cc253e: add    $0x8,%eax
  0x01cc2541: mov    %eax,0xc(%ecx)
  0x01cc2544: mov    0x8(%ecx),%eax
  0x01cc2547: and    $0xfffffff8,%eax
  0x01cc254a: add    0xc(%ecx),%eax
  0x01cc254d: cmp    0x55627788,%eax
  0x01cc2553: jae    0x01cc2563
  0x01cc2559: movzbl (%esi),%ebx
  0x01cc255c: jmp    *0x55629838(,%ebx,4)
  0x01cc2563: neg    %edx
  0x01cc2565: add    %esi,%edx
  0x01cc2567: call   0x01cc2571
  0x01cc256c: jmp    0x01cc2605
  0x01cc2571: push   %edx
  0x01cc2572: lea    0x8(%esp),%eax
  0x01cc2576: cmpl   $0x0,-0x8(%ebp)
  0x01cc257d: je     0x01cc2594
  0x01cc2583: push   $0x55310188
  0x01cc2588: call   0x01cc258d
  0x01cc258d: pusha  
  0x01cc258e: call   0x54dedbf0
  0x01cc2593: hlt    
  0x01cc2594: mov    %esi,-0x1c(%ebp)
  0x01cc2597: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc259f: mov    -0xc(%edi),%edi
  0x01cc25a2: push   %edi
  0x01cc25a3: mov    %ebp,0x144(%edi)
  0x01cc25a9: mov    %eax,0x13c(%edi)
  0x01cc25af: call   0x5505ce70
  0x01cc25b4: add    $0x8,%esp
  0x01cc25b7: push   %eax
  0x01cc25b8: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc25c0: mov    -0xc(%eax),%eax
  0x01cc25c3: cmp    %eax,%edi
  0x01cc25c5: je     0x01cc25dc
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc25cb: push   $0x55312af0
  0x01cc25d0: call   0x01cc25d5
  0x01cc25d5: pusha  
  0x01cc25d6: call   0x54dedbf0
  0x01cc25db: hlt    
  0x01cc25dc: pop    %eax
  0x01cc25dd: movl   $0x0,0x13c(%edi)
  0x01cc25e7: movl   $0x0,0x144(%edi)
  0x01cc25f1: cmpl   $0x0,0x4(%edi)
  0x01cc25f8: jne    0x01cb0340
  0x01cc25fe: mov    -0x1c(%ebp),%esi
  0x01cc2601: mov    -0x18(%ebp),%edi
  0x01cc2604: ret    
  0x01cc2605: movzbl (%esi),%ebx
  0x01cc2608: test   %eax,%eax
  0x01cc260a: je     0x01cc2559
  0x01cc2610: mov    0x34(%eax),%ecx
  0x01cc2613: cmp    $0xfffffffe,%ecx
  0x01cc2616: je     0x01cc2559
  0x01cc261c: mov    %eax,%ebx
  0x01cc261e: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc2626: mov    -0xc(%ecx),%ecx
  0x01cc2629: call   0x01cc2633
  0x01cc262e: jmp    0x01cc26c6
  0x01cc2633: lea    0x4(%esp),%eax
  0x01cc2637: cmpl   $0x0,-0x8(%ebp)
  0x01cc263e: je     0x01cc2655
  0x01cc2644: push   $0x55310188
  0x01cc2649: call   0x01cc264e
  0x01cc264e: pusha  
  0x01cc264f: call   0x54dedbf0
  0x01cc2654: hlt    
  0x01cc2655: mov    %esi,-0x1c(%ebp)
  0x01cc2658: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc2660: mov    -0xc(%edi),%edi
  0x01cc2663: push   %edi
  0x01cc2664: mov    %ebp,0x144(%edi)
  0x01cc266a: mov    %eax,0x13c(%edi)
  0x01cc2670: call   0x55217020
  0x01cc2675: add    $0x4,%esp
  0x01cc2678: push   %eax
  0x01cc2679: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc2681: mov    -0xc(%eax),%eax
  0x01cc2684: cmp    %eax,%edi
  0x01cc2686: je     0x01cc269d
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc268c: push   $0x55312af0
  0x01cc2691: call   0x01cc2696
  0x01cc2696: pusha  
  0x01cc2697: call   0x54dedbf0
  0x01cc269c: hlt    
  0x01cc269d: pop    %eax
  0x01cc269e: movl   $0x0,0x13c(%edi)
  0x01cc26a8: movl   $0x0,0x144(%edi)
  0x01cc26b2: cmpl   $0x0,0x4(%edi)
  0x01cc26b9: jne    0x01cb0340
  0x01cc26bf: mov    -0x1c(%ebp),%esi
  0x01cc26c2: mov    -0x18(%ebp),%edi
  0x01cc26c5: ret    
  0x01cc26c6: mov    %eax,%ecx
  0x01cc26c8: mov    -0x4(%ebp),%edx
  0x01cc26cb: mov    %ebp,%esp
  0x01cc26cd: pop    %ebp
  0x01cc26ce: pop    %edi
  0x01cc26cf: mov    %edx,%esp
  0x01cc26d1: and    $0xfffffff0,%esp
  0x01cc26d4: push   %edi
  0x01cc26d5: jmp    *0x54(%ebx)
  0x01cc26d8: movzbl 0x3(%esi),%ebx
  0x01cc26dc: add    $0x3,%esi
  0x01cc26df: jmp    *0x55629838(,%ebx,4)
  0x01cc26e6: nop    
  0x01cc26e7: nop    
  0x01cc26e8: int3   
  0x01cc26e9: int3   
  0x01cc26ea: int3   
  0x01cc26eb: int3   
  0x01cc26ec: int3   
  0x01cc26ed: int3   
  0x01cc26ee: int3   
  0x01cc26ef: int3   

----------------------------------------------------------------------
if_icmplt  161 if_icmplt  [0x01cc2700, 0x01cc2990]  656 bytes

  0x01cc2700: pop    %eax
  0x01cc2701: pop    %edx
  0x01cc2702: cmp    %eax,%edx
  0x01cc2704: jge    0x01cc2978
  0x01cc270a: mov    -0xc(%ebp),%ecx
  0x01cc270d: movswl 0x1(%esi),%edx
  0x01cc2711: bswap  %edx
  0x01cc2713: sar    $0x10,%edx
  0x01cc2716: add    %edx,%esi
  0x01cc2718: test   %edx,%edx
  0x01cc271a: jns    0x01cc27f9
  0x01cc2720: mov    0x10(%ecx),%eax
  0x01cc2723: test   %eax,%eax
  0x01cc2725: jne    0x01cc27d8
  0x01cc272b: push   %edx
  0x01cc272c: push   %ecx
  0x01cc272d: call   0x01cc2737
  0x01cc2732: jmp    0x01cc27cb
  0x01cc2737: push   %ecx
  0x01cc2738: lea    0x8(%esp),%eax
  0x01cc273c: cmpl   $0x0,-0x8(%ebp)
  0x01cc2743: je     0x01cc275a
  0x01cc2749: push   $0x55310188
  0x01cc274e: call   0x01cc2753
  0x01cc2753: pusha  
  0x01cc2754: call   0x54dedbf0
  0x01cc2759: hlt    
  0x01cc275a: mov    %esi,-0x1c(%ebp)
  0x01cc275d: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc2765: mov    -0xc(%edi),%edi
  0x01cc2768: push   %edi
  0x01cc2769: mov    %ebp,0x144(%edi)
  0x01cc276f: mov    %eax,0x13c(%edi)
  0x01cc2775: call   0x5505d720
  0x01cc277a: add    $0x8,%esp
  0x01cc277d: push   %eax
  0x01cc277e: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc2786: mov    -0xc(%eax),%eax
  0x01cc2789: cmp    %eax,%edi
  0x01cc278b: je     0x01cc27a2
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc2791: push   $0x55312af0
  0x01cc2796: call   0x01cc279b
  0x01cc279b: pusha  
  0x01cc279c: call   0x54dedbf0
  0x01cc27a1: hlt    
  0x01cc27a2: pop    %eax
  0x01cc27a3: movl   $0x0,0x13c(%edi)
  0x01cc27ad: movl   $0x0,0x144(%edi)
  0x01cc27b7: cmpl   $0x0,0x4(%edi)
  0x01cc27be: jne    0x01cb0340
  0x01cc27c4: mov    -0x1c(%ebp),%esi
  0x01cc27c7: mov    -0x18(%ebp),%edi
  0x01cc27ca: ret    
  0x01cc27cb: pop    %ecx
  0x01cc27cc: pop    %edx
  0x01cc27cd: mov    0x10(%ecx),%eax
  0x01cc27d0: test   %eax,%eax
  0x01cc27d2: je     0x01cc27f9
  0x01cc27d8: mov    0x10(%ecx),%ecx
  0x01cc27db: mov    0xc(%ecx),%eax
  0x01cc27de: add    $0x8,%eax
  0x01cc27e1: mov    %eax,0xc(%ecx)
  0x01cc27e4: mov    0x8(%ecx),%eax
  0x01cc27e7: and    $0xfffffff8,%eax
  0x01cc27ea: add    0xc(%ecx),%eax
  0x01cc27ed: cmp    0x55627788,%eax
  0x01cc27f3: jae    0x01cc2803
  0x01cc27f9: movzbl (%esi),%ebx
  0x01cc27fc: jmp    *0x55629838(,%ebx,4)
  0x01cc2803: neg    %edx
  0x01cc2805: add    %esi,%edx
  0x01cc2807: call   0x01cc2811
  0x01cc280c: jmp    0x01cc28a5
  0x01cc2811: push   %edx
  0x01cc2812: lea    0x8(%esp),%eax
  0x01cc2816: cmpl   $0x0,-0x8(%ebp)
  0x01cc281d: je     0x01cc2834
  0x01cc2823: push   $0x55310188
  0x01cc2828: call   0x01cc282d
  0x01cc282d: pusha  
  0x01cc282e: call   0x54dedbf0
  0x01cc2833: hlt    
  0x01cc2834: mov    %esi,-0x1c(%ebp)
  0x01cc2837: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc283f: mov    -0xc(%edi),%edi
  0x01cc2842: push   %edi
  0x01cc2843: mov    %ebp,0x144(%edi)
  0x01cc2849: mov    %eax,0x13c(%edi)
  0x01cc284f: call   0x5505ce70
  0x01cc2854: add    $0x8,%esp
  0x01cc2857: push   %eax
  0x01cc2858: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc2860: mov    -0xc(%eax),%eax
  0x01cc2863: cmp    %eax,%edi
  0x01cc2865: je     0x01cc287c
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc286b: push   $0x55312af0
  0x01cc2870: call   0x01cc2875
  0x01cc2875: pusha  
  0x01cc2876: call   0x54dedbf0
  0x01cc287b: hlt    
  0x01cc287c: pop    %eax
  0x01cc287d: movl   $0x0,0x13c(%edi)
  0x01cc2887: movl   $0x0,0x144(%edi)
  0x01cc2891: cmpl   $0x0,0x4(%edi)
  0x01cc2898: jne    0x01cb0340
  0x01cc289e: mov    -0x1c(%ebp),%esi
  0x01cc28a1: mov    -0x18(%ebp),%edi
  0x01cc28a4: ret    
  0x01cc28a5: movzbl (%esi),%ebx
  0x01cc28a8: test   %eax,%eax
  0x01cc28aa: je     0x01cc27f9
  0x01cc28b0: mov    0x34(%eax),%ecx
  0x01cc28b3: cmp    $0xfffffffe,%ecx
  0x01cc28b6: je     0x01cc27f9
  0x01cc28bc: mov    %eax,%ebx
  0x01cc28be: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc28c6: mov    -0xc(%ecx),%ecx
  0x01cc28c9: call   0x01cc28d3
  0x01cc28ce: jmp    0x01cc2966
  0x01cc28d3: lea    0x4(%esp),%eax
  0x01cc28d7: cmpl   $0x0,-0x8(%ebp)
  0x01cc28de: je     0x01cc28f5
  0x01cc28e4: push   $0x55310188
  0x01cc28e9: call   0x01cc28ee
  0x01cc28ee: pusha  
  0x01cc28ef: call   0x54dedbf0
  0x01cc28f4: hlt    
  0x01cc28f5: mov    %esi,-0x1c(%ebp)
  0x01cc28f8: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc2900: mov    -0xc(%edi),%edi
  0x01cc2903: push   %edi
  0x01cc2904: mov    %ebp,0x144(%edi)
  0x01cc290a: mov    %eax,0x13c(%edi)
  0x01cc2910: call   0x55217020
  0x01cc2915: add    $0x4,%esp
  0x01cc2918: push   %eax
  0x01cc2919: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc2921: mov    -0xc(%eax),%eax
  0x01cc2924: cmp    %eax,%edi
  0x01cc2926: je     0x01cc293d
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc292c: push   $0x55312af0
  0x01cc2931: call   0x01cc2936
  0x01cc2936: pusha  
  0x01cc2937: call   0x54dedbf0
  0x01cc293c: hlt    
  0x01cc293d: pop    %eax
  0x01cc293e: movl   $0x0,0x13c(%edi)
  0x01cc2948: movl   $0x0,0x144(%edi)
  0x01cc2952: cmpl   $0x0,0x4(%edi)
  0x01cc2959: jne    0x01cb0340
  0x01cc295f: mov    -0x1c(%ebp),%esi
  0x01cc2962: mov    -0x18(%ebp),%edi
  0x01cc2965: ret    
  0x01cc2966: mov    %eax,%ecx
  0x01cc2968: mov    -0x4(%ebp),%edx
  0x01cc296b: mov    %ebp,%esp
  0x01cc296d: pop    %ebp
  0x01cc296e: pop    %edi
  0x01cc296f: mov    %edx,%esp
  0x01cc2971: and    $0xfffffff0,%esp
  0x01cc2974: push   %edi
  0x01cc2975: jmp    *0x54(%ebx)
  0x01cc2978: movzbl 0x3(%esi),%ebx
  0x01cc297c: add    $0x3,%esi
  0x01cc297f: jmp    *0x55629838(,%ebx,4)
  0x01cc2986: nop    
  0x01cc2987: nop    
  0x01cc2988: int3   
  0x01cc2989: int3   
  0x01cc298a: int3   
  0x01cc298b: int3   
  0x01cc298c: int3   
  0x01cc298d: int3   
  0x01cc298e: int3   
  0x01cc298f: int3   

----------------------------------------------------------------------
if_icmpge  162 if_icmpge  [0x01cc29a0, 0x01cc2c30]  656 bytes

  0x01cc29a0: pop    %eax
  0x01cc29a1: pop    %edx
  0x01cc29a2: cmp    %eax,%edx
  0x01cc29a4: jl     0x01cc2c18
  0x01cc29aa: mov    -0xc(%ebp),%ecx
  0x01cc29ad: movswl 0x1(%esi),%edx
  0x01cc29b1: bswap  %edx
  0x01cc29b3: sar    $0x10,%edx
  0x01cc29b6: add    %edx,%esi
  0x01cc29b8: test   %edx,%edx
  0x01cc29ba: jns    0x01cc2a99
  0x01cc29c0: mov    0x10(%ecx),%eax
  0x01cc29c3: test   %eax,%eax
  0x01cc29c5: jne    0x01cc2a78
  0x01cc29cb: push   %edx
  0x01cc29cc: push   %ecx
  0x01cc29cd: call   0x01cc29d7
  0x01cc29d2: jmp    0x01cc2a6b
  0x01cc29d7: push   %ecx
  0x01cc29d8: lea    0x8(%esp),%eax
  0x01cc29dc: cmpl   $0x0,-0x8(%ebp)
  0x01cc29e3: je     0x01cc29fa
  0x01cc29e9: push   $0x55310188
  0x01cc29ee: call   0x01cc29f3
  0x01cc29f3: pusha  
  0x01cc29f4: call   0x54dedbf0
  0x01cc29f9: hlt    
  0x01cc29fa: mov    %esi,-0x1c(%ebp)
  0x01cc29fd: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc2a05: mov    -0xc(%edi),%edi
  0x01cc2a08: push   %edi
  0x01cc2a09: mov    %ebp,0x144(%edi)
  0x01cc2a0f: mov    %eax,0x13c(%edi)
  0x01cc2a15: call   0x5505d720
  0x01cc2a1a: add    $0x8,%esp
  0x01cc2a1d: push   %eax
  0x01cc2a1e: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc2a26: mov    -0xc(%eax),%eax
  0x01cc2a29: cmp    %eax,%edi
  0x01cc2a2b: je     0x01cc2a42
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc2a31: push   $0x55312af0
  0x01cc2a36: call   0x01cc2a3b
  0x01cc2a3b: pusha  
  0x01cc2a3c: call   0x54dedbf0
  0x01cc2a41: hlt    
  0x01cc2a42: pop    %eax
  0x01cc2a43: movl   $0x0,0x13c(%edi)
  0x01cc2a4d: movl   $0x0,0x144(%edi)
  0x01cc2a57: cmpl   $0x0,0x4(%edi)
  0x01cc2a5e: jne    0x01cb0340
  0x01cc2a64: mov    -0x1c(%ebp),%esi
  0x01cc2a67: mov    -0x18(%ebp),%edi
  0x01cc2a6a: ret    
  0x01cc2a6b: pop    %ecx
  0x01cc2a6c: pop    %edx
  0x01cc2a6d: mov    0x10(%ecx),%eax
  0x01cc2a70: test   %eax,%eax
  0x01cc2a72: je     0x01cc2a99
  0x01cc2a78: mov    0x10(%ecx),%ecx
  0x01cc2a7b: mov    0xc(%ecx),%eax
  0x01cc2a7e: add    $0x8,%eax
  0x01cc2a81: mov    %eax,0xc(%ecx)
  0x01cc2a84: mov    0x8(%ecx),%eax
  0x01cc2a87: and    $0xfffffff8,%eax
  0x01cc2a8a: add    0xc(%ecx),%eax
  0x01cc2a8d: cmp    0x55627788,%eax
  0x01cc2a93: jae    0x01cc2aa3
  0x01cc2a99: movzbl (%esi),%ebx
  0x01cc2a9c: jmp    *0x55629838(,%ebx,4)
  0x01cc2aa3: neg    %edx
  0x01cc2aa5: add    %esi,%edx
  0x01cc2aa7: call   0x01cc2ab1
  0x01cc2aac: jmp    0x01cc2b45
  0x01cc2ab1: push   %edx
  0x01cc2ab2: lea    0x8(%esp),%eax
  0x01cc2ab6: cmpl   $0x0,-0x8(%ebp)
  0x01cc2abd: je     0x01cc2ad4
  0x01cc2ac3: push   $0x55310188
  0x01cc2ac8: call   0x01cc2acd
  0x01cc2acd: pusha  
  0x01cc2ace: call   0x54dedbf0
  0x01cc2ad3: hlt    
  0x01cc2ad4: mov    %esi,-0x1c(%ebp)
  0x01cc2ad7: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc2adf: mov    -0xc(%edi),%edi
  0x01cc2ae2: push   %edi
  0x01cc2ae3: mov    %ebp,0x144(%edi)
  0x01cc2ae9: mov    %eax,0x13c(%edi)
  0x01cc2aef: call   0x5505ce70
  0x01cc2af4: add    $0x8,%esp
  0x01cc2af7: push   %eax
  0x01cc2af8: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc2b00: mov    -0xc(%eax),%eax
  0x01cc2b03: cmp    %eax,%edi
  0x01cc2b05: je     0x01cc2b1c
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc2b0b: push   $0x55312af0
  0x01cc2b10: call   0x01cc2b15
  0x01cc2b15: pusha  
  0x01cc2b16: call   0x54dedbf0
  0x01cc2b1b: hlt    
  0x01cc2b1c: pop    %eax
  0x01cc2b1d: movl   $0x0,0x13c(%edi)
  0x01cc2b27: movl   $0x0,0x144(%edi)
  0x01cc2b31: cmpl   $0x0,0x4(%edi)
  0x01cc2b38: jne    0x01cb0340
  0x01cc2b3e: mov    -0x1c(%ebp),%esi
  0x01cc2b41: mov    -0x18(%ebp),%edi
  0x01cc2b44: ret    
  0x01cc2b45: movzbl (%esi),%ebx
  0x01cc2b48: test   %eax,%eax
  0x01cc2b4a: je     0x01cc2a99
  0x01cc2b50: mov    0x34(%eax),%ecx
  0x01cc2b53: cmp    $0xfffffffe,%ecx
  0x01cc2b56: je     0x01cc2a99
  0x01cc2b5c: mov    %eax,%ebx
  0x01cc2b5e: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc2b66: mov    -0xc(%ecx),%ecx
  0x01cc2b69: call   0x01cc2b73
  0x01cc2b6e: jmp    0x01cc2c06
  0x01cc2b73: lea    0x4(%esp),%eax
  0x01cc2b77: cmpl   $0x0,-0x8(%ebp)
  0x01cc2b7e: je     0x01cc2b95
  0x01cc2b84: push   $0x55310188
  0x01cc2b89: call   0x01cc2b8e
  0x01cc2b8e: pusha  
  0x01cc2b8f: call   0x54dedbf0
  0x01cc2b94: hlt    
  0x01cc2b95: mov    %esi,-0x1c(%ebp)
  0x01cc2b98: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc2ba0: mov    -0xc(%edi),%edi
  0x01cc2ba3: push   %edi
  0x01cc2ba4: mov    %ebp,0x144(%edi)
  0x01cc2baa: mov    %eax,0x13c(%edi)
  0x01cc2bb0: call   0x55217020
  0x01cc2bb5: add    $0x4,%esp
  0x01cc2bb8: push   %eax
  0x01cc2bb9: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc2bc1: mov    -0xc(%eax),%eax
  0x01cc2bc4: cmp    %eax,%edi
  0x01cc2bc6: je     0x01cc2bdd
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc2bcc: push   $0x55312af0
  0x01cc2bd1: call   0x01cc2bd6
  0x01cc2bd6: pusha  
  0x01cc2bd7: call   0x54dedbf0
  0x01cc2bdc: hlt    
  0x01cc2bdd: pop    %eax
  0x01cc2bde: movl   $0x0,0x13c(%edi)
  0x01cc2be8: movl   $0x0,0x144(%edi)
  0x01cc2bf2: cmpl   $0x0,0x4(%edi)
  0x01cc2bf9: jne    0x01cb0340
  0x01cc2bff: mov    -0x1c(%ebp),%esi
  0x01cc2c02: mov    -0x18(%ebp),%edi
  0x01cc2c05: ret    
  0x01cc2c06: mov    %eax,%ecx
  0x01cc2c08: mov    -0x4(%ebp),%edx
  0x01cc2c0b: mov    %ebp,%esp
  0x01cc2c0d: pop    %ebp
  0x01cc2c0e: pop    %edi
  0x01cc2c0f: mov    %edx,%esp
  0x01cc2c11: and    $0xfffffff0,%esp
  0x01cc2c14: push   %edi
  0x01cc2c15: jmp    *0x54(%ebx)
  0x01cc2c18: movzbl 0x3(%esi),%ebx
  0x01cc2c1c: add    $0x3,%esi
  0x01cc2c1f: jmp    *0x55629838(,%ebx,4)
  0x01cc2c26: nop    
  0x01cc2c27: nop    
  0x01cc2c28: int3   
  0x01cc2c29: int3   
  0x01cc2c2a: int3   
  0x01cc2c2b: int3   
  0x01cc2c2c: int3   
  0x01cc2c2d: int3   
  0x01cc2c2e: int3   
  0x01cc2c2f: int3   

----------------------------------------------------------------------
if_icmpgt  163 if_icmpgt  [0x01cc2c40, 0x01cc2ed0]  656 bytes

  0x01cc2c40: pop    %eax
  0x01cc2c41: pop    %edx
  0x01cc2c42: cmp    %eax,%edx
  0x01cc2c44: jle    0x01cc2eb8
  0x01cc2c4a: mov    -0xc(%ebp),%ecx
  0x01cc2c4d: movswl 0x1(%esi),%edx
  0x01cc2c51: bswap  %edx
  0x01cc2c53: sar    $0x10,%edx
  0x01cc2c56: add    %edx,%esi
  0x01cc2c58: test   %edx,%edx
  0x01cc2c5a: jns    0x01cc2d39
  0x01cc2c60: mov    0x10(%ecx),%eax
  0x01cc2c63: test   %eax,%eax
  0x01cc2c65: jne    0x01cc2d18
  0x01cc2c6b: push   %edx
  0x01cc2c6c: push   %ecx
  0x01cc2c6d: call   0x01cc2c77
  0x01cc2c72: jmp    0x01cc2d0b
  0x01cc2c77: push   %ecx
  0x01cc2c78: lea    0x8(%esp),%eax
  0x01cc2c7c: cmpl   $0x0,-0x8(%ebp)
  0x01cc2c83: je     0x01cc2c9a
  0x01cc2c89: push   $0x55310188
  0x01cc2c8e: call   0x01cc2c93
  0x01cc2c93: pusha  
  0x01cc2c94: call   0x54dedbf0
  0x01cc2c99: hlt    
  0x01cc2c9a: mov    %esi,-0x1c(%ebp)
  0x01cc2c9d: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc2ca5: mov    -0xc(%edi),%edi
  0x01cc2ca8: push   %edi
  0x01cc2ca9: mov    %ebp,0x144(%edi)
  0x01cc2caf: mov    %eax,0x13c(%edi)
  0x01cc2cb5: call   0x5505d720
  0x01cc2cba: add    $0x8,%esp
  0x01cc2cbd: push   %eax
  0x01cc2cbe: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc2cc6: mov    -0xc(%eax),%eax
  0x01cc2cc9: cmp    %eax,%edi
  0x01cc2ccb: je     0x01cc2ce2
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc2cd1: push   $0x55312af0
  0x01cc2cd6: call   0x01cc2cdb
  0x01cc2cdb: pusha  
  0x01cc2cdc: call   0x54dedbf0
  0x01cc2ce1: hlt    
  0x01cc2ce2: pop    %eax
  0x01cc2ce3: movl   $0x0,0x13c(%edi)
  0x01cc2ced: movl   $0x0,0x144(%edi)
  0x01cc2cf7: cmpl   $0x0,0x4(%edi)
  0x01cc2cfe: jne    0x01cb0340
  0x01cc2d04: mov    -0x1c(%ebp),%esi
  0x01cc2d07: mov    -0x18(%ebp),%edi
  0x01cc2d0a: ret    
  0x01cc2d0b: pop    %ecx
  0x01cc2d0c: pop    %edx
  0x01cc2d0d: mov    0x10(%ecx),%eax
  0x01cc2d10: test   %eax,%eax
  0x01cc2d12: je     0x01cc2d39
  0x01cc2d18: mov    0x10(%ecx),%ecx
  0x01cc2d1b: mov    0xc(%ecx),%eax
  0x01cc2d1e: add    $0x8,%eax
  0x01cc2d21: mov    %eax,0xc(%ecx)
  0x01cc2d24: mov    0x8(%ecx),%eax
  0x01cc2d27: and    $0xfffffff8,%eax
  0x01cc2d2a: add    0xc(%ecx),%eax
  0x01cc2d2d: cmp    0x55627788,%eax
  0x01cc2d33: jae    0x01cc2d43
  0x01cc2d39: movzbl (%esi),%ebx
  0x01cc2d3c: jmp    *0x55629838(,%ebx,4)
  0x01cc2d43: neg    %edx
  0x01cc2d45: add    %esi,%edx
  0x01cc2d47: call   0x01cc2d51
  0x01cc2d4c: jmp    0x01cc2de5
  0x01cc2d51: push   %edx
  0x01cc2d52: lea    0x8(%esp),%eax
  0x01cc2d56: cmpl   $0x0,-0x8(%ebp)
  0x01cc2d5d: je     0x01cc2d74
  0x01cc2d63: push   $0x55310188
  0x01cc2d68: call   0x01cc2d6d
  0x01cc2d6d: pusha  
  0x01cc2d6e: call   0x54dedbf0
  0x01cc2d73: hlt    
  0x01cc2d74: mov    %esi,-0x1c(%ebp)
  0x01cc2d77: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc2d7f: mov    -0xc(%edi),%edi
  0x01cc2d82: push   %edi
  0x01cc2d83: mov    %ebp,0x144(%edi)
  0x01cc2d89: mov    %eax,0x13c(%edi)
  0x01cc2d8f: call   0x5505ce70
  0x01cc2d94: add    $0x8,%esp
  0x01cc2d97: push   %eax
  0x01cc2d98: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc2da0: mov    -0xc(%eax),%eax
  0x01cc2da3: cmp    %eax,%edi
  0x01cc2da5: je     0x01cc2dbc
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc2dab: push   $0x55312af0
  0x01cc2db0: call   0x01cc2db5
  0x01cc2db5: pusha  
  0x01cc2db6: call   0x54dedbf0
  0x01cc2dbb: hlt    
  0x01cc2dbc: pop    %eax
  0x01cc2dbd: movl   $0x0,0x13c(%edi)
  0x01cc2dc7: movl   $0x0,0x144(%edi)
  0x01cc2dd1: cmpl   $0x0,0x4(%edi)
  0x01cc2dd8: jne    0x01cb0340
  0x01cc2dde: mov    -0x1c(%ebp),%esi
  0x01cc2de1: mov    -0x18(%ebp),%edi
  0x01cc2de4: ret    
  0x01cc2de5: movzbl (%esi),%ebx
  0x01cc2de8: test   %eax,%eax
  0x01cc2dea: je     0x01cc2d39
  0x01cc2df0: mov    0x34(%eax),%ecx
  0x01cc2df3: cmp    $0xfffffffe,%ecx
  0x01cc2df6: je     0x01cc2d39
  0x01cc2dfc: mov    %eax,%ebx
  0x01cc2dfe: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc2e06: mov    -0xc(%ecx),%ecx
  0x01cc2e09: call   0x01cc2e13
  0x01cc2e0e: jmp    0x01cc2ea6
  0x01cc2e13: lea    0x4(%esp),%eax
  0x01cc2e17: cmpl   $0x0,-0x8(%ebp)
  0x01cc2e1e: je     0x01cc2e35
  0x01cc2e24: push   $0x55310188
  0x01cc2e29: call   0x01cc2e2e
  0x01cc2e2e: pusha  
  0x01cc2e2f: call   0x54dedbf0
  0x01cc2e34: hlt    
  0x01cc2e35: mov    %esi,-0x1c(%ebp)
  0x01cc2e38: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc2e40: mov    -0xc(%edi),%edi
  0x01cc2e43: push   %edi
  0x01cc2e44: mov    %ebp,0x144(%edi)
  0x01cc2e4a: mov    %eax,0x13c(%edi)
  0x01cc2e50: call   0x55217020
  0x01cc2e55: add    $0x4,%esp
  0x01cc2e58: push   %eax
  0x01cc2e59: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc2e61: mov    -0xc(%eax),%eax
  0x01cc2e64: cmp    %eax,%edi
  0x01cc2e66: je     0x01cc2e7d
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc2e6c: push   $0x55312af0
  0x01cc2e71: call   0x01cc2e76
  0x01cc2e76: pusha  
  0x01cc2e77: call   0x54dedbf0
  0x01cc2e7c: hlt    
  0x01cc2e7d: pop    %eax
  0x01cc2e7e: movl   $0x0,0x13c(%edi)
  0x01cc2e88: movl   $0x0,0x144(%edi)
  0x01cc2e92: cmpl   $0x0,0x4(%edi)
  0x01cc2e99: jne    0x01cb0340
  0x01cc2e9f: mov    -0x1c(%ebp),%esi
  0x01cc2ea2: mov    -0x18(%ebp),%edi
  0x01cc2ea5: ret    
  0x01cc2ea6: mov    %eax,%ecx
  0x01cc2ea8: mov    -0x4(%ebp),%edx
  0x01cc2eab: mov    %ebp,%esp
  0x01cc2ead: pop    %ebp
  0x01cc2eae: pop    %edi
  0x01cc2eaf: mov    %edx,%esp
  0x01cc2eb1: and    $0xfffffff0,%esp
  0x01cc2eb4: push   %edi
  0x01cc2eb5: jmp    *0x54(%ebx)
  0x01cc2eb8: movzbl 0x3(%esi),%ebx
  0x01cc2ebc: add    $0x3,%esi
  0x01cc2ebf: jmp    *0x55629838(,%ebx,4)
  0x01cc2ec6: nop    
  0x01cc2ec7: nop    
  0x01cc2ec8: int3   
  0x01cc2ec9: int3   
  0x01cc2eca: int3   
  0x01cc2ecb: int3   
  0x01cc2ecc: int3   
  0x01cc2ecd: int3   
  0x01cc2ece: int3   
  0x01cc2ecf: int3   

----------------------------------------------------------------------
if_icmple  164 if_icmple  [0x01cc2ee0, 0x01cc3170]  656 bytes

  0x01cc2ee0: pop    %eax
  0x01cc2ee1: pop    %edx
  0x01cc2ee2: cmp    %eax,%edx
  0x01cc2ee4: jg     0x01cc3158
  0x01cc2eea: mov    -0xc(%ebp),%ecx
  0x01cc2eed: movswl 0x1(%esi),%edx
  0x01cc2ef1: bswap  %edx
  0x01cc2ef3: sar    $0x10,%edx
  0x01cc2ef6: add    %edx,%esi
  0x01cc2ef8: test   %edx,%edx
  0x01cc2efa: jns    0x01cc2fd9
  0x01cc2f00: mov    0x10(%ecx),%eax
  0x01cc2f03: test   %eax,%eax
  0x01cc2f05: jne    0x01cc2fb8
  0x01cc2f0b: push   %edx
  0x01cc2f0c: push   %ecx
  0x01cc2f0d: call   0x01cc2f17
  0x01cc2f12: jmp    0x01cc2fab
  0x01cc2f17: push   %ecx
  0x01cc2f18: lea    0x8(%esp),%eax
  0x01cc2f1c: cmpl   $0x0,-0x8(%ebp)
  0x01cc2f23: je     0x01cc2f3a
  0x01cc2f29: push   $0x55310188
  0x01cc2f2e: call   0x01cc2f33
  0x01cc2f33: pusha  
  0x01cc2f34: call   0x54dedbf0
  0x01cc2f39: hlt    
  0x01cc2f3a: mov    %esi,-0x1c(%ebp)
  0x01cc2f3d: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc2f45: mov    -0xc(%edi),%edi
  0x01cc2f48: push   %edi
  0x01cc2f49: mov    %ebp,0x144(%edi)
  0x01cc2f4f: mov    %eax,0x13c(%edi)
  0x01cc2f55: call   0x5505d720
  0x01cc2f5a: add    $0x8,%esp
  0x01cc2f5d: push   %eax
  0x01cc2f5e: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc2f66: mov    -0xc(%eax),%eax
  0x01cc2f69: cmp    %eax,%edi
  0x01cc2f6b: je     0x01cc2f82
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc2f71: push   $0x55312af0
  0x01cc2f76: call   0x01cc2f7b
  0x01cc2f7b: pusha  
  0x01cc2f7c: call   0x54dedbf0
  0x01cc2f81: hlt    
  0x01cc2f82: pop    %eax
  0x01cc2f83: movl   $0x0,0x13c(%edi)
  0x01cc2f8d: movl   $0x0,0x144(%edi)
  0x01cc2f97: cmpl   $0x0,0x4(%edi)
  0x01cc2f9e: jne    0x01cb0340
  0x01cc2fa4: mov    -0x1c(%ebp),%esi
  0x01cc2fa7: mov    -0x18(%ebp),%edi
  0x01cc2faa: ret    
  0x01cc2fab: pop    %ecx
  0x01cc2fac: pop    %edx
  0x01cc2fad: mov    0x10(%ecx),%eax
  0x01cc2fb0: test   %eax,%eax
  0x01cc2fb2: je     0x01cc2fd9
  0x01cc2fb8: mov    0x10(%ecx),%ecx
  0x01cc2fbb: mov    0xc(%ecx),%eax
  0x01cc2fbe: add    $0x8,%eax
  0x01cc2fc1: mov    %eax,0xc(%ecx)
  0x01cc2fc4: mov    0x8(%ecx),%eax
  0x01cc2fc7: and    $0xfffffff8,%eax
  0x01cc2fca: add    0xc(%ecx),%eax
  0x01cc2fcd: cmp    0x55627788,%eax
  0x01cc2fd3: jae    0x01cc2fe3
  0x01cc2fd9: movzbl (%esi),%ebx
  0x01cc2fdc: jmp    *0x55629838(,%ebx,4)
  0x01cc2fe3: neg    %edx
  0x01cc2fe5: add    %esi,%edx
  0x01cc2fe7: call   0x01cc2ff1
  0x01cc2fec: jmp    0x01cc3085
  0x01cc2ff1: push   %edx
  0x01cc2ff2: lea    0x8(%esp),%eax
  0x01cc2ff6: cmpl   $0x0,-0x8(%ebp)
  0x01cc2ffd: je     0x01cc3014
  0x01cc3003: push   $0x55310188
  0x01cc3008: call   0x01cc300d
  0x01cc300d: pusha  
  0x01cc300e: call   0x54dedbf0
  0x01cc3013: hlt    
  0x01cc3014: mov    %esi,-0x1c(%ebp)
  0x01cc3017: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc301f: mov    -0xc(%edi),%edi
  0x01cc3022: push   %edi
  0x01cc3023: mov    %ebp,0x144(%edi)
  0x01cc3029: mov    %eax,0x13c(%edi)
  0x01cc302f: call   0x5505ce70
  0x01cc3034: add    $0x8,%esp
  0x01cc3037: push   %eax
  0x01cc3038: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc3040: mov    -0xc(%eax),%eax
  0x01cc3043: cmp    %eax,%edi
  0x01cc3045: je     0x01cc305c
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc304b: push   $0x55312af0
  0x01cc3050: call   0x01cc3055
  0x01cc3055: pusha  
  0x01cc3056: call   0x54dedbf0
  0x01cc305b: hlt    
  0x01cc305c: pop    %eax
  0x01cc305d: movl   $0x0,0x13c(%edi)
  0x01cc3067: movl   $0x0,0x144(%edi)
  0x01cc3071: cmpl   $0x0,0x4(%edi)
  0x01cc3078: jne    0x01cb0340
  0x01cc307e: mov    -0x1c(%ebp),%esi
  0x01cc3081: mov    -0x18(%ebp),%edi
  0x01cc3084: ret    
  0x01cc3085: movzbl (%esi),%ebx
  0x01cc3088: test   %eax,%eax
  0x01cc308a: je     0x01cc2fd9
  0x01cc3090: mov    0x34(%eax),%ecx
  0x01cc3093: cmp    $0xfffffffe,%ecx
  0x01cc3096: je     0x01cc2fd9
  0x01cc309c: mov    %eax,%ebx
  0x01cc309e: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc30a6: mov    -0xc(%ecx),%ecx
  0x01cc30a9: call   0x01cc30b3
  0x01cc30ae: jmp    0x01cc3146
  0x01cc30b3: lea    0x4(%esp),%eax
  0x01cc30b7: cmpl   $0x0,-0x8(%ebp)
  0x01cc30be: je     0x01cc30d5
  0x01cc30c4: push   $0x55310188
  0x01cc30c9: call   0x01cc30ce
  0x01cc30ce: pusha  
  0x01cc30cf: call   0x54dedbf0
  0x01cc30d4: hlt    
  0x01cc30d5: mov    %esi,-0x1c(%ebp)
  0x01cc30d8: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc30e0: mov    -0xc(%edi),%edi
  0x01cc30e3: push   %edi
  0x01cc30e4: mov    %ebp,0x144(%edi)
  0x01cc30ea: mov    %eax,0x13c(%edi)
  0x01cc30f0: call   0x55217020
  0x01cc30f5: add    $0x4,%esp
  0x01cc30f8: push   %eax
  0x01cc30f9: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc3101: mov    -0xc(%eax),%eax
  0x01cc3104: cmp    %eax,%edi
  0x01cc3106: je     0x01cc311d
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc310c: push   $0x55312af0
  0x01cc3111: call   0x01cc3116
  0x01cc3116: pusha  
  0x01cc3117: call   0x54dedbf0
  0x01cc311c: hlt    
  0x01cc311d: pop    %eax
  0x01cc311e: movl   $0x0,0x13c(%edi)
  0x01cc3128: movl   $0x0,0x144(%edi)
  0x01cc3132: cmpl   $0x0,0x4(%edi)
  0x01cc3139: jne    0x01cb0340
  0x01cc313f: mov    -0x1c(%ebp),%esi
  0x01cc3142: mov    -0x18(%ebp),%edi
  0x01cc3145: ret    
  0x01cc3146: mov    %eax,%ecx
  0x01cc3148: mov    -0x4(%ebp),%edx
  0x01cc314b: mov    %ebp,%esp
  0x01cc314d: pop    %ebp
  0x01cc314e: pop    %edi
  0x01cc314f: mov    %edx,%esp
  0x01cc3151: and    $0xfffffff0,%esp
  0x01cc3154: push   %edi
  0x01cc3155: jmp    *0x54(%ebx)
  0x01cc3158: movzbl 0x3(%esi),%ebx
  0x01cc315c: add    $0x3,%esi
  0x01cc315f: jmp    *0x55629838(,%ebx,4)
  0x01cc3166: nop    
  0x01cc3167: nop    
  0x01cc3168: int3   
  0x01cc3169: int3   
  0x01cc316a: int3   
  0x01cc316b: int3   
  0x01cc316c: int3   
  0x01cc316d: int3   
  0x01cc316e: int3   
  0x01cc316f: int3   

----------------------------------------------------------------------
if_acmpeq  165 if_acmpeq  [0x01cc3180, 0x01cc3410]  656 bytes

  0x01cc3180: pop    %eax
  0x01cc3181: pop    %edx
  0x01cc3182: cmp    %eax,%edx
  0x01cc3184: jne    0x01cc33f8
  0x01cc318a: mov    -0xc(%ebp),%ecx
  0x01cc318d: movswl 0x1(%esi),%edx
  0x01cc3191: bswap  %edx
  0x01cc3193: sar    $0x10,%edx
  0x01cc3196: add    %edx,%esi
  0x01cc3198: test   %edx,%edx
  0x01cc319a: jns    0x01cc3279
  0x01cc31a0: mov    0x10(%ecx),%eax
  0x01cc31a3: test   %eax,%eax
  0x01cc31a5: jne    0x01cc3258
  0x01cc31ab: push   %edx
  0x01cc31ac: push   %ecx
  0x01cc31ad: call   0x01cc31b7
  0x01cc31b2: jmp    0x01cc324b
  0x01cc31b7: push   %ecx
  0x01cc31b8: lea    0x8(%esp),%eax
  0x01cc31bc: cmpl   $0x0,-0x8(%ebp)
  0x01cc31c3: je     0x01cc31da
  0x01cc31c9: push   $0x55310188
  0x01cc31ce: call   0x01cc31d3
  0x01cc31d3: pusha  
  0x01cc31d4: call   0x54dedbf0
  0x01cc31d9: hlt    
  0x01cc31da: mov    %esi,-0x1c(%ebp)
  0x01cc31dd: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc31e5: mov    -0xc(%edi),%edi
  0x01cc31e8: push   %edi
  0x01cc31e9: mov    %ebp,0x144(%edi)
  0x01cc31ef: mov    %eax,0x13c(%edi)
  0x01cc31f5: call   0x5505d720
  0x01cc31fa: add    $0x8,%esp
  0x01cc31fd: push   %eax
  0x01cc31fe: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc3206: mov    -0xc(%eax),%eax
  0x01cc3209: cmp    %eax,%edi
  0x01cc320b: je     0x01cc3222
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc3211: push   $0x55312af0
  0x01cc3216: call   0x01cc321b
  0x01cc321b: pusha  
  0x01cc321c: call   0x54dedbf0
  0x01cc3221: hlt    
  0x01cc3222: pop    %eax
  0x01cc3223: movl   $0x0,0x13c(%edi)
  0x01cc322d: movl   $0x0,0x144(%edi)
  0x01cc3237: cmpl   $0x0,0x4(%edi)
  0x01cc323e: jne    0x01cb0340
  0x01cc3244: mov    -0x1c(%ebp),%esi
  0x01cc3247: mov    -0x18(%ebp),%edi
  0x01cc324a: ret    
  0x01cc324b: pop    %ecx
  0x01cc324c: pop    %edx
  0x01cc324d: mov    0x10(%ecx),%eax
  0x01cc3250: test   %eax,%eax
  0x01cc3252: je     0x01cc3279
  0x01cc3258: mov    0x10(%ecx),%ecx
  0x01cc325b: mov    0xc(%ecx),%eax
  0x01cc325e: add    $0x8,%eax
  0x01cc3261: mov    %eax,0xc(%ecx)
  0x01cc3264: mov    0x8(%ecx),%eax
  0x01cc3267: and    $0xfffffff8,%eax
  0x01cc326a: add    0xc(%ecx),%eax
  0x01cc326d: cmp    0x55627788,%eax
  0x01cc3273: jae    0x01cc3283
  0x01cc3279: movzbl (%esi),%ebx
  0x01cc327c: jmp    *0x55629838(,%ebx,4)
  0x01cc3283: neg    %edx
  0x01cc3285: add    %esi,%edx
  0x01cc3287: call   0x01cc3291
  0x01cc328c: jmp    0x01cc3325
  0x01cc3291: push   %edx
  0x01cc3292: lea    0x8(%esp),%eax
  0x01cc3296: cmpl   $0x0,-0x8(%ebp)
  0x01cc329d: je     0x01cc32b4
  0x01cc32a3: push   $0x55310188
  0x01cc32a8: call   0x01cc32ad
  0x01cc32ad: pusha  
  0x01cc32ae: call   0x54dedbf0
  0x01cc32b3: hlt    
  0x01cc32b4: mov    %esi,-0x1c(%ebp)
  0x01cc32b7: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc32bf: mov    -0xc(%edi),%edi
  0x01cc32c2: push   %edi
  0x01cc32c3: mov    %ebp,0x144(%edi)
  0x01cc32c9: mov    %eax,0x13c(%edi)
  0x01cc32cf: call   0x5505ce70
  0x01cc32d4: add    $0x8,%esp
  0x01cc32d7: push   %eax
  0x01cc32d8: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc32e0: mov    -0xc(%eax),%eax
  0x01cc32e3: cmp    %eax,%edi
  0x01cc32e5: je     0x01cc32fc
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc32eb: push   $0x55312af0
  0x01cc32f0: call   0x01cc32f5
  0x01cc32f5: pusha  
  0x01cc32f6: call   0x54dedbf0
  0x01cc32fb: hlt    
  0x01cc32fc: pop    %eax
  0x01cc32fd: movl   $0x0,0x13c(%edi)
  0x01cc3307: movl   $0x0,0x144(%edi)
  0x01cc3311: cmpl   $0x0,0x4(%edi)
  0x01cc3318: jne    0x01cb0340
  0x01cc331e: mov    -0x1c(%ebp),%esi
  0x01cc3321: mov    -0x18(%ebp),%edi
  0x01cc3324: ret    
  0x01cc3325: movzbl (%esi),%ebx
  0x01cc3328: test   %eax,%eax
  0x01cc332a: je     0x01cc3279
  0x01cc3330: mov    0x34(%eax),%ecx
  0x01cc3333: cmp    $0xfffffffe,%ecx
  0x01cc3336: je     0x01cc3279
  0x01cc333c: mov    %eax,%ebx
  0x01cc333e: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc3346: mov    -0xc(%ecx),%ecx
  0x01cc3349: call   0x01cc3353
  0x01cc334e: jmp    0x01cc33e6
  0x01cc3353: lea    0x4(%esp),%eax
  0x01cc3357: cmpl   $0x0,-0x8(%ebp)
  0x01cc335e: je     0x01cc3375
  0x01cc3364: push   $0x55310188
  0x01cc3369: call   0x01cc336e
  0x01cc336e: pusha  
  0x01cc336f: call   0x54dedbf0
  0x01cc3374: hlt    
  0x01cc3375: mov    %esi,-0x1c(%ebp)
  0x01cc3378: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc3380: mov    -0xc(%edi),%edi
  0x01cc3383: push   %edi
  0x01cc3384: mov    %ebp,0x144(%edi)
  0x01cc338a: mov    %eax,0x13c(%edi)
  0x01cc3390: call   0x55217020
  0x01cc3395: add    $0x4,%esp
  0x01cc3398: push   %eax
  0x01cc3399: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc33a1: mov    -0xc(%eax),%eax
  0x01cc33a4: cmp    %eax,%edi
  0x01cc33a6: je     0x01cc33bd
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc33ac: push   $0x55312af0
  0x01cc33b1: call   0x01cc33b6
  0x01cc33b6: pusha  
  0x01cc33b7: call   0x54dedbf0
  0x01cc33bc: hlt    
  0x01cc33bd: pop    %eax
  0x01cc33be: movl   $0x0,0x13c(%edi)
  0x01cc33c8: movl   $0x0,0x144(%edi)
  0x01cc33d2: cmpl   $0x0,0x4(%edi)
  0x01cc33d9: jne    0x01cb0340
  0x01cc33df: mov    -0x1c(%ebp),%esi
  0x01cc33e2: mov    -0x18(%ebp),%edi
  0x01cc33e5: ret    
  0x01cc33e6: mov    %eax,%ecx
  0x01cc33e8: mov    -0x4(%ebp),%edx
  0x01cc33eb: mov    %ebp,%esp
  0x01cc33ed: pop    %ebp
  0x01cc33ee: pop    %edi
  0x01cc33ef: mov    %edx,%esp
  0x01cc33f1: and    $0xfffffff0,%esp
  0x01cc33f4: push   %edi
  0x01cc33f5: jmp    *0x54(%ebx)
  0x01cc33f8: movzbl 0x3(%esi),%ebx
  0x01cc33fc: add    $0x3,%esi
  0x01cc33ff: jmp    *0x55629838(,%ebx,4)
  0x01cc3406: nop    
  0x01cc3407: nop    
  0x01cc3408: int3   
  0x01cc3409: int3   
  0x01cc340a: int3   
  0x01cc340b: int3   
  0x01cc340c: int3   
  0x01cc340d: int3   
  0x01cc340e: int3   
  0x01cc340f: int3   

----------------------------------------------------------------------
if_acmpne  166 if_acmpne  [0x01cc3420, 0x01cc36b0]  656 bytes

  0x01cc3420: pop    %eax
  0x01cc3421: pop    %edx
  0x01cc3422: cmp    %eax,%edx
  0x01cc3424: je     0x01cc3698
  0x01cc342a: mov    -0xc(%ebp),%ecx
  0x01cc342d: movswl 0x1(%esi),%edx
  0x01cc3431: bswap  %edx
  0x01cc3433: sar    $0x10,%edx
  0x01cc3436: add    %edx,%esi
  0x01cc3438: test   %edx,%edx
  0x01cc343a: jns    0x01cc3519
  0x01cc3440: mov    0x10(%ecx),%eax
  0x01cc3443: test   %eax,%eax
  0x01cc3445: jne    0x01cc34f8
  0x01cc344b: push   %edx
  0x01cc344c: push   %ecx
  0x01cc344d: call   0x01cc3457
  0x01cc3452: jmp    0x01cc34eb
  0x01cc3457: push   %ecx
  0x01cc3458: lea    0x8(%esp),%eax
  0x01cc345c: cmpl   $0x0,-0x8(%ebp)
  0x01cc3463: je     0x01cc347a
  0x01cc3469: push   $0x55310188
  0x01cc346e: call   0x01cc3473
  0x01cc3473: pusha  
  0x01cc3474: call   0x54dedbf0
  0x01cc3479: hlt    
  0x01cc347a: mov    %esi,-0x1c(%ebp)
  0x01cc347d: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc3485: mov    -0xc(%edi),%edi
  0x01cc3488: push   %edi
  0x01cc3489: mov    %ebp,0x144(%edi)
  0x01cc348f: mov    %eax,0x13c(%edi)
  0x01cc3495: call   0x5505d720
  0x01cc349a: add    $0x8,%esp
  0x01cc349d: push   %eax
  0x01cc349e: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc34a6: mov    -0xc(%eax),%eax
  0x01cc34a9: cmp    %eax,%edi
  0x01cc34ab: je     0x01cc34c2
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc34b1: push   $0x55312af0
  0x01cc34b6: call   0x01cc34bb
  0x01cc34bb: pusha  
  0x01cc34bc: call   0x54dedbf0
  0x01cc34c1: hlt    
  0x01cc34c2: pop    %eax
  0x01cc34c3: movl   $0x0,0x13c(%edi)
  0x01cc34cd: movl   $0x0,0x144(%edi)
  0x01cc34d7: cmpl   $0x0,0x4(%edi)
  0x01cc34de: jne    0x01cb0340
  0x01cc34e4: mov    -0x1c(%ebp),%esi
  0x01cc34e7: mov    -0x18(%ebp),%edi
  0x01cc34ea: ret    
  0x01cc34eb: pop    %ecx
  0x01cc34ec: pop    %edx
  0x01cc34ed: mov    0x10(%ecx),%eax
  0x01cc34f0: test   %eax,%eax
  0x01cc34f2: je     0x01cc3519
  0x01cc34f8: mov    0x10(%ecx),%ecx
  0x01cc34fb: mov    0xc(%ecx),%eax
  0x01cc34fe: add    $0x8,%eax
  0x01cc3501: mov    %eax,0xc(%ecx)
  0x01cc3504: mov    0x8(%ecx),%eax
  0x01cc3507: and    $0xfffffff8,%eax
  0x01cc350a: add    0xc(%ecx),%eax
  0x01cc350d: cmp    0x55627788,%eax
  0x01cc3513: jae    0x01cc3523
  0x01cc3519: movzbl (%esi),%ebx
  0x01cc351c: jmp    *0x55629838(,%ebx,4)
  0x01cc3523: neg    %edx
  0x01cc3525: add    %esi,%edx
  0x01cc3527: call   0x01cc3531
  0x01cc352c: jmp    0x01cc35c5
  0x01cc3531: push   %edx
  0x01cc3532: lea    0x8(%esp),%eax
  0x01cc3536: cmpl   $0x0,-0x8(%ebp)
  0x01cc353d: je     0x01cc3554
  0x01cc3543: push   $0x55310188
  0x01cc3548: call   0x01cc354d
  0x01cc354d: pusha  
  0x01cc354e: call   0x54dedbf0
  0x01cc3553: hlt    
  0x01cc3554: mov    %esi,-0x1c(%ebp)
  0x01cc3557: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc355f: mov    -0xc(%edi),%edi
  0x01cc3562: push   %edi
  0x01cc3563: mov    %ebp,0x144(%edi)
  0x01cc3569: mov    %eax,0x13c(%edi)
  0x01cc356f: call   0x5505ce70
  0x01cc3574: add    $0x8,%esp
  0x01cc3577: push   %eax
  0x01cc3578: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc3580: mov    -0xc(%eax),%eax
  0x01cc3583: cmp    %eax,%edi
  0x01cc3585: je     0x01cc359c
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc358b: push   $0x55312af0
  0x01cc3590: call   0x01cc3595
  0x01cc3595: pusha  
  0x01cc3596: call   0x54dedbf0
  0x01cc359b: hlt    
  0x01cc359c: pop    %eax
  0x01cc359d: movl   $0x0,0x13c(%edi)
  0x01cc35a7: movl   $0x0,0x144(%edi)
  0x01cc35b1: cmpl   $0x0,0x4(%edi)
  0x01cc35b8: jne    0x01cb0340
  0x01cc35be: mov    -0x1c(%ebp),%esi
  0x01cc35c1: mov    -0x18(%ebp),%edi
  0x01cc35c4: ret    
  0x01cc35c5: movzbl (%esi),%ebx
  0x01cc35c8: test   %eax,%eax
  0x01cc35ca: je     0x01cc3519
  0x01cc35d0: mov    0x34(%eax),%ecx
  0x01cc35d3: cmp    $0xfffffffe,%ecx
  0x01cc35d6: je     0x01cc3519
  0x01cc35dc: mov    %eax,%ebx
  0x01cc35de: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc35e6: mov    -0xc(%ecx),%ecx
  0x01cc35e9: call   0x01cc35f3
  0x01cc35ee: jmp    0x01cc3686
  0x01cc35f3: lea    0x4(%esp),%eax
  0x01cc35f7: cmpl   $0x0,-0x8(%ebp)
  0x01cc35fe: je     0x01cc3615
  0x01cc3604: push   $0x55310188
  0x01cc3609: call   0x01cc360e
  0x01cc360e: pusha  
  0x01cc360f: call   0x54dedbf0
  0x01cc3614: hlt    
  0x01cc3615: mov    %esi,-0x1c(%ebp)
  0x01cc3618: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc3620: mov    -0xc(%edi),%edi
  0x01cc3623: push   %edi
  0x01cc3624: mov    %ebp,0x144(%edi)
  0x01cc362a: mov    %eax,0x13c(%edi)
  0x01cc3630: call   0x55217020
  0x01cc3635: add    $0x4,%esp
  0x01cc3638: push   %eax
  0x01cc3639: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc3641: mov    -0xc(%eax),%eax
  0x01cc3644: cmp    %eax,%edi
  0x01cc3646: je     0x01cc365d
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc364c: push   $0x55312af0
  0x01cc3651: call   0x01cc3656
  0x01cc3656: pusha  
  0x01cc3657: call   0x54dedbf0
  0x01cc365c: hlt    
  0x01cc365d: pop    %eax
  0x01cc365e: movl   $0x0,0x13c(%edi)
  0x01cc3668: movl   $0x0,0x144(%edi)
  0x01cc3672: cmpl   $0x0,0x4(%edi)
  0x01cc3679: jne    0x01cb0340
  0x01cc367f: mov    -0x1c(%ebp),%esi
  0x01cc3682: mov    -0x18(%ebp),%edi
  0x01cc3685: ret    
  0x01cc3686: mov    %eax,%ecx
  0x01cc3688: mov    -0x4(%ebp),%edx
  0x01cc368b: mov    %ebp,%esp
  0x01cc368d: pop    %ebp
  0x01cc368e: pop    %edi
  0x01cc368f: mov    %edx,%esp
  0x01cc3691: and    $0xfffffff0,%esp
  0x01cc3694: push   %edi
  0x01cc3695: jmp    *0x54(%ebx)
  0x01cc3698: movzbl 0x3(%esi),%ebx
  0x01cc369c: add    $0x3,%esi
  0x01cc369f: jmp    *0x55629838(,%ebx,4)
  0x01cc36a6: nop    
  0x01cc36a7: nop    
  0x01cc36a8: int3   
  0x01cc36a9: int3   
  0x01cc36aa: int3   
  0x01cc36ab: int3   
  0x01cc36ac: int3   
  0x01cc36ad: int3   
  0x01cc36ae: int3   
  0x01cc36af: int3   

----------------------------------------------------------------------
goto  167 goto  [0x01cc36c0, 0x01cc3970]  688 bytes

  0x01cc36c0: sub    $0x4,%esp
  0x01cc36c3: fstps  (%esp)
  0x01cc36c6: jmp    0x01cc36e4
  0x01cc36cb: sub    $0x8,%esp
  0x01cc36ce: fstpl  (%esp)
  0x01cc36d1: jmp    0x01cc36e4
  0x01cc36d6: push   %edx
  0x01cc36d7: push   %eax
  0x01cc36d8: jmp    0x01cc36e4
  0x01cc36dd: push   %eax
  0x01cc36de: jmp    0x01cc36e4
  0x01cc36e3: push   %eax
  0x01cc36e4: mov    -0xc(%ebp),%ecx
  0x01cc36e7: movswl 0x1(%esi),%edx
  0x01cc36eb: bswap  %edx
  0x01cc36ed: sar    $0x10,%edx
  0x01cc36f0: add    %edx,%esi
  0x01cc36f2: test   %edx,%edx
  0x01cc36f4: jns    0x01cc37d3
  0x01cc36fa: mov    0x10(%ecx),%eax
  0x01cc36fd: test   %eax,%eax
  0x01cc36ff: jne    0x01cc37b2
  0x01cc3705: push   %edx
  0x01cc3706: push   %ecx
  0x01cc3707: call   0x01cc3711
  0x01cc370c: jmp    0x01cc37a5
  0x01cc3711: push   %ecx
  0x01cc3712: lea    0x8(%esp),%eax
  0x01cc3716: cmpl   $0x0,-0x8(%ebp)
  0x01cc371d: je     0x01cc3734
  0x01cc3723: push   $0x55310188
  0x01cc3728: call   0x01cc372d
  0x01cc372d: pusha  
  0x01cc372e: call   0x54dedbf0
  0x01cc3733: hlt    
  0x01cc3734: mov    %esi,-0x1c(%ebp)
  0x01cc3737: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc373f: mov    -0xc(%edi),%edi
  0x01cc3742: push   %edi
  0x01cc3743: mov    %ebp,0x144(%edi)
  0x01cc3749: mov    %eax,0x13c(%edi)
  0x01cc374f: call   0x5505d720
  0x01cc3754: add    $0x8,%esp
  0x01cc3757: push   %eax
  0x01cc3758: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc3760: mov    -0xc(%eax),%eax
  0x01cc3763: cmp    %eax,%edi
  0x01cc3765: je     0x01cc377c
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc376b: push   $0x55312af0
  0x01cc3770: call   0x01cc3775
  0x01cc3775: pusha  
  0x01cc3776: call   0x54dedbf0
  0x01cc377b: hlt    
  0x01cc377c: pop    %eax
  0x01cc377d: movl   $0x0,0x13c(%edi)
  0x01cc3787: movl   $0x0,0x144(%edi)
  0x01cc3791: cmpl   $0x0,0x4(%edi)
  0x01cc3798: jne    0x01cb0340
  0x01cc379e: mov    -0x1c(%ebp),%esi
  0x01cc37a1: mov    -0x18(%ebp),%edi
  0x01cc37a4: ret    
  0x01cc37a5: pop    %ecx
  0x01cc37a6: pop    %edx
  0x01cc37a7: mov    0x10(%ecx),%eax
  0x01cc37aa: test   %eax,%eax
  0x01cc37ac: je     0x01cc37d3
  0x01cc37b2: mov    0x10(%ecx),%ecx
  0x01cc37b5: mov    0xc(%ecx),%eax
  0x01cc37b8: add    $0x8,%eax
  0x01cc37bb: mov    %eax,0xc(%ecx)
  0x01cc37be: mov    0x8(%ecx),%eax
  0x01cc37c1: and    $0xfffffff8,%eax
  0x01cc37c4: add    0xc(%ecx),%eax
  0x01cc37c7: cmp    0x55627788,%eax
  0x01cc37cd: jae    0x01cc37dd
  0x01cc37d3: movzbl (%esi),%ebx
  0x01cc37d6: jmp    *0x55629838(,%ebx,4)
  0x01cc37dd: neg    %edx
  0x01cc37df: add    %esi,%edx
  0x01cc37e1: call   0x01cc37eb
  0x01cc37e6: jmp    0x01cc387f
  0x01cc37eb: push   %edx
  0x01cc37ec: lea    0x8(%esp),%eax
  0x01cc37f0: cmpl   $0x0,-0x8(%ebp)
  0x01cc37f7: je     0x01cc380e
  0x01cc37fd: push   $0x55310188
  0x01cc3802: call   0x01cc3807
  0x01cc3807: pusha  
  0x01cc3808: call   0x54dedbf0
  0x01cc380d: hlt    
  0x01cc380e: mov    %esi,-0x1c(%ebp)
  0x01cc3811: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc3819: mov    -0xc(%edi),%edi
  0x01cc381c: push   %edi
  0x01cc381d: mov    %ebp,0x144(%edi)
  0x01cc3823: mov    %eax,0x13c(%edi)
  0x01cc3829: call   0x5505ce70
  0x01cc382e: add    $0x8,%esp
  0x01cc3831: push   %eax
  0x01cc3832: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc383a: mov    -0xc(%eax),%eax
  0x01cc383d: cmp    %eax,%edi
  0x01cc383f: je     0x01cc3856
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc3845: push   $0x55312af0
  0x01cc384a: call   0x01cc384f
  0x01cc384f: pusha  
  0x01cc3850: call   0x54dedbf0
  0x01cc3855: hlt    
  0x01cc3856: pop    %eax
  0x01cc3857: movl   $0x0,0x13c(%edi)
  0x01cc3861: movl   $0x0,0x144(%edi)
  0x01cc386b: cmpl   $0x0,0x4(%edi)
  0x01cc3872: jne    0x01cb0340
  0x01cc3878: mov    -0x1c(%ebp),%esi
  0x01cc387b: mov    -0x18(%ebp),%edi
  0x01cc387e: ret    
  0x01cc387f: movzbl (%esi),%ebx
  0x01cc3882: test   %eax,%eax
  0x01cc3884: je     0x01cc37d3
  0x01cc388a: mov    0x34(%eax),%ecx
  0x01cc388d: cmp    $0xfffffffe,%ecx
  0x01cc3890: je     0x01cc37d3
  0x01cc3896: mov    %eax,%ebx
  0x01cc3898: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc38a0: mov    -0xc(%ecx),%ecx
  0x01cc38a3: call   0x01cc38ad
  0x01cc38a8: jmp    0x01cc3940
  0x01cc38ad: lea    0x4(%esp),%eax
  0x01cc38b1: cmpl   $0x0,-0x8(%ebp)
  0x01cc38b8: je     0x01cc38cf
  0x01cc38be: push   $0x55310188
  0x01cc38c3: call   0x01cc38c8
  0x01cc38c8: pusha  
  0x01cc38c9: call   0x54dedbf0
  0x01cc38ce: hlt    
  0x01cc38cf: mov    %esi,-0x1c(%ebp)
  0x01cc38d2: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc38da: mov    -0xc(%edi),%edi
  0x01cc38dd: push   %edi
  0x01cc38de: mov    %ebp,0x144(%edi)
  0x01cc38e4: mov    %eax,0x13c(%edi)
  0x01cc38ea: call   0x55217020
  0x01cc38ef: add    $0x4,%esp
  0x01cc38f2: push   %eax
  0x01cc38f3: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc38fb: mov    -0xc(%eax),%eax
  0x01cc38fe: cmp    %eax,%edi
  0x01cc3900: je     0x01cc3917
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc3906: push   $0x55312af0
  0x01cc390b: call   0x01cc3910
  0x01cc3910: pusha  
  0x01cc3911: call   0x54dedbf0
  0x01cc3916: hlt    
  0x01cc3917: pop    %eax
  0x01cc3918: movl   $0x0,0x13c(%edi)
  0x01cc3922: movl   $0x0,0x144(%edi)
  0x01cc392c: cmpl   $0x0,0x4(%edi)
  0x01cc3933: jne    0x01cb0340
  0x01cc3939: mov    -0x1c(%ebp),%esi
  0x01cc393c: mov    -0x18(%ebp),%edi
  0x01cc393f: ret    
  0x01cc3940: mov    %eax,%ecx
  0x01cc3942: mov    -0x4(%ebp),%edx
  0x01cc3945: mov    %ebp,%esp
  0x01cc3947: pop    %ebp
  0x01cc3948: pop    %edi
  0x01cc3949: mov    %edx,%esp
  0x01cc394b: and    $0xfffffff0,%esp
  0x01cc394e: push   %edi
  0x01cc394f: jmp    *0x54(%ebx)
  0x01cc3952: push   $0x552fd97c
  0x01cc3957: call   0x01cc395c
  0x01cc395c: pusha  
  0x01cc395d: call   0x54dedbf0
  0x01cc3962: hlt    
  0x01cc3963: nop    
  0x01cc3964: int3   
  0x01cc3965: int3   
  0x01cc3966: int3   
  0x01cc3967: int3   
  0x01cc3968: int3   
  0x01cc3969: int3   
  0x01cc396a: int3   
  0x01cc396b: int3   
  0x01cc396c: int3   
  0x01cc396d: int3   
  0x01cc396e: int3   
  0x01cc396f: int3   

----------------------------------------------------------------------
jsr  168 jsr  [0x01cc3980, 0x01cc39e0]  96 bytes

  0x01cc3980: sub    $0x4,%esp
  0x01cc3983: fstps  (%esp)
  0x01cc3986: jmp    0x01cc39a4
  0x01cc398b: sub    $0x8,%esp
  0x01cc398e: fstpl  (%esp)
  0x01cc3991: jmp    0x01cc39a4
  0x01cc3996: push   %edx
  0x01cc3997: push   %eax
  0x01cc3998: jmp    0x01cc39a4
  0x01cc399d: push   %eax
  0x01cc399e: jmp    0x01cc39a4
  0x01cc39a3: push   %eax
  0x01cc39a4: mov    -0xc(%ebp),%ecx
  0x01cc39a7: movswl 0x1(%esi),%edx
  0x01cc39ab: bswap  %edx
  0x01cc39ad: sar    $0x10,%edx
  0x01cc39b0: movzbl (%esi,%edx,1),%ebx
  0x01cc39b4: lea    -0x25(%esi),%eax
  0x01cc39b7: sub    0x8(%ecx),%eax
  0x01cc39ba: add    %edx,%esi
  0x01cc39bc: push   %eax
  0x01cc39bd: jmp    *0x5562bc38(,%ebx,4)
  0x01cc39c4: push   $0x552fd97c
  0x01cc39c9: call   0x01cc39ce
  0x01cc39ce: pusha  
  0x01cc39cf: call   0x54dedbf0
  0x01cc39d4: hlt    
  0x01cc39d5: nop    
  0x01cc39d6: nop    
  0x01cc39d7: nop    
  0x01cc39d8: int3   
  0x01cc39d9: int3   
  0x01cc39da: int3   
  0x01cc39db: int3   
  0x01cc39dc: int3   
  0x01cc39dd: int3   
  0x01cc39de: int3   
  0x01cc39df: int3   

----------------------------------------------------------------------
ret  169 ret  [0x01cc39f0, 0x01cc3a80]  144 bytes

  0x01cc39f0: sub    $0x4,%esp
  0x01cc39f3: fstps  (%esp)
  0x01cc39f6: jmp    0x01cc3a14
  0x01cc39fb: sub    $0x8,%esp
  0x01cc39fe: fstpl  (%esp)
  0x01cc3a01: jmp    0x01cc3a14
  0x01cc3a06: push   %edx
  0x01cc3a07: push   %eax
  0x01cc3a08: jmp    0x01cc3a14
  0x01cc3a0d: push   %eax
  0x01cc3a0e: jmp    0x01cc3a14
  0x01cc3a13: push   %eax
  0x01cc3a14: movzbl 0x1(%esi),%ebx
  0x01cc3a18: neg    %ebx
  0x01cc3a1a: mov    (%edi,%ebx,4),%ebx
  0x01cc3a1d: mov    -0xc(%ebp),%eax
  0x01cc3a20: mov    0x8(%eax),%esi
  0x01cc3a23: lea    0x28(%esi,%ebx,1),%esi
  0x01cc3a27: movzbl (%esi),%ebx
  0x01cc3a2a: jmp    *0x55629838(,%ebx,4)
  0x01cc3a31: push   $0x552fd97c
  0x01cc3a36: call   0x01cc3a3b
  0x01cc3a3b: pusha  
  0x01cc3a3c: call   0x54dedbf0
  0x01cc3a41: hlt    
  0x01cc3a42: movzwl 0x2(%esi),%ebx
  0x01cc3a46: bswap  %ebx
  0x01cc3a48: shr    $0x10,%ebx
  0x01cc3a4b: neg    %ebx
  0x01cc3a4d: mov    (%edi,%ebx,4),%ebx
  0x01cc3a50: mov    -0xc(%ebp),%eax
  0x01cc3a53: mov    0x8(%eax),%esi
  0x01cc3a56: lea    0x28(%esi,%ebx,1),%esi
  0x01cc3a5a: movzbl (%esi),%ebx
  0x01cc3a5d: jmp    *0x55629838(,%ebx,4)
  0x01cc3a64: push   $0x552fd97c
  0x01cc3a69: call   0x01cc3a6e
  0x01cc3a6e: pusha  
  0x01cc3a6f: call   0x54dedbf0
  0x01cc3a74: hlt    
  0x01cc3a75: nop    
  0x01cc3a76: nop    
  0x01cc3a77: nop    
  0x01cc3a78: int3   
  0x01cc3a79: int3   
  0x01cc3a7a: int3   
  0x01cc3a7b: int3   
  0x01cc3a7c: int3   
  0x01cc3a7d: int3   
  0x01cc3a7e: int3   
  0x01cc3a7f: int3   

----------------------------------------------------------------------
tableswitch  170 tableswitch  [0x01cc3a90, 0x01cc3ae0]  80 bytes

  0x01cc3a90: pop    %eax
  0x01cc3a91: lea    0x4(%esi),%ebx
  0x01cc3a94: and    $0xfffffffc,%ebx
  0x01cc3a97: mov    0x4(%ebx),%ecx
  0x01cc3a9a: mov    0x8(%ebx),%edx
  0x01cc3a9d: bswap  %ecx
  0x01cc3a9f: bswap  %edx
  0x01cc3aa1: cmp    %ecx,%eax
  0x01cc3aa3: jl     0x01cc3abe
  0x01cc3aa5: cmp    %edx,%eax
  0x01cc3aa7: jg     0x01cc3abe
  0x01cc3aa9: sub    %ecx,%eax
  0x01cc3aab: mov    0xc(%ebx,%eax,4),%edx
  0x01cc3aaf: bswap  %edx
  0x01cc3ab1: movzbl (%esi,%edx,1),%ebx
  0x01cc3ab5: add    %edx,%esi
  0x01cc3ab7: jmp    *0x55629838(,%ebx,4)
  0x01cc3abe: mov    (%ebx),%edx
  0x01cc3ac0: jmp    0x01cc3aaf
  0x01cc3ac2: push   $0x552fd97c
  0x01cc3ac7: call   0x01cc3acc
  0x01cc3acc: pusha  
  0x01cc3acd: call   0x54dedbf0
  0x01cc3ad2: hlt    
  0x01cc3ad3: nop    
  0x01cc3ad4: int3   
  0x01cc3ad5: int3   
  0x01cc3ad6: int3   
  0x01cc3ad7: int3   
  0x01cc3ad8: int3   
  0x01cc3ad9: int3   
  0x01cc3ada: int3   
  0x01cc3adb: int3   
  0x01cc3adc: int3   
  0x01cc3add: int3   
  0x01cc3ade: int3   
  0x01cc3adf: int3   

----------------------------------------------------------------------
lookupswitch  171 lookupswitch  [0x01cc3af0, 0x01cc3b20]  48 bytes

  0x01cc3af0: pop    %eax
  0x01cc3af1: push   $0x5531a350
  0x01cc3af6: call   0x01cc3afb
  0x01cc3afb: pusha  
  0x01cc3afc: call   0x54dedbf0
  0x01cc3b01: hlt    
  0x01cc3b02: push   $0x552fd97c
  0x01cc3b07: call   0x01cc3b0c
  0x01cc3b0c: pusha  
  0x01cc3b0d: call   0x54dedbf0
  0x01cc3b12: hlt    
  0x01cc3b13: nop    
  0x01cc3b14: int3   
  0x01cc3b15: int3   
  0x01cc3b16: int3   
  0x01cc3b17: int3   
  0x01cc3b18: int3   
  0x01cc3b19: int3   
  0x01cc3b1a: int3   
  0x01cc3b1b: int3   
  0x01cc3b1c: int3   
  0x01cc3b1d: int3   
  0x01cc3b1e: int3   
  0x01cc3b1f: int3   

----------------------------------------------------------------------
ireturn  172 ireturn  [0x01cc3b30, 0x01cc3e30]  768 bytes

  0x01cc3b30: pop    %eax
  0x01cc3b31: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc3b39: mov    -0xc(%ecx),%ecx
  0x01cc3b3c: mov    0x1a1(%ecx),%bl
  0x01cc3b42: mov    %ebx,%edi
  0x01cc3b44: movb   $0x0,0x1a1(%ecx)
  0x01cc3b4b: mov    -0xc(%ebp),%ebx
  0x01cc3b4e: mov    0x14(%ebx),%ecx
  0x01cc3b51: test   $0x20,%ecx
  0x01cc3b57: je     0x01cc3cfe
  0x01cc3b5d: mov    %edi,%ecx
  0x01cc3b5f: test   $0xff,%cl
  0x01cc3b62: jne    0x01cc3dcd
  0x01cc3b68: push   %eax
  0x01cc3b69: lea    -0x28(%ebp),%edx
  0x01cc3b6c: mov    0x4(%edx),%eax
  0x01cc3b6f: test   %eax,%eax
  0x01cc3b71: jne    0x01cc3c28
  0x01cc3b77: pop    %eax
  0x01cc3b78: emms   
  0x01cc3b7a: call   0x01cc3b84
  0x01cc3b7f: jmp    0x01cc3c17
  0x01cc3b84: lea    0x4(%esp),%eax
  0x01cc3b88: cmpl   $0x0,-0x8(%ebp)
  0x01cc3b8f: je     0x01cc3ba6
  0x01cc3b95: push   $0x55310188
  0x01cc3b9a: call   0x01cc3b9f
  0x01cc3b9f: pusha  
  0x01cc3ba0: call   0x54dedbf0
  0x01cc3ba5: hlt    
  0x01cc3ba6: mov    %esi,-0x1c(%ebp)
  0x01cc3ba9: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc3bb1: mov    -0xc(%edi),%edi
  0x01cc3bb4: push   %edi
  0x01cc3bb5: mov    %ebp,0x144(%edi)
  0x01cc3bbb: mov    %eax,0x13c(%edi)
  0x01cc3bc1: call   0x5505ad80
  0x01cc3bc6: add    $0x4,%esp
  0x01cc3bc9: push   %eax
  0x01cc3bca: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc3bd2: mov    -0xc(%eax),%eax
  0x01cc3bd5: cmp    %eax,%edi
  0x01cc3bd7: je     0x01cc3bee
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc3bdd: push   $0x55312af0
  0x01cc3be2: call   0x01cc3be7
  0x01cc3be7: pusha  
  0x01cc3be8: call   0x54dedbf0
  0x01cc3bed: hlt    
  0x01cc3bee: pop    %eax
  0x01cc3bef: movl   $0x0,0x13c(%edi)
  0x01cc3bf9: movl   $0x0,0x144(%edi)
  0x01cc3c03: cmpl   $0x0,0x4(%edi)
  0x01cc3c0a: jne    0x01cb0340
  0x01cc3c10: mov    -0x1c(%ebp),%esi
  0x01cc3c13: mov    -0x18(%ebp),%edi
  0x01cc3c16: ret    
  0x01cc3c17: push   $0x552fd97c
  0x01cc3c1c: call   0x01cc3c21
  0x01cc3c21: pusha  
  0x01cc3c22: call   0x54dedbf0
  0x01cc3c27: hlt    
  0x01cc3c28: mov    %esi,-0x1c(%ebp)
  0x01cc3c2b: lea    (%edx),%eax
  0x01cc3c2d: mov    0x4(%edx),%ecx
  0x01cc3c30: movl   $0x0,0x4(%edx)
  0x01cc3c37: mov    (%ecx),%ebx
  0x01cc3c39: and    $0x7,%ebx
  0x01cc3c3c: cmp    $0x5,%ebx
  0x01cc3c3f: je     0x01cc3cfa
  0x01cc3c45: mov    (%eax),%ebx
  0x01cc3c47: test   %ebx,%ebx
  0x01cc3c49: je     0x01cc3cfa
  0x01cc3c4f: lock cmpxchg %ebx,(%ecx)
  0x01cc3c53: je     0x01cc3cfa
  0x01cc3c59: mov    %ecx,0x4(%edx)
  0x01cc3c5c: call   0x01cc3c66
  0x01cc3c61: jmp    0x01cc3cfa
  0x01cc3c66: push   %edx
  0x01cc3c67: lea    0x8(%esp),%eax
  0x01cc3c6b: cmpl   $0x0,-0x8(%ebp)
  0x01cc3c72: je     0x01cc3c89
  0x01cc3c78: push   $0x55310188
  0x01cc3c7d: call   0x01cc3c82
  0x01cc3c82: pusha  
  0x01cc3c83: call   0x54dedbf0
  0x01cc3c88: hlt    
  0x01cc3c89: mov    %esi,-0x1c(%ebp)
  0x01cc3c8c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc3c94: mov    -0xc(%edi),%edi
  0x01cc3c97: push   %edi
  0x01cc3c98: mov    %ebp,0x144(%edi)
  0x01cc3c9e: mov    %eax,0x13c(%edi)
  0x01cc3ca4: call   0x5505ab90
  0x01cc3ca9: add    $0x8,%esp
  0x01cc3cac: push   %eax
  0x01cc3cad: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc3cb5: mov    -0xc(%eax),%eax
  0x01cc3cb8: cmp    %eax,%edi
  0x01cc3cba: je     0x01cc3cd1
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc3cc0: push   $0x55312af0
  0x01cc3cc5: call   0x01cc3cca
  0x01cc3cca: pusha  
  0x01cc3ccb: call   0x54dedbf0
  0x01cc3cd0: hlt    
  0x01cc3cd1: pop    %eax
  0x01cc3cd2: movl   $0x0,0x13c(%edi)
  0x01cc3cdc: movl   $0x0,0x144(%edi)
  0x01cc3ce6: cmpl   $0x0,0x4(%edi)
  0x01cc3ced: jne    0x01cb0340
  0x01cc3cf3: mov    -0x1c(%ebp),%esi
  0x01cc3cf6: mov    -0x18(%ebp),%edi
  0x01cc3cf9: ret    
  0x01cc3cfa: mov    -0x1c(%ebp),%esi
  0x01cc3cfd: pop    %eax
  0x01cc3cfe: mov    -0x20(%ebp),%ecx
  0x01cc3d01: lea    -0x20(%ebp),%ebx
  0x01cc3d04: jmp    0x01cc3dc9
  0x01cc3d09: emms   
  0x01cc3d0b: call   0x01cc3d15
  0x01cc3d10: jmp    0x01cc3da8
  0x01cc3d15: lea    0x4(%esp),%eax
  0x01cc3d19: cmpl   $0x0,-0x8(%ebp)
  0x01cc3d20: je     0x01cc3d37
  0x01cc3d26: push   $0x55310188
  0x01cc3d2b: call   0x01cc3d30
  0x01cc3d30: pusha  
  0x01cc3d31: call   0x54dedbf0
  0x01cc3d36: hlt    
  0x01cc3d37: mov    %esi,-0x1c(%ebp)
  0x01cc3d3a: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc3d42: mov    -0xc(%edi),%edi
  0x01cc3d45: push   %edi
  0x01cc3d46: mov    %ebp,0x144(%edi)
  0x01cc3d4c: mov    %eax,0x13c(%edi)
  0x01cc3d52: call   0x5505ad80
  0x01cc3d57: add    $0x4,%esp
  0x01cc3d5a: push   %eax
  0x01cc3d5b: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc3d63: mov    -0xc(%eax),%eax
  0x01cc3d66: cmp    %eax,%edi
  0x01cc3d68: je     0x01cc3d7f
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc3d6e: push   $0x55312af0
  0x01cc3d73: call   0x01cc3d78
  0x01cc3d78: pusha  
  0x01cc3d79: call   0x54dedbf0
  0x01cc3d7e: hlt    
  0x01cc3d7f: pop    %eax
  0x01cc3d80: movl   $0x0,0x13c(%edi)
  0x01cc3d8a: movl   $0x0,0x144(%edi)
  0x01cc3d94: cmpl   $0x0,0x4(%edi)
  0x01cc3d9b: jne    0x01cb0340
  0x01cc3da1: mov    -0x1c(%ebp),%esi
  0x01cc3da4: mov    -0x18(%ebp),%edi
  0x01cc3da7: ret    
  0x01cc3da8: push   $0x552fd97c
  0x01cc3dad: call   0x01cc3db2
  0x01cc3db2: pusha  
  0x01cc3db3: call   0x54dedbf0
  0x01cc3db8: hlt    
  0x01cc3db9: cmpl   $0x0,0x4(%ecx)
  0x01cc3dc0: jne    0x01cc3d09
  0x01cc3dc6: add    $0x8,%ecx
  0x01cc3dc9: cmp    %ebx,%ecx
  0x01cc3dcb: jne    0x01cc3db9
  0x01cc3dcd: cmpb   $0x0,0x55633e5f
  0x01cc3dd4: je     0x01cc3e12
  0x01cc3dda: push   %eax
  0x01cc3ddb: mov    %fs:0x0(,%eiz,1),%ebx
  0x01cc3de3: mov    -0xc(%ebx),%ebx
  0x01cc3de6: mov    -0xc(%ebp),%ecx
  0x01cc3de9: push   %ecx
  0x01cc3dea: push   %ebx
  0x01cc3deb: cmpl   $0x0,-0x8(%ebp)
  0x01cc3df2: je     0x01cc3e09
  0x01cc3df8: push   $0x55310148
  0x01cc3dfd: call   0x01cc3e02
  0x01cc3e02: pusha  
  0x01cc3e03: call   0x54dedbf0
  0x01cc3e08: hlt    
  0x01cc3e09: call   0x55215710
  0x01cc3e0e: add    $0x8,%esp
  0x01cc3e11: pop    %eax
  0x01cc3e12: mov    -0x4(%ebp),%ebx
  0x01cc3e15: mov    %ebp,%esp
  0x01cc3e17: pop    %ebp
  0x01cc3e18: pop    %esi
  0x01cc3e19: mov    %ebx,%esp
  0x01cc3e1b: jmp    *%esi
  0x01cc3e1d: push   $0x552fd97c
  0x01cc3e22: call   0x01cc3e27
  0x01cc3e27: pusha  
  0x01cc3e28: call   0x54dedbf0
  0x01cc3e2d: hlt    
  0x01cc3e2e: nop    
  0x01cc3e2f: nop    

----------------------------------------------------------------------
lreturn  173 lreturn  [0x01cc3e40, 0x01cc4150]  784 bytes

  0x01cc3e40: pop    %eax
  0x01cc3e41: pop    %edx
  0x01cc3e42: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc3e4a: mov    -0xc(%ecx),%ecx
  0x01cc3e4d: mov    0x1a1(%ecx),%bl
  0x01cc3e53: mov    %ebx,%edi
  0x01cc3e55: movb   $0x0,0x1a1(%ecx)
  0x01cc3e5c: mov    -0xc(%ebp),%ebx
  0x01cc3e5f: mov    0x14(%ebx),%ecx
  0x01cc3e62: test   $0x20,%ecx
  0x01cc3e68: je     0x01cc4012
  0x01cc3e6e: mov    %edi,%ecx
  0x01cc3e70: test   $0xff,%cl
  0x01cc3e73: jne    0x01cc40e1
  0x01cc3e79: push   %edx
  0x01cc3e7a: push   %eax
  0x01cc3e7b: lea    -0x28(%ebp),%edx
  0x01cc3e7e: mov    0x4(%edx),%eax
  0x01cc3e81: test   %eax,%eax
  0x01cc3e83: jne    0x01cc3f3b
  0x01cc3e89: pop    %eax
  0x01cc3e8a: pop    %edx
  0x01cc3e8b: emms   
  0x01cc3e8d: call   0x01cc3e97
  0x01cc3e92: jmp    0x01cc3f2a
  0x01cc3e97: lea    0x4(%esp),%eax
  0x01cc3e9b: cmpl   $0x0,-0x8(%ebp)
  0x01cc3ea2: je     0x01cc3eb9
  0x01cc3ea8: push   $0x55310188
  0x01cc3ead: call   0x01cc3eb2
  0x01cc3eb2: pusha  
  0x01cc3eb3: call   0x54dedbf0
  0x01cc3eb8: hlt    
  0x01cc3eb9: mov    %esi,-0x1c(%ebp)
  0x01cc3ebc: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc3ec4: mov    -0xc(%edi),%edi
  0x01cc3ec7: push   %edi
  0x01cc3ec8: mov    %ebp,0x144(%edi)
  0x01cc3ece: mov    %eax,0x13c(%edi)
  0x01cc3ed4: call   0x5505ad80
  0x01cc3ed9: add    $0x4,%esp
  0x01cc3edc: push   %eax
  0x01cc3edd: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc3ee5: mov    -0xc(%eax),%eax
  0x01cc3ee8: cmp    %eax,%edi
  0x01cc3eea: je     0x01cc3f01
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc3ef0: push   $0x55312af0
  0x01cc3ef5: call   0x01cc3efa
  0x01cc3efa: pusha  
  0x01cc3efb: call   0x54dedbf0
  0x01cc3f00: hlt    
  0x01cc3f01: pop    %eax
  0x01cc3f02: movl   $0x0,0x13c(%edi)
  0x01cc3f0c: movl   $0x0,0x144(%edi)
  0x01cc3f16: cmpl   $0x0,0x4(%edi)
  0x01cc3f1d: jne    0x01cb0340
  0x01cc3f23: mov    -0x1c(%ebp),%esi
  0x01cc3f26: mov    -0x18(%ebp),%edi
  0x01cc3f29: ret    
  0x01cc3f2a: push   $0x552fd97c
  0x01cc3f2f: call   0x01cc3f34
  0x01cc3f34: pusha  
  0x01cc3f35: call   0x54dedbf0
  0x01cc3f3a: hlt    
  0x01cc3f3b: mov    %esi,-0x1c(%ebp)
  0x01cc3f3e: lea    (%edx),%eax
  0x01cc3f40: mov    0x4(%edx),%ecx
  0x01cc3f43: movl   $0x0,0x4(%edx)
  0x01cc3f4a: mov    (%ecx),%ebx
  0x01cc3f4c: and    $0x7,%ebx
  0x01cc3f4f: cmp    $0x5,%ebx
  0x01cc3f52: je     0x01cc400d
  0x01cc3f58: mov    (%eax),%ebx
  0x01cc3f5a: test   %ebx,%ebx
  0x01cc3f5c: je     0x01cc400d
  0x01cc3f62: lock cmpxchg %ebx,(%ecx)
  0x01cc3f66: je     0x01cc400d
  0x01cc3f6c: mov    %ecx,0x4(%edx)
  0x01cc3f6f: call   0x01cc3f79
  0x01cc3f74: jmp    0x01cc400d
  0x01cc3f79: push   %edx
  0x01cc3f7a: lea    0x8(%esp),%eax
  0x01cc3f7e: cmpl   $0x0,-0x8(%ebp)
  0x01cc3f85: je     0x01cc3f9c
  0x01cc3f8b: push   $0x55310188
  0x01cc3f90: call   0x01cc3f95
  0x01cc3f95: pusha  
  0x01cc3f96: call   0x54dedbf0
  0x01cc3f9b: hlt    
  0x01cc3f9c: mov    %esi,-0x1c(%ebp)
  0x01cc3f9f: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc3fa7: mov    -0xc(%edi),%edi
  0x01cc3faa: push   %edi
  0x01cc3fab: mov    %ebp,0x144(%edi)
  0x01cc3fb1: mov    %eax,0x13c(%edi)
  0x01cc3fb7: call   0x5505ab90
  0x01cc3fbc: add    $0x8,%esp
  0x01cc3fbf: push   %eax
  0x01cc3fc0: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc3fc8: mov    -0xc(%eax),%eax
  0x01cc3fcb: cmp    %eax,%edi
  0x01cc3fcd: je     0x01cc3fe4
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc3fd3: push   $0x55312af0
  0x01cc3fd8: call   0x01cc3fdd
  0x01cc3fdd: pusha  
  0x01cc3fde: call   0x54dedbf0
  0x01cc3fe3: hlt    
  0x01cc3fe4: pop    %eax
  0x01cc3fe5: movl   $0x0,0x13c(%edi)
  0x01cc3fef: movl   $0x0,0x144(%edi)
  0x01cc3ff9: cmpl   $0x0,0x4(%edi)
  0x01cc4000: jne    0x01cb0340
  0x01cc4006: mov    -0x1c(%ebp),%esi
  0x01cc4009: mov    -0x18(%ebp),%edi
  0x01cc400c: ret    
  0x01cc400d: mov    -0x1c(%ebp),%esi
  0x01cc4010: pop    %eax
  0x01cc4011: pop    %edx
  0x01cc4012: mov    -0x20(%ebp),%ecx
  0x01cc4015: lea    -0x20(%ebp),%ebx
  0x01cc4018: jmp    0x01cc40dd
  0x01cc401d: emms   
  0x01cc401f: call   0x01cc4029
  0x01cc4024: jmp    0x01cc40bc
  0x01cc4029: lea    0x4(%esp),%eax
  0x01cc402d: cmpl   $0x0,-0x8(%ebp)
  0x01cc4034: je     0x01cc404b
  0x01cc403a: push   $0x55310188
  0x01cc403f: call   0x01cc4044
  0x01cc4044: pusha  
  0x01cc4045: call   0x54dedbf0
  0x01cc404a: hlt    
  0x01cc404b: mov    %esi,-0x1c(%ebp)
  0x01cc404e: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc4056: mov    -0xc(%edi),%edi
  0x01cc4059: push   %edi
  0x01cc405a: mov    %ebp,0x144(%edi)
  0x01cc4060: mov    %eax,0x13c(%edi)
  0x01cc4066: call   0x5505ad80
  0x01cc406b: add    $0x4,%esp
  0x01cc406e: push   %eax
  0x01cc406f: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc4077: mov    -0xc(%eax),%eax
  0x01cc407a: cmp    %eax,%edi
  0x01cc407c: je     0x01cc4093
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc4082: push   $0x55312af0
  0x01cc4087: call   0x01cc408c
  0x01cc408c: pusha  
  0x01cc408d: call   0x54dedbf0
  0x01cc4092: hlt    
  0x01cc4093: pop    %eax
  0x01cc4094: movl   $0x0,0x13c(%edi)
  0x01cc409e: movl   $0x0,0x144(%edi)
  0x01cc40a8: cmpl   $0x0,0x4(%edi)
  0x01cc40af: jne    0x01cb0340
  0x01cc40b5: mov    -0x1c(%ebp),%esi
  0x01cc40b8: mov    -0x18(%ebp),%edi
  0x01cc40bb: ret    
  0x01cc40bc: push   $0x552fd97c
  0x01cc40c1: call   0x01cc40c6
  0x01cc40c6: pusha  
  0x01cc40c7: call   0x54dedbf0
  0x01cc40cc: hlt    
  0x01cc40cd: cmpl   $0x0,0x4(%ecx)
  0x01cc40d4: jne    0x01cc401d
  0x01cc40da: add    $0x8,%ecx
  0x01cc40dd: cmp    %ebx,%ecx
  0x01cc40df: jne    0x01cc40cd
  0x01cc40e1: cmpb   $0x0,0x55633e5f
  0x01cc40e8: je     0x01cc4128
  0x01cc40ee: push   %edx
  0x01cc40ef: push   %eax
  0x01cc40f0: mov    %fs:0x0(,%eiz,1),%ebx
  0x01cc40f8: mov    -0xc(%ebx),%ebx
  0x01cc40fb: mov    -0xc(%ebp),%ecx
  0x01cc40fe: push   %ecx
  0x01cc40ff: push   %ebx
  0x01cc4100: cmpl   $0x0,-0x8(%ebp)
  0x01cc4107: je     0x01cc411e
  0x01cc410d: push   $0x55310148
  0x01cc4112: call   0x01cc4117
  0x01cc4117: pusha  
  0x01cc4118: call   0x54dedbf0
  0x01cc411d: hlt    
  0x01cc411e: call   0x55215710
  0x01cc4123: add    $0x8,%esp
  0x01cc4126: pop    %eax
  0x01cc4127: pop    %edx
  0x01cc4128: mov    -0x4(%ebp),%ebx
  0x01cc412b: mov    %ebp,%esp
  0x01cc412d: pop    %ebp
  0x01cc412e: pop    %esi
  0x01cc412f: mov    %ebx,%esp
  0x01cc4131: jmp    *%esi
  0x01cc4133: push   $0x552fd97c
  0x01cc4138: call   0x01cc413d
  0x01cc413d: pusha  
  0x01cc413e: call   0x54dedbf0
  0x01cc4143: hlt    
  0x01cc4144: int3   
  0x01cc4145: int3   
  0x01cc4146: int3   
  0x01cc4147: int3   
  0x01cc4148: int3   
  0x01cc4149: int3   
  0x01cc414a: int3   
  0x01cc414b: int3   
  0x01cc414c: int3   
  0x01cc414d: int3   
  0x01cc414e: int3   
  0x01cc414f: int3   

----------------------------------------------------------------------
freturn  174 freturn  [0x01cc4160, 0x01cc4490]  816 bytes

  0x01cc4160: flds   (%esp)
  0x01cc4163: add    $0x4,%esp
  0x01cc4166: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc416e: mov    -0xc(%ecx),%ecx
  0x01cc4171: mov    0x1a1(%ecx),%bl
  0x01cc4177: mov    %ebx,%edi
  0x01cc4179: movb   $0x0,0x1a1(%ecx)
  0x01cc4180: mov    -0xc(%ebp),%ebx
  0x01cc4183: mov    0x14(%ebx),%ecx
  0x01cc4186: test   $0x20,%ecx
  0x01cc418c: je     0x01cc4342
  0x01cc4192: mov    %edi,%ecx
  0x01cc4194: test   $0xff,%cl
  0x01cc4197: jne    0x01cc4411
  0x01cc419d: sub    $0x4,%esp
  0x01cc41a0: fstps  (%esp)
  0x01cc41a3: lea    -0x28(%ebp),%edx
  0x01cc41a6: mov    0x4(%edx),%eax
  0x01cc41a9: test   %eax,%eax
  0x01cc41ab: jne    0x01cc4267
  0x01cc41b1: flds   (%esp)
  0x01cc41b4: add    $0x4,%esp
  0x01cc41b7: emms   
  0x01cc41b9: call   0x01cc41c3
  0x01cc41be: jmp    0x01cc4256
  0x01cc41c3: lea    0x4(%esp),%eax
  0x01cc41c7: cmpl   $0x0,-0x8(%ebp)
  0x01cc41ce: je     0x01cc41e5
  0x01cc41d4: push   $0x55310188
  0x01cc41d9: call   0x01cc41de
  0x01cc41de: pusha  
  0x01cc41df: call   0x54dedbf0
  0x01cc41e4: hlt    
  0x01cc41e5: mov    %esi,-0x1c(%ebp)
  0x01cc41e8: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc41f0: mov    -0xc(%edi),%edi
  0x01cc41f3: push   %edi
  0x01cc41f4: mov    %ebp,0x144(%edi)
  0x01cc41fa: mov    %eax,0x13c(%edi)
  0x01cc4200: call   0x5505ad80
  0x01cc4205: add    $0x4,%esp
  0x01cc4208: push   %eax
  0x01cc4209: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc4211: mov    -0xc(%eax),%eax
  0x01cc4214: cmp    %eax,%edi
  0x01cc4216: je     0x01cc422d
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc421c: push   $0x55312af0
  0x01cc4221: call   0x01cc4226
  0x01cc4226: pusha  
  0x01cc4227: call   0x54dedbf0
  0x01cc422c: hlt    
  0x01cc422d: pop    %eax
  0x01cc422e: movl   $0x0,0x13c(%edi)
  0x01cc4238: movl   $0x0,0x144(%edi)
  0x01cc4242: cmpl   $0x0,0x4(%edi)
  0x01cc4249: jne    0x01cb0340
  0x01cc424f: mov    -0x1c(%ebp),%esi
  0x01cc4252: mov    -0x18(%ebp),%edi
  0x01cc4255: ret    
  0x01cc4256: push   $0x552fd97c
  0x01cc425b: call   0x01cc4260
  0x01cc4260: pusha  
  0x01cc4261: call   0x54dedbf0
  0x01cc4266: hlt    
  0x01cc4267: mov    %esi,-0x1c(%ebp)
  0x01cc426a: lea    (%edx),%eax
  0x01cc426c: mov    0x4(%edx),%ecx
  0x01cc426f: movl   $0x0,0x4(%edx)
  0x01cc4276: mov    (%ecx),%ebx
  0x01cc4278: and    $0x7,%ebx
  0x01cc427b: cmp    $0x5,%ebx
  0x01cc427e: je     0x01cc4339
  0x01cc4284: mov    (%eax),%ebx
  0x01cc4286: test   %ebx,%ebx
  0x01cc4288: je     0x01cc4339
  0x01cc428e: lock cmpxchg %ebx,(%ecx)
  0x01cc4292: je     0x01cc4339
  0x01cc4298: mov    %ecx,0x4(%edx)
  0x01cc429b: call   0x01cc42a5
  0x01cc42a0: jmp    0x01cc4339
  0x01cc42a5: push   %edx
  0x01cc42a6: lea    0x8(%esp),%eax
  0x01cc42aa: cmpl   $0x0,-0x8(%ebp)
  0x01cc42b1: je     0x01cc42c8
  0x01cc42b7: push   $0x55310188
  0x01cc42bc: call   0x01cc42c1
  0x01cc42c1: pusha  
  0x01cc42c2: call   0x54dedbf0
  0x01cc42c7: hlt    
  0x01cc42c8: mov    %esi,-0x1c(%ebp)
  0x01cc42cb: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc42d3: mov    -0xc(%edi),%edi
  0x01cc42d6: push   %edi
  0x01cc42d7: mov    %ebp,0x144(%edi)
  0x01cc42dd: mov    %eax,0x13c(%edi)
  0x01cc42e3: call   0x5505ab90
  0x01cc42e8: add    $0x8,%esp
  0x01cc42eb: push   %eax
  0x01cc42ec: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc42f4: mov    -0xc(%eax),%eax
  0x01cc42f7: cmp    %eax,%edi
  0x01cc42f9: je     0x01cc4310
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc42ff: push   $0x55312af0
  0x01cc4304: call   0x01cc4309
  0x01cc4309: pusha  
  0x01cc430a: call   0x54dedbf0
  0x01cc430f: hlt    
  0x01cc4310: pop    %eax
  0x01cc4311: movl   $0x0,0x13c(%edi)
  0x01cc431b: movl   $0x0,0x144(%edi)
  0x01cc4325: cmpl   $0x0,0x4(%edi)
  0x01cc432c: jne    0x01cb0340
  0x01cc4332: mov    -0x1c(%ebp),%esi
  0x01cc4335: mov    -0x18(%ebp),%edi
  0x01cc4338: ret    
  0x01cc4339: mov    -0x1c(%ebp),%esi
  0x01cc433c: flds   (%esp)
  0x01cc433f: add    $0x4,%esp
  0x01cc4342: mov    -0x20(%ebp),%ecx
  0x01cc4345: lea    -0x20(%ebp),%ebx
  0x01cc4348: jmp    0x01cc440d
  0x01cc434d: emms   
  0x01cc434f: call   0x01cc4359
  0x01cc4354: jmp    0x01cc43ec
  0x01cc4359: lea    0x4(%esp),%eax
  0x01cc435d: cmpl   $0x0,-0x8(%ebp)
  0x01cc4364: je     0x01cc437b
  0x01cc436a: push   $0x55310188
  0x01cc436f: call   0x01cc4374
  0x01cc4374: pusha  
  0x01cc4375: call   0x54dedbf0
  0x01cc437a: hlt    
  0x01cc437b: mov    %esi,-0x1c(%ebp)
  0x01cc437e: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc4386: mov    -0xc(%edi),%edi
  0x01cc4389: push   %edi
  0x01cc438a: mov    %ebp,0x144(%edi)
  0x01cc4390: mov    %eax,0x13c(%edi)
  0x01cc4396: call   0x5505ad80
  0x01cc439b: add    $0x4,%esp
  0x01cc439e: push   %eax
  0x01cc439f: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc43a7: mov    -0xc(%eax),%eax
  0x01cc43aa: cmp    %eax,%edi
  0x01cc43ac: je     0x01cc43c3
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc43b2: push   $0x55312af0
  0x01cc43b7: call   0x01cc43bc
  0x01cc43bc: pusha  
  0x01cc43bd: call   0x54dedbf0
  0x01cc43c2: hlt    
  0x01cc43c3: pop    %eax
  0x01cc43c4: movl   $0x0,0x13c(%edi)
  0x01cc43ce: movl   $0x0,0x144(%edi)
  0x01cc43d8: cmpl   $0x0,0x4(%edi)
  0x01cc43df: jne    0x01cb0340
  0x01cc43e5: mov    -0x1c(%ebp),%esi
  0x01cc43e8: mov    -0x18(%ebp),%edi
  0x01cc43eb: ret    
  0x01cc43ec: push   $0x552fd97c
  0x01cc43f1: call   0x01cc43f6
  0x01cc43f6: pusha  
  0x01cc43f7: call   0x54dedbf0
  0x01cc43fc: hlt    
  0x01cc43fd: cmpl   $0x0,0x4(%ecx)
  0x01cc4404: jne    0x01cc434d
  0x01cc440a: add    $0x8,%ecx
  0x01cc440d: cmp    %ebx,%ecx
  0x01cc440f: jne    0x01cc43fd
  0x01cc4411: cmpb   $0x0,0x55633e5f
  0x01cc4418: je     0x01cc4460
  0x01cc441e: sub    $0x4,%esp
  0x01cc4421: fstps  (%esp)
  0x01cc4424: mov    %fs:0x0(,%eiz,1),%ebx
  0x01cc442c: mov    -0xc(%ebx),%ebx
  0x01cc442f: mov    -0xc(%ebp),%ecx
  0x01cc4432: push   %ecx
  0x01cc4433: push   %ebx
  0x01cc4434: cmpl   $0x0,-0x8(%ebp)
  0x01cc443b: je     0x01cc4452
  0x01cc4441: push   $0x55310148
  0x01cc4446: call   0x01cc444b
  0x01cc444b: pusha  
  0x01cc444c: call   0x54dedbf0
  0x01cc4451: hlt    
  0x01cc4452: call   0x55215710
  0x01cc4457: add    $0x8,%esp
  0x01cc445a: flds   (%esp)
  0x01cc445d: add    $0x4,%esp
  0x01cc4460: mov    -0x4(%ebp),%ebx
  0x01cc4463: mov    %ebp,%esp
  0x01cc4465: pop    %ebp
  0x01cc4466: pop    %esi
  0x01cc4467: mov    %ebx,%esp
  0x01cc4469: sub    $0x4,%esp
  0x01cc446c: fstps  (%esp)
  0x01cc446f: movss  (%esp),%xmm0
  0x01cc4474: add    $0x4,%esp
  0x01cc4477: jmp    *%esi
  0x01cc4479: push   $0x552fd97c
  0x01cc447e: call   0x01cc4483
  0x01cc4483: pusha  
  0x01cc4484: call   0x54dedbf0
  0x01cc4489: hlt    
  0x01cc448a: nop    
  0x01cc448b: nop    
  0x01cc448c: int3   
  0x01cc448d: int3   
  0x01cc448e: int3   
  0x01cc448f: int3   

----------------------------------------------------------------------
dreturn  175 dreturn  [0x01cc44a0, 0x01cc47d0]  816 bytes

  0x01cc44a0: fldl   (%esp)
  0x01cc44a3: add    $0x8,%esp
  0x01cc44a6: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc44ae: mov    -0xc(%ecx),%ecx
  0x01cc44b1: mov    0x1a1(%ecx),%bl
  0x01cc44b7: mov    %ebx,%edi
  0x01cc44b9: movb   $0x0,0x1a1(%ecx)
  0x01cc44c0: mov    -0xc(%ebp),%ebx
  0x01cc44c3: mov    0x14(%ebx),%ecx
  0x01cc44c6: test   $0x20,%ecx
  0x01cc44cc: je     0x01cc4682
  0x01cc44d2: mov    %edi,%ecx
  0x01cc44d4: test   $0xff,%cl
  0x01cc44d7: jne    0x01cc4751
  0x01cc44dd: sub    $0x8,%esp
  0x01cc44e0: fstpl  (%esp)
  0x01cc44e3: lea    -0x28(%ebp),%edx
  0x01cc44e6: mov    0x4(%edx),%eax
  0x01cc44e9: test   %eax,%eax
  0x01cc44eb: jne    0x01cc45a7
  0x01cc44f1: fldl   (%esp)
  0x01cc44f4: add    $0x8,%esp
  0x01cc44f7: emms   
  0x01cc44f9: call   0x01cc4503
  0x01cc44fe: jmp    0x01cc4596
  0x01cc4503: lea    0x4(%esp),%eax
  0x01cc4507: cmpl   $0x0,-0x8(%ebp)
  0x01cc450e: je     0x01cc4525
  0x01cc4514: push   $0x55310188
  0x01cc4519: call   0x01cc451e
  0x01cc451e: pusha  
  0x01cc451f: call   0x54dedbf0
  0x01cc4524: hlt    
  0x01cc4525: mov    %esi,-0x1c(%ebp)
  0x01cc4528: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc4530: mov    -0xc(%edi),%edi
  0x01cc4533: push   %edi
  0x01cc4534: mov    %ebp,0x144(%edi)
  0x01cc453a: mov    %eax,0x13c(%edi)
  0x01cc4540: call   0x5505ad80
  0x01cc4545: add    $0x4,%esp
  0x01cc4548: push   %eax
  0x01cc4549: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc4551: mov    -0xc(%eax),%eax
  0x01cc4554: cmp    %eax,%edi
  0x01cc4556: je     0x01cc456d
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc455c: push   $0x55312af0
  0x01cc4561: call   0x01cc4566
  0x01cc4566: pusha  
  0x01cc4567: call   0x54dedbf0
  0x01cc456c: hlt    
  0x01cc456d: pop    %eax
  0x01cc456e: movl   $0x0,0x13c(%edi)
  0x01cc4578: movl   $0x0,0x144(%edi)
  0x01cc4582: cmpl   $0x0,0x4(%edi)
  0x01cc4589: jne    0x01cb0340
  0x01cc458f: mov    -0x1c(%ebp),%esi
  0x01cc4592: mov    -0x18(%ebp),%edi
  0x01cc4595: ret    
  0x01cc4596: push   $0x552fd97c
  0x01cc459b: call   0x01cc45a0
  0x01cc45a0: pusha  
  0x01cc45a1: call   0x54dedbf0
  0x01cc45a6: hlt    
  0x01cc45a7: mov    %esi,-0x1c(%ebp)
  0x01cc45aa: lea    (%edx),%eax
  0x01cc45ac: mov    0x4(%edx),%ecx
  0x01cc45af: movl   $0x0,0x4(%edx)
  0x01cc45b6: mov    (%ecx),%ebx
  0x01cc45b8: and    $0x7,%ebx
  0x01cc45bb: cmp    $0x5,%ebx
  0x01cc45be: je     0x01cc4679
  0x01cc45c4: mov    (%eax),%ebx
  0x01cc45c6: test   %ebx,%ebx
  0x01cc45c8: je     0x01cc4679
  0x01cc45ce: lock cmpxchg %ebx,(%ecx)
  0x01cc45d2: je     0x01cc4679
  0x01cc45d8: mov    %ecx,0x4(%edx)
  0x01cc45db: call   0x01cc45e5
  0x01cc45e0: jmp    0x01cc4679
  0x01cc45e5: push   %edx
  0x01cc45e6: lea    0x8(%esp),%eax
  0x01cc45ea: cmpl   $0x0,-0x8(%ebp)
  0x01cc45f1: je     0x01cc4608
  0x01cc45f7: push   $0x55310188
  0x01cc45fc: call   0x01cc4601
  0x01cc4601: pusha  
  0x01cc4602: call   0x54dedbf0
  0x01cc4607: hlt    
  0x01cc4608: mov    %esi,-0x1c(%ebp)
  0x01cc460b: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc4613: mov    -0xc(%edi),%edi
  0x01cc4616: push   %edi
  0x01cc4617: mov    %ebp,0x144(%edi)
  0x01cc461d: mov    %eax,0x13c(%edi)
  0x01cc4623: call   0x5505ab90
  0x01cc4628: add    $0x8,%esp
  0x01cc462b: push   %eax
  0x01cc462c: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc4634: mov    -0xc(%eax),%eax
  0x01cc4637: cmp    %eax,%edi
  0x01cc4639: je     0x01cc4650
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc463f: push   $0x55312af0
  0x01cc4644: call   0x01cc4649
  0x01cc4649: pusha  
  0x01cc464a: call   0x54dedbf0
  0x01cc464f: hlt    
  0x01cc4650: pop    %eax
  0x01cc4651: movl   $0x0,0x13c(%edi)
  0x01cc465b: movl   $0x0,0x144(%edi)
  0x01cc4665: cmpl   $0x0,0x4(%edi)
  0x01cc466c: jne    0x01cb0340
  0x01cc4672: mov    -0x1c(%ebp),%esi
  0x01cc4675: mov    -0x18(%ebp),%edi
  0x01cc4678: ret    
  0x01cc4679: mov    -0x1c(%ebp),%esi
  0x01cc467c: fldl   (%esp)
  0x01cc467f: add    $0x8,%esp
  0x01cc4682: mov    -0x20(%ebp),%ecx
  0x01cc4685: lea    -0x20(%ebp),%ebx
  0x01cc4688: jmp    0x01cc474d
  0x01cc468d: emms   
  0x01cc468f: call   0x01cc4699
  0x01cc4694: jmp    0x01cc472c
  0x01cc4699: lea    0x4(%esp),%eax
  0x01cc469d: cmpl   $0x0,-0x8(%ebp)
  0x01cc46a4: je     0x01cc46bb
  0x01cc46aa: push   $0x55310188
  0x01cc46af: call   0x01cc46b4
  0x01cc46b4: pusha  
  0x01cc46b5: call   0x54dedbf0
  0x01cc46ba: hlt    
  0x01cc46bb: mov    %esi,-0x1c(%ebp)
  0x01cc46be: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc46c6: mov    -0xc(%edi),%edi
  0x01cc46c9: push   %edi
  0x01cc46ca: mov    %ebp,0x144(%edi)
  0x01cc46d0: mov    %eax,0x13c(%edi)
  0x01cc46d6: call   0x5505ad80
  0x01cc46db: add    $0x4,%esp
  0x01cc46de: push   %eax
  0x01cc46df: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc46e7: mov    -0xc(%eax),%eax
  0x01cc46ea: cmp    %eax,%edi
  0x01cc46ec: je     0x01cc4703
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc46f2: push   $0x55312af0
  0x01cc46f7: call   0x01cc46fc
  0x01cc46fc: pusha  
  0x01cc46fd: call   0x54dedbf0
  0x01cc4702: hlt    
  0x01cc4703: pop    %eax
  0x01cc4704: movl   $0x0,0x13c(%edi)
  0x01cc470e: movl   $0x0,0x144(%edi)
  0x01cc4718: cmpl   $0x0,0x4(%edi)
  0x01cc471f: jne    0x01cb0340
  0x01cc4725: mov    -0x1c(%ebp),%esi
  0x01cc4728: mov    -0x18(%ebp),%edi
  0x01cc472b: ret    
  0x01cc472c: push   $0x552fd97c
  0x01cc4731: call   0x01cc4736
  0x01cc4736: pusha  
  0x01cc4737: call   0x54dedbf0
  0x01cc473c: hlt    
  0x01cc473d: cmpl   $0x0,0x4(%ecx)
  0x01cc4744: jne    0x01cc468d
  0x01cc474a: add    $0x8,%ecx
  0x01cc474d: cmp    %ebx,%ecx
  0x01cc474f: jne    0x01cc473d
  0x01cc4751: cmpb   $0x0,0x55633e5f
  0x01cc4758: je     0x01cc47a0
  0x01cc475e: sub    $0x8,%esp
  0x01cc4761: fstpl  (%esp)
  0x01cc4764: mov    %fs:0x0(,%eiz,1),%ebx
  0x01cc476c: mov    -0xc(%ebx),%ebx
  0x01cc476f: mov    -0xc(%ebp),%ecx
  0x01cc4772: push   %ecx
  0x01cc4773: push   %ebx
  0x01cc4774: cmpl   $0x0,-0x8(%ebp)
  0x01cc477b: je     0x01cc4792
  0x01cc4781: push   $0x55310148
  0x01cc4786: call   0x01cc478b
  0x01cc478b: pusha  
  0x01cc478c: call   0x54dedbf0
  0x01cc4791: hlt    
  0x01cc4792: call   0x55215710
  0x01cc4797: add    $0x8,%esp
  0x01cc479a: fldl   (%esp)
  0x01cc479d: add    $0x8,%esp
  0x01cc47a0: mov    -0x4(%ebp),%ebx
  0x01cc47a3: mov    %ebp,%esp
  0x01cc47a5: pop    %ebp
  0x01cc47a6: pop    %esi
  0x01cc47a7: mov    %ebx,%esp
  0x01cc47a9: sub    $0x8,%esp
  0x01cc47ac: fstpl  (%esp)
  0x01cc47af: movsd  (%esp),%xmm0
  0x01cc47b4: add    $0x8,%esp
  0x01cc47b7: jmp    *%esi
  0x01cc47b9: push   $0x552fd97c
  0x01cc47be: call   0x01cc47c3
  0x01cc47c3: pusha  
  0x01cc47c4: call   0x54dedbf0
  0x01cc47c9: hlt    
  0x01cc47ca: nop    
  0x01cc47cb: nop    
  0x01cc47cc: int3   
  0x01cc47cd: int3   
  0x01cc47ce: int3   
  0x01cc47cf: int3   

----------------------------------------------------------------------
areturn  176 areturn  [0x01cc47e0, 0x01cc4ae0]  768 bytes

  0x01cc47e0: pop    %eax
  0x01cc47e1: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc47e9: mov    -0xc(%ecx),%ecx
  0x01cc47ec: mov    0x1a1(%ecx),%bl
  0x01cc47f2: mov    %ebx,%edi
  0x01cc47f4: movb   $0x0,0x1a1(%ecx)
  0x01cc47fb: mov    -0xc(%ebp),%ebx
  0x01cc47fe: mov    0x14(%ebx),%ecx
  0x01cc4801: test   $0x20,%ecx
  0x01cc4807: je     0x01cc49ae
  0x01cc480d: mov    %edi,%ecx
  0x01cc480f: test   $0xff,%cl
  0x01cc4812: jne    0x01cc4a7d
  0x01cc4818: push   %eax
  0x01cc4819: lea    -0x28(%ebp),%edx
  0x01cc481c: mov    0x4(%edx),%eax
  0x01cc481f: test   %eax,%eax
  0x01cc4821: jne    0x01cc48d8
  0x01cc4827: pop    %eax
  0x01cc4828: emms   
  0x01cc482a: call   0x01cc4834
  0x01cc482f: jmp    0x01cc48c7
  0x01cc4834: lea    0x4(%esp),%eax
  0x01cc4838: cmpl   $0x0,-0x8(%ebp)
  0x01cc483f: je     0x01cc4856
  0x01cc4845: push   $0x55310188
  0x01cc484a: call   0x01cc484f
  0x01cc484f: pusha  
  0x01cc4850: call   0x54dedbf0
  0x01cc4855: hlt    
  0x01cc4856: mov    %esi,-0x1c(%ebp)
  0x01cc4859: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc4861: mov    -0xc(%edi),%edi
  0x01cc4864: push   %edi
  0x01cc4865: mov    %ebp,0x144(%edi)
  0x01cc486b: mov    %eax,0x13c(%edi)
  0x01cc4871: call   0x5505ad80
  0x01cc4876: add    $0x4,%esp
  0x01cc4879: push   %eax
  0x01cc487a: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc4882: mov    -0xc(%eax),%eax
  0x01cc4885: cmp    %eax,%edi
  0x01cc4887: je     0x01cc489e
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc488d: push   $0x55312af0
  0x01cc4892: call   0x01cc4897
  0x01cc4897: pusha  
  0x01cc4898: call   0x54dedbf0
  0x01cc489d: hlt    
  0x01cc489e: pop    %eax
  0x01cc489f: movl   $0x0,0x13c(%edi)
  0x01cc48a9: movl   $0x0,0x144(%edi)
  0x01cc48b3: cmpl   $0x0,0x4(%edi)
  0x01cc48ba: jne    0x01cb0340
  0x01cc48c0: mov    -0x1c(%ebp),%esi
  0x01cc48c3: mov    -0x18(%ebp),%edi
  0x01cc48c6: ret    
  0x01cc48c7: push   $0x552fd97c
  0x01cc48cc: call   0x01cc48d1
  0x01cc48d1: pusha  
  0x01cc48d2: call   0x54dedbf0
  0x01cc48d7: hlt    
  0x01cc48d8: mov    %esi,-0x1c(%ebp)
  0x01cc48db: lea    (%edx),%eax
  0x01cc48dd: mov    0x4(%edx),%ecx
  0x01cc48e0: movl   $0x0,0x4(%edx)
  0x01cc48e7: mov    (%ecx),%ebx
  0x01cc48e9: and    $0x7,%ebx
  0x01cc48ec: cmp    $0x5,%ebx
  0x01cc48ef: je     0x01cc49aa
  0x01cc48f5: mov    (%eax),%ebx
  0x01cc48f7: test   %ebx,%ebx
  0x01cc48f9: je     0x01cc49aa
  0x01cc48ff: lock cmpxchg %ebx,(%ecx)
  0x01cc4903: je     0x01cc49aa
  0x01cc4909: mov    %ecx,0x4(%edx)
  0x01cc490c: call   0x01cc4916
  0x01cc4911: jmp    0x01cc49aa
  0x01cc4916: push   %edx
  0x01cc4917: lea    0x8(%esp),%eax
  0x01cc491b: cmpl   $0x0,-0x8(%ebp)
  0x01cc4922: je     0x01cc4939
  0x01cc4928: push   $0x55310188
  0x01cc492d: call   0x01cc4932
  0x01cc4932: pusha  
  0x01cc4933: call   0x54dedbf0
  0x01cc4938: hlt    
  0x01cc4939: mov    %esi,-0x1c(%ebp)
  0x01cc493c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc4944: mov    -0xc(%edi),%edi
  0x01cc4947: push   %edi
  0x01cc4948: mov    %ebp,0x144(%edi)
  0x01cc494e: mov    %eax,0x13c(%edi)
  0x01cc4954: call   0x5505ab90
  0x01cc4959: add    $0x8,%esp
  0x01cc495c: push   %eax
  0x01cc495d: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc4965: mov    -0xc(%eax),%eax
  0x01cc4968: cmp    %eax,%edi
  0x01cc496a: je     0x01cc4981
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc4970: push   $0x55312af0
  0x01cc4975: call   0x01cc497a
  0x01cc497a: pusha  
  0x01cc497b: call   0x54dedbf0
  0x01cc4980: hlt    
  0x01cc4981: pop    %eax
  0x01cc4982: movl   $0x0,0x13c(%edi)
  0x01cc498c: movl   $0x0,0x144(%edi)
  0x01cc4996: cmpl   $0x0,0x4(%edi)
  0x01cc499d: jne    0x01cb0340
  0x01cc49a3: mov    -0x1c(%ebp),%esi
  0x01cc49a6: mov    -0x18(%ebp),%edi
  0x01cc49a9: ret    
  0x01cc49aa: mov    -0x1c(%ebp),%esi
  0x01cc49ad: pop    %eax
  0x01cc49ae: mov    -0x20(%ebp),%ecx
  0x01cc49b1: lea    -0x20(%ebp),%ebx
  0x01cc49b4: jmp    0x01cc4a79
  0x01cc49b9: emms   
  0x01cc49bb: call   0x01cc49c5
  0x01cc49c0: jmp    0x01cc4a58
  0x01cc49c5: lea    0x4(%esp),%eax
  0x01cc49c9: cmpl   $0x0,-0x8(%ebp)
  0x01cc49d0: je     0x01cc49e7
  0x01cc49d6: push   $0x55310188
  0x01cc49db: call   0x01cc49e0
  0x01cc49e0: pusha  
  0x01cc49e1: call   0x54dedbf0
  0x01cc49e6: hlt    
  0x01cc49e7: mov    %esi,-0x1c(%ebp)
  0x01cc49ea: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc49f2: mov    -0xc(%edi),%edi
  0x01cc49f5: push   %edi
  0x01cc49f6: mov    %ebp,0x144(%edi)
  0x01cc49fc: mov    %eax,0x13c(%edi)
  0x01cc4a02: call   0x5505ad80
  0x01cc4a07: add    $0x4,%esp
  0x01cc4a0a: push   %eax
  0x01cc4a0b: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc4a13: mov    -0xc(%eax),%eax
  0x01cc4a16: cmp    %eax,%edi
  0x01cc4a18: je     0x01cc4a2f
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc4a1e: push   $0x55312af0
  0x01cc4a23: call   0x01cc4a28
  0x01cc4a28: pusha  
  0x01cc4a29: call   0x54dedbf0
  0x01cc4a2e: hlt    
  0x01cc4a2f: pop    %eax
  0x01cc4a30: movl   $0x0,0x13c(%edi)
  0x01cc4a3a: movl   $0x0,0x144(%edi)
  0x01cc4a44: cmpl   $0x0,0x4(%edi)
  0x01cc4a4b: jne    0x01cb0340
  0x01cc4a51: mov    -0x1c(%ebp),%esi
  0x01cc4a54: mov    -0x18(%ebp),%edi
  0x01cc4a57: ret    
  0x01cc4a58: push   $0x552fd97c
  0x01cc4a5d: call   0x01cc4a62
  0x01cc4a62: pusha  
  0x01cc4a63: call   0x54dedbf0
  0x01cc4a68: hlt    
  0x01cc4a69: cmpl   $0x0,0x4(%ecx)
  0x01cc4a70: jne    0x01cc49b9
  0x01cc4a76: add    $0x8,%ecx
  0x01cc4a79: cmp    %ebx,%ecx
  0x01cc4a7b: jne    0x01cc4a69
  0x01cc4a7d: cmpb   $0x0,0x55633e5f
  0x01cc4a84: je     0x01cc4ac2
  0x01cc4a8a: push   %eax
  0x01cc4a8b: mov    %fs:0x0(,%eiz,1),%ebx
  0x01cc4a93: mov    -0xc(%ebx),%ebx
  0x01cc4a96: mov    -0xc(%ebp),%ecx
  0x01cc4a99: push   %ecx
  0x01cc4a9a: push   %ebx
  0x01cc4a9b: cmpl   $0x0,-0x8(%ebp)
  0x01cc4aa2: je     0x01cc4ab9
  0x01cc4aa8: push   $0x55310148
  0x01cc4aad: call   0x01cc4ab2
  0x01cc4ab2: pusha  
  0x01cc4ab3: call   0x54dedbf0
  0x01cc4ab8: hlt    
  0x01cc4ab9: call   0x55215710
  0x01cc4abe: add    $0x8,%esp
  0x01cc4ac1: pop    %eax
  0x01cc4ac2: mov    -0x4(%ebp),%ebx
  0x01cc4ac5: mov    %ebp,%esp
  0x01cc4ac7: pop    %ebp
  0x01cc4ac8: pop    %esi
  0x01cc4ac9: mov    %ebx,%esp
  0x01cc4acb: jmp    *%esi
  0x01cc4acd: push   $0x552fd97c
  0x01cc4ad2: call   0x01cc4ad7
  0x01cc4ad7: pusha  
  0x01cc4ad8: call   0x54dedbf0
  0x01cc4add: hlt    
  0x01cc4ade: nop    
  0x01cc4adf: nop    

----------------------------------------------------------------------
return  177 return  [0x01cc4af0, 0x01cc4e10]  800 bytes

  0x01cc4af0: sub    $0x4,%esp
  0x01cc4af3: fstps  (%esp)
  0x01cc4af6: jmp    0x01cc4b14
  0x01cc4afb: sub    $0x8,%esp
  0x01cc4afe: fstpl  (%esp)
  0x01cc4b01: jmp    0x01cc4b14
  0x01cc4b06: push   %edx
  0x01cc4b07: push   %eax
  0x01cc4b08: jmp    0x01cc4b14
  0x01cc4b0d: push   %eax
  0x01cc4b0e: jmp    0x01cc4b14
  0x01cc4b13: push   %eax
  0x01cc4b14: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc4b1c: mov    -0xc(%ecx),%ecx
  0x01cc4b1f: mov    0x1a1(%ecx),%bl
  0x01cc4b25: mov    %ebx,%edi
  0x01cc4b27: movb   $0x0,0x1a1(%ecx)
  0x01cc4b2e: mov    -0xc(%ebp),%ebx
  0x01cc4b31: mov    0x14(%ebx),%ecx
  0x01cc4b34: test   $0x20,%ecx
  0x01cc4b3a: je     0x01cc4cde
  0x01cc4b40: mov    %edi,%ecx
  0x01cc4b42: test   $0xff,%cl
  0x01cc4b45: jne    0x01cc4dad
  0x01cc4b4b: lea    -0x28(%ebp),%edx
  0x01cc4b4e: mov    0x4(%edx),%eax
  0x01cc4b51: test   %eax,%eax
  0x01cc4b53: jne    0x01cc4c09
  0x01cc4b59: emms   
  0x01cc4b5b: call   0x01cc4b65
  0x01cc4b60: jmp    0x01cc4bf8
  0x01cc4b65: lea    0x4(%esp),%eax
  0x01cc4b69: cmpl   $0x0,-0x8(%ebp)
  0x01cc4b70: je     0x01cc4b87
  0x01cc4b76: push   $0x55310188
  0x01cc4b7b: call   0x01cc4b80
  0x01cc4b80: pusha  
  0x01cc4b81: call   0x54dedbf0
  0x01cc4b86: hlt    
  0x01cc4b87: mov    %esi,-0x1c(%ebp)
  0x01cc4b8a: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc4b92: mov    -0xc(%edi),%edi
  0x01cc4b95: push   %edi
  0x01cc4b96: mov    %ebp,0x144(%edi)
  0x01cc4b9c: mov    %eax,0x13c(%edi)
  0x01cc4ba2: call   0x5505ad80
  0x01cc4ba7: add    $0x4,%esp
  0x01cc4baa: push   %eax
  0x01cc4bab: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc4bb3: mov    -0xc(%eax),%eax
  0x01cc4bb6: cmp    %eax,%edi
  0x01cc4bb8: je     0x01cc4bcf
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc4bbe: push   $0x55312af0
  0x01cc4bc3: call   0x01cc4bc8
  0x01cc4bc8: pusha  
  0x01cc4bc9: call   0x54dedbf0
  0x01cc4bce: hlt    
  0x01cc4bcf: pop    %eax
  0x01cc4bd0: movl   $0x0,0x13c(%edi)
  0x01cc4bda: movl   $0x0,0x144(%edi)
  0x01cc4be4: cmpl   $0x0,0x4(%edi)
  0x01cc4beb: jne    0x01cb0340
  0x01cc4bf1: mov    -0x1c(%ebp),%esi
  0x01cc4bf4: mov    -0x18(%ebp),%edi
  0x01cc4bf7: ret    
  0x01cc4bf8: push   $0x552fd97c
  0x01cc4bfd: call   0x01cc4c02
  0x01cc4c02: pusha  
  0x01cc4c03: call   0x54dedbf0
  0x01cc4c08: hlt    
  0x01cc4c09: mov    %esi,-0x1c(%ebp)
  0x01cc4c0c: lea    (%edx),%eax
  0x01cc4c0e: mov    0x4(%edx),%ecx
  0x01cc4c11: movl   $0x0,0x4(%edx)
  0x01cc4c18: mov    (%ecx),%ebx
  0x01cc4c1a: and    $0x7,%ebx
  0x01cc4c1d: cmp    $0x5,%ebx
  0x01cc4c20: je     0x01cc4cdb
  0x01cc4c26: mov    (%eax),%ebx
  0x01cc4c28: test   %ebx,%ebx
  0x01cc4c2a: je     0x01cc4cdb
  0x01cc4c30: lock cmpxchg %ebx,(%ecx)
  0x01cc4c34: je     0x01cc4cdb
  0x01cc4c3a: mov    %ecx,0x4(%edx)
  0x01cc4c3d: call   0x01cc4c47
  0x01cc4c42: jmp    0x01cc4cdb
  0x01cc4c47: push   %edx
  0x01cc4c48: lea    0x8(%esp),%eax
  0x01cc4c4c: cmpl   $0x0,-0x8(%ebp)
  0x01cc4c53: je     0x01cc4c6a
  0x01cc4c59: push   $0x55310188
  0x01cc4c5e: call   0x01cc4c63
  0x01cc4c63: pusha  
  0x01cc4c64: call   0x54dedbf0
  0x01cc4c69: hlt    
  0x01cc4c6a: mov    %esi,-0x1c(%ebp)
  0x01cc4c6d: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc4c75: mov    -0xc(%edi),%edi
  0x01cc4c78: push   %edi
  0x01cc4c79: mov    %ebp,0x144(%edi)
  0x01cc4c7f: mov    %eax,0x13c(%edi)
  0x01cc4c85: call   0x5505ab90
  0x01cc4c8a: add    $0x8,%esp
  0x01cc4c8d: push   %eax
  0x01cc4c8e: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc4c96: mov    -0xc(%eax),%eax
  0x01cc4c99: cmp    %eax,%edi
  0x01cc4c9b: je     0x01cc4cb2
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc4ca1: push   $0x55312af0
  0x01cc4ca6: call   0x01cc4cab
  0x01cc4cab: pusha  
  0x01cc4cac: call   0x54dedbf0
  0x01cc4cb1: hlt    
  0x01cc4cb2: pop    %eax
  0x01cc4cb3: movl   $0x0,0x13c(%edi)
  0x01cc4cbd: movl   $0x0,0x144(%edi)
  0x01cc4cc7: cmpl   $0x0,0x4(%edi)
  0x01cc4cce: jne    0x01cb0340
  0x01cc4cd4: mov    -0x1c(%ebp),%esi
  0x01cc4cd7: mov    -0x18(%ebp),%edi
  0x01cc4cda: ret    
  0x01cc4cdb: mov    -0x1c(%ebp),%esi
  0x01cc4cde: mov    -0x20(%ebp),%ecx
  0x01cc4ce1: lea    -0x20(%ebp),%ebx
  0x01cc4ce4: jmp    0x01cc4da9
  0x01cc4ce9: emms   
  0x01cc4ceb: call   0x01cc4cf5
  0x01cc4cf0: jmp    0x01cc4d88
  0x01cc4cf5: lea    0x4(%esp),%eax
  0x01cc4cf9: cmpl   $0x0,-0x8(%ebp)
  0x01cc4d00: je     0x01cc4d17
  0x01cc4d06: push   $0x55310188
  0x01cc4d0b: call   0x01cc4d10
  0x01cc4d10: pusha  
  0x01cc4d11: call   0x54dedbf0
  0x01cc4d16: hlt    
  0x01cc4d17: mov    %esi,-0x1c(%ebp)
  0x01cc4d1a: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc4d22: mov    -0xc(%edi),%edi
  0x01cc4d25: push   %edi
  0x01cc4d26: mov    %ebp,0x144(%edi)
  0x01cc4d2c: mov    %eax,0x13c(%edi)
  0x01cc4d32: call   0x5505ad80
  0x01cc4d37: add    $0x4,%esp
  0x01cc4d3a: push   %eax
  0x01cc4d3b: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc4d43: mov    -0xc(%eax),%eax
  0x01cc4d46: cmp    %eax,%edi
  0x01cc4d48: je     0x01cc4d5f
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc4d4e: push   $0x55312af0
  0x01cc4d53: call   0x01cc4d58
  0x01cc4d58: pusha  
  0x01cc4d59: call   0x54dedbf0
  0x01cc4d5e: hlt    
  0x01cc4d5f: pop    %eax
  0x01cc4d60: movl   $0x0,0x13c(%edi)
  0x01cc4d6a: movl   $0x0,0x144(%edi)
  0x01cc4d74: cmpl   $0x0,0x4(%edi)
  0x01cc4d7b: jne    0x01cb0340
  0x01cc4d81: mov    -0x1c(%ebp),%esi
  0x01cc4d84: mov    -0x18(%ebp),%edi
  0x01cc4d87: ret    
  0x01cc4d88: push   $0x552fd97c
  0x01cc4d8d: call   0x01cc4d92
  0x01cc4d92: pusha  
  0x01cc4d93: call   0x54dedbf0
  0x01cc4d98: hlt    
  0x01cc4d99: cmpl   $0x0,0x4(%ecx)
  0x01cc4da0: jne    0x01cc4ce9
  0x01cc4da6: add    $0x8,%ecx
  0x01cc4da9: cmp    %ebx,%ecx
  0x01cc4dab: jne    0x01cc4d99
  0x01cc4dad: cmpb   $0x0,0x55633e5f
  0x01cc4db4: je     0x01cc4df0
  0x01cc4dba: mov    %fs:0x0(,%eiz,1),%ebx
  0x01cc4dc2: mov    -0xc(%ebx),%ebx
  0x01cc4dc5: mov    -0xc(%ebp),%ecx
  0x01cc4dc8: push   %ecx
  0x01cc4dc9: push   %ebx
  0x01cc4dca: cmpl   $0x0,-0x8(%ebp)
  0x01cc4dd1: je     0x01cc4de8
  0x01cc4dd7: push   $0x55310148
  0x01cc4ddc: call   0x01cc4de1
  0x01cc4de1: pusha  
  0x01cc4de2: call   0x54dedbf0
  0x01cc4de7: hlt    
  0x01cc4de8: call   0x55215710
  0x01cc4ded: add    $0x8,%esp
  0x01cc4df0: mov    -0x4(%ebp),%ebx
  0x01cc4df3: mov    %ebp,%esp
  0x01cc4df5: pop    %ebp
  0x01cc4df6: pop    %esi
  0x01cc4df7: mov    %ebx,%esp
  0x01cc4df9: jmp    *%esi
  0x01cc4dfb: push   $0x552fd97c
  0x01cc4e00: call   0x01cc4e05
  0x01cc4e05: pusha  
  0x01cc4e06: call   0x54dedbf0
  0x01cc4e0b: hlt    
  0x01cc4e0c: int3   
  0x01cc4e0d: int3   
  0x01cc4e0e: int3   
  0x01cc4e0f: int3   

----------------------------------------------------------------------
getstatic  178 getstatic  [0x01cc4e20, 0x01cc4ff0]  464 bytes

  0x01cc4e20: sub    $0x4,%esp
  0x01cc4e23: fstps  (%esp)
  0x01cc4e26: jmp    0x01cc4e44
  0x01cc4e2b: sub    $0x8,%esp
  0x01cc4e2e: fstpl  (%esp)
  0x01cc4e31: jmp    0x01cc4e44
  0x01cc4e36: push   %edx
  0x01cc4e37: push   %eax
  0x01cc4e38: jmp    0x01cc4e44
  0x01cc4e3d: push   %eax
  0x01cc4e3e: jmp    0x01cc4e44
  0x01cc4e43: push   %eax
  0x01cc4e44: movzwl 0x1(%esi),%edx
  0x01cc4e48: mov    -0x14(%ebp),%ecx
  0x01cc4e4b: shl    $0x2,%edx
  0x01cc4e4e: mov    0x8(%ecx,%edx,4),%ebx
  0x01cc4e52: shr    $0x10,%ebx
  0x01cc4e55: and    $0xff,%ebx
  0x01cc4e5b: cmp    $0xb2,%ebx
  0x01cc4e61: je     0x01cc4f14
  0x01cc4e67: mov    $0xb2,%ebx
  0x01cc4e6c: call   0x01cc4e76
  0x01cc4e71: jmp    0x01cc4f0a
  0x01cc4e76: push   %ebx
  0x01cc4e77: lea    0x8(%esp),%eax
  0x01cc4e7b: cmpl   $0x0,-0x8(%ebp)
  0x01cc4e82: je     0x01cc4e99
  0x01cc4e88: push   $0x55310188
  0x01cc4e8d: call   0x01cc4e92
  0x01cc4e92: pusha  
  0x01cc4e93: call   0x54dedbf0
  0x01cc4e98: hlt    
  0x01cc4e99: mov    %esi,-0x1c(%ebp)
  0x01cc4e9c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc4ea4: mov    -0xc(%edi),%edi
  0x01cc4ea7: push   %edi
  0x01cc4ea8: mov    %ebp,0x144(%edi)
  0x01cc4eae: mov    %eax,0x13c(%edi)
  0x01cc4eb4: call   0x5505a590
  0x01cc4eb9: add    $0x8,%esp
  0x01cc4ebc: push   %eax
  0x01cc4ebd: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc4ec5: mov    -0xc(%eax),%eax
  0x01cc4ec8: cmp    %eax,%edi
  0x01cc4eca: je     0x01cc4ee1
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc4ed0: push   $0x55312af0
  0x01cc4ed5: call   0x01cc4eda
  0x01cc4eda: pusha  
  0x01cc4edb: call   0x54dedbf0
  0x01cc4ee0: hlt    
  0x01cc4ee1: pop    %eax
  0x01cc4ee2: movl   $0x0,0x13c(%edi)
  0x01cc4eec: movl   $0x0,0x144(%edi)
  0x01cc4ef6: cmpl   $0x0,0x4(%edi)
  0x01cc4efd: jne    0x01cb0340
  0x01cc4f03: mov    -0x1c(%ebp),%esi
  0x01cc4f06: mov    -0x18(%ebp),%edi
  0x01cc4f09: ret    
  0x01cc4f0a: movzwl 0x1(%esi),%edx
  0x01cc4f0e: mov    -0x14(%ebp),%ecx
  0x01cc4f11: shl    $0x2,%edx
  0x01cc4f14: mov    0x10(%ecx,%edx,4),%ebx
  0x01cc4f18: mov    0x14(%ecx,%edx,4),%eax
  0x01cc4f1c: mov    0xc(%ecx,%edx,4),%ecx
  0x01cc4f20: mov    0x3c(%ecx),%ecx
  0x01cc4f23: shr    $0x1c,%eax
  0x01cc4f26: and    $0xf,%eax
  0x01cc4f29: jne    0x01cc4f39
  0x01cc4f2f: movsbl (%ecx,%ebx,1),%eax
  0x01cc4f33: push   %eax
  0x01cc4f34: jmp    0x01cc4fda
  0x01cc4f39: cmp    $0x3,%eax
  0x01cc4f3c: jne    0x01cc4f4b
  0x01cc4f42: mov    (%ecx,%ebx,1),%eax
  0x01cc4f45: push   %eax
  0x01cc4f46: jmp    0x01cc4fda
  0x01cc4f4b: cmp    $0x7,%eax
  0x01cc4f4e: jne    0x01cc4f5d
  0x01cc4f54: mov    (%ecx,%ebx,1),%eax
  0x01cc4f57: push   %eax
  0x01cc4f58: jmp    0x01cc4fda
  0x01cc4f5d: cmp    $0x1,%eax
  0x01cc4f60: jne    0x01cc4f70
  0x01cc4f66: movzwl (%ecx,%ebx,1),%eax
  0x01cc4f6a: push   %eax
  0x01cc4f6b: jmp    0x01cc4fda
  0x01cc4f70: cmp    $0x2,%eax
  0x01cc4f73: jne    0x01cc4f83
  0x01cc4f79: movswl (%ecx,%ebx,1),%eax
  0x01cc4f7d: push   %eax
  0x01cc4f7e: jmp    0x01cc4fda
  0x01cc4f83: cmp    $0x4,%eax
  0x01cc4f86: jne    0x01cc4f9e
  0x01cc4f8c: fildll (%ecx,%ebx,1)
  0x01cc4f8f: sub    $0x8,%esp
  0x01cc4f92: fistpll (%esp)
  0x01cc4f95: pop    %eax
  0x01cc4f96: pop    %edx
  0x01cc4f97: push   %edx
  0x01cc4f98: push   %eax
  0x01cc4f99: jmp    0x01cc4fda
  0x01cc4f9e: cmp    $0x5,%eax
  0x01cc4fa1: jne    0x01cc4fb5
  0x01cc4fa7: flds   (%ecx,%ebx,1)
  0x01cc4faa: sub    $0x4,%esp
  0x01cc4fad: fstps  (%esp)
  0x01cc4fb0: jmp    0x01cc4fda
  0x01cc4fb5: cmp    $0x6,%eax
  0x01cc4fb8: jne    0x01cc4fc9
  0x01cc4fbe: fldl   (%ecx,%ebx,1)
  0x01cc4fc1: sub    $0x8,%esp
  0x01cc4fc4: fstpl  (%esp)
  0x01cc4fc7: jmp    0x01cc4fda
  0x01cc4fc9: push   $0x5531a644
  0x01cc4fce: call   0x01cc4fd3
  0x01cc4fd3: pusha  
  0x01cc4fd4: call   0x54dedbf0
  0x01cc4fd9: hlt    
  0x01cc4fda: movzbl 0x3(%esi),%ebx
  0x01cc4fde: add    $0x3,%esi
  0x01cc4fe1: jmp    *0x55629838(,%ebx,4)
  0x01cc4fe8: int3   
  0x01cc4fe9: int3   
  0x01cc4fea: int3   
  0x01cc4feb: int3   
  0x01cc4fec: int3   
  0x01cc4fed: int3   
  0x01cc4fee: int3   
  0x01cc4fef: int3   

----------------------------------------------------------------------
putstatic  179 putstatic  [0x01cc5000, 0x01cc5210]  528 bytes

  0x01cc5000: sub    $0x4,%esp
  0x01cc5003: fstps  (%esp)
  0x01cc5006: jmp    0x01cc5024
  0x01cc500b: sub    $0x8,%esp
  0x01cc500e: fstpl  (%esp)
  0x01cc5011: jmp    0x01cc5024
  0x01cc5016: push   %edx
  0x01cc5017: push   %eax
  0x01cc5018: jmp    0x01cc5024
  0x01cc501d: push   %eax
  0x01cc501e: jmp    0x01cc5024
  0x01cc5023: push   %eax
  0x01cc5024: movzwl 0x1(%esi),%edx
  0x01cc5028: mov    -0x14(%ebp),%ecx
  0x01cc502b: shl    $0x2,%edx
  0x01cc502e: mov    0x8(%ecx,%edx,4),%ebx
  0x01cc5032: shr    $0x18,%ebx
  0x01cc5035: and    $0xff,%ebx
  0x01cc503b: cmp    $0xb3,%ebx
  0x01cc5041: je     0x01cc50f4
  0x01cc5047: mov    $0xb3,%ebx
  0x01cc504c: call   0x01cc5056
  0x01cc5051: jmp    0x01cc50ea
  0x01cc5056: push   %ebx
  0x01cc5057: lea    0x8(%esp),%eax
  0x01cc505b: cmpl   $0x0,-0x8(%ebp)
  0x01cc5062: je     0x01cc5079
  0x01cc5068: push   $0x55310188
  0x01cc506d: call   0x01cc5072
  0x01cc5072: pusha  
  0x01cc5073: call   0x54dedbf0
  0x01cc5078: hlt    
  0x01cc5079: mov    %esi,-0x1c(%ebp)
  0x01cc507c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc5084: mov    -0xc(%edi),%edi
  0x01cc5087: push   %edi
  0x01cc5088: mov    %ebp,0x144(%edi)
  0x01cc508e: mov    %eax,0x13c(%edi)
  0x01cc5094: call   0x5505a590
  0x01cc5099: add    $0x8,%esp
  0x01cc509c: push   %eax
  0x01cc509d: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc50a5: mov    -0xc(%eax),%eax
  0x01cc50a8: cmp    %eax,%edi
  0x01cc50aa: je     0x01cc50c1
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc50b0: push   $0x55312af0
  0x01cc50b5: call   0x01cc50ba
  0x01cc50ba: pusha  
  0x01cc50bb: call   0x54dedbf0
  0x01cc50c0: hlt    
  0x01cc50c1: pop    %eax
  0x01cc50c2: movl   $0x0,0x13c(%edi)
  0x01cc50cc: movl   $0x0,0x144(%edi)
  0x01cc50d6: cmpl   $0x0,0x4(%edi)
  0x01cc50dd: jne    0x01cb0340
  0x01cc50e3: mov    -0x1c(%ebp),%esi
  0x01cc50e6: mov    -0x18(%ebp),%edi
  0x01cc50e9: ret    
  0x01cc50ea: movzwl 0x1(%esi),%edx
  0x01cc50ee: mov    -0x14(%ebp),%ecx
  0x01cc50f1: shl    $0x2,%edx
  0x01cc50f4: mov    0x10(%ecx,%edx,4),%ebx
  0x01cc50f8: mov    0x14(%ecx,%edx,4),%eax
  0x01cc50fc: mov    0xc(%ecx,%edx,4),%ecx
  0x01cc5100: mov    0x3c(%ecx),%ecx
  0x01cc5103: mov    %eax,%edx
  0x01cc5105: shr    $0x15,%edx
  0x01cc5108: and    $0x1,%edx
  0x01cc510b: shr    $0x1c,%eax
  0x01cc510e: and    $0xf,%eax
  0x01cc5111: jne    0x01cc5120
  0x01cc5117: pop    %eax
  0x01cc5118: mov    %al,(%ecx,%ebx,1)
  0x01cc511b: jmp    0x01cc51ea
  0x01cc5120: cmp    $0x3,%eax
  0x01cc5123: jne    0x01cc5132
  0x01cc5129: pop    %eax
  0x01cc512a: mov    %eax,(%ecx,%ebx,1)
  0x01cc512d: jmp    0x01cc51ea
  0x01cc5132: cmp    $0x7,%eax
  0x01cc5135: jne    0x01cc514f
  0x01cc513b: pop    %eax
  0x01cc513c: mov    %eax,(%ecx,%ebx,1)
  0x01cc513f: shr    $0x9,%ecx
  0x01cc5142: movb   $0x0,0x12c7000(,%ecx,1)
  0x01cc514a: jmp    0x01cc51ea
  0x01cc514f: cmp    $0x1,%eax
  0x01cc5152: jne    0x01cc5162
  0x01cc5158: pop    %eax
  0x01cc5159: mov    %ax,(%ecx,%ebx,1)
  0x01cc515d: jmp    0x01cc51ea
  0x01cc5162: cmp    $0x2,%eax
  0x01cc5165: jne    0x01cc5175
  0x01cc516b: pop    %eax
  0x01cc516c: mov    %ax,(%ecx,%ebx,1)
  0x01cc5170: jmp    0x01cc51ea
  0x01cc5175: cmp    $0x4,%eax
  0x01cc5178: jne    0x01cc51ab
  0x01cc517e: test   %edx,%edx
  0x01cc5180: je     0x01cc519d
  0x01cc5186: pop    %eax
  0x01cc5187: pop    %edx
  0x01cc5188: push   %edx
  0x01cc5189: push   %eax
  0x01cc518a: fildll (%esp)
  0x01cc518d: fistpll (%ecx,%ebx,1)
  0x01cc5190: add    $0x8,%esp
  0x01cc5193: lock addl $0x0,(%esp)
  0x01cc5198: jmp    0x01cc51f7
  0x01cc519d: pop    %eax
  0x01cc519e: pop    %edx
  0x01cc519f: mov    %edx,0x4(%ecx,%ebx,1)
  0x01cc51a3: mov    %eax,(%ecx,%ebx,1)
  0x01cc51a6: jmp    0x01cc51f7
  0x01cc51ab: cmp    $0x5,%eax
  0x01cc51ae: jne    0x01cc51c2
  0x01cc51b4: flds   (%esp)
  0x01cc51b7: add    $0x4,%esp
  0x01cc51ba: fstps  (%ecx,%ebx,1)
  0x01cc51bd: jmp    0x01cc51ea
  0x01cc51c2: cmp    $0x6,%eax
  0x01cc51c5: jne    0x01cc51d9
  0x01cc51cb: fldl   (%esp)
  0x01cc51ce: add    $0x8,%esp
  0x01cc51d1: fstpl  (%ecx,%ebx,1)
  0x01cc51d4: jmp    0x01cc51ea
  0x01cc51d9: push   $0x5531a870
  0x01cc51de: call   0x01cc51e3
  0x01cc51e3: pusha  
  0x01cc51e4: call   0x54dedbf0
  0x01cc51e9: hlt    
  0x01cc51ea: test   %edx,%edx
  0x01cc51ec: je     0x01cc51f7
  0x01cc51f2: lock addl $0x0,(%esp)
  0x01cc51f7: movzbl 0x3(%esi),%ebx
  0x01cc51fb: add    $0x3,%esi
  0x01cc51fe: jmp    *0x55629838(,%ebx,4)
  0x01cc5205: nop    
  0x01cc5206: nop    
  0x01cc5207: nop    
  0x01cc5208: int3   
  0x01cc5209: int3   
  0x01cc520a: int3   
  0x01cc520b: int3   
  0x01cc520c: int3   
  0x01cc520d: int3   
  0x01cc520e: int3   
  0x01cc520f: int3   

----------------------------------------------------------------------
getfield  180 getfield  [0x01cc5220, 0x01cc53f0]  464 bytes

  0x01cc5220: sub    $0x4,%esp
  0x01cc5223: fstps  (%esp)
  0x01cc5226: jmp    0x01cc5244
  0x01cc522b: sub    $0x8,%esp
  0x01cc522e: fstpl  (%esp)
  0x01cc5231: jmp    0x01cc5244
  0x01cc5236: push   %edx
  0x01cc5237: push   %eax
  0x01cc5238: jmp    0x01cc5244
  0x01cc523d: push   %eax
  0x01cc523e: jmp    0x01cc5244
  0x01cc5243: push   %eax
  0x01cc5244: movzwl 0x1(%esi),%edx
  0x01cc5248: mov    -0x14(%ebp),%ecx
  0x01cc524b: shl    $0x2,%edx
  0x01cc524e: mov    0x8(%ecx,%edx,4),%ebx
  0x01cc5252: shr    $0x10,%ebx
  0x01cc5255: and    $0xff,%ebx
  0x01cc525b: cmp    $0xb4,%ebx
  0x01cc5261: je     0x01cc5314
  0x01cc5267: mov    $0xb4,%ebx
  0x01cc526c: call   0x01cc5276
  0x01cc5271: jmp    0x01cc530a
  0x01cc5276: push   %ebx
  0x01cc5277: lea    0x8(%esp),%eax
  0x01cc527b: cmpl   $0x0,-0x8(%ebp)
  0x01cc5282: je     0x01cc5299
  0x01cc5288: push   $0x55310188
  0x01cc528d: call   0x01cc5292
  0x01cc5292: pusha  
  0x01cc5293: call   0x54dedbf0
  0x01cc5298: hlt    
  0x01cc5299: mov    %esi,-0x1c(%ebp)
  0x01cc529c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc52a4: mov    -0xc(%edi),%edi
  0x01cc52a7: push   %edi
  0x01cc52a8: mov    %ebp,0x144(%edi)
  0x01cc52ae: mov    %eax,0x13c(%edi)
  0x01cc52b4: call   0x5505a590
  0x01cc52b9: add    $0x8,%esp
  0x01cc52bc: push   %eax
  0x01cc52bd: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc52c5: mov    -0xc(%eax),%eax
  0x01cc52c8: cmp    %eax,%edi
  0x01cc52ca: je     0x01cc52e1
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc52d0: push   $0x55312af0
  0x01cc52d5: call   0x01cc52da
  0x01cc52da: pusha  
  0x01cc52db: call   0x54dedbf0
  0x01cc52e0: hlt    
  0x01cc52e1: pop    %eax
  0x01cc52e2: movl   $0x0,0x13c(%edi)
  0x01cc52ec: movl   $0x0,0x144(%edi)
  0x01cc52f6: cmpl   $0x0,0x4(%edi)
  0x01cc52fd: jne    0x01cb0340
  0x01cc5303: mov    -0x1c(%ebp),%esi
  0x01cc5306: mov    -0x18(%ebp),%edi
  0x01cc5309: ret    
  0x01cc530a: movzwl 0x1(%esi),%edx
  0x01cc530e: mov    -0x14(%ebp),%ecx
  0x01cc5311: shl    $0x2,%edx
  0x01cc5314: mov    0x10(%ecx,%edx,4),%ebx
  0x01cc5318: mov    0x14(%ecx,%edx,4),%eax
  0x01cc531c: pop    %ecx
  0x01cc531d: cmp    (%ecx),%eax
  0x01cc531f: shr    $0x1c,%eax
  0x01cc5322: and    $0xf,%eax
  0x01cc5325: jne    0x01cc5335
  0x01cc532b: movsbl (%ecx,%ebx,1),%eax
  0x01cc532f: push   %eax
  0x01cc5330: jmp    0x01cc53d6
  0x01cc5335: cmp    $0x3,%eax
  0x01cc5338: jne    0x01cc5347
  0x01cc533e: mov    (%ecx,%ebx,1),%eax
  0x01cc5341: push   %eax
  0x01cc5342: jmp    0x01cc53d6
  0x01cc5347: cmp    $0x7,%eax
  0x01cc534a: jne    0x01cc5359
  0x01cc5350: mov    (%ecx,%ebx,1),%eax
  0x01cc5353: push   %eax
  0x01cc5354: jmp    0x01cc53d6
  0x01cc5359: cmp    $0x1,%eax
  0x01cc535c: jne    0x01cc536c
  0x01cc5362: movzwl (%ecx,%ebx,1),%eax
  0x01cc5366: push   %eax
  0x01cc5367: jmp    0x01cc53d6
  0x01cc536c: cmp    $0x2,%eax
  0x01cc536f: jne    0x01cc537f
  0x01cc5375: movswl (%ecx,%ebx,1),%eax
  0x01cc5379: push   %eax
  0x01cc537a: jmp    0x01cc53d6
  0x01cc537f: cmp    $0x4,%eax
  0x01cc5382: jne    0x01cc539a
  0x01cc5388: fildll (%ecx,%ebx,1)
  0x01cc538b: sub    $0x8,%esp
  0x01cc538e: fistpll (%esp)
  0x01cc5391: pop    %eax
  0x01cc5392: pop    %edx
  0x01cc5393: push   %edx
  0x01cc5394: push   %eax
  0x01cc5395: jmp    0x01cc53d6
  0x01cc539a: cmp    $0x5,%eax
  0x01cc539d: jne    0x01cc53b1
  0x01cc53a3: flds   (%ecx,%ebx,1)
  0x01cc53a6: sub    $0x4,%esp
  0x01cc53a9: fstps  (%esp)
  0x01cc53ac: jmp    0x01cc53d6
  0x01cc53b1: cmp    $0x6,%eax
  0x01cc53b4: jne    0x01cc53c5
  0x01cc53ba: fldl   (%ecx,%ebx,1)
  0x01cc53bd: sub    $0x8,%esp
  0x01cc53c0: fstpl  (%esp)
  0x01cc53c3: jmp    0x01cc53d6
  0x01cc53c5: push   $0x5531a644
  0x01cc53ca: call   0x01cc53cf
  0x01cc53cf: pusha  
  0x01cc53d0: call   0x54dedbf0
  0x01cc53d5: hlt    
  0x01cc53d6: movzbl 0x3(%esi),%ebx
  0x01cc53da: add    $0x3,%esi
  0x01cc53dd: jmp    *0x55629838(,%ebx,4)
  0x01cc53e4: int3   
  0x01cc53e5: int3   
  0x01cc53e6: int3   
  0x01cc53e7: int3   
  0x01cc53e8: int3   
  0x01cc53e9: int3   
  0x01cc53ea: int3   
  0x01cc53eb: int3   
  0x01cc53ec: int3   
  0x01cc53ed: int3   
  0x01cc53ee: int3   
  0x01cc53ef: int3   

----------------------------------------------------------------------
putfield  181 putfield  [0x01cc5400, 0x01cc5620]  544 bytes

  0x01cc5400: sub    $0x4,%esp
  0x01cc5403: fstps  (%esp)
  0x01cc5406: jmp    0x01cc5424
  0x01cc540b: sub    $0x8,%esp
  0x01cc540e: fstpl  (%esp)
  0x01cc5411: jmp    0x01cc5424
  0x01cc5416: push   %edx
  0x01cc5417: push   %eax
  0x01cc5418: jmp    0x01cc5424
  0x01cc541d: push   %eax
  0x01cc541e: jmp    0x01cc5424
  0x01cc5423: push   %eax
  0x01cc5424: movzwl 0x1(%esi),%edx
  0x01cc5428: mov    -0x14(%ebp),%ecx
  0x01cc542b: shl    $0x2,%edx
  0x01cc542e: mov    0x8(%ecx,%edx,4),%ebx
  0x01cc5432: shr    $0x18,%ebx
  0x01cc5435: and    $0xff,%ebx
  0x01cc543b: cmp    $0xb5,%ebx
  0x01cc5441: je     0x01cc54f4
  0x01cc5447: mov    $0xb5,%ebx
  0x01cc544c: call   0x01cc5456
  0x01cc5451: jmp    0x01cc54ea
  0x01cc5456: push   %ebx
  0x01cc5457: lea    0x8(%esp),%eax
  0x01cc545b: cmpl   $0x0,-0x8(%ebp)
  0x01cc5462: je     0x01cc5479
  0x01cc5468: push   $0x55310188
  0x01cc546d: call   0x01cc5472
  0x01cc5472: pusha  
  0x01cc5473: call   0x54dedbf0
  0x01cc5478: hlt    
  0x01cc5479: mov    %esi,-0x1c(%ebp)
  0x01cc547c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc5484: mov    -0xc(%edi),%edi
  0x01cc5487: push   %edi
  0x01cc5488: mov    %ebp,0x144(%edi)
  0x01cc548e: mov    %eax,0x13c(%edi)
  0x01cc5494: call   0x5505a590
  0x01cc5499: add    $0x8,%esp
  0x01cc549c: push   %eax
  0x01cc549d: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc54a5: mov    -0xc(%eax),%eax
  0x01cc54a8: cmp    %eax,%edi
  0x01cc54aa: je     0x01cc54c1
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc54b0: push   $0x55312af0
  0x01cc54b5: call   0x01cc54ba
  0x01cc54ba: pusha  
  0x01cc54bb: call   0x54dedbf0
  0x01cc54c0: hlt    
  0x01cc54c1: pop    %eax
  0x01cc54c2: movl   $0x0,0x13c(%edi)
  0x01cc54cc: movl   $0x0,0x144(%edi)
  0x01cc54d6: cmpl   $0x0,0x4(%edi)
  0x01cc54dd: jne    0x01cb0340
  0x01cc54e3: mov    -0x1c(%ebp),%esi
  0x01cc54e6: mov    -0x18(%ebp),%edi
  0x01cc54e9: ret    
  0x01cc54ea: movzwl 0x1(%esi),%edx
  0x01cc54ee: mov    -0x14(%ebp),%ecx
  0x01cc54f1: shl    $0x2,%edx
  0x01cc54f4: mov    0x10(%ecx,%edx,4),%ebx
  0x01cc54f8: mov    0x14(%ecx,%edx,4),%eax
  0x01cc54fc: mov    %eax,%edx
  0x01cc54fe: shr    $0x15,%edx
  0x01cc5501: and    $0x1,%edx
  0x01cc5504: shr    $0x1c,%eax
  0x01cc5507: and    $0xf,%eax
  0x01cc550a: jne    0x01cc551c
  0x01cc5510: pop    %eax
  0x01cc5511: pop    %ecx
  0x01cc5512: cmp    (%ecx),%eax
  0x01cc5514: mov    %al,(%ecx,%ebx,1)
  0x01cc5517: jmp    0x01cc55fe
  0x01cc551c: cmp    $0x3,%eax
  0x01cc551f: jne    0x01cc5531
  0x01cc5525: pop    %eax
  0x01cc5526: pop    %ecx
  0x01cc5527: cmp    (%ecx),%eax
  0x01cc5529: mov    %eax,(%ecx,%ebx,1)
  0x01cc552c: jmp    0x01cc55fe
  0x01cc5531: cmp    $0x7,%eax
  0x01cc5534: jne    0x01cc5551
  0x01cc553a: pop    %eax
  0x01cc553b: pop    %ecx
  0x01cc553c: cmp    (%ecx),%eax
  0x01cc553e: mov    %eax,(%ecx,%ebx,1)
  0x01cc5541: shr    $0x9,%ecx
  0x01cc5544: movb   $0x0,0x12c7000(,%ecx,1)
  0x01cc554c: jmp    0x01cc55fe
  0x01cc5551: cmp    $0x1,%eax
  0x01cc5554: jne    0x01cc5567
  0x01cc555a: pop    %eax
  0x01cc555b: pop    %ecx
  0x01cc555c: cmp    (%ecx),%eax
  0x01cc555e: mov    %ax,(%ecx,%ebx,1)
  0x01cc5562: jmp    0x01cc55fe
  0x01cc5567: cmp    $0x2,%eax
  0x01cc556a: jne    0x01cc557d
  0x01cc5570: pop    %eax
  0x01cc5571: pop    %ecx
  0x01cc5572: cmp    (%ecx),%eax
  0x01cc5574: mov    %ax,(%ecx,%ebx,1)
  0x01cc5578: jmp    0x01cc55fe
  0x01cc557d: cmp    $0x4,%eax
  0x01cc5580: jne    0x01cc55b9
  0x01cc5586: test   %edx,%edx
  0x01cc5588: je     0x01cc55a8
  0x01cc558e: pop    %eax
  0x01cc558f: pop    %edx
  0x01cc5590: pop    %ecx
  0x01cc5591: cmp    (%ecx),%eax
  0x01cc5593: push   %edx
  0x01cc5594: push   %eax
  0x01cc5595: fildll (%esp)
  0x01cc5598: fistpll (%ecx,%ebx,1)
  0x01cc559b: add    $0x8,%esp
  0x01cc559e: lock addl $0x0,(%esp)
  0x01cc55a3: jmp    0x01cc560b
  0x01cc55a8: pop    %eax
  0x01cc55a9: pop    %edx
  0x01cc55aa: pop    %ecx
  0x01cc55ab: cmp    (%ecx),%eax
  0x01cc55ad: mov    %edx,0x4(%ecx,%ebx,1)
  0x01cc55b1: mov    %eax,(%ecx,%ebx,1)
  0x01cc55b4: jmp    0x01cc560b
  0x01cc55b9: cmp    $0x5,%eax
  0x01cc55bc: jne    0x01cc55d3
  0x01cc55c2: flds   (%esp)
  0x01cc55c5: add    $0x4,%esp
  0x01cc55c8: pop    %ecx
  0x01cc55c9: cmp    (%ecx),%eax
  0x01cc55cb: fstps  (%ecx,%ebx,1)
  0x01cc55ce: jmp    0x01cc55fe
  0x01cc55d3: cmp    $0x6,%eax
  0x01cc55d6: jne    0x01cc55ed
  0x01cc55dc: fldl   (%esp)
  0x01cc55df: add    $0x8,%esp
  0x01cc55e2: pop    %ecx
  0x01cc55e3: cmp    (%ecx),%eax
  0x01cc55e5: fstpl  (%ecx,%ebx,1)
  0x01cc55e8: jmp    0x01cc55fe
  0x01cc55ed: push   $0x5531a870
  0x01cc55f2: call   0x01cc55f7
  0x01cc55f7: pusha  
  0x01cc55f8: call   0x54dedbf0
  0x01cc55fd: hlt    
  0x01cc55fe: test   %edx,%edx
  0x01cc5600: je     0x01cc560b
  0x01cc5606: lock addl $0x0,(%esp)
  0x01cc560b: movzbl 0x3(%esi),%ebx
  0x01cc560f: add    $0x3,%esi
  0x01cc5612: jmp    *0x55629838(,%ebx,4)
  0x01cc5619: nop    
  0x01cc561a: nop    
  0x01cc561b: nop    
  0x01cc561c: int3   
  0x01cc561d: int3   
  0x01cc561e: int3   
  0x01cc561f: int3   

----------------------------------------------------------------------
invokevirtual  182 invokevirtual  [0x01cc5630, 0x01cc5790]  352 bytes

  0x01cc5630: sub    $0x4,%esp
  0x01cc5633: fstps  (%esp)
  0x01cc5636: jmp    0x01cc5654
  0x01cc563b: sub    $0x8,%esp
  0x01cc563e: fstpl  (%esp)
  0x01cc5641: jmp    0x01cc5654
  0x01cc5646: push   %edx
  0x01cc5647: push   %eax
  0x01cc5648: jmp    0x01cc5654
  0x01cc564d: push   %eax
  0x01cc564e: jmp    0x01cc5654
  0x01cc5653: push   %eax
  0x01cc5654: mov    %esi,-0x1c(%ebp)
  0x01cc5657: movzwl 0x1(%esi),%edx
  0x01cc565b: mov    -0x14(%ebp),%ecx
  0x01cc565e: shl    $0x2,%edx
  0x01cc5661: mov    0x8(%ecx,%edx,4),%ebx
  0x01cc5665: shr    $0x18,%ebx
  0x01cc5668: and    $0xff,%ebx
  0x01cc566e: cmp    $0xb6,%ebx
  0x01cc5674: je     0x01cc5727
  0x01cc567a: mov    $0xb6,%ebx
  0x01cc567f: call   0x01cc5689
  0x01cc5684: jmp    0x01cc571d
  0x01cc5689: push   %ebx
  0x01cc568a: lea    0x8(%esp),%eax
  0x01cc568e: cmpl   $0x0,-0x8(%ebp)
  0x01cc5695: je     0x01cc56ac
  0x01cc569b: push   $0x55310188
  0x01cc56a0: call   0x01cc56a5
  0x01cc56a5: pusha  
  0x01cc56a6: call   0x54dedbf0
  0x01cc56ab: hlt    
  0x01cc56ac: mov    %esi,-0x1c(%ebp)
  0x01cc56af: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc56b7: mov    -0xc(%edi),%edi
  0x01cc56ba: push   %edi
  0x01cc56bb: mov    %ebp,0x144(%edi)
  0x01cc56c1: mov    %eax,0x13c(%edi)
  0x01cc56c7: call   0x5505b0b0
  0x01cc56cc: add    $0x8,%esp
  0x01cc56cf: push   %eax
  0x01cc56d0: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc56d8: mov    -0xc(%eax),%eax
  0x01cc56db: cmp    %eax,%edi
  0x01cc56dd: je     0x01cc56f4
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc56e3: push   $0x55312af0
  0x01cc56e8: call   0x01cc56ed
  0x01cc56ed: pusha  
  0x01cc56ee: call   0x54dedbf0
  0x01cc56f3: hlt    
  0x01cc56f4: pop    %eax
  0x01cc56f5: movl   $0x0,0x13c(%edi)
  0x01cc56ff: movl   $0x0,0x144(%edi)
  0x01cc5709: cmpl   $0x0,0x4(%edi)
  0x01cc5710: jne    0x01cb0340
  0x01cc5716: mov    -0x1c(%ebp),%esi
  0x01cc5719: mov    -0x18(%ebp),%edi
  0x01cc571c: ret    
  0x01cc571d: movzwl 0x1(%esi),%edx
  0x01cc5721: mov    -0x14(%ebp),%ecx
  0x01cc5724: shl    $0x2,%edx
  0x01cc5727: mov    0x10(%ecx,%edx,4),%ebx
  0x01cc572b: mov    0x14(%ecx,%edx,4),%edx
  0x01cc572f: mov    %edx,%ecx
  0x01cc5731: and    $0xff,%ecx
  0x01cc5737: mov    -0x4(%esp,%ecx,4),%ecx
  0x01cc573b: mov    %edx,%esi
  0x01cc573d: shr    $0x1c,%edx
  0x01cc5740: mov    0x556277cc(,%edx,4),%edx
  0x01cc5747: push   %edx
  0x01cc5748: mov    %esi,%edx
  0x01cc574a: mov    -0x1c(%ebp),%esi
  0x01cc574d: mov    %edx,%eax
  0x01cc574f: and    $0x100000,%eax
  0x01cc5755: je     0x01cc5767
  0x01cc575b: cmp    (%ecx),%eax
  0x01cc575d: lea    0x4(%esp),%esi
  0x01cc5761: mov    %esi,-0x8(%ebp)
  0x01cc5764: jmp    *0x34(%ebx)
  0x01cc5767: mov    0x4(%ecx),%eax
  0x01cc576a: mov    0x108(%eax,%ebx,4),%ebx
  0x01cc5771: lea    0x4(%esp),%esi
  0x01cc5775: mov    %esi,-0x8(%ebp)
  0x01cc5778: jmp    *0x34(%ebx)
  0x01cc577b: push   $0x552fd97c
  0x01cc5780: call   0x01cc5785
  0x01cc5785: pusha  
  0x01cc5786: call   0x54dedbf0
  0x01cc578b: hlt    
  0x01cc578c: int3   
  0x01cc578d: int3   
  0x01cc578e: int3   
  0x01cc578f: int3   

----------------------------------------------------------------------
invokespecial  183 invokespecial  [0x01cc57a0, 0x01cc58e0]  320 bytes

  0x01cc57a0: sub    $0x4,%esp
  0x01cc57a3: fstps  (%esp)
  0x01cc57a6: jmp    0x01cc57c4
  0x01cc57ab: sub    $0x8,%esp
  0x01cc57ae: fstpl  (%esp)
  0x01cc57b1: jmp    0x01cc57c4
  0x01cc57b6: push   %edx
  0x01cc57b7: push   %eax
  0x01cc57b8: jmp    0x01cc57c4
  0x01cc57bd: push   %eax
  0x01cc57be: jmp    0x01cc57c4
  0x01cc57c3: push   %eax
  0x01cc57c4: mov    %esi,-0x1c(%ebp)
  0x01cc57c7: movzwl 0x1(%esi),%edx
  0x01cc57cb: mov    -0x14(%ebp),%ecx
  0x01cc57ce: shl    $0x2,%edx
  0x01cc57d1: mov    0x8(%ecx,%edx,4),%ebx
  0x01cc57d5: shr    $0x10,%ebx
  0x01cc57d8: and    $0xff,%ebx
  0x01cc57de: cmp    $0xb7,%ebx
  0x01cc57e4: je     0x01cc5897
  0x01cc57ea: mov    $0xb7,%ebx
  0x01cc57ef: call   0x01cc57f9
  0x01cc57f4: jmp    0x01cc588d
  0x01cc57f9: push   %ebx
  0x01cc57fa: lea    0x8(%esp),%eax
  0x01cc57fe: cmpl   $0x0,-0x8(%ebp)
  0x01cc5805: je     0x01cc581c
  0x01cc580b: push   $0x55310188
  0x01cc5810: call   0x01cc5815
  0x01cc5815: pusha  
  0x01cc5816: call   0x54dedbf0
  0x01cc581b: hlt    
  0x01cc581c: mov    %esi,-0x1c(%ebp)
  0x01cc581f: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc5827: mov    -0xc(%edi),%edi
  0x01cc582a: push   %edi
  0x01cc582b: mov    %ebp,0x144(%edi)
  0x01cc5831: mov    %eax,0x13c(%edi)
  0x01cc5837: call   0x5505b0b0
  0x01cc583c: add    $0x8,%esp
  0x01cc583f: push   %eax
  0x01cc5840: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc5848: mov    -0xc(%eax),%eax
  0x01cc584b: cmp    %eax,%edi
  0x01cc584d: je     0x01cc5864
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc5853: push   $0x55312af0
  0x01cc5858: call   0x01cc585d
  0x01cc585d: pusha  
  0x01cc585e: call   0x54dedbf0
  0x01cc5863: hlt    
  0x01cc5864: pop    %eax
  0x01cc5865: movl   $0x0,0x13c(%edi)
  0x01cc586f: movl   $0x0,0x144(%edi)
  0x01cc5879: cmpl   $0x0,0x4(%edi)
  0x01cc5880: jne    0x01cb0340
  0x01cc5886: mov    -0x1c(%ebp),%esi
  0x01cc5889: mov    -0x18(%ebp),%edi
  0x01cc588c: ret    
  0x01cc588d: movzwl 0x1(%esi),%edx
  0x01cc5891: mov    -0x14(%ebp),%ecx
  0x01cc5894: shl    $0x2,%edx
  0x01cc5897: mov    0xc(%ecx,%edx,4),%ebx
  0x01cc589b: mov    0x14(%ecx,%edx,4),%edx
  0x01cc589f: mov    %edx,%ecx
  0x01cc58a1: and    $0xff,%ecx
  0x01cc58a7: mov    -0x4(%esp,%ecx,4),%ecx
  0x01cc58ab: shr    $0x1c,%edx
  0x01cc58ae: mov    0x556277cc(,%edx,4),%edx
  0x01cc58b5: push   %edx
  0x01cc58b6: cmp    (%ecx),%eax
  0x01cc58b8: lea    0x4(%esp),%esi
  0x01cc58bc: mov    %esi,-0x8(%ebp)
  0x01cc58bf: jmp    *0x34(%ebx)
  0x01cc58c2: push   $0x552fd97c
  0x01cc58c7: call   0x01cc58cc
  0x01cc58cc: pusha  
  0x01cc58cd: call   0x54dedbf0
  0x01cc58d2: hlt    
  0x01cc58d3: nop    
  0x01cc58d4: int3   
  0x01cc58d5: int3   
  0x01cc58d6: int3   
  0x01cc58d7: int3   
  0x01cc58d8: int3   
  0x01cc58d9: int3   
  0x01cc58da: int3   
  0x01cc58db: int3   
  0x01cc58dc: int3   
  0x01cc58dd: int3   
  0x01cc58de: int3   
  0x01cc58df: int3   

----------------------------------------------------------------------
invokestatic  184 invokestatic  [0x01cc58f0, 0x01cc5a20]  304 bytes

  0x01cc58f0: sub    $0x4,%esp
  0x01cc58f3: fstps  (%esp)
  0x01cc58f6: jmp    0x01cc5914
  0x01cc58fb: sub    $0x8,%esp
  0x01cc58fe: fstpl  (%esp)
  0x01cc5901: jmp    0x01cc5914
  0x01cc5906: push   %edx
  0x01cc5907: push   %eax
  0x01cc5908: jmp    0x01cc5914
  0x01cc590d: push   %eax
  0x01cc590e: jmp    0x01cc5914
  0x01cc5913: push   %eax
  0x01cc5914: mov    %esi,-0x1c(%ebp)
  0x01cc5917: movzwl 0x1(%esi),%edx
  0x01cc591b: mov    -0x14(%ebp),%ecx
  0x01cc591e: shl    $0x2,%edx
  0x01cc5921: mov    0x8(%ecx,%edx,4),%ebx
  0x01cc5925: shr    $0x10,%ebx
  0x01cc5928: and    $0xff,%ebx
  0x01cc592e: cmp    $0xb8,%ebx
  0x01cc5934: je     0x01cc59e7
  0x01cc593a: mov    $0xb8,%ebx
  0x01cc593f: call   0x01cc5949
  0x01cc5944: jmp    0x01cc59dd
  0x01cc5949: push   %ebx
  0x01cc594a: lea    0x8(%esp),%eax
  0x01cc594e: cmpl   $0x0,-0x8(%ebp)
  0x01cc5955: je     0x01cc596c
  0x01cc595b: push   $0x55310188
  0x01cc5960: call   0x01cc5965
  0x01cc5965: pusha  
  0x01cc5966: call   0x54dedbf0
  0x01cc596b: hlt    
  0x01cc596c: mov    %esi,-0x1c(%ebp)
  0x01cc596f: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc5977: mov    -0xc(%edi),%edi
  0x01cc597a: push   %edi
  0x01cc597b: mov    %ebp,0x144(%edi)
  0x01cc5981: mov    %eax,0x13c(%edi)
  0x01cc5987: call   0x5505b0b0
  0x01cc598c: add    $0x8,%esp
  0x01cc598f: push   %eax
  0x01cc5990: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc5998: mov    -0xc(%eax),%eax
  0x01cc599b: cmp    %eax,%edi
  0x01cc599d: je     0x01cc59b4
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc59a3: push   $0x55312af0
  0x01cc59a8: call   0x01cc59ad
  0x01cc59ad: pusha  
  0x01cc59ae: call   0x54dedbf0
  0x01cc59b3: hlt    
  0x01cc59b4: pop    %eax
  0x01cc59b5: movl   $0x0,0x13c(%edi)
  0x01cc59bf: movl   $0x0,0x144(%edi)
  0x01cc59c9: cmpl   $0x0,0x4(%edi)
  0x01cc59d0: jne    0x01cb0340
  0x01cc59d6: mov    -0x1c(%ebp),%esi
  0x01cc59d9: mov    -0x18(%ebp),%edi
  0x01cc59dc: ret    
  0x01cc59dd: movzwl 0x1(%esi),%edx
  0x01cc59e1: mov    -0x14(%ebp),%ecx
  0x01cc59e4: shl    $0x2,%edx
  0x01cc59e7: mov    0xc(%ecx,%edx,4),%ebx
  0x01cc59eb: mov    0x14(%ecx,%edx,4),%edx
  0x01cc59ef: shr    $0x1c,%edx
  0x01cc59f2: mov    0x556277cc(,%edx,4),%edx
  0x01cc59f9: push   %edx
  0x01cc59fa: lea    0x4(%esp),%esi
  0x01cc59fe: mov    %esi,-0x8(%ebp)
  0x01cc5a01: jmp    *0x34(%ebx)
  0x01cc5a04: push   $0x552fd97c
  0x01cc5a09: call   0x01cc5a0e
  0x01cc5a0e: pusha  
  0x01cc5a0f: call   0x54dedbf0
  0x01cc5a14: hlt    
  0x01cc5a15: nop    
  0x01cc5a16: nop    
  0x01cc5a17: nop    
  0x01cc5a18: int3   
  0x01cc5a19: int3   
  0x01cc5a1a: int3   
  0x01cc5a1b: int3   
  0x01cc5a1c: int3   
  0x01cc5a1d: int3   
  0x01cc5a1e: int3   
  0x01cc5a1f: int3   

----------------------------------------------------------------------
invokeinterface  185 invokeinterface  [0x01cc5a30, 0x01cc5d70]  832 bytes

  0x01cc5a30: sub    $0x4,%esp
  0x01cc5a33: fstps  (%esp)
  0x01cc5a36: jmp    0x01cc5a54
  0x01cc5a3b: sub    $0x8,%esp
  0x01cc5a3e: fstpl  (%esp)
  0x01cc5a41: jmp    0x01cc5a54
  0x01cc5a46: push   %edx
  0x01cc5a47: push   %eax
  0x01cc5a48: jmp    0x01cc5a54
  0x01cc5a4d: push   %eax
  0x01cc5a4e: jmp    0x01cc5a54
  0x01cc5a53: push   %eax
  0x01cc5a54: mov    %esi,-0x1c(%ebp)
  0x01cc5a57: movzwl 0x1(%esi),%edx
  0x01cc5a5b: mov    -0x14(%ebp),%ecx
  0x01cc5a5e: shl    $0x2,%edx
  0x01cc5a61: mov    0x8(%ecx,%edx,4),%ebx
  0x01cc5a65: shr    $0x10,%ebx
  0x01cc5a68: and    $0xff,%ebx
  0x01cc5a6e: cmp    $0xb9,%ebx
  0x01cc5a74: je     0x01cc5b27
  0x01cc5a7a: mov    $0xb9,%ebx
  0x01cc5a7f: call   0x01cc5a89
  0x01cc5a84: jmp    0x01cc5b1d
  0x01cc5a89: push   %ebx
  0x01cc5a8a: lea    0x8(%esp),%eax
  0x01cc5a8e: cmpl   $0x0,-0x8(%ebp)
  0x01cc5a95: je     0x01cc5aac
  0x01cc5a9b: push   $0x55310188
  0x01cc5aa0: call   0x01cc5aa5
  0x01cc5aa5: pusha  
  0x01cc5aa6: call   0x54dedbf0
  0x01cc5aab: hlt    
  0x01cc5aac: mov    %esi,-0x1c(%ebp)
  0x01cc5aaf: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc5ab7: mov    -0xc(%edi),%edi
  0x01cc5aba: push   %edi
  0x01cc5abb: mov    %ebp,0x144(%edi)
  0x01cc5ac1: mov    %eax,0x13c(%edi)
  0x01cc5ac7: call   0x5505b0b0
  0x01cc5acc: add    $0x8,%esp
  0x01cc5acf: push   %eax
  0x01cc5ad0: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc5ad8: mov    -0xc(%eax),%eax
  0x01cc5adb: cmp    %eax,%edi
  0x01cc5add: je     0x01cc5af4
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc5ae3: push   $0x55312af0
  0x01cc5ae8: call   0x01cc5aed
  0x01cc5aed: pusha  
  0x01cc5aee: call   0x54dedbf0
  0x01cc5af3: hlt    
  0x01cc5af4: pop    %eax
  0x01cc5af5: movl   $0x0,0x13c(%edi)
  0x01cc5aff: movl   $0x0,0x144(%edi)
  0x01cc5b09: cmpl   $0x0,0x4(%edi)
  0x01cc5b10: jne    0x01cb0340
  0x01cc5b16: mov    -0x1c(%ebp),%esi
  0x01cc5b19: mov    -0x18(%ebp),%edi
  0x01cc5b1c: ret    
  0x01cc5b1d: movzwl 0x1(%esi),%edx
  0x01cc5b21: mov    -0x14(%ebp),%ecx
  0x01cc5b24: shl    $0x2,%edx
  0x01cc5b27: mov    0xc(%ecx,%edx,4),%eax
  0x01cc5b2b: mov    0x10(%ecx,%edx,4),%ebx
  0x01cc5b2f: mov    0x14(%ecx,%edx,4),%edx
  0x01cc5b33: mov    %edx,%ecx
  0x01cc5b35: and    $0xff,%ecx
  0x01cc5b3b: mov    -0x4(%esp,%ecx,4),%ecx
  0x01cc5b3f: mov    %edx,%esi
  0x01cc5b41: shr    $0x1c,%edx
  0x01cc5b44: mov    0x556277f0(,%edx,4),%edx
  0x01cc5b4b: push   %edx
  0x01cc5b4c: mov    %esi,%edx
  0x01cc5b4e: mov    -0x1c(%ebp),%esi
  0x01cc5b51: mov    %edx,%edi
  0x01cc5b53: and    $0x800000,%edi
  0x01cc5b59: je     0x01cc5b8d
  0x01cc5b5f: mov    %edx,%eax
  0x01cc5b61: and    $0x100000,%eax
  0x01cc5b67: je     0x01cc5b79
  0x01cc5b6d: cmp    (%ecx),%eax
  0x01cc5b6f: lea    0x4(%esp),%esi
  0x01cc5b73: mov    %esi,-0x8(%ebp)
  0x01cc5b76: jmp    *0x34(%ebx)
  0x01cc5b79: mov    0x4(%ecx),%eax
  0x01cc5b7c: mov    0x108(%eax,%ebx,4),%ebx
  0x01cc5b83: lea    0x4(%esp),%esi
  0x01cc5b87: mov    %esi,-0x8(%ebp)
  0x01cc5b8a: jmp    *0x34(%ebx)
  0x01cc5b8d: mov    -0x18(%ebp),%edi
  0x01cc5b90: mov    0x4(%ecx),%edx
  0x01cc5b93: mov    0xb0(%edx),%esi
  0x01cc5b99: lea    0x108(%edx,%esi,4),%esi
  0x01cc5ba0: add    $0x7,%esi
  0x01cc5ba3: and    $0xfffffff8,%esi
  0x01cc5ba6: lea    (%edx,%ebx,4),%edx
  0x01cc5ba9: mov    (%esi),%ebx
  0x01cc5bab: cmp    %ebx,%eax
  0x01cc5bad: je     0x01cc5bc0
  0x01cc5baf: test   %ebx,%ebx
  0x01cc5bb1: je     0x01cc5c9e
  0x01cc5bb7: add    $0x8,%esi
  0x01cc5bba: mov    (%esi),%ebx
  0x01cc5bbc: cmp    %ebx,%eax
  0x01cc5bbe: jne    0x01cc5baf
  0x01cc5bc0: mov    0x4(%esi),%esi
  0x01cc5bc3: mov    (%edx,%esi,1),%ebx
  0x01cc5bc6: test   %ebx,%ebx
  0x01cc5bc8: je     0x01cc5be9
  0x01cc5bce: lea    0x4(%esp),%esi
  0x01cc5bd2: mov    %esi,-0x8(%ebp)
  0x01cc5bd5: jmp    *0x34(%ebx)
  0x01cc5bd8: push   $0x552fd97c
  0x01cc5bdd: call   0x01cc5be2
  0x01cc5be2: pusha  
  0x01cc5be3: call   0x54dedbf0
  0x01cc5be8: hlt    
  0x01cc5be9: pop    %ebx
  0x01cc5bea: mov    -0x1c(%ebp),%esi
  0x01cc5bed: mov    -0x18(%ebp),%edi
  0x01cc5bf0: call   0x01cc5bfa
  0x01cc5bf5: jmp    0x01cc5c8d
  0x01cc5bfa: lea    0x4(%esp),%eax
  0x01cc5bfe: cmpl   $0x0,-0x8(%ebp)
  0x01cc5c05: je     0x01cc5c1c
  0x01cc5c0b: push   $0x55310188
  0x01cc5c10: call   0x01cc5c15
  0x01cc5c15: pusha  
  0x01cc5c16: call   0x54dedbf0
  0x01cc5c1b: hlt    
  0x01cc5c1c: mov    %esi,-0x1c(%ebp)
  0x01cc5c1f: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc5c27: mov    -0xc(%edi),%edi
  0x01cc5c2a: push   %edi
  0x01cc5c2b: mov    %ebp,0x144(%edi)
  0x01cc5c31: mov    %eax,0x13c(%edi)
  0x01cc5c37: call   0x55059200
  0x01cc5c3c: add    $0x4,%esp
  0x01cc5c3f: push   %eax
  0x01cc5c40: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc5c48: mov    -0xc(%eax),%eax
  0x01cc5c4b: cmp    %eax,%edi
  0x01cc5c4d: je     0x01cc5c64
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc5c53: push   $0x55312af0
  0x01cc5c58: call   0x01cc5c5d
  0x01cc5c5d: pusha  
  0x01cc5c5e: call   0x54dedbf0
  0x01cc5c63: hlt    
  0x01cc5c64: pop    %eax
  0x01cc5c65: movl   $0x0,0x13c(%edi)
  0x01cc5c6f: movl   $0x0,0x144(%edi)
  0x01cc5c79: cmpl   $0x0,0x4(%edi)
  0x01cc5c80: jne    0x01cb0340
  0x01cc5c86: mov    -0x1c(%ebp),%esi
  0x01cc5c89: mov    -0x18(%ebp),%edi
  0x01cc5c8c: ret    
  0x01cc5c8d: push   $0x552fd97c
  0x01cc5c92: call   0x01cc5c97
  0x01cc5c97: pusha  
  0x01cc5c98: call   0x54dedbf0
  0x01cc5c9d: hlt    
  0x01cc5c9e: pop    %ebx
  0x01cc5c9f: mov    -0x1c(%ebp),%esi
  0x01cc5ca2: mov    -0x18(%ebp),%edi
  0x01cc5ca5: call   0x01cc5caf
  0x01cc5caa: jmp    0x01cc5d42
  0x01cc5caf: lea    0x4(%esp),%eax
  0x01cc5cb3: cmpl   $0x0,-0x8(%ebp)
  0x01cc5cba: je     0x01cc5cd1
  0x01cc5cc0: push   $0x55310188
  0x01cc5cc5: call   0x01cc5cca
  0x01cc5cca: pusha  
  0x01cc5ccb: call   0x54dedbf0
  0x01cc5cd0: hlt    
  0x01cc5cd1: mov    %esi,-0x1c(%ebp)
  0x01cc5cd4: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc5cdc: mov    -0xc(%edi),%edi
  0x01cc5cdf: push   %edi
  0x01cc5ce0: mov    %ebp,0x144(%edi)
  0x01cc5ce6: mov    %eax,0x13c(%edi)
  0x01cc5cec: call   0x55059330
  0x01cc5cf1: add    $0x4,%esp
  0x01cc5cf4: push   %eax
  0x01cc5cf5: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc5cfd: mov    -0xc(%eax),%eax
  0x01cc5d00: cmp    %eax,%edi
  0x01cc5d02: je     0x01cc5d19
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc5d08: push   $0x55312af0
  0x01cc5d0d: call   0x01cc5d12
  0x01cc5d12: pusha  
  0x01cc5d13: call   0x54dedbf0
  0x01cc5d18: hlt    
  0x01cc5d19: pop    %eax
  0x01cc5d1a: movl   $0x0,0x13c(%edi)
  0x01cc5d24: movl   $0x0,0x144(%edi)
  0x01cc5d2e: cmpl   $0x0,0x4(%edi)
  0x01cc5d35: jne    0x01cb0340
  0x01cc5d3b: mov    -0x1c(%ebp),%esi
  0x01cc5d3e: mov    -0x18(%ebp),%edi
  0x01cc5d41: ret    
  0x01cc5d42: push   $0x552fd97c
  0x01cc5d47: call   0x01cc5d4c
  0x01cc5d4c: pusha  
  0x01cc5d4d: call   0x54dedbf0
  0x01cc5d52: hlt    
  0x01cc5d53: push   $0x552fd97c
  0x01cc5d58: call   0x01cc5d5d
  0x01cc5d5d: pusha  
  0x01cc5d5e: call   0x54dedbf0
  0x01cc5d63: hlt    
  0x01cc5d64: int3   
  0x01cc5d65: int3   
  0x01cc5d66: int3   
  0x01cc5d67: int3   
  0x01cc5d68: int3   
  0x01cc5d69: int3   
  0x01cc5d6a: int3   
  0x01cc5d6b: int3   
  0x01cc5d6c: int3   
  0x01cc5d6d: int3   
  0x01cc5d6e: int3   
  0x01cc5d6f: int3   

----------------------------------------------------------------------
invokedynamic  186 invokedynamic  [0x01cc5d80, 0x01cc5ed0]  336 bytes

  0x01cc5d80: sub    $0x4,%esp
  0x01cc5d83: fstps  (%esp)
  0x01cc5d86: jmp    0x01cc5da4
  0x01cc5d8b: sub    $0x8,%esp
  0x01cc5d8e: fstpl  (%esp)
  0x01cc5d91: jmp    0x01cc5da4
  0x01cc5d96: push   %edx
  0x01cc5d97: push   %eax
  0x01cc5d98: jmp    0x01cc5da4
  0x01cc5d9d: push   %eax
  0x01cc5d9e: jmp    0x01cc5da4
  0x01cc5da3: push   %eax
  0x01cc5da4: mov    %esi,-0x1c(%ebp)
  0x01cc5da7: mov    0x1(%esi),%edx
  0x01cc5daa: not    %edx
  0x01cc5dac: mov    -0x14(%ebp),%ecx
  0x01cc5daf: shl    $0x2,%edx
  0x01cc5db2: mov    0x8(%ecx,%edx,4),%ebx
  0x01cc5db6: shr    $0x10,%ebx
  0x01cc5db9: and    $0xff,%ebx
  0x01cc5dbf: cmp    $0xba,%ebx
  0x01cc5dc5: je     0x01cc5e79
  0x01cc5dcb: mov    $0xba,%ebx
  0x01cc5dd0: call   0x01cc5dda
  0x01cc5dd5: jmp    0x01cc5e6e
  0x01cc5dda: push   %ebx
  0x01cc5ddb: lea    0x8(%esp),%eax
  0x01cc5ddf: cmpl   $0x0,-0x8(%ebp)
  0x01cc5de6: je     0x01cc5dfd
  0x01cc5dec: push   $0x55310188
  0x01cc5df1: call   0x01cc5df6
  0x01cc5df6: pusha  
  0x01cc5df7: call   0x54dedbf0
  0x01cc5dfc: hlt    
  0x01cc5dfd: mov    %esi,-0x1c(%ebp)
  0x01cc5e00: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc5e08: mov    -0xc(%edi),%edi
  0x01cc5e0b: push   %edi
  0x01cc5e0c: mov    %ebp,0x144(%edi)
  0x01cc5e12: mov    %eax,0x13c(%edi)
  0x01cc5e18: call   0x5505bb00
  0x01cc5e1d: add    $0x8,%esp
  0x01cc5e20: push   %eax
  0x01cc5e21: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc5e29: mov    -0xc(%eax),%eax
  0x01cc5e2c: cmp    %eax,%edi
  0x01cc5e2e: je     0x01cc5e45
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc5e34: push   $0x55312af0
  0x01cc5e39: call   0x01cc5e3e
  0x01cc5e3e: pusha  
  0x01cc5e3f: call   0x54dedbf0
  0x01cc5e44: hlt    
  0x01cc5e45: pop    %eax
  0x01cc5e46: movl   $0x0,0x13c(%edi)
  0x01cc5e50: movl   $0x0,0x144(%edi)
  0x01cc5e5a: cmpl   $0x0,0x4(%edi)
  0x01cc5e61: jne    0x01cb0340
  0x01cc5e67: mov    -0x1c(%ebp),%esi
  0x01cc5e6a: mov    -0x18(%ebp),%edi
  0x01cc5e6d: ret    
  0x01cc5e6e: mov    0x1(%esi),%edx
  0x01cc5e71: not    %edx
  0x01cc5e73: mov    -0x14(%ebp),%ecx
  0x01cc5e76: shl    $0x2,%edx
  0x01cc5e79: mov    0xc(%ecx,%edx,4),%ebx
  0x01cc5e7d: mov    0x10(%ecx,%edx,4),%eax
  0x01cc5e81: mov    0x14(%ecx,%edx,4),%edx
  0x01cc5e85: test   $0x1000000,%edx
  0x01cc5e8b: je     0x01cc5ea8
  0x01cc5e8d: push   %ebx
  0x01cc5e8e: mov    %eax,%ebx
  0x01cc5e90: shl    $0x2,%ebx
  0x01cc5e93: mov    -0xc(%ebp),%eax
  0x01cc5e96: mov    0x8(%eax),%eax
  0x01cc5e99: mov    0x8(%eax),%eax
  0x01cc5e9c: mov    0x18(%eax),%eax
  0x01cc5e9f: mov    (%eax),%eax
  0x01cc5ea1: add    %ebx,%eax
  0x01cc5ea3: mov    0xc(%eax),%eax
  0x01cc5ea6: pop    %ebx
  0x01cc5ea7: push   %eax
  0x01cc5ea8: shr    $0x1c,%edx
  0x01cc5eab: mov    0x55627814(,%edx,4),%edx
  0x01cc5eb2: push   %edx
  0x01cc5eb3: lea    0x4(%esp),%esi
  0x01cc5eb7: mov    %esi,-0x8(%ebp)
  0x01cc5eba: jmp    *0x34(%ebx)
  0x01cc5ebd: push   $0x552fd97c
  0x01cc5ec2: call   0x01cc5ec7
  0x01cc5ec7: pusha  
  0x01cc5ec8: call   0x54dedbf0
  0x01cc5ecd: hlt    
  0x01cc5ece: nop    
  0x01cc5ecf: nop    

----------------------------------------------------------------------
new  187 new  [0x01cc5ee0, 0x01cc60e0]  512 bytes

  0x01cc5ee0: sub    $0x4,%esp
  0x01cc5ee3: fstps  (%esp)
  0x01cc5ee6: jmp    0x01cc5f04
  0x01cc5eeb: sub    $0x8,%esp
  0x01cc5eee: fstpl  (%esp)
  0x01cc5ef1: jmp    0x01cc5f04
  0x01cc5ef6: push   %edx
  0x01cc5ef7: push   %eax
  0x01cc5ef8: jmp    0x01cc5f04
  0x01cc5efd: push   %eax
  0x01cc5efe: jmp    0x01cc5f04
  0x01cc5f03: push   %eax
  0x01cc5f04: movzwl 0x1(%esi),%edx
  0x01cc5f08: bswap  %edx
  0x01cc5f0a: shr    $0x10,%edx
  0x01cc5f0d: mov    -0xc(%ebp),%ecx
  0x01cc5f10: mov    0x8(%ecx),%ecx
  0x01cc5f13: mov    0x8(%ecx),%ecx
  0x01cc5f16: mov    0x8(%ecx),%eax
  0x01cc5f19: cmpb   $0x7,0x4(%eax,%edx,1)
  0x01cc5f1e: jne    0x01cc6003
  0x01cc5f24: mov    0x30(%ecx,%edx,4),%ecx
  0x01cc5f28: push   %ecx
  0x01cc5f29: cmpb   $0x4,0xde(%ecx)
  0x01cc5f30: jne    0x01cc6002
  0x01cc5f36: mov    0x8(%ecx),%edx
  0x01cc5f39: test   $0x1,%edx
  0x01cc5f3f: jne    0x01cc6002
  0x01cc5f45: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc5f4d: mov    -0xc(%ecx),%ecx
  0x01cc5f50: mov    0x44(%ecx),%eax
  0x01cc5f53: lea    (%eax,%edx,1),%ebx
  0x01cc5f56: cmp    0x4c(%ecx),%ebx
  0x01cc5f59: ja     0x01cc5f67
  0x01cc5f5f: mov    %ebx,0x44(%ecx)
  0x01cc5f62: jmp    0x01cc5f93
  0x01cc5f67: mov    0x3c0e10,%eax
  0x01cc5f6d: lea    (%eax,%edx,1),%ebx
  0x01cc5f70: cmp    0x3c0de0,%ebx
  0x01cc5f76: ja     0x01cc6002
  0x01cc5f7c: lock cmpxchg %ebx,0x3c0e10
  0x01cc5f84: jne    0x01cc5f67
  0x01cc5f86: add    %edx,0x88(%ecx)
  0x01cc5f8c: adcl   $0x0,0x8c(%ecx)
  0x01cc5f93: sub    $0x8,%edx
  0x01cc5f96: je     0x01cc5fbe
  0x01cc5f9c: xor    %ecx,%ecx
  0x01cc5f9e: shr    $0x3,%edx
  0x01cc5fa1: jae    0x01cc5fb4
  0x01cc5fa3: push   $0x5531a138
  0x01cc5fa8: call   0x01cc5fad
  0x01cc5fad: pusha  
  0x01cc5fae: call   0x54dedbf0
  0x01cc5fb3: hlt    
  0x01cc5fb4: mov    %ecx,0x4(%eax,%edx,8)
  0x01cc5fb8: mov    %ecx,(%eax,%edx,8)
  0x01cc5fbb: dec    %edx
  0x01cc5fbc: jne    0x01cc5fb4
  0x01cc5fbe: pop    %ecx
  0x01cc5fbf: mov    0x68(%ecx),%ebx
  0x01cc5fc2: mov    %ebx,(%eax)
  0x01cc5fc4: mov    %ecx,0x4(%eax)
  0x01cc5fc7: cmpb   $0x0,0x55633e64
  0x01cc5fce: je     0x01cc5ffd
  0x01cc5fd4: push   %eax
  0x01cc5fd5: push   %eax
  0x01cc5fd6: cmpl   $0x0,-0x8(%ebp)
  0x01cc5fdd: je     0x01cc5ff4
  0x01cc5fe3: push   $0x55310148
  0x01cc5fe8: call   0x01cc5fed
  0x01cc5fed: pusha  
  0x01cc5fee: call   0x54dedbf0
  0x01cc5ff3: hlt    
  0x01cc5ff4: call   0x55215560
  0x01cc5ff9: add    $0x4,%esp
  0x01cc5ffc: pop    %eax
  0x01cc5ffd: jmp    0x01cc60c4
  0x01cc6002: pop    %ecx
  0x01cc6003: mov    -0xc(%ebp),%eax
  0x01cc6006: mov    0x8(%eax),%eax
  0x01cc6009: mov    0x8(%eax),%eax
  0x01cc600c: movzwl 0x1(%esi),%edx
  0x01cc6010: bswap  %edx
  0x01cc6012: shr    $0x10,%edx
  0x01cc6015: call   0x01cc601f
  0x01cc601a: jmp    0x01cc60c4
  0x01cc601f: push   %edx
  0x01cc6020: push   %eax
  0x01cc6021: lea    0xc(%esp),%eax
  0x01cc6025: cmpl   $0x0,-0x8(%ebp)
  0x01cc602c: je     0x01cc6043
  0x01cc6032: push   $0x55310188
  0x01cc6037: call   0x01cc603c
  0x01cc603c: pusha  
  0x01cc603d: call   0x54dedbf0
  0x01cc6042: hlt    
  0x01cc6043: mov    %esi,-0x1c(%ebp)
  0x01cc6046: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc604e: mov    -0xc(%edi),%edi
  0x01cc6051: push   %edi
  0x01cc6052: mov    %ebp,0x144(%edi)
  0x01cc6058: mov    %eax,0x13c(%edi)
  0x01cc605e: call   0x55058750
  0x01cc6063: add    $0xc,%esp
  0x01cc6066: push   %eax
  0x01cc6067: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc606f: mov    -0xc(%eax),%eax
  0x01cc6072: cmp    %eax,%edi
  0x01cc6074: je     0x01cc608b
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc607a: push   $0x55312af0
  0x01cc607f: call   0x01cc6084
  0x01cc6084: pusha  
  0x01cc6085: call   0x54dedbf0
  0x01cc608a: hlt    
  0x01cc608b: pop    %eax
  0x01cc608c: movl   $0x0,0x13c(%edi)
  0x01cc6096: movl   $0x0,0x144(%edi)
  0x01cc60a0: cmpl   $0x0,0x4(%edi)
  0x01cc60a7: jne    0x01cb0340
  0x01cc60ad: mov    0x16c(%edi),%eax
  0x01cc60b3: movl   $0x0,0x16c(%edi)
  0x01cc60bd: mov    -0x1c(%ebp),%esi
  0x01cc60c0: mov    -0x18(%ebp),%edi
  0x01cc60c3: ret    
  0x01cc60c4: movzbl 0x3(%esi),%ebx
  0x01cc60c8: add    $0x3,%esi
  0x01cc60cb: jmp    *0x55629438(,%ebx,4)
  0x01cc60d2: nop    
  0x01cc60d3: nop    
  0x01cc60d4: int3   
  0x01cc60d5: int3   
  0x01cc60d6: int3   
  0x01cc60d7: int3   
  0x01cc60d8: int3   
  0x01cc60d9: int3   
  0x01cc60da: int3   
  0x01cc60db: int3   
  0x01cc60dc: int3   
  0x01cc60dd: int3   
  0x01cc60de: int3   
  0x01cc60df: int3   

----------------------------------------------------------------------
newarray  188 newarray  [0x01cc60f0, 0x01cc61c0]  208 bytes

  0x01cc60f0: pop    %eax
  0x01cc60f1: push   %eax
  0x01cc60f2: movzbl 0x1(%esi),%edx
  0x01cc60f6: call   0x01cc6100
  0x01cc60fb: jmp    0x01cc61a5
  0x01cc6100: push   %eax
  0x01cc6101: push   %edx
  0x01cc6102: lea    0xc(%esp),%eax
  0x01cc6106: cmpl   $0x0,-0x8(%ebp)
  0x01cc610d: je     0x01cc6124
  0x01cc6113: push   $0x55310188
  0x01cc6118: call   0x01cc611d
  0x01cc611d: pusha  
  0x01cc611e: call   0x54dedbf0
  0x01cc6123: hlt    
  0x01cc6124: mov    %esi,-0x1c(%ebp)
  0x01cc6127: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc612f: mov    -0xc(%edi),%edi
  0x01cc6132: push   %edi
  0x01cc6133: mov    %ebp,0x144(%edi)
  0x01cc6139: mov    %eax,0x13c(%edi)
  0x01cc613f: call   0x55058970
  0x01cc6144: add    $0xc,%esp
  0x01cc6147: push   %eax
  0x01cc6148: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc6150: mov    -0xc(%eax),%eax
  0x01cc6153: cmp    %eax,%edi
  0x01cc6155: je     0x01cc616c
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc615b: push   $0x55312af0
  0x01cc6160: call   0x01cc6165
  0x01cc6165: pusha  
  0x01cc6166: call   0x54dedbf0
  0x01cc616b: hlt    
  0x01cc616c: pop    %eax
  0x01cc616d: movl   $0x0,0x13c(%edi)
  0x01cc6177: movl   $0x0,0x144(%edi)
  0x01cc6181: cmpl   $0x0,0x4(%edi)
  0x01cc6188: jne    0x01cb0340
  0x01cc618e: mov    0x16c(%edi),%eax
  0x01cc6194: movl   $0x0,0x16c(%edi)
  0x01cc619e: mov    -0x1c(%ebp),%esi
  0x01cc61a1: mov    -0x18(%ebp),%edi
  0x01cc61a4: ret    
  0x01cc61a5: pop    %edx
  0x01cc61a6: movzbl 0x2(%esi),%ebx
  0x01cc61aa: add    $0x2,%esi
  0x01cc61ad: jmp    *0x55629438(,%ebx,4)
  0x01cc61b4: int3   
  0x01cc61b5: int3   
  0x01cc61b6: int3   
  0x01cc61b7: int3   
  0x01cc61b8: int3   
  0x01cc61b9: int3   
  0x01cc61ba: int3   
  0x01cc61bb: int3   
  0x01cc61bc: int3   
  0x01cc61bd: int3   
  0x01cc61be: int3   
  0x01cc61bf: int3   

----------------------------------------------------------------------
anewarray  189 anewarray  [0x01cc61d0, 0x01cc62b0]  224 bytes

  0x01cc61d0: pop    %eax
  0x01cc61d1: movzwl 0x1(%esi),%edx
  0x01cc61d5: bswap  %edx
  0x01cc61d7: shr    $0x10,%edx
  0x01cc61da: mov    -0xc(%ebp),%ecx
  0x01cc61dd: mov    0x8(%ecx),%ecx
  0x01cc61e0: mov    0x8(%ecx),%ecx
  0x01cc61e3: call   0x01cc61ed
  0x01cc61e8: jmp    0x01cc6293
  0x01cc61ed: push   %eax
  0x01cc61ee: push   %edx
  0x01cc61ef: push   %ecx
  0x01cc61f0: lea    0x10(%esp),%eax
  0x01cc61f4: cmpl   $0x0,-0x8(%ebp)
  0x01cc61fb: je     0x01cc6212
  0x01cc6201: push   $0x55310188
  0x01cc6206: call   0x01cc620b
  0x01cc620b: pusha  
  0x01cc620c: call   0x54dedbf0
  0x01cc6211: hlt    
  0x01cc6212: mov    %esi,-0x1c(%ebp)
  0x01cc6215: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc621d: mov    -0xc(%edi),%edi
  0x01cc6220: push   %edi
  0x01cc6221: mov    %ebp,0x144(%edi)
  0x01cc6227: mov    %eax,0x13c(%edi)
  0x01cc622d: call   0x55058ab0
  0x01cc6232: add    $0x10,%esp
  0x01cc6235: push   %eax
  0x01cc6236: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc623e: mov    -0xc(%eax),%eax
  0x01cc6241: cmp    %eax,%edi
  0x01cc6243: je     0x01cc625a
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc6249: push   $0x55312af0
  0x01cc624e: call   0x01cc6253
  0x01cc6253: pusha  
  0x01cc6254: call   0x54dedbf0
  0x01cc6259: hlt    
  0x01cc625a: pop    %eax
  0x01cc625b: movl   $0x0,0x13c(%edi)
  0x01cc6265: movl   $0x0,0x144(%edi)
  0x01cc626f: cmpl   $0x0,0x4(%edi)
  0x01cc6276: jne    0x01cb0340
  0x01cc627c: mov    0x16c(%edi),%eax
  0x01cc6282: movl   $0x0,0x16c(%edi)
  0x01cc628c: mov    -0x1c(%ebp),%esi
  0x01cc628f: mov    -0x18(%ebp),%edi
  0x01cc6292: ret    
  0x01cc6293: movzbl 0x3(%esi),%ebx
  0x01cc6297: add    $0x3,%esi
  0x01cc629a: jmp    *0x55629438(,%ebx,4)
  0x01cc62a1: nop    
  0x01cc62a2: nop    
  0x01cc62a3: nop    
  0x01cc62a4: int3   
  0x01cc62a5: int3   
  0x01cc62a6: int3   
  0x01cc62a7: int3   
  0x01cc62a8: int3   
  0x01cc62a9: int3   
  0x01cc62aa: int3   
  0x01cc62ab: int3   
  0x01cc62ac: int3   
  0x01cc62ad: int3   
  0x01cc62ae: int3   
  0x01cc62af: int3   

----------------------------------------------------------------------
arraylength  190 arraylength  [0x01cc62c0, 0x01cc62d0]  16 bytes

  0x01cc62c0: pop    %eax
  0x01cc62c1: mov    0x8(%eax),%eax
  0x01cc62c4: movzbl 0x1(%esi),%ebx
  0x01cc62c8: inc    %esi
  0x01cc62c9: jmp    *0x55628438(,%ebx,4)

----------------------------------------------------------------------
athrow  191 athrow  [0x01cc62e0, 0x01cc6300]  32 bytes

  0x01cc62e0: pop    %eax
  0x01cc62e1: cmp    (%eax),%eax
  0x01cc62e3: jmp    0x01cbaa7d
  0x01cc62e8: push   $0x552fd97c
  0x01cc62ed: call   0x01cc62f2
  0x01cc62f2: pusha  
  0x01cc62f3: call   0x54dedbf0
  0x01cc62f8: hlt    
  0x01cc62f9: nop    
  0x01cc62fa: nop    
  0x01cc62fb: nop    
  0x01cc62fc: int3   
  0x01cc62fd: int3   
  0x01cc62fe: int3   
  0x01cc62ff: int3   

----------------------------------------------------------------------
checkcast  192 checkcast  [0x01cc6310, 0x01cc6460]  336 bytes

  0x01cc6310: pop    %eax
  0x01cc6311: test   %eax,%eax
  0x01cc6313: je     0x01cc6444
  0x01cc6319: mov    -0xc(%ebp),%ecx
  0x01cc631c: mov    0x8(%ecx),%ecx
  0x01cc631f: mov    0x8(%ecx),%ecx
  0x01cc6322: mov    0x8(%ecx),%edx
  0x01cc6325: movzwl 0x1(%esi),%ebx
  0x01cc6329: bswap  %ebx
  0x01cc632b: shr    $0x10,%ebx
  0x01cc632e: cmpb   $0x7,0x4(%edx,%ebx,1)
  0x01cc6333: je     0x01cc63f8
  0x01cc6339: push   %eax
  0x01cc633a: call   0x01cc6344
  0x01cc633f: jmp    0x01cc63d7
  0x01cc6344: lea    0x4(%esp),%eax
  0x01cc6348: cmpl   $0x0,-0x8(%ebp)
  0x01cc634f: je     0x01cc6366
  0x01cc6355: push   $0x55310188
  0x01cc635a: call   0x01cc635f
  0x01cc635f: pusha  
  0x01cc6360: call   0x54dedbf0
  0x01cc6365: hlt    
  0x01cc6366: mov    %esi,-0x1c(%ebp)
  0x01cc6369: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc6371: mov    -0xc(%edi),%edi
  0x01cc6374: push   %edi
  0x01cc6375: mov    %ebp,0x144(%edi)
  0x01cc637b: mov    %eax,0x13c(%edi)
  0x01cc6381: call   0x55059090
  0x01cc6386: add    $0x4,%esp
  0x01cc6389: push   %eax
  0x01cc638a: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc6392: mov    -0xc(%eax),%eax
  0x01cc6395: cmp    %eax,%edi
  0x01cc6397: je     0x01cc63ae
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc639d: push   $0x55312af0
  0x01cc63a2: call   0x01cc63a7
  0x01cc63a7: pusha  
  0x01cc63a8: call   0x54dedbf0
  0x01cc63ad: hlt    
  0x01cc63ae: pop    %eax
  0x01cc63af: movl   $0x0,0x13c(%edi)
  0x01cc63b9: movl   $0x0,0x144(%edi)
  0x01cc63c3: cmpl   $0x0,0x4(%edi)
  0x01cc63ca: jne    0x01cb0340
  0x01cc63d0: mov    -0x1c(%ebp),%esi
  0x01cc63d3: mov    -0x18(%ebp),%edi
  0x01cc63d6: ret    
  0x01cc63d7: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc63df: mov    -0xc(%edi),%edi
  0x01cc63e2: mov    0x170(%edi),%eax
  0x01cc63e8: movl   $0x0,0x170(%edi)
  0x01cc63f2: mov    -0x18(%ebp),%edi
  0x01cc63f5: pop    %edx
  0x01cc63f6: jmp    0x01cc63fe
  0x01cc63f8: mov    %eax,%edx
  0x01cc63fa: mov    0x30(%ecx,%ebx,4),%eax
  0x01cc63fe: mov    0x4(%edx),%ebx
  0x01cc6401: cmp    %eax,%ebx
  0x01cc6403: je     0x01cc6442
  0x01cc6409: mov    0xc(%eax),%ecx
  0x01cc640c: cmp    (%ebx,%ecx,1),%eax
  0x01cc640f: je     0x01cc6442
  0x01cc6415: cmp    $0x14,%ecx
  0x01cc6418: jne    0x01cc643c
  0x01cc641e: push   %edi
  0x01cc641f: incl   0x556349a0
  0x01cc6425: mov    0x18(%ebx),%edi
  0x01cc6428: mov    (%edi),%ecx
  0x01cc642a: add    $0x4,%edi
  0x01cc642d: test   %eax,%eax
  0x01cc642f: repnz scas %es:(%edi),%eax
  0x01cc6431: pop    %edi
  0x01cc6432: jne    0x01cc643c
  0x01cc6434: mov    %eax,0x14(%ebx)
  0x01cc6437: jmp    0x01cc6442
  0x01cc643c: push   %edx
  0x01cc643d: jmp    0x01cbb810
  0x01cc6442: mov    %edx,%eax
  0x01cc6444: movzbl 0x3(%esi),%ebx
  0x01cc6448: add    $0x3,%esi
  0x01cc644b: jmp    *0x55629438(,%ebx,4)
  0x01cc6452: nop    
  0x01cc6453: nop    
  0x01cc6454: int3   
  0x01cc6455: int3   
  0x01cc6456: int3   
  0x01cc6457: int3   
  0x01cc6458: int3   
  0x01cc6459: int3   
  0x01cc645a: int3   
  0x01cc645b: int3   
  0x01cc645c: int3   
  0x01cc645d: int3   
  0x01cc645e: int3   
  0x01cc645f: int3   

----------------------------------------------------------------------
instanceof  193 instanceof  [0x01cc6470, 0x01cc65c0]  336 bytes

  0x01cc6470: pop    %eax
  0x01cc6471: test   %eax,%eax
  0x01cc6473: je     0x01cc65a9
  0x01cc6479: mov    -0xc(%ebp),%ecx
  0x01cc647c: mov    0x8(%ecx),%ecx
  0x01cc647f: mov    0x8(%ecx),%ecx
  0x01cc6482: mov    0x8(%ecx),%edx
  0x01cc6485: movzwl 0x1(%esi),%ebx
  0x01cc6489: bswap  %ebx
  0x01cc648b: shr    $0x10,%ebx
  0x01cc648e: cmpb   $0x7,0x4(%edx,%ebx,1)
  0x01cc6493: je     0x01cc655e
  0x01cc6499: push   %eax
  0x01cc649a: call   0x01cc64a4
  0x01cc649f: jmp    0x01cc6537
  0x01cc64a4: lea    0x4(%esp),%eax
  0x01cc64a8: cmpl   $0x0,-0x8(%ebp)
  0x01cc64af: je     0x01cc64c6
  0x01cc64b5: push   $0x55310188
  0x01cc64ba: call   0x01cc64bf
  0x01cc64bf: pusha  
  0x01cc64c0: call   0x54dedbf0
  0x01cc64c5: hlt    
  0x01cc64c6: mov    %esi,-0x1c(%ebp)
  0x01cc64c9: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc64d1: mov    -0xc(%edi),%edi
  0x01cc64d4: push   %edi
  0x01cc64d5: mov    %ebp,0x144(%edi)
  0x01cc64db: mov    %eax,0x13c(%edi)
  0x01cc64e1: call   0x55059090
  0x01cc64e6: add    $0x4,%esp
  0x01cc64e9: push   %eax
  0x01cc64ea: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc64f2: mov    -0xc(%eax),%eax
  0x01cc64f5: cmp    %eax,%edi
  0x01cc64f7: je     0x01cc650e
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc64fd: push   $0x55312af0
  0x01cc6502: call   0x01cc6507
  0x01cc6507: pusha  
  0x01cc6508: call   0x54dedbf0
  0x01cc650d: hlt    
  0x01cc650e: pop    %eax
  0x01cc650f: movl   $0x0,0x13c(%edi)
  0x01cc6519: movl   $0x0,0x144(%edi)
  0x01cc6523: cmpl   $0x0,0x4(%edi)
  0x01cc652a: jne    0x01cb0340
  0x01cc6530: mov    -0x1c(%ebp),%esi
  0x01cc6533: mov    -0x18(%ebp),%edi
  0x01cc6536: ret    
  0x01cc6537: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc653f: mov    -0xc(%edi),%edi
  0x01cc6542: mov    0x170(%edi),%eax
  0x01cc6548: movl   $0x0,0x170(%edi)
  0x01cc6552: mov    -0x18(%ebp),%edi
  0x01cc6555: pop    %edx
  0x01cc6556: mov    0x4(%edx),%edx
  0x01cc6559: jmp    0x01cc6565
  0x01cc655e: mov    0x4(%eax),%edx
  0x01cc6561: mov    0x30(%ecx,%ebx,4),%eax
  0x01cc6565: cmp    %eax,%edx
  0x01cc6567: je     0x01cc65a4
  0x01cc656d: mov    0xc(%eax),%ecx
  0x01cc6570: cmp    (%edx,%ecx,1),%eax
  0x01cc6573: je     0x01cc65a4
  0x01cc6579: cmp    $0x14,%ecx
  0x01cc657c: jne    0x01cc65a0
  0x01cc6582: push   %edi
  0x01cc6583: incl   0x556349a0
  0x01cc6589: mov    0x18(%edx),%edi
  0x01cc658c: mov    (%edi),%ecx
  0x01cc658e: add    $0x4,%edi
  0x01cc6591: test   %eax,%eax
  0x01cc6593: repnz scas %es:(%edi),%eax
  0x01cc6595: pop    %edi
  0x01cc6596: jne    0x01cc65a0
  0x01cc6598: mov    %eax,0x14(%edx)
  0x01cc659b: jmp    0x01cc65a4
  0x01cc65a0: xor    %eax,%eax
  0x01cc65a2: jmp    0x01cc65a9
  0x01cc65a4: mov    $0x1,%eax
  0x01cc65a9: movzbl 0x3(%esi),%ebx
  0x01cc65ad: add    $0x3,%esi
  0x01cc65b0: jmp    *0x55628438(,%ebx,4)
  0x01cc65b7: nop    
  0x01cc65b8: int3   
  0x01cc65b9: int3   
  0x01cc65ba: int3   
  0x01cc65bb: int3   
  0x01cc65bc: int3   
  0x01cc65bd: int3   
  0x01cc65be: int3   
  0x01cc65bf: int3   

----------------------------------------------------------------------
monitorenter  194 monitorenter  [0x01cc65d0, 0x01cc67b0]  480 bytes

  0x01cc65d0: pop    %eax
  0x01cc65d1: cmp    (%eax),%eax
  0x01cc65d3: xor    %edx,%edx
  0x01cc65d5: mov    -0x20(%ebp),%ecx
  0x01cc65d8: lea    -0x20(%ebp),%ebx
  0x01cc65db: jmp    0x01cc65ef
  0x01cc65dd: cmpl   $0x0,0x4(%ecx)
  0x01cc65e4: cmove  %ecx,%edx
  0x01cc65e7: cmp    0x4(%ecx),%eax
  0x01cc65ea: je     0x01cc65f3
  0x01cc65ec: add    $0x8,%ecx
  0x01cc65ef: cmp    %ebx,%ecx
  0x01cc65f1: jne    0x01cc65dd
  0x01cc65f3: test   %edx,%edx
  0x01cc65f5: jne    0x01cc6616
  0x01cc65f7: mov    -0x20(%ebp),%edx
  0x01cc65fa: sub    $0x8,%esp
  0x01cc65fd: sub    $0x8,%edx
  0x01cc6600: mov    %esp,%ecx
  0x01cc6602: mov    %edx,-0x20(%ebp)
  0x01cc6605: jmp    0x01cc6612
  0x01cc660a: mov    0x8(%ecx),%ebx
  0x01cc660d: mov    %ebx,(%ecx)
  0x01cc660f: add    $0x4,%ecx
  0x01cc6612: cmp    %edx,%ecx
  0x01cc6614: jne    0x01cc660a
  0x01cc6616: inc    %esi
  0x01cc6617: mov    %eax,0x4(%edx)
  0x01cc661a: mov    0x4(%edx),%ecx
  0x01cc661d: mov    (%ecx),%eax
  0x01cc661f: push   %edx
  0x01cc6620: mov    %eax,%edx
  0x01cc6622: and    $0x7,%edx
  0x01cc6625: cmp    $0x5,%edx
  0x01cc6628: pop    %edx
  0x01cc6629: jne    0x01cc66bd
  0x01cc662f: mov    %eax,(%edx)
  0x01cc6631: push   %edx
  0x01cc6632: mov    %fs:0x0(,%eiz,1),%edx
  0x01cc663a: mov    -0xc(%edx),%edx
  0x01cc663d: xor    %edx,%eax
  0x01cc663f: mov    0x4(%ecx),%edx
  0x01cc6642: xor    0x68(%edx),%eax
  0x01cc6645: and    $0xffffff87,%eax
  0x01cc6648: pop    %edx
  0x01cc6649: je     0x01cc677e
  0x01cc664f: test   $0x7,%eax
  0x01cc6654: jne    0x01cc66af
  0x01cc665a: test   $0x180,%eax
  0x01cc665f: jne    0x01cc668b
  0x01cc6665: mov    (%edx),%eax
  0x01cc6667: and    $0x1ff,%eax
  0x01cc666d: push   %edx
  0x01cc666e: mov    %fs:0x0(,%eiz,1),%edx
  0x01cc6676: mov    -0xc(%edx),%edx
  0x01cc6679: or     %eax,%edx
  0x01cc667b: lock cmpxchg %edx,(%ecx)
  0x01cc667f: pop    %edx
  0x01cc6680: jne    0x01cc66e0
  0x01cc6686: jmp    0x01cc677e
  0x01cc668b: push   %edx
  0x01cc668c: mov    %fs:0x0(,%eiz,1),%edx
  0x01cc6694: mov    -0xc(%edx),%edx
  0x01cc6697: mov    0x4(%ecx),%eax
  0x01cc669a: or     0x68(%eax),%edx
  0x01cc669d: mov    (%edx),%eax
  0x01cc669f: lock cmpxchg %edx,(%ecx)
  0x01cc66a3: pop    %edx
  0x01cc66a4: jne    0x01cc66e0
  0x01cc66aa: jmp    0x01cc677e
  0x01cc66af: mov    (%edx),%eax
  0x01cc66b1: push   %edx
  0x01cc66b2: mov    0x4(%ecx),%edx
  0x01cc66b5: mov    0x68(%edx),%edx
  0x01cc66b8: lock cmpxchg %edx,(%ecx)
  0x01cc66bc: pop    %edx
  0x01cc66bd: mov    $0x1,%eax
  0x01cc66c2: or     (%ecx),%eax
  0x01cc66c4: mov    %eax,(%edx)
  0x01cc66c6: lock cmpxchg %edx,(%ecx)
  0x01cc66ca: je     0x01cc677e
  0x01cc66d0: sub    %esp,%eax
  0x01cc66d2: and    $0xfffff003,%eax
  0x01cc66d8: mov    %eax,(%edx)
  0x01cc66da: je     0x01cc677e
  0x01cc66e0: call   0x01cc66ea
  0x01cc66e5: jmp    0x01cc677e
  0x01cc66ea: push   %edx
  0x01cc66eb: lea    0x8(%esp),%eax
  0x01cc66ef: cmpl   $0x0,-0x8(%ebp)
  0x01cc66f6: je     0x01cc670d
  0x01cc66fc: push   $0x55310188
  0x01cc6701: call   0x01cc6706
  0x01cc6706: pusha  
  0x01cc6707: call   0x54dedbf0
  0x01cc670c: hlt    
  0x01cc670d: mov    %esi,-0x1c(%ebp)
  0x01cc6710: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc6718: mov    -0xc(%edi),%edi
  0x01cc671b: push   %edi
  0x01cc671c: mov    %ebp,0x144(%edi)
  0x01cc6722: mov    %eax,0x13c(%edi)
  0x01cc6728: call   0x5505a930
  0x01cc672d: add    $0x8,%esp
  0x01cc6730: push   %eax
  0x01cc6731: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc6739: mov    -0xc(%eax),%eax
  0x01cc673c: cmp    %eax,%edi
  0x01cc673e: je     0x01cc6755
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc6744: push   $0x55312af0
  0x01cc6749: call   0x01cc674e
  0x01cc674e: pusha  
  0x01cc674f: call   0x54dedbf0
  0x01cc6754: hlt    
  0x01cc6755: pop    %eax
  0x01cc6756: movl   $0x0,0x13c(%edi)
  0x01cc6760: movl   $0x0,0x144(%edi)
  0x01cc676a: cmpl   $0x0,0x4(%edi)
  0x01cc6771: jne    0x01cb0340
  0x01cc6777: mov    -0x1c(%ebp),%esi
  0x01cc677a: mov    -0x18(%ebp),%edi
  0x01cc677d: ret    
  0x01cc677e: mov    %esi,-0x1c(%ebp)
  0x01cc6781: mov    %eax,-0x9000(%esp)
  0x01cc6788: movzbl (%esi),%ebx
  0x01cc678b: jmp    *0x55629838(,%ebx,4)
  0x01cc6792: push   $0x552fd97c
  0x01cc6797: call   0x01cc679c
  0x01cc679c: pusha  
  0x01cc679d: call   0x54dedbf0
  0x01cc67a2: hlt    
  0x01cc67a3: nop    
  0x01cc67a4: int3   
  0x01cc67a5: int3   
  0x01cc67a6: int3   
  0x01cc67a7: int3   
  0x01cc67a8: int3   
  0x01cc67a9: int3   
  0x01cc67aa: int3   
  0x01cc67ab: int3   
  0x01cc67ac: int3   
  0x01cc67ad: int3   
  0x01cc67ae: int3   
  0x01cc67af: int3   

----------------------------------------------------------------------
monitorexit  195 monitorexit  [0x01cc67c0, 0x01cc6970]  432 bytes

  0x01cc67c0: pop    %eax
  0x01cc67c1: cmp    (%eax),%eax
  0x01cc67c3: mov    -0x20(%ebp),%edx
  0x01cc67c6: lea    -0x20(%ebp),%ebx
  0x01cc67c9: jmp    0x01cc67d7
  0x01cc67cb: cmp    0x4(%edx),%eax
  0x01cc67ce: je     0x01cc6889
  0x01cc67d4: add    $0x8,%edx
  0x01cc67d7: cmp    %ebx,%edx
  0x01cc67d9: jne    0x01cc67cb
  0x01cc67db: call   0x01cc67e5
  0x01cc67e0: jmp    0x01cc6878
  0x01cc67e5: lea    0x4(%esp),%eax
  0x01cc67e9: cmpl   $0x0,-0x8(%ebp)
  0x01cc67f0: je     0x01cc6807
  0x01cc67f6: push   $0x55310188
  0x01cc67fb: call   0x01cc6800
  0x01cc6800: pusha  
  0x01cc6801: call   0x54dedbf0
  0x01cc6806: hlt    
  0x01cc6807: mov    %esi,-0x1c(%ebp)
  0x01cc680a: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc6812: mov    -0xc(%edi),%edi
  0x01cc6815: push   %edi
  0x01cc6816: mov    %ebp,0x144(%edi)
  0x01cc681c: mov    %eax,0x13c(%edi)
  0x01cc6822: call   0x5505ad80
  0x01cc6827: add    $0x4,%esp
  0x01cc682a: push   %eax
  0x01cc682b: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc6833: mov    -0xc(%eax),%eax
  0x01cc6836: cmp    %eax,%edi
  0x01cc6838: je     0x01cc684f
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc683e: push   $0x55312af0
  0x01cc6843: call   0x01cc6848
  0x01cc6848: pusha  
  0x01cc6849: call   0x54dedbf0
  0x01cc684e: hlt    
  0x01cc684f: pop    %eax
  0x01cc6850: movl   $0x0,0x13c(%edi)
  0x01cc685a: movl   $0x0,0x144(%edi)
  0x01cc6864: cmpl   $0x0,0x4(%edi)
  0x01cc686b: jne    0x01cb0340
  0x01cc6871: mov    -0x1c(%ebp),%esi
  0x01cc6874: mov    -0x18(%ebp),%edi
  0x01cc6877: ret    
  0x01cc6878: push   $0x552fd97c
  0x01cc687d: call   0x01cc6882
  0x01cc6882: pusha  
  0x01cc6883: call   0x54dedbf0
  0x01cc6888: hlt    
  0x01cc6889: push   %eax
  0x01cc688a: mov    %esi,-0x1c(%ebp)
  0x01cc688d: lea    (%edx),%eax
  0x01cc688f: mov    0x4(%edx),%ecx
  0x01cc6892: movl   $0x0,0x4(%edx)
  0x01cc6899: mov    (%ecx),%ebx
  0x01cc689b: and    $0x7,%ebx
  0x01cc689e: cmp    $0x5,%ebx
  0x01cc68a1: je     0x01cc695c
  0x01cc68a7: mov    (%eax),%ebx
  0x01cc68a9: test   %ebx,%ebx
  0x01cc68ab: je     0x01cc695c
  0x01cc68b1: lock cmpxchg %ebx,(%ecx)
  0x01cc68b5: je     0x01cc695c
  0x01cc68bb: mov    %ecx,0x4(%edx)
  0x01cc68be: call   0x01cc68c8
  0x01cc68c3: jmp    0x01cc695c
  0x01cc68c8: push   %edx
  0x01cc68c9: lea    0x8(%esp),%eax
  0x01cc68cd: cmpl   $0x0,-0x8(%ebp)
  0x01cc68d4: je     0x01cc68eb
  0x01cc68da: push   $0x55310188
  0x01cc68df: call   0x01cc68e4
  0x01cc68e4: pusha  
  0x01cc68e5: call   0x54dedbf0
  0x01cc68ea: hlt    
  0x01cc68eb: mov    %esi,-0x1c(%ebp)
  0x01cc68ee: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc68f6: mov    -0xc(%edi),%edi
  0x01cc68f9: push   %edi
  0x01cc68fa: mov    %ebp,0x144(%edi)
  0x01cc6900: mov    %eax,0x13c(%edi)
  0x01cc6906: call   0x5505ab90
  0x01cc690b: add    $0x8,%esp
  0x01cc690e: push   %eax
  0x01cc690f: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc6917: mov    -0xc(%eax),%eax
  0x01cc691a: cmp    %eax,%edi
  0x01cc691c: je     0x01cc6933
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc6922: push   $0x55312af0
  0x01cc6927: call   0x01cc692c
  0x01cc692c: pusha  
  0x01cc692d: call   0x54dedbf0
  0x01cc6932: hlt    
  0x01cc6933: pop    %eax
  0x01cc6934: movl   $0x0,0x13c(%edi)
  0x01cc693e: movl   $0x0,0x144(%edi)
  0x01cc6948: cmpl   $0x0,0x4(%edi)
  0x01cc694f: jne    0x01cb0340
  0x01cc6955: mov    -0x1c(%ebp),%esi
  0x01cc6958: mov    -0x18(%ebp),%edi
  0x01cc695b: ret    
  0x01cc695c: mov    -0x1c(%ebp),%esi
  0x01cc695f: pop    %eax
  0x01cc6960: movzbl 0x1(%esi),%ebx
  0x01cc6964: inc    %esi
  0x01cc6965: jmp    *0x55629838(,%ebx,4)
  0x01cc696c: int3   
  0x01cc696d: int3   
  0x01cc696e: int3   
  0x01cc696f: int3   

----------------------------------------------------------------------
wide  196 wide  [0x01cc6980, 0x01cc69c0]  64 bytes

  0x01cc6980: sub    $0x4,%esp
  0x01cc6983: fstps  (%esp)
  0x01cc6986: jmp    0x01cc69a4
  0x01cc698b: sub    $0x8,%esp
  0x01cc698e: fstpl  (%esp)
  0x01cc6991: jmp    0x01cc69a4
  0x01cc6996: push   %edx
  0x01cc6997: push   %eax
  0x01cc6998: jmp    0x01cc69a4
  0x01cc699d: push   %eax
  0x01cc699e: jmp    0x01cc69a4
  0x01cc69a3: push   %eax
  0x01cc69a4: movzbl 0x1(%esi),%ebx
  0x01cc69a8: jmp    *0x5562e438(,%ebx,4)
  0x01cc69af: push   $0x552fd97c
  0x01cc69b4: call   0x01cc69b9
  0x01cc69b9: pusha  
  0x01cc69ba: call   0x54dedbf0
  0x01cc69bf: hlt    

----------------------------------------------------------------------
multianewarray  197 multianewarray  [0x01cc69d0, 0x01cc6ac0]  240 bytes

  0x01cc69d0: sub    $0x4,%esp
  0x01cc69d3: fstps  (%esp)
  0x01cc69d6: jmp    0x01cc69f4
  0x01cc69db: sub    $0x8,%esp
  0x01cc69de: fstpl  (%esp)
  0x01cc69e1: jmp    0x01cc69f4
  0x01cc69e6: push   %edx
  0x01cc69e7: push   %eax
  0x01cc69e8: jmp    0x01cc69f4
  0x01cc69ed: push   %eax
  0x01cc69ee: jmp    0x01cc69f4
  0x01cc69f3: push   %eax
  0x01cc69f4: movzbl 0x3(%esi),%eax
  0x01cc69f8: lea    -0x4(%esp,%eax,4),%eax
  0x01cc69fc: call   0x01cc6a06
  0x01cc6a01: jmp    0x01cc6aaa
  0x01cc6a06: push   %eax
  0x01cc6a07: lea    0x8(%esp),%eax
  0x01cc6a0b: cmpl   $0x0,-0x8(%ebp)
  0x01cc6a12: je     0x01cc6a29
  0x01cc6a18: push   $0x55310188
  0x01cc6a1d: call   0x01cc6a22
  0x01cc6a22: pusha  
  0x01cc6a23: call   0x54dedbf0
  0x01cc6a28: hlt    
  0x01cc6a29: mov    %esi,-0x1c(%ebp)
  0x01cc6a2c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc6a34: mov    -0xc(%edi),%edi
  0x01cc6a37: push   %edi
  0x01cc6a38: mov    %ebp,0x144(%edi)
  0x01cc6a3e: mov    %eax,0x13c(%edi)
  0x01cc6a44: call   0x55058c30
  0x01cc6a49: add    $0x8,%esp
  0x01cc6a4c: push   %eax
  0x01cc6a4d: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc6a55: mov    -0xc(%eax),%eax
  0x01cc6a58: cmp    %eax,%edi
  0x01cc6a5a: je     0x01cc6a71
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc6a60: push   $0x55312af0
  0x01cc6a65: call   0x01cc6a6a
  0x01cc6a6a: pusha  
  0x01cc6a6b: call   0x54dedbf0
  0x01cc6a70: hlt    
  0x01cc6a71: pop    %eax
  0x01cc6a72: movl   $0x0,0x13c(%edi)
  0x01cc6a7c: movl   $0x0,0x144(%edi)
  0x01cc6a86: cmpl   $0x0,0x4(%edi)
  0x01cc6a8d: jne    0x01cb0340
  0x01cc6a93: mov    0x16c(%edi),%eax
  0x01cc6a99: movl   $0x0,0x16c(%edi)
  0x01cc6aa3: mov    -0x1c(%ebp),%esi
  0x01cc6aa6: mov    -0x18(%ebp),%edi
  0x01cc6aa9: ret    
  0x01cc6aaa: movzbl 0x3(%esi),%ebx
  0x01cc6aae: lea    (%esp,%ebx,4),%esp
  0x01cc6ab1: movzbl 0x4(%esi),%ebx
  0x01cc6ab5: add    $0x4,%esi
  0x01cc6ab8: jmp    *0x55629438(,%ebx,4)
  0x01cc6abf: nop    

----------------------------------------------------------------------
ifnull  198 ifnull  [0x01cc6ad0, 0x01cc6d60]  656 bytes

  0x01cc6ad0: pop    %eax
  0x01cc6ad1: test   %eax,%eax
  0x01cc6ad3: jne    0x01cc6d47
  0x01cc6ad9: mov    -0xc(%ebp),%ecx
  0x01cc6adc: movswl 0x1(%esi),%edx
  0x01cc6ae0: bswap  %edx
  0x01cc6ae2: sar    $0x10,%edx
  0x01cc6ae5: add    %edx,%esi
  0x01cc6ae7: test   %edx,%edx
  0x01cc6ae9: jns    0x01cc6bc8
  0x01cc6aef: mov    0x10(%ecx),%eax
  0x01cc6af2: test   %eax,%eax
  0x01cc6af4: jne    0x01cc6ba7
  0x01cc6afa: push   %edx
  0x01cc6afb: push   %ecx
  0x01cc6afc: call   0x01cc6b06
  0x01cc6b01: jmp    0x01cc6b9a
  0x01cc6b06: push   %ecx
  0x01cc6b07: lea    0x8(%esp),%eax
  0x01cc6b0b: cmpl   $0x0,-0x8(%ebp)
  0x01cc6b12: je     0x01cc6b29
  0x01cc6b18: push   $0x55310188
  0x01cc6b1d: call   0x01cc6b22
  0x01cc6b22: pusha  
  0x01cc6b23: call   0x54dedbf0
  0x01cc6b28: hlt    
  0x01cc6b29: mov    %esi,-0x1c(%ebp)
  0x01cc6b2c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc6b34: mov    -0xc(%edi),%edi
  0x01cc6b37: push   %edi
  0x01cc6b38: mov    %ebp,0x144(%edi)
  0x01cc6b3e: mov    %eax,0x13c(%edi)
  0x01cc6b44: call   0x5505d720
  0x01cc6b49: add    $0x8,%esp
  0x01cc6b4c: push   %eax
  0x01cc6b4d: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc6b55: mov    -0xc(%eax),%eax
  0x01cc6b58: cmp    %eax,%edi
  0x01cc6b5a: je     0x01cc6b71
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc6b60: push   $0x55312af0
  0x01cc6b65: call   0x01cc6b6a
  0x01cc6b6a: pusha  
  0x01cc6b6b: call   0x54dedbf0
  0x01cc6b70: hlt    
  0x01cc6b71: pop    %eax
  0x01cc6b72: movl   $0x0,0x13c(%edi)
  0x01cc6b7c: movl   $0x0,0x144(%edi)
  0x01cc6b86: cmpl   $0x0,0x4(%edi)
  0x01cc6b8d: jne    0x01cb0340
  0x01cc6b93: mov    -0x1c(%ebp),%esi
  0x01cc6b96: mov    -0x18(%ebp),%edi
  0x01cc6b99: ret    
  0x01cc6b9a: pop    %ecx
  0x01cc6b9b: pop    %edx
  0x01cc6b9c: mov    0x10(%ecx),%eax
  0x01cc6b9f: test   %eax,%eax
  0x01cc6ba1: je     0x01cc6bc8
  0x01cc6ba7: mov    0x10(%ecx),%ecx
  0x01cc6baa: mov    0xc(%ecx),%eax
  0x01cc6bad: add    $0x8,%eax
  0x01cc6bb0: mov    %eax,0xc(%ecx)
  0x01cc6bb3: mov    0x8(%ecx),%eax
  0x01cc6bb6: and    $0xfffffff8,%eax
  0x01cc6bb9: add    0xc(%ecx),%eax
  0x01cc6bbc: cmp    0x55627788,%eax
  0x01cc6bc2: jae    0x01cc6bd2
  0x01cc6bc8: movzbl (%esi),%ebx
  0x01cc6bcb: jmp    *0x55629838(,%ebx,4)
  0x01cc6bd2: neg    %edx
  0x01cc6bd4: add    %esi,%edx
  0x01cc6bd6: call   0x01cc6be0
  0x01cc6bdb: jmp    0x01cc6c74
  0x01cc6be0: push   %edx
  0x01cc6be1: lea    0x8(%esp),%eax
  0x01cc6be5: cmpl   $0x0,-0x8(%ebp)
  0x01cc6bec: je     0x01cc6c03
  0x01cc6bf2: push   $0x55310188
  0x01cc6bf7: call   0x01cc6bfc
  0x01cc6bfc: pusha  
  0x01cc6bfd: call   0x54dedbf0
  0x01cc6c02: hlt    
  0x01cc6c03: mov    %esi,-0x1c(%ebp)
  0x01cc6c06: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc6c0e: mov    -0xc(%edi),%edi
  0x01cc6c11: push   %edi
  0x01cc6c12: mov    %ebp,0x144(%edi)
  0x01cc6c18: mov    %eax,0x13c(%edi)
  0x01cc6c1e: call   0x5505ce70
  0x01cc6c23: add    $0x8,%esp
  0x01cc6c26: push   %eax
  0x01cc6c27: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc6c2f: mov    -0xc(%eax),%eax
  0x01cc6c32: cmp    %eax,%edi
  0x01cc6c34: je     0x01cc6c4b
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc6c3a: push   $0x55312af0
  0x01cc6c3f: call   0x01cc6c44
  0x01cc6c44: pusha  
  0x01cc6c45: call   0x54dedbf0
  0x01cc6c4a: hlt    
  0x01cc6c4b: pop    %eax
  0x01cc6c4c: movl   $0x0,0x13c(%edi)
  0x01cc6c56: movl   $0x0,0x144(%edi)
  0x01cc6c60: cmpl   $0x0,0x4(%edi)
  0x01cc6c67: jne    0x01cb0340
  0x01cc6c6d: mov    -0x1c(%ebp),%esi
  0x01cc6c70: mov    -0x18(%ebp),%edi
  0x01cc6c73: ret    
  0x01cc6c74: movzbl (%esi),%ebx
  0x01cc6c77: test   %eax,%eax
  0x01cc6c79: je     0x01cc6bc8
  0x01cc6c7f: mov    0x34(%eax),%ecx
  0x01cc6c82: cmp    $0xfffffffe,%ecx
  0x01cc6c85: je     0x01cc6bc8
  0x01cc6c8b: mov    %eax,%ebx
  0x01cc6c8d: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc6c95: mov    -0xc(%ecx),%ecx
  0x01cc6c98: call   0x01cc6ca2
  0x01cc6c9d: jmp    0x01cc6d35
  0x01cc6ca2: lea    0x4(%esp),%eax
  0x01cc6ca6: cmpl   $0x0,-0x8(%ebp)
  0x01cc6cad: je     0x01cc6cc4
  0x01cc6cb3: push   $0x55310188
  0x01cc6cb8: call   0x01cc6cbd
  0x01cc6cbd: pusha  
  0x01cc6cbe: call   0x54dedbf0
  0x01cc6cc3: hlt    
  0x01cc6cc4: mov    %esi,-0x1c(%ebp)
  0x01cc6cc7: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc6ccf: mov    -0xc(%edi),%edi
  0x01cc6cd2: push   %edi
  0x01cc6cd3: mov    %ebp,0x144(%edi)
  0x01cc6cd9: mov    %eax,0x13c(%edi)
  0x01cc6cdf: call   0x55217020
  0x01cc6ce4: add    $0x4,%esp
  0x01cc6ce7: push   %eax
  0x01cc6ce8: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc6cf0: mov    -0xc(%eax),%eax
  0x01cc6cf3: cmp    %eax,%edi
  0x01cc6cf5: je     0x01cc6d0c
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc6cfb: push   $0x55312af0
  0x01cc6d00: call   0x01cc6d05
  0x01cc6d05: pusha  
  0x01cc6d06: call   0x54dedbf0
  0x01cc6d0b: hlt    
  0x01cc6d0c: pop    %eax
  0x01cc6d0d: movl   $0x0,0x13c(%edi)
  0x01cc6d17: movl   $0x0,0x144(%edi)
  0x01cc6d21: cmpl   $0x0,0x4(%edi)
  0x01cc6d28: jne    0x01cb0340
  0x01cc6d2e: mov    -0x1c(%ebp),%esi
  0x01cc6d31: mov    -0x18(%ebp),%edi
  0x01cc6d34: ret    
  0x01cc6d35: mov    %eax,%ecx
  0x01cc6d37: mov    -0x4(%ebp),%edx
  0x01cc6d3a: mov    %ebp,%esp
  0x01cc6d3c: pop    %ebp
  0x01cc6d3d: pop    %edi
  0x01cc6d3e: mov    %edx,%esp
  0x01cc6d40: and    $0xfffffff0,%esp
  0x01cc6d43: push   %edi
  0x01cc6d44: jmp    *0x54(%ebx)
  0x01cc6d47: movzbl 0x3(%esi),%ebx
  0x01cc6d4b: add    $0x3,%esi
  0x01cc6d4e: jmp    *0x55629838(,%ebx,4)
  0x01cc6d55: nop    
  0x01cc6d56: nop    
  0x01cc6d57: nop    
  0x01cc6d58: int3   
  0x01cc6d59: int3   
  0x01cc6d5a: int3   
  0x01cc6d5b: int3   
  0x01cc6d5c: int3   
  0x01cc6d5d: int3   
  0x01cc6d5e: int3   
  0x01cc6d5f: int3   

----------------------------------------------------------------------
ifnonnull  199 ifnonnull  [0x01cc6d70, 0x01cc7000]  656 bytes

  0x01cc6d70: pop    %eax
  0x01cc6d71: test   %eax,%eax
  0x01cc6d73: je     0x01cc6fe7
  0x01cc6d79: mov    -0xc(%ebp),%ecx
  0x01cc6d7c: movswl 0x1(%esi),%edx
  0x01cc6d80: bswap  %edx
  0x01cc6d82: sar    $0x10,%edx
  0x01cc6d85: add    %edx,%esi
  0x01cc6d87: test   %edx,%edx
  0x01cc6d89: jns    0x01cc6e68
  0x01cc6d8f: mov    0x10(%ecx),%eax
  0x01cc6d92: test   %eax,%eax
  0x01cc6d94: jne    0x01cc6e47
  0x01cc6d9a: push   %edx
  0x01cc6d9b: push   %ecx
  0x01cc6d9c: call   0x01cc6da6
  0x01cc6da1: jmp    0x01cc6e3a
  0x01cc6da6: push   %ecx
  0x01cc6da7: lea    0x8(%esp),%eax
  0x01cc6dab: cmpl   $0x0,-0x8(%ebp)
  0x01cc6db2: je     0x01cc6dc9
  0x01cc6db8: push   $0x55310188
  0x01cc6dbd: call   0x01cc6dc2
  0x01cc6dc2: pusha  
  0x01cc6dc3: call   0x54dedbf0
  0x01cc6dc8: hlt    
  0x01cc6dc9: mov    %esi,-0x1c(%ebp)
  0x01cc6dcc: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc6dd4: mov    -0xc(%edi),%edi
  0x01cc6dd7: push   %edi
  0x01cc6dd8: mov    %ebp,0x144(%edi)
  0x01cc6dde: mov    %eax,0x13c(%edi)
  0x01cc6de4: call   0x5505d720
  0x01cc6de9: add    $0x8,%esp
  0x01cc6dec: push   %eax
  0x01cc6ded: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc6df5: mov    -0xc(%eax),%eax
  0x01cc6df8: cmp    %eax,%edi
  0x01cc6dfa: je     0x01cc6e11
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc6e00: push   $0x55312af0
  0x01cc6e05: call   0x01cc6e0a
  0x01cc6e0a: pusha  
  0x01cc6e0b: call   0x54dedbf0
  0x01cc6e10: hlt    
  0x01cc6e11: pop    %eax
  0x01cc6e12: movl   $0x0,0x13c(%edi)
  0x01cc6e1c: movl   $0x0,0x144(%edi)
  0x01cc6e26: cmpl   $0x0,0x4(%edi)
  0x01cc6e2d: jne    0x01cb0340
  0x01cc6e33: mov    -0x1c(%ebp),%esi
  0x01cc6e36: mov    -0x18(%ebp),%edi
  0x01cc6e39: ret    
  0x01cc6e3a: pop    %ecx
  0x01cc6e3b: pop    %edx
  0x01cc6e3c: mov    0x10(%ecx),%eax
  0x01cc6e3f: test   %eax,%eax
  0x01cc6e41: je     0x01cc6e68
  0x01cc6e47: mov    0x10(%ecx),%ecx
  0x01cc6e4a: mov    0xc(%ecx),%eax
  0x01cc6e4d: add    $0x8,%eax
  0x01cc6e50: mov    %eax,0xc(%ecx)
  0x01cc6e53: mov    0x8(%ecx),%eax
  0x01cc6e56: and    $0xfffffff8,%eax
  0x01cc6e59: add    0xc(%ecx),%eax
  0x01cc6e5c: cmp    0x55627788,%eax
  0x01cc6e62: jae    0x01cc6e72
  0x01cc6e68: movzbl (%esi),%ebx
  0x01cc6e6b: jmp    *0x55629838(,%ebx,4)
  0x01cc6e72: neg    %edx
  0x01cc6e74: add    %esi,%edx
  0x01cc6e76: call   0x01cc6e80
  0x01cc6e7b: jmp    0x01cc6f14
  0x01cc6e80: push   %edx
  0x01cc6e81: lea    0x8(%esp),%eax
  0x01cc6e85: cmpl   $0x0,-0x8(%ebp)
  0x01cc6e8c: je     0x01cc6ea3
  0x01cc6e92: push   $0x55310188
  0x01cc6e97: call   0x01cc6e9c
  0x01cc6e9c: pusha  
  0x01cc6e9d: call   0x54dedbf0
  0x01cc6ea2: hlt    
  0x01cc6ea3: mov    %esi,-0x1c(%ebp)
  0x01cc6ea6: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc6eae: mov    -0xc(%edi),%edi
  0x01cc6eb1: push   %edi
  0x01cc6eb2: mov    %ebp,0x144(%edi)
  0x01cc6eb8: mov    %eax,0x13c(%edi)
  0x01cc6ebe: call   0x5505ce70
  0x01cc6ec3: add    $0x8,%esp
  0x01cc6ec6: push   %eax
  0x01cc6ec7: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc6ecf: mov    -0xc(%eax),%eax
  0x01cc6ed2: cmp    %eax,%edi
  0x01cc6ed4: je     0x01cc6eeb
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc6eda: push   $0x55312af0
  0x01cc6edf: call   0x01cc6ee4
  0x01cc6ee4: pusha  
  0x01cc6ee5: call   0x54dedbf0
  0x01cc6eea: hlt    
  0x01cc6eeb: pop    %eax
  0x01cc6eec: movl   $0x0,0x13c(%edi)
  0x01cc6ef6: movl   $0x0,0x144(%edi)
  0x01cc6f00: cmpl   $0x0,0x4(%edi)
  0x01cc6f07: jne    0x01cb0340
  0x01cc6f0d: mov    -0x1c(%ebp),%esi
  0x01cc6f10: mov    -0x18(%ebp),%edi
  0x01cc6f13: ret    
  0x01cc6f14: movzbl (%esi),%ebx
  0x01cc6f17: test   %eax,%eax
  0x01cc6f19: je     0x01cc6e68
  0x01cc6f1f: mov    0x34(%eax),%ecx
  0x01cc6f22: cmp    $0xfffffffe,%ecx
  0x01cc6f25: je     0x01cc6e68
  0x01cc6f2b: mov    %eax,%ebx
  0x01cc6f2d: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc6f35: mov    -0xc(%ecx),%ecx
  0x01cc6f38: call   0x01cc6f42
  0x01cc6f3d: jmp    0x01cc6fd5
  0x01cc6f42: lea    0x4(%esp),%eax
  0x01cc6f46: cmpl   $0x0,-0x8(%ebp)
  0x01cc6f4d: je     0x01cc6f64
  0x01cc6f53: push   $0x55310188
  0x01cc6f58: call   0x01cc6f5d
  0x01cc6f5d: pusha  
  0x01cc6f5e: call   0x54dedbf0
  0x01cc6f63: hlt    
  0x01cc6f64: mov    %esi,-0x1c(%ebp)
  0x01cc6f67: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc6f6f: mov    -0xc(%edi),%edi
  0x01cc6f72: push   %edi
  0x01cc6f73: mov    %ebp,0x144(%edi)
  0x01cc6f79: mov    %eax,0x13c(%edi)
  0x01cc6f7f: call   0x55217020
  0x01cc6f84: add    $0x4,%esp
  0x01cc6f87: push   %eax
  0x01cc6f88: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc6f90: mov    -0xc(%eax),%eax
  0x01cc6f93: cmp    %eax,%edi
  0x01cc6f95: je     0x01cc6fac
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc6f9b: push   $0x55312af0
  0x01cc6fa0: call   0x01cc6fa5
  0x01cc6fa5: pusha  
  0x01cc6fa6: call   0x54dedbf0
  0x01cc6fab: hlt    
  0x01cc6fac: pop    %eax
  0x01cc6fad: movl   $0x0,0x13c(%edi)
  0x01cc6fb7: movl   $0x0,0x144(%edi)
  0x01cc6fc1: cmpl   $0x0,0x4(%edi)
  0x01cc6fc8: jne    0x01cb0340
  0x01cc6fce: mov    -0x1c(%ebp),%esi
  0x01cc6fd1: mov    -0x18(%ebp),%edi
  0x01cc6fd4: ret    
  0x01cc6fd5: mov    %eax,%ecx
  0x01cc6fd7: mov    -0x4(%ebp),%edx
  0x01cc6fda: mov    %ebp,%esp
  0x01cc6fdc: pop    %ebp
  0x01cc6fdd: pop    %edi
  0x01cc6fde: mov    %edx,%esp
  0x01cc6fe0: and    $0xfffffff0,%esp
  0x01cc6fe3: push   %edi
  0x01cc6fe4: jmp    *0x54(%ebx)
  0x01cc6fe7: movzbl 0x3(%esi),%ebx
  0x01cc6feb: add    $0x3,%esi
  0x01cc6fee: jmp    *0x55629838(,%ebx,4)
  0x01cc6ff5: nop    
  0x01cc6ff6: nop    
  0x01cc6ff7: nop    
  0x01cc6ff8: int3   
  0x01cc6ff9: int3   
  0x01cc6ffa: int3   
  0x01cc6ffb: int3   
  0x01cc6ffc: int3   
  0x01cc6ffd: int3   
  0x01cc6ffe: int3   
  0x01cc6fff: int3   

----------------------------------------------------------------------
goto_w  200 goto_w  [0x01cc7010, 0x01cc72b0]  672 bytes

  0x01cc7010: sub    $0x4,%esp
  0x01cc7013: fstps  (%esp)
  0x01cc7016: jmp    0x01cc7034
  0x01cc701b: sub    $0x8,%esp
  0x01cc701e: fstpl  (%esp)
  0x01cc7021: jmp    0x01cc7034
  0x01cc7026: push   %edx
  0x01cc7027: push   %eax
  0x01cc7028: jmp    0x01cc7034
  0x01cc702d: push   %eax
  0x01cc702e: jmp    0x01cc7034
  0x01cc7033: push   %eax
  0x01cc7034: mov    -0xc(%ebp),%ecx
  0x01cc7037: mov    0x1(%esi),%edx
  0x01cc703a: bswap  %edx
  0x01cc703c: add    %edx,%esi
  0x01cc703e: test   %edx,%edx
  0x01cc7040: jns    0x01cc711f
  0x01cc7046: mov    0x10(%ecx),%eax
  0x01cc7049: test   %eax,%eax
  0x01cc704b: jne    0x01cc70fe
  0x01cc7051: push   %edx
  0x01cc7052: push   %ecx
  0x01cc7053: call   0x01cc705d
  0x01cc7058: jmp    0x01cc70f1
  0x01cc705d: push   %ecx
  0x01cc705e: lea    0x8(%esp),%eax
  0x01cc7062: cmpl   $0x0,-0x8(%ebp)
  0x01cc7069: je     0x01cc7080
  0x01cc706f: push   $0x55310188
  0x01cc7074: call   0x01cc7079
  0x01cc7079: pusha  
  0x01cc707a: call   0x54dedbf0
  0x01cc707f: hlt    
  0x01cc7080: mov    %esi,-0x1c(%ebp)
  0x01cc7083: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc708b: mov    -0xc(%edi),%edi
  0x01cc708e: push   %edi
  0x01cc708f: mov    %ebp,0x144(%edi)
  0x01cc7095: mov    %eax,0x13c(%edi)
  0x01cc709b: call   0x5505d720
  0x01cc70a0: add    $0x8,%esp
  0x01cc70a3: push   %eax
  0x01cc70a4: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc70ac: mov    -0xc(%eax),%eax
  0x01cc70af: cmp    %eax,%edi
  0x01cc70b1: je     0x01cc70c8
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc70b7: push   $0x55312af0
  0x01cc70bc: call   0x01cc70c1
  0x01cc70c1: pusha  
  0x01cc70c2: call   0x54dedbf0
  0x01cc70c7: hlt    
  0x01cc70c8: pop    %eax
  0x01cc70c9: movl   $0x0,0x13c(%edi)
  0x01cc70d3: movl   $0x0,0x144(%edi)
  0x01cc70dd: cmpl   $0x0,0x4(%edi)
  0x01cc70e4: jne    0x01cb0340
  0x01cc70ea: mov    -0x1c(%ebp),%esi
  0x01cc70ed: mov    -0x18(%ebp),%edi
  0x01cc70f0: ret    
  0x01cc70f1: pop    %ecx
  0x01cc70f2: pop    %edx
  0x01cc70f3: mov    0x10(%ecx),%eax
  0x01cc70f6: test   %eax,%eax
  0x01cc70f8: je     0x01cc711f
  0x01cc70fe: mov    0x10(%ecx),%ecx
  0x01cc7101: mov    0xc(%ecx),%eax
  0x01cc7104: add    $0x8,%eax
  0x01cc7107: mov    %eax,0xc(%ecx)
  0x01cc710a: mov    0x8(%ecx),%eax
  0x01cc710d: and    $0xfffffff8,%eax
  0x01cc7110: add    0xc(%ecx),%eax
  0x01cc7113: cmp    0x55627788,%eax
  0x01cc7119: jae    0x01cc7129
  0x01cc711f: movzbl (%esi),%ebx
  0x01cc7122: jmp    *0x55629838(,%ebx,4)
  0x01cc7129: neg    %edx
  0x01cc712b: add    %esi,%edx
  0x01cc712d: call   0x01cc7137
  0x01cc7132: jmp    0x01cc71cb
  0x01cc7137: push   %edx
  0x01cc7138: lea    0x8(%esp),%eax
  0x01cc713c: cmpl   $0x0,-0x8(%ebp)
  0x01cc7143: je     0x01cc715a
  0x01cc7149: push   $0x55310188
  0x01cc714e: call   0x01cc7153
  0x01cc7153: pusha  
  0x01cc7154: call   0x54dedbf0
  0x01cc7159: hlt    
  0x01cc715a: mov    %esi,-0x1c(%ebp)
  0x01cc715d: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc7165: mov    -0xc(%edi),%edi
  0x01cc7168: push   %edi
  0x01cc7169: mov    %ebp,0x144(%edi)
  0x01cc716f: mov    %eax,0x13c(%edi)
  0x01cc7175: call   0x5505ce70
  0x01cc717a: add    $0x8,%esp
  0x01cc717d: push   %eax
  0x01cc717e: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc7186: mov    -0xc(%eax),%eax
  0x01cc7189: cmp    %eax,%edi
  0x01cc718b: je     0x01cc71a2
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc7191: push   $0x55312af0
  0x01cc7196: call   0x01cc719b
  0x01cc719b: pusha  
  0x01cc719c: call   0x54dedbf0
  0x01cc71a1: hlt    
  0x01cc71a2: pop    %eax
  0x01cc71a3: movl   $0x0,0x13c(%edi)
  0x01cc71ad: movl   $0x0,0x144(%edi)
  0x01cc71b7: cmpl   $0x0,0x4(%edi)
  0x01cc71be: jne    0x01cb0340
  0x01cc71c4: mov    -0x1c(%ebp),%esi
  0x01cc71c7: mov    -0x18(%ebp),%edi
  0x01cc71ca: ret    
  0x01cc71cb: movzbl (%esi),%ebx
  0x01cc71ce: test   %eax,%eax
  0x01cc71d0: je     0x01cc711f
  0x01cc71d6: mov    0x34(%eax),%ecx
  0x01cc71d9: cmp    $0xfffffffe,%ecx
  0x01cc71dc: je     0x01cc711f
  0x01cc71e2: mov    %eax,%ebx
  0x01cc71e4: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc71ec: mov    -0xc(%ecx),%ecx
  0x01cc71ef: call   0x01cc71f9
  0x01cc71f4: jmp    0x01cc728c
  0x01cc71f9: lea    0x4(%esp),%eax
  0x01cc71fd: cmpl   $0x0,-0x8(%ebp)
  0x01cc7204: je     0x01cc721b
  0x01cc720a: push   $0x55310188
  0x01cc720f: call   0x01cc7214
  0x01cc7214: pusha  
  0x01cc7215: call   0x54dedbf0
  0x01cc721a: hlt    
  0x01cc721b: mov    %esi,-0x1c(%ebp)
  0x01cc721e: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc7226: mov    -0xc(%edi),%edi
  0x01cc7229: push   %edi
  0x01cc722a: mov    %ebp,0x144(%edi)
  0x01cc7230: mov    %eax,0x13c(%edi)
  0x01cc7236: call   0x55217020
  0x01cc723b: add    $0x4,%esp
  0x01cc723e: push   %eax
  0x01cc723f: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc7247: mov    -0xc(%eax),%eax
  0x01cc724a: cmp    %eax,%edi
  0x01cc724c: je     0x01cc7263
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc7252: push   $0x55312af0
  0x01cc7257: call   0x01cc725c
  0x01cc725c: pusha  
  0x01cc725d: call   0x54dedbf0
  0x01cc7262: hlt    
  0x01cc7263: pop    %eax
  0x01cc7264: movl   $0x0,0x13c(%edi)
  0x01cc726e: movl   $0x0,0x144(%edi)
  0x01cc7278: cmpl   $0x0,0x4(%edi)
  0x01cc727f: jne    0x01cb0340
  0x01cc7285: mov    -0x1c(%ebp),%esi
  0x01cc7288: mov    -0x18(%ebp),%edi
  0x01cc728b: ret    
  0x01cc728c: mov    %eax,%ecx
  0x01cc728e: mov    -0x4(%ebp),%edx
  0x01cc7291: mov    %ebp,%esp
  0x01cc7293: pop    %ebp
  0x01cc7294: pop    %edi
  0x01cc7295: mov    %edx,%esp
  0x01cc7297: and    $0xfffffff0,%esp
  0x01cc729a: push   %edi
  0x01cc729b: jmp    *0x54(%ebx)
  0x01cc729e: movzbl 0x5(%esi),%ebx
  0x01cc72a2: add    $0x5,%esi
  0x01cc72a5: jmp    *0x55629838(,%ebx,4)
  0x01cc72ac: int3   
  0x01cc72ad: int3   
  0x01cc72ae: int3   
  0x01cc72af: int3   

----------------------------------------------------------------------
jsr_w  201 jsr_w  [0x01cc72c0, 0x01cc7310]  80 bytes

  0x01cc72c0: sub    $0x4,%esp
  0x01cc72c3: fstps  (%esp)
  0x01cc72c6: jmp    0x01cc72e4
  0x01cc72cb: sub    $0x8,%esp
  0x01cc72ce: fstpl  (%esp)
  0x01cc72d1: jmp    0x01cc72e4
  0x01cc72d6: push   %edx
  0x01cc72d7: push   %eax
  0x01cc72d8: jmp    0x01cc72e4
  0x01cc72dd: push   %eax
  0x01cc72de: jmp    0x01cc72e4
  0x01cc72e3: push   %eax
  0x01cc72e4: mov    -0xc(%ebp),%ecx
  0x01cc72e7: mov    0x1(%esi),%edx
  0x01cc72ea: bswap  %edx
  0x01cc72ec: movzbl (%esi,%edx,1),%ebx
  0x01cc72f0: lea    -0x23(%esi),%eax
  0x01cc72f3: sub    0x8(%ecx),%eax
  0x01cc72f6: add    %edx,%esi
  0x01cc72f8: push   %eax
  0x01cc72f9: jmp    *0x5562bc38(,%ebx,4)
  0x01cc7300: movzbl 0x5(%esi),%ebx
  0x01cc7304: add    $0x5,%esi
  0x01cc7307: jmp    *0x55629838(,%ebx,4)
  0x01cc730e: nop    
  0x01cc730f: nop    

----------------------------------------------------------------------
breakpoint  202 breakpoint  [0x01cc7320, 0x01cc74b0]  400 bytes

  0x01cc7320: sub    $0x4,%esp
  0x01cc7323: fstps  (%esp)
  0x01cc7326: jmp    0x01cc7344
  0x01cc732b: sub    $0x8,%esp
  0x01cc732e: fstpl  (%esp)
  0x01cc7331: jmp    0x01cc7344
  0x01cc7336: push   %edx
  0x01cc7337: push   %eax
  0x01cc7338: jmp    0x01cc7344
  0x01cc733d: push   %eax
  0x01cc733e: jmp    0x01cc7344
  0x01cc7343: push   %eax
  0x01cc7344: mov    -0xc(%ebp),%ecx
  0x01cc7347: call   0x01cc7351
  0x01cc734c: jmp    0x01cc73e6
  0x01cc7351: push   %esi
  0x01cc7352: push   %ecx
  0x01cc7353: lea    0xc(%esp),%eax
  0x01cc7357: cmpl   $0x0,-0x8(%ebp)
  0x01cc735e: je     0x01cc7375
  0x01cc7364: push   $0x55310188
  0x01cc7369: call   0x01cc736e
  0x01cc736e: pusha  
  0x01cc736f: call   0x54dedbf0
  0x01cc7374: hlt    
  0x01cc7375: mov    %esi,-0x1c(%ebp)
  0x01cc7378: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc7380: mov    -0xc(%edi),%edi
  0x01cc7383: push   %edi
  0x01cc7384: mov    %ebp,0x144(%edi)
  0x01cc738a: mov    %eax,0x13c(%edi)
  0x01cc7390: call   0x5505be40
  0x01cc7395: add    $0xc,%esp
  0x01cc7398: push   %eax
  0x01cc7399: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc73a1: mov    -0xc(%eax),%eax
  0x01cc73a4: cmp    %eax,%edi
  0x01cc73a6: je     0x01cc73bd
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc73ac: push   $0x55312af0
  0x01cc73b1: call   0x01cc73b6
  0x01cc73b6: pusha  
  0x01cc73b7: call   0x54dedbf0
  0x01cc73bc: hlt    
  0x01cc73bd: pop    %eax
  0x01cc73be: movl   $0x0,0x13c(%edi)
  0x01cc73c8: movl   $0x0,0x144(%edi)
  0x01cc73d2: cmpl   $0x0,0x4(%edi)
  0x01cc73d9: jne    0x01cb0340
  0x01cc73df: mov    -0x1c(%ebp),%esi
  0x01cc73e2: mov    -0x18(%ebp),%edi
  0x01cc73e5: ret    
  0x01cc73e6: mov    %eax,%ebx
  0x01cc73e8: mov    -0xc(%ebp),%ecx
  0x01cc73eb: call   0x01cc73f5
  0x01cc73f0: jmp    0x01cc748a
  0x01cc73f5: push   %esi
  0x01cc73f6: push   %ecx
  0x01cc73f7: lea    0xc(%esp),%eax
  0x01cc73fb: cmpl   $0x0,-0x8(%ebp)
  0x01cc7402: je     0x01cc7419
  0x01cc7408: push   $0x55310188
  0x01cc740d: call   0x01cc7412
  0x01cc7412: pusha  
  0x01cc7413: call   0x54dedbf0
  0x01cc7418: hlt    
  0x01cc7419: mov    %esi,-0x1c(%ebp)
  0x01cc741c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc7424: mov    -0xc(%edi),%edi
  0x01cc7427: push   %edi
  0x01cc7428: mov    %ebp,0x144(%edi)
  0x01cc742e: mov    %eax,0x13c(%edi)
  0x01cc7434: call   0x5505bd30
  0x01cc7439: add    $0xc,%esp
  0x01cc743c: push   %eax
  0x01cc743d: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc7445: mov    -0xc(%eax),%eax
  0x01cc7448: cmp    %eax,%edi
  0x01cc744a: je     0x01cc7461
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc7450: push   $0x55312af0
  0x01cc7455: call   0x01cc745a
  0x01cc745a: pusha  
  0x01cc745b: call   0x54dedbf0
  0x01cc7460: hlt    
  0x01cc7461: pop    %eax
  0x01cc7462: movl   $0x0,0x13c(%edi)
  0x01cc746c: movl   $0x0,0x144(%edi)
  0x01cc7476: cmpl   $0x0,0x4(%edi)
  0x01cc747d: jne    0x01cb0340
  0x01cc7483: mov    -0x1c(%ebp),%esi
  0x01cc7486: mov    -0x18(%ebp),%edi
  0x01cc7489: ret    
  0x01cc748a: jmp    *0x5562bc38(,%ebx,4)
  0x01cc7491: push   $0x552fd97c
  0x01cc7496: call   0x01cc749b
  0x01cc749b: pusha  
  0x01cc749c: call   0x54dedbf0
  0x01cc74a1: hlt    
  0x01cc74a2: nop    
  0x01cc74a3: nop    
  0x01cc74a4: int3   
  0x01cc74a5: int3   
  0x01cc74a6: int3   
  0x01cc74a7: int3   
  0x01cc74a8: int3   
  0x01cc74a9: int3   
  0x01cc74aa: int3   
  0x01cc74ab: int3   
  0x01cc74ac: int3   
  0x01cc74ad: int3   
  0x01cc74ae: int3   
  0x01cc74af: int3   

----------------------------------------------------------------------
fast_agetfield  203 fast_agetfield  [0x01cc74c0, 0x01cc74f0]  48 bytes

  0x01cc74c0: pop    %eax
  0x01cc74c1: movzwl 0x1(%esi),%ebx
  0x01cc74c5: mov    -0x14(%ebp),%ecx
  0x01cc74c8: shl    $0x2,%ebx
  0x01cc74cb: mov    0x10(%ecx,%ebx,4),%ebx
  0x01cc74cf: cmp    (%eax),%eax
  0x01cc74d1: mov    (%eax,%ebx,1),%eax
  0x01cc74d4: movzbl 0x3(%esi),%ebx
  0x01cc74d8: add    $0x3,%esi
  0x01cc74db: jmp    *0x55629438(,%ebx,4)
  0x01cc74e2: nop    
  0x01cc74e3: nop    
  0x01cc74e4: int3   
  0x01cc74e5: int3   
  0x01cc74e6: int3   
  0x01cc74e7: int3   
  0x01cc74e8: int3   
  0x01cc74e9: int3   
  0x01cc74ea: int3   
  0x01cc74eb: int3   
  0x01cc74ec: int3   
  0x01cc74ed: int3   
  0x01cc74ee: int3   
  0x01cc74ef: int3   

----------------------------------------------------------------------
fast_bgetfield  204 fast_bgetfield  [0x01cc7500, 0x01cc7530]  48 bytes

  0x01cc7500: pop    %eax
  0x01cc7501: movzwl 0x1(%esi),%ebx
  0x01cc7505: mov    -0x14(%ebp),%ecx
  0x01cc7508: shl    $0x2,%ebx
  0x01cc750b: mov    0x10(%ecx,%ebx,4),%ebx
  0x01cc750f: cmp    (%eax),%eax
  0x01cc7511: movsbl (%eax,%ebx,1),%eax
  0x01cc7515: movzbl 0x3(%esi),%ebx
  0x01cc7519: add    $0x3,%esi
  0x01cc751c: jmp    *0x55628438(,%ebx,4)
  0x01cc7523: nop    
  0x01cc7524: int3   
  0x01cc7525: int3   
  0x01cc7526: int3   
  0x01cc7527: int3   
  0x01cc7528: int3   
  0x01cc7529: int3   
  0x01cc752a: int3   
  0x01cc752b: int3   
  0x01cc752c: int3   
  0x01cc752d: int3   
  0x01cc752e: int3   
  0x01cc752f: int3   

----------------------------------------------------------------------
fast_cgetfield  205 fast_cgetfield  [0x01cc7540, 0x01cc7570]  48 bytes

  0x01cc7540: pop    %eax
  0x01cc7541: movzwl 0x1(%esi),%ebx
  0x01cc7545: mov    -0x14(%ebp),%ecx
  0x01cc7548: shl    $0x2,%ebx
  0x01cc754b: mov    0x10(%ecx,%ebx,4),%ebx
  0x01cc754f: cmp    (%eax),%eax
  0x01cc7551: movzwl (%eax,%ebx,1),%eax
  0x01cc7555: movzbl 0x3(%esi),%ebx
  0x01cc7559: add    $0x3,%esi
  0x01cc755c: jmp    *0x55628438(,%ebx,4)
  0x01cc7563: nop    
  0x01cc7564: int3   
  0x01cc7565: int3   
  0x01cc7566: int3   
  0x01cc7567: int3   
  0x01cc7568: int3   
  0x01cc7569: int3   
  0x01cc756a: int3   
  0x01cc756b: int3   
  0x01cc756c: int3   
  0x01cc756d: int3   
  0x01cc756e: int3   
  0x01cc756f: int3   

----------------------------------------------------------------------
fast_dgetfield  206 fast_dgetfield  [0x01cc7580, 0x01cc75b0]  48 bytes

  0x01cc7580: pop    %eax
  0x01cc7581: movzwl 0x1(%esi),%ebx
  0x01cc7585: mov    -0x14(%ebp),%ecx
  0x01cc7588: shl    $0x2,%ebx
  0x01cc758b: mov    0x10(%ecx,%ebx,4),%ebx
  0x01cc758f: cmp    (%eax),%eax
  0x01cc7591: fldl   (%eax,%ebx,1)
  0x01cc7594: movzbl 0x3(%esi),%ebx
  0x01cc7598: add    $0x3,%esi
  0x01cc759b: jmp    *0x55629038(,%ebx,4)
  0x01cc75a2: nop    
  0x01cc75a3: nop    
  0x01cc75a4: int3   
  0x01cc75a5: int3   
  0x01cc75a6: int3   
  0x01cc75a7: int3   
  0x01cc75a8: int3   
  0x01cc75a9: int3   
  0x01cc75aa: int3   
  0x01cc75ab: int3   
  0x01cc75ac: int3   
  0x01cc75ad: int3   
  0x01cc75ae: int3   
  0x01cc75af: int3   

----------------------------------------------------------------------
fast_fgetfield  207 fast_fgetfield  [0x01cc75c0, 0x01cc75f0]  48 bytes

  0x01cc75c0: pop    %eax
  0x01cc75c1: movzwl 0x1(%esi),%ebx
  0x01cc75c5: mov    -0x14(%ebp),%ecx
  0x01cc75c8: shl    $0x2,%ebx
  0x01cc75cb: mov    0x10(%ecx,%ebx,4),%ebx
  0x01cc75cf: cmp    (%eax),%eax
  0x01cc75d1: flds   (%eax,%ebx,1)
  0x01cc75d4: movzbl 0x3(%esi),%ebx
  0x01cc75d8: add    $0x3,%esi
  0x01cc75db: jmp    *0x55628c38(,%ebx,4)
  0x01cc75e2: nop    
  0x01cc75e3: nop    
  0x01cc75e4: int3   
  0x01cc75e5: int3   
  0x01cc75e6: int3   
  0x01cc75e7: int3   
  0x01cc75e8: int3   
  0x01cc75e9: int3   
  0x01cc75ea: int3   
  0x01cc75eb: int3   
  0x01cc75ec: int3   
  0x01cc75ed: int3   
  0x01cc75ee: int3   
  0x01cc75ef: int3   

----------------------------------------------------------------------
fast_igetfield  208 fast_igetfield  [0x01cc7600, 0x01cc7630]  48 bytes

  0x01cc7600: pop    %eax
  0x01cc7601: movzwl 0x1(%esi),%ebx
  0x01cc7605: mov    -0x14(%ebp),%ecx
  0x01cc7608: shl    $0x2,%ebx
  0x01cc760b: mov    0x10(%ecx,%ebx,4),%ebx
  0x01cc760f: cmp    (%eax),%eax
  0x01cc7611: mov    (%eax,%ebx,1),%eax
  0x01cc7614: movzbl 0x3(%esi),%ebx
  0x01cc7618: add    $0x3,%esi
  0x01cc761b: jmp    *0x55628438(,%ebx,4)
  0x01cc7622: nop    
  0x01cc7623: nop    
  0x01cc7624: int3   
  0x01cc7625: int3   
  0x01cc7626: int3   
  0x01cc7627: int3   
  0x01cc7628: int3   
  0x01cc7629: int3   
  0x01cc762a: int3   
  0x01cc762b: int3   
  0x01cc762c: int3   
  0x01cc762d: int3   
  0x01cc762e: int3   
  0x01cc762f: int3   

----------------------------------------------------------------------
fast_lgetfield  209 fast_lgetfield  [0x01cc7640, 0x01cc7670]  48 bytes

  0x01cc7640: pop    %eax
  0x01cc7641: movzwl 0x1(%esi),%ebx
  0x01cc7645: mov    -0x14(%ebp),%ecx
  0x01cc7648: shl    $0x2,%ebx
  0x01cc764b: mov    0x10(%ecx,%ebx,4),%ebx
  0x01cc764f: cmp    (%eax),%eax
  0x01cc7651: push   $0x5531aa4c
  0x01cc7656: call   0x01cc765b
  0x01cc765b: pusha  
  0x01cc765c: call   0x54dedbf0
  0x01cc7661: hlt    
  0x01cc7662: movzbl 0x3(%esi),%ebx
  0x01cc7666: add    $0x3,%esi
  0x01cc7669: jmp    *0x55628838(,%ebx,4)

----------------------------------------------------------------------
fast_sgetfield  210 fast_sgetfield  [0x01cc7680, 0x01cc76b0]  48 bytes

  0x01cc7680: pop    %eax
  0x01cc7681: movzwl 0x1(%esi),%ebx
  0x01cc7685: mov    -0x14(%ebp),%ecx
  0x01cc7688: shl    $0x2,%ebx
  0x01cc768b: mov    0x10(%ecx,%ebx,4),%ebx
  0x01cc768f: cmp    (%eax),%eax
  0x01cc7691: movswl (%eax,%ebx,1),%eax
  0x01cc7695: movzbl 0x3(%esi),%ebx
  0x01cc7699: add    $0x3,%esi
  0x01cc769c: jmp    *0x55628438(,%ebx,4)
  0x01cc76a3: nop    
  0x01cc76a4: int3   
  0x01cc76a5: int3   
  0x01cc76a6: int3   
  0x01cc76a7: int3   
  0x01cc76a8: int3   
  0x01cc76a9: int3   
  0x01cc76aa: int3   
  0x01cc76ab: int3   
  0x01cc76ac: int3   
  0x01cc76ad: int3   
  0x01cc76ae: int3   
  0x01cc76af: int3   

----------------------------------------------------------------------
fast_aputfield  211 fast_aputfield  [0x01cc76c0, 0x01cc7720]  96 bytes

  0x01cc76c0: pop    %eax
  0x01cc76c1: movzwl 0x1(%esi),%ebx
  0x01cc76c5: mov    -0x14(%ebp),%ecx
  0x01cc76c8: shl    $0x2,%ebx
  0x01cc76cb: mov    0x14(%ecx,%ebx,4),%edx
  0x01cc76cf: mov    0x10(%ecx,%ebx,4),%ebx
  0x01cc76d3: shr    $0x15,%edx
  0x01cc76d6: and    $0x1,%edx
  0x01cc76d9: test   %edx,%edx
  0x01cc76db: je     0x01cc76fc
  0x01cc76e1: pop    %ecx
  0x01cc76e2: cmp    (%ecx),%eax
  0x01cc76e4: mov    %eax,(%ecx,%ebx,1)
  0x01cc76e7: shr    $0x9,%ecx
  0x01cc76ea: movb   $0x0,0x12c7000(,%ecx,1)
  0x01cc76f2: lock addl $0x0,(%esp)
  0x01cc76f7: jmp    0x01cc770d
  0x01cc76fc: pop    %ecx
  0x01cc76fd: cmp    (%ecx),%eax
  0x01cc76ff: mov    %eax,(%ecx,%ebx,1)
  0x01cc7702: shr    $0x9,%ecx
  0x01cc7705: movb   $0x0,0x12c7000(,%ecx,1)
  0x01cc770d: movzbl 0x3(%esi),%ebx
  0x01cc7711: add    $0x3,%esi
  0x01cc7714: jmp    *0x55629838(,%ebx,4)
  0x01cc771b: nop    
  0x01cc771c: int3   
  0x01cc771d: int3   
  0x01cc771e: int3   
  0x01cc771f: int3   

----------------------------------------------------------------------
fast_bputfield  212 fast_bputfield  [0x01cc7730, 0x01cc7780]  80 bytes

  0x01cc7730: pop    %eax
  0x01cc7731: movzwl 0x1(%esi),%ebx
  0x01cc7735: mov    -0x14(%ebp),%ecx
  0x01cc7738: shl    $0x2,%ebx
  0x01cc773b: mov    0x14(%ecx,%ebx,4),%edx
  0x01cc773f: mov    0x10(%ecx,%ebx,4),%ebx
  0x01cc7743: shr    $0x15,%edx
  0x01cc7746: and    $0x1,%edx
  0x01cc7749: test   %edx,%edx
  0x01cc774b: je     0x01cc7761
  0x01cc7751: pop    %ecx
  0x01cc7752: cmp    (%ecx),%eax
  0x01cc7754: mov    %al,(%ecx,%ebx,1)
  0x01cc7757: lock addl $0x0,(%esp)
  0x01cc775c: jmp    0x01cc7767
  0x01cc7761: pop    %ecx
  0x01cc7762: cmp    (%ecx),%eax
  0x01cc7764: mov    %al,(%ecx,%ebx,1)
  0x01cc7767: movzbl 0x3(%esi),%ebx
  0x01cc776b: add    $0x3,%esi
  0x01cc776e: jmp    *0x55629838(,%ebx,4)
  0x01cc7775: nop    
  0x01cc7776: nop    
  0x01cc7777: nop    
  0x01cc7778: int3   
  0x01cc7779: int3   
  0x01cc777a: int3   
  0x01cc777b: int3   
  0x01cc777c: int3   
  0x01cc777d: int3   
  0x01cc777e: int3   
  0x01cc777f: int3   

----------------------------------------------------------------------
fast_cputfield  213 fast_cputfield  [0x01cc7790, 0x01cc77e0]  80 bytes

  0x01cc7790: pop    %eax
  0x01cc7791: movzwl 0x1(%esi),%ebx
  0x01cc7795: mov    -0x14(%ebp),%ecx
  0x01cc7798: shl    $0x2,%ebx
  0x01cc779b: mov    0x14(%ecx,%ebx,4),%edx
  0x01cc779f: mov    0x10(%ecx,%ebx,4),%ebx
  0x01cc77a3: shr    $0x15,%edx
  0x01cc77a6: and    $0x1,%edx
  0x01cc77a9: test   %edx,%edx
  0x01cc77ab: je     0x01cc77c2
  0x01cc77b1: pop    %ecx
  0x01cc77b2: cmp    (%ecx),%eax
  0x01cc77b4: mov    %ax,(%ecx,%ebx,1)
  0x01cc77b8: lock addl $0x0,(%esp)
  0x01cc77bd: jmp    0x01cc77c9
  0x01cc77c2: pop    %ecx
  0x01cc77c3: cmp    (%ecx),%eax
  0x01cc77c5: mov    %ax,(%ecx,%ebx,1)
  0x01cc77c9: movzbl 0x3(%esi),%ebx
  0x01cc77cd: add    $0x3,%esi
  0x01cc77d0: jmp    *0x55629838(,%ebx,4)
  0x01cc77d7: nop    
  0x01cc77d8: int3   
  0x01cc77d9: int3   
  0x01cc77da: int3   
  0x01cc77db: int3   
  0x01cc77dc: int3   
  0x01cc77dd: int3   
  0x01cc77de: int3   
  0x01cc77df: int3   

----------------------------------------------------------------------
fast_dputfield  214 fast_dputfield  [0x01cc77f0, 0x01cc7840]  80 bytes

  0x01cc77f0: fldl   (%esp)
  0x01cc77f3: add    $0x8,%esp
  0x01cc77f6: movzwl 0x1(%esi),%ebx
  0x01cc77fa: mov    -0x14(%ebp),%ecx
  0x01cc77fd: shl    $0x2,%ebx
  0x01cc7800: mov    0x14(%ecx,%ebx,4),%edx
  0x01cc7804: mov    0x10(%ecx,%ebx,4),%ebx
  0x01cc7808: shr    $0x15,%edx
  0x01cc780b: and    $0x1,%edx
  0x01cc780e: test   %edx,%edx
  0x01cc7810: je     0x01cc7826
  0x01cc7816: pop    %ecx
  0x01cc7817: cmp    (%ecx),%eax
  0x01cc7819: fstpl  (%ecx,%ebx,1)
  0x01cc781c: lock addl $0x0,(%esp)
  0x01cc7821: jmp    0x01cc782c
  0x01cc7826: pop    %ecx
  0x01cc7827: cmp    (%ecx),%eax
  0x01cc7829: fstpl  (%ecx,%ebx,1)
  0x01cc782c: movzbl 0x3(%esi),%ebx
  0x01cc7830: add    $0x3,%esi
  0x01cc7833: jmp    *0x55629838(,%ebx,4)
  0x01cc783a: nop    
  0x01cc783b: nop    
  0x01cc783c: int3   
  0x01cc783d: int3   
  0x01cc783e: int3   
  0x01cc783f: int3   

----------------------------------------------------------------------
fast_fputfield  215 fast_fputfield  [0x01cc7850, 0x01cc78a0]  80 bytes

  0x01cc7850: flds   (%esp)
  0x01cc7853: add    $0x4,%esp
  0x01cc7856: movzwl 0x1(%esi),%ebx
  0x01cc785a: mov    -0x14(%ebp),%ecx
  0x01cc785d: shl    $0x2,%ebx
  0x01cc7860: mov    0x14(%ecx,%ebx,4),%edx
  0x01cc7864: mov    0x10(%ecx,%ebx,4),%ebx
  0x01cc7868: shr    $0x15,%edx
  0x01cc786b: and    $0x1,%edx
  0x01cc786e: test   %edx,%edx
  0x01cc7870: je     0x01cc7886
  0x01cc7876: pop    %ecx
  0x01cc7877: cmp    (%ecx),%eax
  0x01cc7879: fstps  (%ecx,%ebx,1)
  0x01cc787c: lock addl $0x0,(%esp)
  0x01cc7881: jmp    0x01cc788c
  0x01cc7886: pop    %ecx
  0x01cc7887: cmp    (%ecx),%eax
  0x01cc7889: fstps  (%ecx,%ebx,1)
  0x01cc788c: movzbl 0x3(%esi),%ebx
  0x01cc7890: add    $0x3,%esi
  0x01cc7893: jmp    *0x55629838(,%ebx,4)
  0x01cc789a: nop    
  0x01cc789b: nop    
  0x01cc789c: int3   
  0x01cc789d: int3   
  0x01cc789e: int3   
  0x01cc789f: int3   

----------------------------------------------------------------------
fast_iputfield  216 fast_iputfield  [0x01cc78b0, 0x01cc7900]  80 bytes

  0x01cc78b0: pop    %eax
  0x01cc78b1: movzwl 0x1(%esi),%ebx
  0x01cc78b5: mov    -0x14(%ebp),%ecx
  0x01cc78b8: shl    $0x2,%ebx
  0x01cc78bb: mov    0x14(%ecx,%ebx,4),%edx
  0x01cc78bf: mov    0x10(%ecx,%ebx,4),%ebx
  0x01cc78c3: shr    $0x15,%edx
  0x01cc78c6: and    $0x1,%edx
  0x01cc78c9: test   %edx,%edx
  0x01cc78cb: je     0x01cc78e1
  0x01cc78d1: pop    %ecx
  0x01cc78d2: cmp    (%ecx),%eax
  0x01cc78d4: mov    %eax,(%ecx,%ebx,1)
  0x01cc78d7: lock addl $0x0,(%esp)
  0x01cc78dc: jmp    0x01cc78e7
  0x01cc78e1: pop    %ecx
  0x01cc78e2: cmp    (%ecx),%eax
  0x01cc78e4: mov    %eax,(%ecx,%ebx,1)
  0x01cc78e7: movzbl 0x3(%esi),%ebx
  0x01cc78eb: add    $0x3,%esi
  0x01cc78ee: jmp    *0x55629838(,%ebx,4)
  0x01cc78f5: nop    
  0x01cc78f6: nop    
  0x01cc78f7: nop    
  0x01cc78f8: int3   
  0x01cc78f9: int3   
  0x01cc78fa: int3   
  0x01cc78fb: int3   
  0x01cc78fc: int3   
  0x01cc78fd: int3   
  0x01cc78fe: int3   
  0x01cc78ff: int3   

----------------------------------------------------------------------
fast_lputfield  217 fast_lputfield  [0x01cc7910, 0x01cc7970]  96 bytes

  0x01cc7910: pop    %eax
  0x01cc7911: pop    %edx
  0x01cc7912: movzwl 0x1(%esi),%ebx
  0x01cc7916: mov    -0x14(%ebp),%ecx
  0x01cc7919: shl    $0x2,%ebx
  0x01cc791c: push   %edx
  0x01cc791d: mov    0x14(%ecx,%ebx,4),%edx
  0x01cc7921: mov    0x10(%ecx,%ebx,4),%ebx
  0x01cc7925: shr    $0x15,%edx
  0x01cc7928: and    $0x1,%edx
  0x01cc792b: test   %edx,%edx
  0x01cc792d: je     0x01cc7948
  0x01cc7933: pop    %edx
  0x01cc7934: pop    %ecx
  0x01cc7935: cmp    (%ecx),%eax
  0x01cc7937: mov    %edx,0x4(%ecx,%ebx,1)
  0x01cc793b: mov    %eax,(%ecx,%ebx,1)
  0x01cc793e: lock addl $0x0,(%esp)
  0x01cc7943: jmp    0x01cc7953
  0x01cc7948: pop    %edx
  0x01cc7949: pop    %ecx
  0x01cc794a: cmp    (%ecx),%eax
  0x01cc794c: mov    %edx,0x4(%ecx,%ebx,1)
  0x01cc7950: mov    %eax,(%ecx,%ebx,1)
  0x01cc7953: movzbl 0x3(%esi),%ebx
  0x01cc7957: add    $0x3,%esi
  0x01cc795a: jmp    *0x55629838(,%ebx,4)
  0x01cc7961: nop    
  0x01cc7962: nop    
  0x01cc7963: nop    
  0x01cc7964: int3   
  0x01cc7965: int3   
  0x01cc7966: int3   
  0x01cc7967: int3   
  0x01cc7968: int3   
  0x01cc7969: int3   
  0x01cc796a: int3   
  0x01cc796b: int3   
  0x01cc796c: int3   
  0x01cc796d: int3   
  0x01cc796e: int3   
  0x01cc796f: int3   

----------------------------------------------------------------------
fast_sputfield  218 fast_sputfield  [0x01cc7980, 0x01cc79d0]  80 bytes

  0x01cc7980: pop    %eax
  0x01cc7981: movzwl 0x1(%esi),%ebx
  0x01cc7985: mov    -0x14(%ebp),%ecx
  0x01cc7988: shl    $0x2,%ebx
  0x01cc798b: mov    0x14(%ecx,%ebx,4),%edx
  0x01cc798f: mov    0x10(%ecx,%ebx,4),%ebx
  0x01cc7993: shr    $0x15,%edx
  0x01cc7996: and    $0x1,%edx
  0x01cc7999: test   %edx,%edx
  0x01cc799b: je     0x01cc79b2
  0x01cc79a1: pop    %ecx
  0x01cc79a2: cmp    (%ecx),%eax
  0x01cc79a4: mov    %ax,(%ecx,%ebx,1)
  0x01cc79a8: lock addl $0x0,(%esp)
  0x01cc79ad: jmp    0x01cc79b9
  0x01cc79b2: pop    %ecx
  0x01cc79b3: cmp    (%ecx),%eax
  0x01cc79b5: mov    %ax,(%ecx,%ebx,1)
  0x01cc79b9: movzbl 0x3(%esi),%ebx
  0x01cc79bd: add    $0x3,%esi
  0x01cc79c0: jmp    *0x55629838(,%ebx,4)
  0x01cc79c7: nop    
  0x01cc79c8: int3   
  0x01cc79c9: int3   
  0x01cc79ca: int3   
  0x01cc79cb: int3   
  0x01cc79cc: int3   
  0x01cc79cd: int3   
  0x01cc79ce: int3   
  0x01cc79cf: int3   

----------------------------------------------------------------------
fast_aload_0  219 fast_aload_0  [0x01cc79e0, 0x01cc7a20]  64 bytes

  0x01cc79e0: sub    $0x4,%esp
  0x01cc79e3: fstps  (%esp)
  0x01cc79e6: jmp    0x01cc7a04
  0x01cc79eb: sub    $0x8,%esp
  0x01cc79ee: fstpl  (%esp)
  0x01cc79f1: jmp    0x01cc7a04
  0x01cc79f6: push   %edx
  0x01cc79f7: push   %eax
  0x01cc79f8: jmp    0x01cc7a04
  0x01cc79fd: push   %eax
  0x01cc79fe: jmp    0x01cc7a04
  0x01cc7a03: push   %eax
  0x01cc7a04: mov    (%edi),%eax
  0x01cc7a06: movzbl 0x1(%esi),%ebx
  0x01cc7a0a: inc    %esi
  0x01cc7a0b: jmp    *0x55629438(,%ebx,4)
  0x01cc7a12: nop    
  0x01cc7a13: nop    
  0x01cc7a14: int3   
  0x01cc7a15: int3   
  0x01cc7a16: int3   
  0x01cc7a17: int3   
  0x01cc7a18: int3   
  0x01cc7a19: int3   
  0x01cc7a1a: int3   
  0x01cc7a1b: int3   
  0x01cc7a1c: int3   
  0x01cc7a1d: int3   
  0x01cc7a1e: int3   
  0x01cc7a1f: int3   

----------------------------------------------------------------------
fast_iaccess_0  220 fast_iaccess_0  [0x01cc7a30, 0x01cc7a80]  80 bytes

  0x01cc7a30: sub    $0x4,%esp
  0x01cc7a33: fstps  (%esp)
  0x01cc7a36: jmp    0x01cc7a54
  0x01cc7a3b: sub    $0x8,%esp
  0x01cc7a3e: fstpl  (%esp)
  0x01cc7a41: jmp    0x01cc7a54
  0x01cc7a46: push   %edx
  0x01cc7a47: push   %eax
  0x01cc7a48: jmp    0x01cc7a54
  0x01cc7a4d: push   %eax
  0x01cc7a4e: jmp    0x01cc7a54
  0x01cc7a53: push   %eax
  0x01cc7a54: mov    (%edi),%eax
  0x01cc7a56: movzwl 0x2(%esi),%edx
  0x01cc7a5a: mov    -0x14(%ebp),%ecx
  0x01cc7a5d: shl    $0x2,%edx
  0x01cc7a60: mov    0x10(%ecx,%edx,4),%ebx
  0x01cc7a64: inc    %esi
  0x01cc7a65: cmp    (%eax),%eax
  0x01cc7a67: mov    (%eax,%ebx,1),%eax
  0x01cc7a6a: dec    %esi
  0x01cc7a6b: movzbl 0x4(%esi),%ebx
  0x01cc7a6f: add    $0x4,%esi
  0x01cc7a72: jmp    *0x55628438(,%ebx,4)
  0x01cc7a79: nop    
  0x01cc7a7a: nop    
  0x01cc7a7b: nop    
  0x01cc7a7c: int3   
  0x01cc7a7d: int3   
  0x01cc7a7e: int3   
  0x01cc7a7f: int3   

----------------------------------------------------------------------
fast_aaccess_0  221 fast_aaccess_0  [0x01cc7a90, 0x01cc7ae0]  80 bytes

  0x01cc7a90: sub    $0x4,%esp
  0x01cc7a93: fstps  (%esp)
  0x01cc7a96: jmp    0x01cc7ab4
  0x01cc7a9b: sub    $0x8,%esp
  0x01cc7a9e: fstpl  (%esp)
  0x01cc7aa1: jmp    0x01cc7ab4
  0x01cc7aa6: push   %edx
  0x01cc7aa7: push   %eax
  0x01cc7aa8: jmp    0x01cc7ab4
  0x01cc7aad: push   %eax
  0x01cc7aae: jmp    0x01cc7ab4
  0x01cc7ab3: push   %eax
  0x01cc7ab4: mov    (%edi),%eax
  0x01cc7ab6: movzwl 0x2(%esi),%edx
  0x01cc7aba: mov    -0x14(%ebp),%ecx
  0x01cc7abd: shl    $0x2,%edx
  0x01cc7ac0: mov    0x10(%ecx,%edx,4),%ebx
  0x01cc7ac4: inc    %esi
  0x01cc7ac5: cmp    (%eax),%eax
  0x01cc7ac7: mov    (%eax,%ebx,1),%eax
  0x01cc7aca: dec    %esi
  0x01cc7acb: movzbl 0x4(%esi),%ebx
  0x01cc7acf: add    $0x4,%esi
  0x01cc7ad2: jmp    *0x55629438(,%ebx,4)
  0x01cc7ad9: nop    
  0x01cc7ada: nop    
  0x01cc7adb: nop    
  0x01cc7adc: int3   
  0x01cc7add: int3   
  0x01cc7ade: int3   
  0x01cc7adf: int3   

----------------------------------------------------------------------
fast_faccess_0  222 fast_faccess_0  [0x01cc7af0, 0x01cc7b40]  80 bytes

  0x01cc7af0: sub    $0x4,%esp
  0x01cc7af3: fstps  (%esp)
  0x01cc7af6: jmp    0x01cc7b14
  0x01cc7afb: sub    $0x8,%esp
  0x01cc7afe: fstpl  (%esp)
  0x01cc7b01: jmp    0x01cc7b14
  0x01cc7b06: push   %edx
  0x01cc7b07: push   %eax
  0x01cc7b08: jmp    0x01cc7b14
  0x01cc7b0d: push   %eax
  0x01cc7b0e: jmp    0x01cc7b14
  0x01cc7b13: push   %eax
  0x01cc7b14: mov    (%edi),%eax
  0x01cc7b16: movzwl 0x2(%esi),%edx
  0x01cc7b1a: mov    -0x14(%ebp),%ecx
  0x01cc7b1d: shl    $0x2,%edx
  0x01cc7b20: mov    0x10(%ecx,%edx,4),%ebx
  0x01cc7b24: inc    %esi
  0x01cc7b25: cmp    (%eax),%eax
  0x01cc7b27: flds   (%eax,%ebx,1)
  0x01cc7b2a: dec    %esi
  0x01cc7b2b: movzbl 0x4(%esi),%ebx
  0x01cc7b2f: add    $0x4,%esi
  0x01cc7b32: jmp    *0x55628c38(,%ebx,4)
  0x01cc7b39: nop    
  0x01cc7b3a: nop    
  0x01cc7b3b: nop    
  0x01cc7b3c: int3   
  0x01cc7b3d: int3   
  0x01cc7b3e: int3   
  0x01cc7b3f: int3   

----------------------------------------------------------------------
fast_iload  223 fast_iload  [0x01cc7b50, 0x01cc7b90]  64 bytes

  0x01cc7b50: sub    $0x4,%esp
  0x01cc7b53: fstps  (%esp)
  0x01cc7b56: jmp    0x01cc7b74
  0x01cc7b5b: sub    $0x8,%esp
  0x01cc7b5e: fstpl  (%esp)
  0x01cc7b61: jmp    0x01cc7b74
  0x01cc7b66: push   %edx
  0x01cc7b67: push   %eax
  0x01cc7b68: jmp    0x01cc7b74
  0x01cc7b6d: push   %eax
  0x01cc7b6e: jmp    0x01cc7b74
  0x01cc7b73: push   %eax
  0x01cc7b74: movzbl 0x1(%esi),%ebx
  0x01cc7b78: neg    %ebx
  0x01cc7b7a: mov    (%edi,%ebx,4),%eax
  0x01cc7b7d: movzbl 0x2(%esi),%ebx
  0x01cc7b81: add    $0x2,%esi
  0x01cc7b84: jmp    *0x55628438(,%ebx,4)
  0x01cc7b8b: nop    
  0x01cc7b8c: int3   
  0x01cc7b8d: int3   
  0x01cc7b8e: int3   
  0x01cc7b8f: int3   

----------------------------------------------------------------------
fast_iload2  224 fast_iload2  [0x01cc7ba0, 0x01cc7bf0]  80 bytes

  0x01cc7ba0: sub    $0x4,%esp
  0x01cc7ba3: fstps  (%esp)
  0x01cc7ba6: jmp    0x01cc7bc4
  0x01cc7bab: sub    $0x8,%esp
  0x01cc7bae: fstpl  (%esp)
  0x01cc7bb1: jmp    0x01cc7bc4
  0x01cc7bb6: push   %edx
  0x01cc7bb7: push   %eax
  0x01cc7bb8: jmp    0x01cc7bc4
  0x01cc7bbd: push   %eax
  0x01cc7bbe: jmp    0x01cc7bc4
  0x01cc7bc3: push   %eax
  0x01cc7bc4: movzbl 0x1(%esi),%ebx
  0x01cc7bc8: neg    %ebx
  0x01cc7bca: mov    (%edi,%ebx,4),%eax
  0x01cc7bcd: push   %eax
  0x01cc7bce: movzbl 0x3(%esi),%ebx
  0x01cc7bd2: neg    %ebx
  0x01cc7bd4: mov    (%edi,%ebx,4),%eax
  0x01cc7bd7: movzbl 0x4(%esi),%ebx
  0x01cc7bdb: add    $0x4,%esi
  0x01cc7bde: jmp    *0x55628438(,%ebx,4)
  0x01cc7be5: nop    
  0x01cc7be6: nop    
  0x01cc7be7: nop    
  0x01cc7be8: int3   
  0x01cc7be9: int3   
  0x01cc7bea: int3   
  0x01cc7beb: int3   
  0x01cc7bec: int3   
  0x01cc7bed: int3   
  0x01cc7bee: int3   
  0x01cc7bef: int3   

----------------------------------------------------------------------
fast_icaload  225 fast_icaload  [0x01cc7c00, 0x01cc7c50]  80 bytes

  0x01cc7c00: sub    $0x4,%esp
  0x01cc7c03: fstps  (%esp)
  0x01cc7c06: jmp    0x01cc7c24
  0x01cc7c0b: sub    $0x8,%esp
  0x01cc7c0e: fstpl  (%esp)
  0x01cc7c11: jmp    0x01cc7c24
  0x01cc7c16: push   %edx
  0x01cc7c17: push   %eax
  0x01cc7c18: jmp    0x01cc7c24
  0x01cc7c1d: push   %eax
  0x01cc7c1e: jmp    0x01cc7c24
  0x01cc7c23: push   %eax
  0x01cc7c24: movzbl 0x1(%esi),%ebx
  0x01cc7c28: neg    %ebx
  0x01cc7c2a: mov    (%edi,%ebx,4),%eax
  0x01cc7c2d: pop    %edx
  0x01cc7c2e: cmp    0x8(%edx),%eax
  0x01cc7c31: mov    %eax,%ebx
  0x01cc7c33: jae    0x01cbb5d0
  0x01cc7c39: movzwl 0xc(%edx,%eax,2),%ebx
  0x01cc7c3e: mov    %ebx,%eax
  0x01cc7c40: movzbl 0x3(%esi),%ebx
  0x01cc7c44: add    $0x3,%esi
  0x01cc7c47: jmp    *0x55628438(,%ebx,4)
  0x01cc7c4e: nop    
  0x01cc7c4f: nop    

----------------------------------------------------------------------
fast_invokevfinal  226 fast_invokevfinal  [0x01cc7c60, 0x01cc7cb0]  80 bytes

  0x01cc7c60: sub    $0x4,%esp
  0x01cc7c63: fstps  (%esp)
  0x01cc7c66: jmp    0x01cc7c84
  0x01cc7c6b: sub    $0x8,%esp
  0x01cc7c6e: fstpl  (%esp)
  0x01cc7c71: jmp    0x01cc7c84
  0x01cc7c76: push   %edx
  0x01cc7c77: push   %eax
  0x01cc7c78: jmp    0x01cc7c84
  0x01cc7c7d: push   %eax
  0x01cc7c7e: jmp    0x01cc7c84
  0x01cc7c83: push   %eax
  0x01cc7c84: push   $0x55319f90
  0x01cc7c89: call   0x01cc7c8e
  0x01cc7c8e: pusha  
  0x01cc7c8f: call   0x54dedbf0
  0x01cc7c94: hlt    
  0x01cc7c95: push   $0x552fd97c
  0x01cc7c9a: call   0x01cc7c9f
  0x01cc7c9f: pusha  
  0x01cc7ca0: call   0x54dedbf0
  0x01cc7ca5: hlt    
  0x01cc7ca6: nop    
  0x01cc7ca7: nop    
  0x01cc7ca8: int3   
  0x01cc7ca9: int3   
  0x01cc7caa: int3   
  0x01cc7cab: int3   
  0x01cc7cac: int3   
  0x01cc7cad: int3   
  0x01cc7cae: int3   
  0x01cc7caf: int3   

----------------------------------------------------------------------
fast_linearswitch  227 fast_linearswitch  [0x01cc7cc0, 0x01cc7d10]  80 bytes

  0x01cc7cc0: pop    %eax
  0x01cc7cc1: bswap  %eax
  0x01cc7cc3: lea    0x4(%esi),%ebx
  0x01cc7cc6: and    $0xfffffffc,%ebx
  0x01cc7cc9: mov    0x4(%ebx),%ecx
  0x01cc7ccc: bswap  %ecx
  0x01cc7cce: jmp    0x01cc7cd6
  0x01cc7cd0: cmp    0x8(%ebx,%ecx,8),%eax
  0x01cc7cd4: je     0x01cc7cdd
  0x01cc7cd6: dec    %ecx
  0x01cc7cd7: jge    0x01cc7cd0
  0x01cc7cd9: mov    (%ebx),%edx
  0x01cc7cdb: jmp    0x01cc7ce1
  0x01cc7cdd: mov    0xc(%ebx,%ecx,8),%edx
  0x01cc7ce1: bswap  %edx
  0x01cc7ce3: movzbl (%esi,%edx,1),%ebx
  0x01cc7ce7: add    %edx,%esi
  0x01cc7ce9: jmp    *0x55629838(,%ebx,4)
  0x01cc7cf0: push   $0x552fd97c
  0x01cc7cf5: call   0x01cc7cfa
  0x01cc7cfa: pusha  
  0x01cc7cfb: call   0x54dedbf0
  0x01cc7d00: hlt    
  0x01cc7d01: nop    
  0x01cc7d02: nop    
  0x01cc7d03: nop    
  0x01cc7d04: int3   
  0x01cc7d05: int3   
  0x01cc7d06: int3   
  0x01cc7d07: int3   
  0x01cc7d08: int3   
  0x01cc7d09: int3   
  0x01cc7d0a: int3   
  0x01cc7d0b: int3   
  0x01cc7d0c: int3   
  0x01cc7d0d: int3   
  0x01cc7d0e: int3   
  0x01cc7d0f: int3   

----------------------------------------------------------------------
fast_binaryswitch  228 fast_binaryswitch  [0x01cc7d20, 0x01cc7da0]  128 bytes

  0x01cc7d20: pop    %eax
  0x01cc7d21: mov    %esi,-0x1c(%ebp)
  0x01cc7d24: lea    0xc(%esi),%ebx
  0x01cc7d27: and    $0xfffffffc,%ebx
  0x01cc7d2a: xor    %ecx,%ecx
  0x01cc7d2c: mov    -0x4(%ebx),%edx
  0x01cc7d2f: bswap  %edx
  0x01cc7d31: jmp    0x01cc7d48
  0x01cc7d36: lea    (%ecx,%edx,1),%edi
  0x01cc7d39: sar    %edi
  0x01cc7d3b: mov    (%ebx,%edi,8),%esi
  0x01cc7d3e: bswap  %esi
  0x01cc7d40: cmp    %esi,%eax
  0x01cc7d42: cmovl  %edi,%edx
  0x01cc7d45: cmovge %edi,%ecx
  0x01cc7d48: lea    0x1(%ecx),%edi
  0x01cc7d4b: cmp    %edx,%edi
  0x01cc7d4d: jl     0x01cc7d36
  0x01cc7d4f: mov    (%ebx,%ecx,8),%esi
  0x01cc7d52: bswap  %esi
  0x01cc7d54: cmp    %esi,%eax
  0x01cc7d56: jne    0x01cc7d75
  0x01cc7d5c: mov    0x4(%ebx,%ecx,8),%edx
  0x01cc7d60: bswap  %edx
  0x01cc7d62: mov    -0x1c(%ebp),%esi
  0x01cc7d65: mov    -0x18(%ebp),%edi
  0x01cc7d68: movzbl (%esi,%edx,1),%ebx
  0x01cc7d6c: add    %edx,%esi
  0x01cc7d6e: jmp    *0x55629838(,%ebx,4)
  0x01cc7d75: mov    -0x8(%ebx),%edx
  0x01cc7d78: bswap  %edx
  0x01cc7d7a: mov    -0x1c(%ebp),%esi
  0x01cc7d7d: mov    -0x18(%ebp),%edi
  0x01cc7d80: movzbl (%esi,%edx,1),%ebx
  0x01cc7d84: add    %edx,%esi
  0x01cc7d86: jmp    *0x55629838(,%ebx,4)
  0x01cc7d8d: push   $0x552fd97c
  0x01cc7d92: call   0x01cc7d97
  0x01cc7d97: pusha  
  0x01cc7d98: call   0x54dedbf0
  0x01cc7d9d: hlt    
  0x01cc7d9e: nop    
  0x01cc7d9f: nop    

----------------------------------------------------------------------
fast_aldc  229 fast_aldc  [0x01cc7db0, 0x01cc7ec0]  272 bytes

  0x01cc7db0: sub    $0x4,%esp
  0x01cc7db3: fstps  (%esp)
  0x01cc7db6: jmp    0x01cc7dd4
  0x01cc7dbb: sub    $0x8,%esp
  0x01cc7dbe: fstpl  (%esp)
  0x01cc7dc1: jmp    0x01cc7dd4
  0x01cc7dc6: push   %edx
  0x01cc7dc7: push   %eax
  0x01cc7dc8: jmp    0x01cc7dd4
  0x01cc7dcd: push   %eax
  0x01cc7dce: jmp    0x01cc7dd4
  0x01cc7dd3: push   %eax
  0x01cc7dd4: movzbl 0x1(%esi),%edx
  0x01cc7dd8: shl    $0x2,%edx
  0x01cc7ddb: mov    -0xc(%ebp),%eax
  0x01cc7dde: mov    0x8(%eax),%eax
  0x01cc7de1: mov    0x8(%eax),%eax
  0x01cc7de4: mov    0x18(%eax),%eax
  0x01cc7de7: mov    (%eax),%eax
  0x01cc7de9: add    %edx,%eax
  0x01cc7deb: mov    0xc(%eax),%eax
  0x01cc7dee: test   %eax,%eax
  0x01cc7df0: jne    0x01cc7ea9
  0x01cc7df6: mov    $0xe5,%edx
  0x01cc7dfb: call   0x01cc7e05
  0x01cc7e00: jmp    0x01cc7ea9
  0x01cc7e05: push   %edx
  0x01cc7e06: lea    0x8(%esp),%eax
  0x01cc7e0a: cmpl   $0x0,-0x8(%ebp)
  0x01cc7e11: je     0x01cc7e28
  0x01cc7e17: push   $0x55310188
  0x01cc7e1c: call   0x01cc7e21
  0x01cc7e21: pusha  
  0x01cc7e22: call   0x54dedbf0
  0x01cc7e27: hlt    
  0x01cc7e28: mov    %esi,-0x1c(%ebp)
  0x01cc7e2b: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc7e33: mov    -0xc(%edi),%edi
  0x01cc7e36: push   %edi
  0x01cc7e37: mov    %ebp,0x144(%edi)
  0x01cc7e3d: mov    %eax,0x13c(%edi)
  0x01cc7e43: call   0x550584e0
  0x01cc7e48: add    $0x8,%esp
  0x01cc7e4b: push   %eax
  0x01cc7e4c: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc7e54: mov    -0xc(%eax),%eax
  0x01cc7e57: cmp    %eax,%edi
  0x01cc7e59: je     0x01cc7e70
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc7e5f: push   $0x55312af0
  0x01cc7e64: call   0x01cc7e69
  0x01cc7e69: pusha  
  0x01cc7e6a: call   0x54dedbf0
  0x01cc7e6f: hlt    
  0x01cc7e70: pop    %eax
  0x01cc7e71: movl   $0x0,0x13c(%edi)
  0x01cc7e7b: movl   $0x0,0x144(%edi)
  0x01cc7e85: cmpl   $0x0,0x4(%edi)
  0x01cc7e8c: jne    0x01cb0340
  0x01cc7e92: mov    0x16c(%edi),%eax
  0x01cc7e98: movl   $0x0,0x16c(%edi)
  0x01cc7ea2: mov    -0x1c(%ebp),%esi
  0x01cc7ea5: mov    -0x18(%ebp),%edi
  0x01cc7ea8: ret    
  0x01cc7ea9: movzbl 0x2(%esi),%ebx
  0x01cc7ead: add    $0x2,%esi
  0x01cc7eb0: jmp    *0x55629438(,%ebx,4)
  0x01cc7eb7: nop    
  0x01cc7eb8: int3   
  0x01cc7eb9: int3   
  0x01cc7eba: int3   
  0x01cc7ebb: int3   
  0x01cc7ebc: int3   
  0x01cc7ebd: int3   
  0x01cc7ebe: int3   
  0x01cc7ebf: int3   

----------------------------------------------------------------------
fast_aldc_w  230 fast_aldc_w  [0x01cc7ed0, 0x01cc7fe0]  272 bytes

  0x01cc7ed0: sub    $0x4,%esp
  0x01cc7ed3: fstps  (%esp)
  0x01cc7ed6: jmp    0x01cc7ef4
  0x01cc7edb: sub    $0x8,%esp
  0x01cc7ede: fstpl  (%esp)
  0x01cc7ee1: jmp    0x01cc7ef4
  0x01cc7ee6: push   %edx
  0x01cc7ee7: push   %eax
  0x01cc7ee8: jmp    0x01cc7ef4
  0x01cc7eed: push   %eax
  0x01cc7eee: jmp    0x01cc7ef4
  0x01cc7ef3: push   %eax
  0x01cc7ef4: movzwl 0x1(%esi),%edx
  0x01cc7ef8: shl    $0x2,%edx
  0x01cc7efb: mov    -0xc(%ebp),%eax
  0x01cc7efe: mov    0x8(%eax),%eax
  0x01cc7f01: mov    0x8(%eax),%eax
  0x01cc7f04: mov    0x18(%eax),%eax
  0x01cc7f07: mov    (%eax),%eax
  0x01cc7f09: add    %edx,%eax
  0x01cc7f0b: mov    0xc(%eax),%eax
  0x01cc7f0e: test   %eax,%eax
  0x01cc7f10: jne    0x01cc7fc9
  0x01cc7f16: mov    $0xe6,%edx
  0x01cc7f1b: call   0x01cc7f25
  0x01cc7f20: jmp    0x01cc7fc9
  0x01cc7f25: push   %edx
  0x01cc7f26: lea    0x8(%esp),%eax
  0x01cc7f2a: cmpl   $0x0,-0x8(%ebp)
  0x01cc7f31: je     0x01cc7f48
  0x01cc7f37: push   $0x55310188
  0x01cc7f3c: call   0x01cc7f41
  0x01cc7f41: pusha  
  0x01cc7f42: call   0x54dedbf0
  0x01cc7f47: hlt    
  0x01cc7f48: mov    %esi,-0x1c(%ebp)
  0x01cc7f4b: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc7f53: mov    -0xc(%edi),%edi
  0x01cc7f56: push   %edi
  0x01cc7f57: mov    %ebp,0x144(%edi)
  0x01cc7f5d: mov    %eax,0x13c(%edi)
  0x01cc7f63: call   0x550584e0
  0x01cc7f68: add    $0x8,%esp
  0x01cc7f6b: push   %eax
  0x01cc7f6c: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc7f74: mov    -0xc(%eax),%eax
  0x01cc7f77: cmp    %eax,%edi
  0x01cc7f79: je     0x01cc7f90
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc7f7f: push   $0x55312af0
  0x01cc7f84: call   0x01cc7f89
  0x01cc7f89: pusha  
  0x01cc7f8a: call   0x54dedbf0
  0x01cc7f8f: hlt    
  0x01cc7f90: pop    %eax
  0x01cc7f91: movl   $0x0,0x13c(%edi)
  0x01cc7f9b: movl   $0x0,0x144(%edi)
  0x01cc7fa5: cmpl   $0x0,0x4(%edi)
  0x01cc7fac: jne    0x01cb0340
  0x01cc7fb2: mov    0x16c(%edi),%eax
  0x01cc7fb8: movl   $0x0,0x16c(%edi)
  0x01cc7fc2: mov    -0x1c(%ebp),%esi
  0x01cc7fc5: mov    -0x18(%ebp),%edi
  0x01cc7fc8: ret    
  0x01cc7fc9: movzbl 0x3(%esi),%ebx
  0x01cc7fcd: add    $0x3,%esi
  0x01cc7fd0: jmp    *0x55629438(,%ebx,4)
  0x01cc7fd7: nop    
  0x01cc7fd8: int3   
  0x01cc7fd9: int3   
  0x01cc7fda: int3   
  0x01cc7fdb: int3   
  0x01cc7fdc: int3   
  0x01cc7fdd: int3   
  0x01cc7fde: int3   
  0x01cc7fdf: int3   

----------------------------------------------------------------------
return_register_finalizer  231 return_register_finalizer  [0x01cc7ff0, 0x01cc83c0]  976 bytes

  0x01cc7ff0: sub    $0x4,%esp
  0x01cc7ff3: fstps  (%esp)
  0x01cc7ff6: jmp    0x01cc8014
  0x01cc7ffb: sub    $0x8,%esp
  0x01cc7ffe: fstpl  (%esp)
  0x01cc8001: jmp    0x01cc8014
  0x01cc8006: push   %edx
  0x01cc8007: push   %eax
  0x01cc8008: jmp    0x01cc8014
  0x01cc800d: push   %eax
  0x01cc800e: jmp    0x01cc8014
  0x01cc8013: push   %eax
  0x01cc8014: mov    (%edi),%eax
  0x01cc8016: mov    0x4(%eax),%edi
  0x01cc8019: mov    0x58(%edi),%edi
  0x01cc801c: test   $0x40000000,%edi
  0x01cc8022: je     0x01cc80c6
  0x01cc8028: call   0x01cc8032
  0x01cc802d: jmp    0x01cc80c6
  0x01cc8032: push   %eax
  0x01cc8033: lea    0x8(%esp),%eax
  0x01cc8037: cmpl   $0x0,-0x8(%ebp)
  0x01cc803e: je     0x01cc8055
  0x01cc8044: push   $0x55310188
  0x01cc8049: call   0x01cc804e
  0x01cc804e: pusha  
  0x01cc804f: call   0x54dedbf0
  0x01cc8054: hlt    
  0x01cc8055: mov    %esi,-0x1c(%ebp)
  0x01cc8058: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc8060: mov    -0xc(%edi),%edi
  0x01cc8063: push   %edi
  0x01cc8064: mov    %ebp,0x144(%edi)
  0x01cc806a: mov    %eax,0x13c(%edi)
  0x01cc8070: call   0x55058ef0
  0x01cc8075: add    $0x8,%esp
  0x01cc8078: push   %eax
  0x01cc8079: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc8081: mov    -0xc(%eax),%eax
  0x01cc8084: cmp    %eax,%edi
  0x01cc8086: je     0x01cc809d
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc808c: push   $0x55312af0
  0x01cc8091: call   0x01cc8096
  0x01cc8096: pusha  
  0x01cc8097: call   0x54dedbf0
  0x01cc809c: hlt    
  0x01cc809d: pop    %eax
  0x01cc809e: movl   $0x0,0x13c(%edi)
  0x01cc80a8: movl   $0x0,0x144(%edi)
  0x01cc80b2: cmpl   $0x0,0x4(%edi)
  0x01cc80b9: jne    0x01cb0340
  0x01cc80bf: mov    -0x1c(%ebp),%esi
  0x01cc80c2: mov    -0x18(%ebp),%edi
  0x01cc80c5: ret    
  0x01cc80c6: mov    %fs:0x0(,%eiz,1),%ecx
  0x01cc80ce: mov    -0xc(%ecx),%ecx
  0x01cc80d1: mov    0x1a1(%ecx),%bl
  0x01cc80d7: mov    %ebx,%edi
  0x01cc80d9: movb   $0x0,0x1a1(%ecx)
  0x01cc80e0: mov    -0xc(%ebp),%ebx
  0x01cc80e3: mov    0x14(%ebx),%ecx
  0x01cc80e6: test   $0x20,%ecx
  0x01cc80ec: je     0x01cc8290
  0x01cc80f2: mov    %edi,%ecx
  0x01cc80f4: test   $0xff,%cl
  0x01cc80f7: jne    0x01cc835f
  0x01cc80fd: lea    -0x28(%ebp),%edx
  0x01cc8100: mov    0x4(%edx),%eax
  0x01cc8103: test   %eax,%eax
  0x01cc8105: jne    0x01cc81bb
  0x01cc810b: emms   
  0x01cc810d: call   0x01cc8117
  0x01cc8112: jmp    0x01cc81aa
  0x01cc8117: lea    0x4(%esp),%eax
  0x01cc811b: cmpl   $0x0,-0x8(%ebp)
  0x01cc8122: je     0x01cc8139
  0x01cc8128: push   $0x55310188
  0x01cc812d: call   0x01cc8132
  0x01cc8132: pusha  
  0x01cc8133: call   0x54dedbf0
  0x01cc8138: hlt    
  0x01cc8139: mov    %esi,-0x1c(%ebp)
  0x01cc813c: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc8144: mov    -0xc(%edi),%edi
  0x01cc8147: push   %edi
  0x01cc8148: mov    %ebp,0x144(%edi)
  0x01cc814e: mov    %eax,0x13c(%edi)
  0x01cc8154: call   0x5505ad80
  0x01cc8159: add    $0x4,%esp
  0x01cc815c: push   %eax
  0x01cc815d: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc8165: mov    -0xc(%eax),%eax
  0x01cc8168: cmp    %eax,%edi
  0x01cc816a: je     0x01cc8181
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc8170: push   $0x55312af0
  0x01cc8175: call   0x01cc817a
  0x01cc817a: pusha  
  0x01cc817b: call   0x54dedbf0
  0x01cc8180: hlt    
  0x01cc8181: pop    %eax
  0x01cc8182: movl   $0x0,0x13c(%edi)
  0x01cc818c: movl   $0x0,0x144(%edi)
  0x01cc8196: cmpl   $0x0,0x4(%edi)
  0x01cc819d: jne    0x01cb0340
  0x01cc81a3: mov    -0x1c(%ebp),%esi
  0x01cc81a6: mov    -0x18(%ebp),%edi
  0x01cc81a9: ret    
  0x01cc81aa: push   $0x552fd97c
  0x01cc81af: call   0x01cc81b4
  0x01cc81b4: pusha  
  0x01cc81b5: call   0x54dedbf0
  0x01cc81ba: hlt    
  0x01cc81bb: mov    %esi,-0x1c(%ebp)
  0x01cc81be: lea    (%edx),%eax
  0x01cc81c0: mov    0x4(%edx),%ecx
  0x01cc81c3: movl   $0x0,0x4(%edx)
  0x01cc81ca: mov    (%ecx),%ebx
  0x01cc81cc: and    $0x7,%ebx
  0x01cc81cf: cmp    $0x5,%ebx
  0x01cc81d2: je     0x01cc828d
  0x01cc81d8: mov    (%eax),%ebx
  0x01cc81da: test   %ebx,%ebx
  0x01cc81dc: je     0x01cc828d
  0x01cc81e2: lock cmpxchg %ebx,(%ecx)
  0x01cc81e6: je     0x01cc828d
  0x01cc81ec: mov    %ecx,0x4(%edx)
  0x01cc81ef: call   0x01cc81f9
  0x01cc81f4: jmp    0x01cc828d
  0x01cc81f9: push   %edx
  0x01cc81fa: lea    0x8(%esp),%eax
  0x01cc81fe: cmpl   $0x0,-0x8(%ebp)
  0x01cc8205: je     0x01cc821c
  0x01cc820b: push   $0x55310188
  0x01cc8210: call   0x01cc8215
  0x01cc8215: pusha  
  0x01cc8216: call   0x54dedbf0
  0x01cc821b: hlt    
  0x01cc821c: mov    %esi,-0x1c(%ebp)
  0x01cc821f: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc8227: mov    -0xc(%edi),%edi
  0x01cc822a: push   %edi
  0x01cc822b: mov    %ebp,0x144(%edi)
  0x01cc8231: mov    %eax,0x13c(%edi)
  0x01cc8237: call   0x5505ab90
  0x01cc823c: add    $0x8,%esp
  0x01cc823f: push   %eax
  0x01cc8240: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc8248: mov    -0xc(%eax),%eax
  0x01cc824b: cmp    %eax,%edi
  0x01cc824d: je     0x01cc8264
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc8253: push   $0x55312af0
  0x01cc8258: call   0x01cc825d
  0x01cc825d: pusha  
  0x01cc825e: call   0x54dedbf0
  0x01cc8263: hlt    
  0x01cc8264: pop    %eax
  0x01cc8265: movl   $0x0,0x13c(%edi)
  0x01cc826f: movl   $0x0,0x144(%edi)
  0x01cc8279: cmpl   $0x0,0x4(%edi)
  0x01cc8280: jne    0x01cb0340
  0x01cc8286: mov    -0x1c(%ebp),%esi
  0x01cc8289: mov    -0x18(%ebp),%edi
  0x01cc828c: ret    
  0x01cc828d: mov    -0x1c(%ebp),%esi
  0x01cc8290: mov    -0x20(%ebp),%ecx
  0x01cc8293: lea    -0x20(%ebp),%ebx
  0x01cc8296: jmp    0x01cc835b
  0x01cc829b: emms   
  0x01cc829d: call   0x01cc82a7
  0x01cc82a2: jmp    0x01cc833a
  0x01cc82a7: lea    0x4(%esp),%eax
  0x01cc82ab: cmpl   $0x0,-0x8(%ebp)
  0x01cc82b2: je     0x01cc82c9
  0x01cc82b8: push   $0x55310188
  0x01cc82bd: call   0x01cc82c2
  0x01cc82c2: pusha  
  0x01cc82c3: call   0x54dedbf0
  0x01cc82c8: hlt    
  0x01cc82c9: mov    %esi,-0x1c(%ebp)
  0x01cc82cc: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc82d4: mov    -0xc(%edi),%edi
  0x01cc82d7: push   %edi
  0x01cc82d8: mov    %ebp,0x144(%edi)
  0x01cc82de: mov    %eax,0x13c(%edi)
  0x01cc82e4: call   0x5505ad80
  0x01cc82e9: add    $0x4,%esp
  0x01cc82ec: push   %eax
  0x01cc82ed: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc82f5: mov    -0xc(%eax),%eax
  0x01cc82f8: cmp    %eax,%edi
  0x01cc82fa: je     0x01cc8311
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc8300: push   $0x55312af0
  0x01cc8305: call   0x01cc830a
  0x01cc830a: pusha  
  0x01cc830b: call   0x54dedbf0
  0x01cc8310: hlt    
  0x01cc8311: pop    %eax
  0x01cc8312: movl   $0x0,0x13c(%edi)
  0x01cc831c: movl   $0x0,0x144(%edi)
  0x01cc8326: cmpl   $0x0,0x4(%edi)
  0x01cc832d: jne    0x01cb0340
  0x01cc8333: mov    -0x1c(%ebp),%esi
  0x01cc8336: mov    -0x18(%ebp),%edi
  0x01cc8339: ret    
  0x01cc833a: push   $0x552fd97c
  0x01cc833f: call   0x01cc8344
  0x01cc8344: pusha  
  0x01cc8345: call   0x54dedbf0
  0x01cc834a: hlt    
  0x01cc834b: cmpl   $0x0,0x4(%ecx)
  0x01cc8352: jne    0x01cc829b
  0x01cc8358: add    $0x8,%ecx
  0x01cc835b: cmp    %ebx,%ecx
  0x01cc835d: jne    0x01cc834b
  0x01cc835f: cmpb   $0x0,0x55633e5f
  0x01cc8366: je     0x01cc83a2
  0x01cc836c: mov    %fs:0x0(,%eiz,1),%ebx
  0x01cc8374: mov    -0xc(%ebx),%ebx
  0x01cc8377: mov    -0xc(%ebp),%ecx
  0x01cc837a: push   %ecx
  0x01cc837b: push   %ebx
  0x01cc837c: cmpl   $0x0,-0x8(%ebp)
  0x01cc8383: je     0x01cc839a
  0x01cc8389: push   $0x55310148
  0x01cc838e: call   0x01cc8393
  0x01cc8393: pusha  
  0x01cc8394: call   0x54dedbf0
  0x01cc8399: hlt    
  0x01cc839a: call   0x55215710
  0x01cc839f: add    $0x8,%esp
  0x01cc83a2: mov    -0x4(%ebp),%ebx
  0x01cc83a5: mov    %ebp,%esp
  0x01cc83a7: pop    %ebp
  0x01cc83a8: pop    %esi
  0x01cc83a9: mov    %ebx,%esp
  0x01cc83ab: jmp    *%esi
  0x01cc83ad: push   $0x552fd97c
  0x01cc83b2: call   0x01cc83b7
  0x01cc83b7: pusha  
  0x01cc83b8: call   0x54dedbf0
  0x01cc83bd: hlt    
  0x01cc83be: nop    
  0x01cc83bf: nop    

----------------------------------------------------------------------
invokehandle  232 invokehandle  [0x01cc83d0, 0x01cc8530]  352 bytes

  0x01cc83d0: sub    $0x4,%esp
  0x01cc83d3: fstps  (%esp)
  0x01cc83d6: jmp    0x01cc83f4
  0x01cc83db: sub    $0x8,%esp
  0x01cc83de: fstpl  (%esp)
  0x01cc83e1: jmp    0x01cc83f4
  0x01cc83e6: push   %edx
  0x01cc83e7: push   %eax
  0x01cc83e8: jmp    0x01cc83f4
  0x01cc83ed: push   %eax
  0x01cc83ee: jmp    0x01cc83f4
  0x01cc83f3: push   %eax
  0x01cc83f4: mov    %esi,-0x1c(%ebp)
  0x01cc83f7: movzwl 0x1(%esi),%edx
  0x01cc83fb: mov    -0x14(%ebp),%ecx
  0x01cc83fe: shl    $0x2,%edx
  0x01cc8401: mov    0x8(%ecx,%edx,4),%ebx
  0x01cc8405: shr    $0x10,%ebx
  0x01cc8408: and    $0xff,%ebx
  0x01cc840e: cmp    $0xe8,%ebx
  0x01cc8414: je     0x01cc84c7
  0x01cc841a: mov    $0xe8,%ebx
  0x01cc841f: call   0x01cc8429
  0x01cc8424: jmp    0x01cc84bd
  0x01cc8429: push   %ebx
  0x01cc842a: lea    0x8(%esp),%eax
  0x01cc842e: cmpl   $0x0,-0x8(%ebp)
  0x01cc8435: je     0x01cc844c
  0x01cc843b: push   $0x55310188
  0x01cc8440: call   0x01cc8445
  0x01cc8445: pusha  
  0x01cc8446: call   0x54dedbf0
  0x01cc844b: hlt    
  0x01cc844c: mov    %esi,-0x1c(%ebp)
  0x01cc844f: mov    %fs:0x0(,%eiz,1),%edi
  0x01cc8457: mov    -0xc(%edi),%edi
  0x01cc845a: push   %edi
  0x01cc845b: mov    %ebp,0x144(%edi)
  0x01cc8461: mov    %eax,0x13c(%edi)
  0x01cc8467: call   0x5505b8e0
  0x01cc846c: add    $0x8,%esp
  0x01cc846f: push   %eax
  0x01cc8470: mov    %fs:0x0(,%eiz,1),%eax
  0x01cc8478: mov    -0xc(%eax),%eax
  0x01cc847b: cmp    %eax,%edi
  0x01cc847d: je     0x01cc8494
  ;; MacroAssembler::call_VM_base: rdi not callee saved?
  0x01cc8483: push   $0x55312af0
  0x01cc8488: call   0x01cc848d
  0x01cc848d: pusha  
  0x01cc848e: call   0x54dedbf0
  0x01cc8493: hlt    
  0x01cc8494: pop    %eax
  0x01cc8495: movl   $0x0,0x13c(%edi)
  0x01cc849f: movl   $0x0,0x144(%edi)
  0x01cc84a9: cmpl   $0x0,0x4(%edi)
  0x01cc84b0: jne    0x01cb0340
  0x01cc84b6: mov    -0x1c(%ebp),%esi
  0x01cc84b9: mov    -0x18(%ebp),%edi
  0x01cc84bc: ret    
  0x01cc84bd: movzwl 0x1(%esi),%edx
  0x01cc84c1: mov    -0x14(%ebp),%ecx
  0x01cc84c4: shl    $0x2,%edx
  0x01cc84c7: mov    0xc(%ecx,%edx,4),%ebx
  0x01cc84cb: mov    0x10(%ecx,%edx,4),%eax
  0x01cc84cf: mov    0x14(%ecx,%edx,4),%edx
  0x01cc84d3: test   $0x1000000,%edx
  0x01cc84d9: je     0x01cc84f6
  0x01cc84db: push   %ebx
  0x01cc84dc: mov    %eax,%ebx
  0x01cc84de: shl    $0x2,%ebx
  0x01cc84e1: mov    -0xc(%ebp),%eax
  0x01cc84e4: mov    0x8(%eax),%eax
  0x01cc84e7: mov    0x8(%eax),%eax
  0x01cc84ea: mov    0x18(%eax),%eax
  0x01cc84ed: mov    (%eax),%eax
  0x01cc84ef: add    %ebx,%eax
  0x01cc84f1: mov    0xc(%eax),%eax
  0x01cc84f4: pop    %ebx
  0x01cc84f5: push   %eax
  0x01cc84f6: mov    %edx,%ecx
  0x01cc84f8: and    $0xff,%ecx
  0x01cc84fe: mov    -0x4(%esp,%ecx,4),%ecx
  0x01cc8502: shr    $0x1c,%edx
  0x01cc8505: mov    0x556277cc(,%edx,4),%edx
  0x01cc850c: push   %edx
  0x01cc850d: cmp    (%ecx),%eax
  0x01cc850f: lea    0x4(%esp),%esi
  0x01cc8513: mov    %esi,-0x8(%ebp)
  0x01cc8516: jmp    *0x34(%ebx)
  0x01cc8519: push   $0x552fd97c
  0x01cc851e: call   0x01cc8523
  0x01cc8523: pusha  
  0x01cc8524: call   0x54dedbf0
  0x01cc8529: hlt    
  0x01cc852a: nop    
  0x01cc852b: nop    
  0x01cc852c: int3   
  0x01cc852d: int3   
  0x01cc852e: int3   
  0x01cc852f: int3   

----------------------------------------------------------------------
_shouldnotreachhere  233 _shouldnotreachhere  [0x01cc8540, 0x01cc8590]  80 bytes

  0x01cc8540: sub    $0x4,%esp
  0x01cc8543: fstps  (%esp)
  0x01cc8546: jmp    0x01cc8564
  0x01cc854b: sub    $0x8,%esp
  0x01cc854e: fstpl  (%esp)
  0x01cc8551: jmp    0x01cc8564
  0x01cc8556: push   %edx
  0x01cc8557: push   %eax
  0x01cc8558: jmp    0x01cc8564
  0x01cc855d: push   %eax
  0x01cc855e: jmp    0x01cc8564
  0x01cc8563: push   %eax
  0x01cc8564: push   $0x5531a8c8
  0x01cc8569: call   0x01cc856e
  0x01cc856e: pusha  
  0x01cc856f: call   0x54dedbf0
  0x01cc8574: hlt    
  0x01cc8575: movzbl 0x1(%esi),%ebx
  0x01cc8579: inc    %esi
  0x01cc857a: jmp    *0x55629838(,%ebx,4)
  0x01cc8581: nop    
  0x01cc8582: nop    
  0x01cc8583: nop    
  0x01cc8584: int3   
  0x01cc8585: int3   
  0x01cc8586: int3   
  0x01cc8587: int3   
  0x01cc8588: int3   
  0x01cc8589: int3   
  0x01cc858a: int3   
  0x01cc858b: int3   
  0x01cc858c: int3   
  0x01cc858d: int3   
  0x01cc858e: int3   
  0x01cc858f: int3   
----------------------------------------------------------------------

